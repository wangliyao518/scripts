<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170703 13:50:41.082" generator="Rebot 3.0 (Python 2.7.5 on win32)">
<suite source="D:\TA\Test_Case_Svn\TL17A\SISO1\CPRI_Single_FZHR\FZHR_Operational_Cell_block_unblock\FZHR_Operational_Cell_block_unblock.html" id="s1" name="FZHR Operational Cell block unblock">
<kw type="setup" name="Common Suite Setup" library="common_resource">
<doc>this keyword create suite name directory path as D:\TA\TA_logs\TestLog_20170703132353//logs//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20170703 13:23:56.501" level="INFO">${timestamp} = 20170703132356</msg>
<status status="PASS" endtime="20170703 13:23:56.501" starttime="20170703 13:23:56.461"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_NAME[:50]}</arg>
<arg>\\s+$</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${FILE_NAME}</var>
</assign>
<msg timestamp="20170703 13:23:56.502" level="INFO">${FILE_NAME} = FZHR Operational Cell block unblock</msg>
<status status="PASS" endtime="20170703 13:23:56.502" starttime="20170703 13:23:56.501"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>ev_logs</arg>
<arg>${FILE_NAME}_${timestamp}</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20170703 13:23:56.503" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR Operational Cell block unblock_20170703132356</msg>
<status status="PASS" endtime="20170703 13:23:56.503" starttime="20170703 13:23:56.502"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20170703 13:23:56.504" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356</msg>
<status status="PASS" endtime="20170703 13:23:56.504" starttime="20170703 13:23:56.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170703 13:23:56.504" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356</msg>
<status status="PASS" endtime="20170703 13:23:56.505" starttime="20170703 13:23:56.504"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170703 13:23:56.506" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356"&gt;D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170703 13:23:56.506" starttime="20170703 13:23:56.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170703 13:23:56.507" level="INFO">save log dir:D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356</msg>
<status status="PASS" endtime="20170703 13:23:56.507" starttime="20170703 13:23:56.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${snapshot_flag}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170703 13:23:56.510" level="INFO">${snapshot_flag} = 0</msg>
<status status="PASS" endtime="20170703 13:23:56.510" starttime="20170703 13:23:56.507"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<msg timestamp="20170703 13:23:56.530" level="FAIL">Variable ${TEST LOG DIR} does not exist.</msg>
<status status="FAIL" endtime="20170703 13:23:56.531" starttime="20170703 13:23:56.524"></status>
</kw>
<msg timestamp="20170703 13:23:56.531" level="INFO">${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')</msg>
<status status="PASS" endtime="20170703 13:23:56.531" starttime="20170703 13:23:56.523"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:23:56.532" starttime="20170703 13:23:56.532"></status>
</kw>
<msg timestamp="20170703 13:23:56.532" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170703 13:23:56.532" starttime="20170703 13:23:56.531"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:23:56.540" starttime="20170703 13:23:56.536"></status>
</kw>
<msg timestamp="20170703 13:23:56.540" level="INFO">${log dir} = D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356</msg>
<status status="PASS" endtime="20170703 13:23:56.540" starttime="20170703 13:23:56.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20170703 13:23:56.543" level="INFO">${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356</msg>
<status status="PASS" endtime="20170703 13:23:56.543" starttime="20170703 13:23:56.540"></status>
</kw>
<status status="PASS" endtime="20170703 13:23:56.544" starttime="20170703 13:23:56.523"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Make Sure FCT Ping Ok</arg>
</arguments>
<kw name="Make Sure FCT Ping Ok" library="common_resource">
<kw name="Ping Should Ok" library="tdd_ev_robotws">
<doc>This function is used for check whether ping host success, if yes, return 1, else return 0</doc>
<arguments>
<arg>${FCMD_IP}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20170703 13:23:56.573" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20170703 13:23:56.573" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20170703 13:23:56.573" starttime="20170703 13:23:56.545"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${FTM_IP}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:23:56.574" starttime="20170703 13:23:56.574"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Btscli Disable Bts Port Security</arg>
</arguments>
<status status="PASS" endtime="20170703 13:23:56.574" starttime="20170703 13:23:56.574"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>60</arg>
<arg>${FCMD_IP}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:23:56.575" starttime="20170703 13:23:56.575"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5min</arg>
<arg>5s</arg>
<arg>_make sure fctb connect ok</arg>
</arguments>
<status status="PASS" endtime="20170703 13:23:56.576" starttime="20170703 13:23:56.575"></status>
</kw>
<status status="PASS" endtime="20170703 13:23:56.576" starttime="20170703 13:23:56.545"></status>
</kw>
<status status="PASS" endtime="20170703 13:23:56.576" starttime="20170703 13:23:56.544"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>get_enb_infomation</arg>
</arguments>
<kw name="Get Enb Infomation" library="tdd_ev_robotws">
<doc>This keyword will print bts sw version, bbu type and RRU type.</doc>
<msg timestamp="20170703 13:24:34.825" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170703 13:24:34.855" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170703 13:24:45.943" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170703 13:24:45.973" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170703 13:24:46.486" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170703 13:24:46.519" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1499059441&amp;token=800afd706ad91abb17d41ce6dcd714d1bfd16d40c9bedd848aefa915d3cdd4f5&amp;frame=sshservice'</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;SSH Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1499059443&amp;token=1e92497cf04c3c844ec33abb4eedd684854ef9ebd65f25b740c55f400aa915f1&amp;frame=RndPortsService'</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;R&amp;D Ports Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ssh_common.py@203] Last login: Mon Jul  3 13:05:24 CST 2017 from 10.69.80.114 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0565C238&gt;</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0565C238&gt;</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ssh_common.py@203] Last login: Mon Jul  3 13:24:05 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05686D78&gt;</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000094_000000.xml
root@fctj-0a:/ffs/fs1 &gt;</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05686D78&gt;</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[enb_resource.py@1130] 
 ****Current BTS version is 'TL17A_ENB_0000_000094_000000' *****</msg>
<msg timestamp="20170703 13:25:10.313" level="INFO">[enb_resource.py@1160] activeBuildVersion=TL17A_ENB_0000_000094_000000</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[ssh_common.py@203] Last login: Mon Jul  3 13:24:16 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05785FA8&gt;</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[ssh_common.py@258] Execute command: ls /ram/SiteConf.xml</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[ssh_common.py@314] Get Response: ls /ram/SiteConf.xml
/ram/SiteConf.xml
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05785FA8&gt;</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[sftp_control.py@176] /ram/SiteConf.xml</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[sftp_control.py@79] sftp download from '/ram/SiteConf.xml' to 'D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\SiteConf.xml' is ok. local file size is 21k</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[ssh_common.py@203] Last login: Mon Jul  3 13:24:37 CST 2017 from 192.168.255.126 on ssh
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x057924B8&gt;</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x057924B8&gt;</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[enb_resource.py@402] The real falsh folder is /ffs/fs1</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[sftp_control.py@176] /ffs/fs1/FileDirectory.xml</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs1/FileDirectory.xml' to 'D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FileDirectory_20170703132434.xml' is ok. local file size is 35k</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[sftp_control.py@176] /ffs/fs1/config/SCFC_76.xml</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs1/config/SCFC_76.xml' to 'D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\SCFC_76.xml' is ok. local file size is 83k</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[enb_resource.py@1130] 
 ****Current bbu type is 'ASIA' *****</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[enb_resource.py@1255] HW_BBU_TYPE=ASIA</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[enb_resource.py@1130] 
 ****Current rru type is 'FR' *****</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[enb_resource.py@1258] HW_RRU_TYPE=FR</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[enb_resource.py@1130] 
 ****Current HW type is 'null' *****</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[enb_resource.py@1261] BTS_HW_TYPE=null</msg>
<msg timestamp="20170703 13:25:10.314" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.20 with 32 bytes of data:
Reply from 192.168.255.126: Destination host unreachable.

Ping statistics for 192.168.255.20:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),</msg>
<status status="PASS" endtime="20170703 13:25:10.316" starttime="20170703 13:23:56.576"></status>
</kw>
<status status="PASS" endtime="20170703 13:25:10.316" starttime="20170703 13:23:56.576"></status>
</kw>
<kw name="Set Library Search Order" library="BuiltIn">
<doc>Sets the resolution order to use when a name matches multiple keywords.</doc>
<arguments>
<arg>tdd_ev_robotws</arg>
<arg>OperatingSystem</arg>
</arguments>
<status status="PASS" endtime="20170703 13:25:10.317" starttime="20170703 13:25:10.317"></status>
</kw>
<kw name="Initial Connection With BTS PC" library="common_resource">
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20170703 13:25:10.318" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20170703 13:25:10.318" starttime="20170703 13:25:10.318"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>${TELNET_PORT}</arg>
<arg>${SSH_PORT}</arg>
</arguments>
<assign>
<var>${conn_port}</var>
</assign>
<msg timestamp="20170703 13:25:10.322" level="INFO">${conn_port} = 23</msg>
<status status="PASS" endtime="20170703 13:25:10.322" starttime="20170703 13:25:10.319"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>TELNET</arg>
<arg>SSH</arg>
</arguments>
<assign>
<var>${conn_type}</var>
</assign>
<msg timestamp="20170703 13:25:10.325" level="INFO">${conn_type} = TELNET</msg>
<status status="PASS" endtime="20170703 13:25:10.325" starttime="20170703 13:25:10.322"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>30</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${timeout}</var>
</assign>
<msg timestamp="20170703 13:25:10.329" level="INFO">${timeout} = 30</msg>
<status status="PASS" endtime="20170703 13:25:10.329" starttime="20170703 13:25:10.326"></status>
</kw>
<kw name="Connect To Host" library="tdd_ev_robotws">
<doc>Used to connect to host, either TELNET or SSH</doc>
<arguments>
<arg>${BTS_PC_INFO.IP}</arg>
<arg>port=${conn_port}</arg>
<arg>username=${BTS_PC_INFO.USERNAME}</arg>
<arg>password=${BTS_PC_INFO.PASSWORD}</arg>
<arg>conn_type=${conn_type}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${BTS_PC_CONNECTION}</var>
</assign>
<msg timestamp="20170703 13:25:11.754" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 


login:</msg>
<msg timestamp="20170703 13:25:11.754" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20170703 13:25:11.754" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester

password:</msg>
<msg timestamp="20170703 13:25:11.754" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20170703 13:25:11.754" level="INFO">[telnet_common.py@246]  

*===============================================================
Microsoft Telnet Server.
*===============================================================
C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:25:11.755" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<status status="PASS" endtime="20170703 13:25:11.755" starttime="20170703 13:25:10.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:25:11.755" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<status status="PASS" endtime="20170703 13:25:11.756" starttime="20170703 13:25:11.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>Execute Shell Command</arg>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<msg timestamp="20170703 13:25:12.955" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:25:12.955" level="INFO">[telnet_common.py@276] Execute command: tlntadmn config timeoutactive=no</msg>
<msg timestamp="20170703 13:25:12.955" level="INFO">[telnet_common.py@306] Get Response: tlntadmn config timeoutactive=no
The settings were successfully updated.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170703 13:25:12.955" starttime="20170703 13:25:11.759"></status>
</kw>
<status status="PASS" endtime="20170703 13:25:12.955" starttime="20170703 13:25:11.756"></status>
</kw>
<status status="PASS" endtime="20170703 13:25:12.956" starttime="20170703 13:25:10.317"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:25:12.960" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:25:12.960" starttime="20170703 13:25:12.956"></status>
</kw>
<status status="PASS" endtime="20170703 13:25:12.960" starttime="20170703 13:23:56.460"></status>
</kw>
<kw type="teardown" name="Common Suite Teardown" library="common_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${REMOVE_LOGS}'=='on'</arg>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:50:36.480" starttime="20170703 13:50:36.480"></status>
</kw>
<kw name="Disconnect All Hosts" library="tdd_ev_robotws">
<doc>Closes all existing telnet connections to remote hosts.</doc>
<msg timestamp="20170703 13:50:36.511" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20170703 13:50:36.511" level="INFO">[telnet_common.py@189] Disconnect from 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:50:36.511" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20170703 13:50:36.511" level="INFO">[telnet_common.py@189] Disconnect from 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<status status="PASS" endtime="20170703 13:50:36.511" starttime="20170703 13:50:36.480"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<kw name="Zip File" library="tdd_ev_robotws">
<doc>This keyword can zip specific files.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<msg timestamp="20170703 13:50:36.542" level="INFO">[zip_control.py@325]</msg>
<msg timestamp="20170703 13:50:36.542" level="INFO">[zip_control.py@331] zip D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356 to D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356.zip failed!</msg>
<status status="PASS" endtime="20170703 13:50:36.542" starttime="20170703 13:50:36.511"></status>
</kw>
<status status="PASS" endtime="20170703 13:50:36.542" starttime="20170703 13:50:36.511"></status>
</kw>
<status status="PASS" endtime="20170703 13:50:36.542" starttime="20170703 13:50:36.511"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<msg timestamp="20170703 13:50:36.636" level="FAIL">WindowsError: [Error 32] The process cannot access the file because it is being used by another process: u'D:\\TA\\TA_logs\\TestLog_20170703132353\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170703132356\\FZHR_Operational_Cell_block_unblock\\tm500_attach_log2'</msg>
<status status="FAIL" endtime="20170703 13:50:36.636" starttime="20170703 13:50:36.542"></status>
</kw>
<status status="FAIL" endtime="20170703 13:50:36.636" starttime="20170703 13:50:36.542"></status>
</kw>
<status status="PASS" endtime="20170703 13:50:36.636" starttime="20170703 13:50:36.542"></status>
</kw>
<status status="PASS" endtime="20170703 13:50:36.636" starttime="20170703 13:50:36.480"></status>
</kw>
<test id="s1-t1" name="FZHR_Operational_Cell_block_unblock">
<kw type="setup" name="Common Test Setup" library="common_resource">
<doc>this keyword create case name directory path as D:\TA\TA_logs\TestLog_20170703132353//ev_logs//D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20170703 13:25:12.966" level="INFO">${timestamp} = 20170703132512</msg>
<status status="PASS" endtime="20170703 13:25:12.966" starttime="20170703 13:25:12.965"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20170703 13:25:12.967" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170703 13:25:12.967" starttime="20170703 13:25:12.966"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20170703 13:25:12.968" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170703 13:25:12.968" starttime="20170703 13:25:12.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170703 13:25:12.969" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170703 13:25:12.969" starttime="20170703 13:25:12.968"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170703 13:25:12.971" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock"&gt;D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170703 13:25:12.972" starttime="20170703 13:25:12.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170703 13:25:12.972" level="INFO">save log dir:D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170703 13:25:12.972" starttime="20170703 13:25:12.972"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${BTS PC CONNECTION.connected}</arg>
<arg>Initial Connection With BTS PC</arg>
</arguments>
<status status="PASS" endtime="20170703 13:25:12.973" starttime="20170703 13:25:12.973"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:25:12.975" starttime="20170703 13:25:12.975"></status>
</kw>
<msg timestamp="20170703 13:25:12.975" level="INFO">${case_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170703 13:25:12.975" starttime="20170703 13:25:12.974"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:25:12.976" starttime="20170703 13:25:12.976"></status>
</kw>
<msg timestamp="20170703 13:25:12.976" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170703 13:25:12.976" starttime="20170703 13:25:12.975"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<msg timestamp="20170703 13:25:12.980" level="INFO">${log dir} = D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170703 13:25:12.980" starttime="20170703 13:25:12.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20170703 13:25:12.981" level="INFO">${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170703 13:25:12.981" starttime="20170703 13:25:12.980"></status>
</kw>
<status status="PASS" endtime="20170703 13:25:12.981" starttime="20170703 13:25:12.974"></status>
</kw>
<status status="PASS" endtime="20170703 13:25:12.981" starttime="20170703 13:25:12.965"></status>
</kw>
<kw name="BTS_On_Air" library="SISO1 Resource">
<arguments>
<arg>${source_scf}</arg>
<arg>${parameter_list}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:25:12.987" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:25:12.987" starttime="20170703 13:25:12.982"></status>
</kw>
<kw name="Parse Ping Result" library="tdd_ev_robotws">
<doc>This keyword test the reachability of remote system.</doc>
<arguments>
<arg>192.168.255.1</arg>
</arguments>
<assign>
<var>${package_summary}</var>
<var>${ping_delay}</var>
</assign>
<msg timestamp="20170703 13:25:17.176" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:25:17.177" level="INFO">[telnet_common.py@276] Execute command: ping  192.168.255.1</msg>
<msg timestamp="20170703 13:25:17.177" level="INFO">[telnet_common.py@306] Get Response: ping  192.168.255.1

Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms

C:\Users\tdlte-tester&gt;
Total ping delay is: [1, 1, 1, 1]
Statistic ping delay is: [1, 1, 1, 1]
Valid ping delay is: [1, 1, 1, 1]</msg>
<msg timestamp="20170703 13:25:17.177" level="INFO">${package_summary} = ('4', '4', '0')</msg>
<msg timestamp="20170703 13:25:17.177" level="INFO">${ping_delay} = [1, 1, 1.0]</msg>
<status status="PASS" endtime="20170703 13:25:17.177" starttime="20170703 13:25:12.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Restart Device With Powerbreaker</arg>
<arg>${bts_powerbreak}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:25:17.181" starttime="20170703 13:25:17.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20170703 13:25:17.185" starttime="20170703 13:25:17.181"></status>
</kw>
<kw name="Modify And Upload Scf File" library="tdd_ev_robotws">
<doc>modify source_scf according parameter list and then upload to enb.</doc>
<arguments>
<arg>${source_scf}</arg>
<arg>${parameters_list}</arg>
</arguments>
<msg timestamp="20170703 13:25:54.610" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170703 13:25:54.637" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170703 13:26:05.774" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170703 13:26:06.239" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170703 13:26:06.245" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170703 13:26:06.245" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170703 13:26:06.245" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1499059521&amp;token=bcc4ede699a6d532d7df9dff83b7373339931f7e138380893f583e7b54446df3&amp;frame=sshservice'</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;SSH Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1499059523&amp;token=0d2e182beb99b4ca49a67bbedab884f60c515f5d2a22854bf6f2f506867b0f06&amp;frame=RndPortsService'</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;R&amp;D Ports Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@203] Last login: Mon Jul  3 13:24:48 CST 2017 from 192.168.255.126 on ssh
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x057A1A58&gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x057A1A58&gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@203] Last login: Mon Jul  3 13:25:25 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05686EE0&gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000094_000000.xml
root@fctj-0a:/ffs/fs1 &gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05686EE0&gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@203] Last login: Mon Jul  3 13:25:35 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x057AD738&gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x057AD738&gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[enb_resource.py@402] The real falsh folder is /ffs/fs1</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[sftp_control.py@176] /ffs/fs1/FileDirectory.xml</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs1/FileDirectory.xml' to 'D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileDirectory_20170703132543.xml' is ok. local file size is 35k</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.129</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@203] Last login: Mon Jul  3 13:25:56 CST 2017 from 192.168.255.126 on ssh
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x057A1418&gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@258] Execute command: rm -rf /ffs/fs1/config/hwf.bin.gz</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@314] Get Response: rm -rf /ffs/fs1/config/hwf.bin.gz
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x057A1418&gt;</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[sftp_control.py@61] sftp upload from 'D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\scf_modified.xml' to '/ffs/fs1/config/SCFC_76.xml' is ok.</msg>
<msg timestamp="20170703 13:26:06.246" level="INFO">[sftp_control.py@176] /ffs/fs1/config/SCFC_76.xml</msg>
<status status="PASS" endtime="20170703 13:26:06.248" starttime="20170703 13:25:17.185"></status>
</kw>
<kw name="Restart Bts Until Onair" library="tdd_ev_robotws">
<doc>restart bts with powerbreaker and then wait until it is onair.</doc>
<arguments>
<arg>bts_powerbreak_port=${bts_powerbreak}</arg>
</arguments>
<msg timestamp="20170703 13:34:00.949" level="INFO">[tools_resource.py@34] start power off ..</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[base.py@48] trial power off for 0 times</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[facom.py@60] Power off port 3 succeed!</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[base.py@48] trial power off for 0 times</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[facom.py@60] Power off port 6 succeed!</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[tools_resource.py@37] start power on ..</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[base.py@36] trial power on for 0 times</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[facom.py@83] Power on port 3 succeed!</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[base.py@36] trial power on for 0 times</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[facom.py@83] Power on port 6 succeed!</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[tools_resource.py@39] restart port '['FACOM:10.56.7.128:3', 'FACOM:10.56.7.128:6']' with powerbreak succeed !</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[btslog_control.py@174] use ip is 192.168.255.126</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock" already exists, no need to create it again.</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[infomodel_control.py@157] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[infomodel_control.py@161] start infomodel succeed .</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[infomodel_control.py@163] start infomodel logger succeed .</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' succeed .</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@225] infomodel check every cell onair succeed !</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[enb_resource.py@253] bts log check onair msg succeed !</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[infomodel_control.py@214] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\im_20170703133400' succeed .</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[infomodel_control.py@186] stop infomodel logger succeed .</msg>
<msg timestamp="20170703 13:34:00.949" level="INFO">[infomodel_control.py@198] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170703 13:34:00.949" starttime="20170703 13:26:06.248"></status>
</kw>
<status status="PASS" endtime="20170703 13:34:00.949" starttime="20170703 13:25:12.982"></status>
</kw>
<kw name="Start_Udp_And_Infomodel_Log" library="SISO1 Resource">
<kw name="Start Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword starts catching of BTS system(UDP) log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}.log</arg>
</arguments>
<msg timestamp="20170703 13:34:01.261" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'</msg>
<msg timestamp="20170703 13:34:01.261" level="INFO">[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock" already exists, no need to create it again.</msg>
<status status="PASS" endtime="20170703 13:34:01.261" starttime="20170703 13:34:00.949"></status>
</kw>
<kw name="Start Infomodel" library="tdd_ev_robotws">
<doc>Setup InfoModel library and Connect to InfoModel.</doc>
<arguments>
<arg>port=${BTS_INFOMODEL_PORT}</arg>
</arguments>
<msg timestamp="20170703 13:34:10.343" level="INFO">[infomodel_control.py@157] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None</msg>
<msg timestamp="20170703 13:34:10.343" level="INFO">[infomodel_control.py@161] start infomodel succeed .</msg>
<msg timestamp="20170703 13:34:10.343" level="INFO">[infomodel_control.py@163] start infomodel logger succeed .</msg>
<status status="PASS" endtime="20170703 13:34:10.343" starttime="20170703 13:34:01.261"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20170703 13:34:10.343" level="INFO">${case_execute_log_name} = owner_debug</msg>
<status status="PASS" endtime="20170703 13:34:10.343" starttime="20170703 13:34:10.343"></status>
</kw>
<status status="PASS" endtime="20170703 13:34:10.343" starttime="20170703 13:34:00.949"></status>
</kw>
<kw name="UE_Reboot_SISO1" library="SISO1 Resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Ue Software Reboot</arg>
<arg>${UE1_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:34:10.343" starttime="20170703 13:34:10.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${UE1_INFO.ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:34:10.343" starttime="20170703 13:34:10.343"></status>
</kw>
<status status="PASS" endtime="20170703 13:34:10.343" starttime="20170703 13:34:10.343"></status>
</kw>
<kw type="for" name="${num} IN RANGE [ ${total_times} ]">
<kw type="foritem" name="${num} = 0">
<kw name="_Cell_Block_Unblock_and_Attach">
<doc>Operation with BTS</doc>
<arguments>
<arg>${cell_index_1}</arg>
<arg>${cell_index_2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:34:10.359" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:34:10.359" starttime="20170703 13:34:10.343"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170703 13:34:14.602" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:34:14.602" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170703 13:34:14.602" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="4848"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:34:14.602" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:34:14.602" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170703 13:34:14.602" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="3164"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:34:14.602" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:34:14.602" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170703 13:34:14.602" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.


C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170703 13:34:14.602" starttime="20170703 13:34:10.359"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20170703 13:34:14.618" starttime="20170703 13:34:14.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20170703 13:34:14.618" starttime="20170703 13:34:14.618"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170703 13:34:14.618" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170703132353\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170703132356\\FZHR_Operational_Cell_...</msg>
<status status="PASS" endtime="20170703 13:34:14.618" starttime="20170703 13:34:14.618"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:34:14.618" starttime="20170703 13:34:14.618"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170703 13:35:21.008" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170703133414\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170703 13:35:21.008" starttime="20170703 13:34:14.618"></status>
</kw>
<status status="PASS" endtime="20170703 13:35:21.009" starttime="20170703 13:34:14.618"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>30 sec</arg>
</arguments>
<msg timestamp="20170703 13:35:51.009" level="INFO">Slept 30 seconds</msg>
<status status="PASS" endtime="20170703 13:35:51.009" starttime="20170703 13:35:21.009"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${block_cell_index}</arg>
<arg>Block</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170703 13:35:51.013" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=1', u'HWAction=Block', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170703132353\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170703132356\\FZHR_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170703 13:35:51.013" starttime="20170703 13:35:51.012"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170703 13:36:21.265" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="1"
HWAction="Block"
LogPath="D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170703133551\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170703 13:36:21.265" starttime="20170703 13:35:51.013"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.266" starttime="20170703 13:35:51.011"></status>
</kw>
<kw name="UE_Attach_SISO1" library="SISO1 Resource">
<doc>Example</doc>
<arguments>
<arg>${attach_cell_index}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cell_id}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{cell_list}</var>
</assign>
<msg timestamp="20170703 13:36:21.272" level="INFO">@{cell_list} = [ 2 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.272" starttime="20170703 13:36:21.271"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${cell_list}</arg>
</arguments>
<assign>
<var>${cell_list_length}</var>
</assign>
<msg timestamp="20170703 13:36:21.272" level="INFO">Length is 1</msg>
<msg timestamp="20170703 13:36:21.273" level="INFO">${cell_list_length} = 1</msg>
<status status="PASS" endtime="20170703 13:36:21.273" starttime="20170703 13:36:21.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Split String</arg>
<arg>${attach_earfcn}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${earfcn_list1}</var>
</assign>
<msg timestamp="20170703 13:36:21.278" level="INFO">${earfcn_list1} = None</msg>
<status status="PASS" endtime="20170703 13:36:21.278" starttime="20170703 13:36:21.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Change_Earfcn_To_Freqency</arg>
<arg>${earfcn_list1}</arg>
</arguments>
<assign>
<var>${freqency_list1}</var>
<var>${band_list1}</var>
</assign>
<msg timestamp="20170703 13:36:21.282" level="INFO">${freqency_list1} = None</msg>
<msg timestamp="20170703 13:36:21.282" level="INFO">${band_list1} = None</msg>
<status status="PASS" endtime="20170703 13:36:21.282" starttime="20170703 13:36:21.278"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Get_Earfcn_From_Infomodel</arg>
</arguments>
<assign>
<var>${earfcn_list2}</var>
<var>${freqency_list2}</var>
<var>${band_list2}</var>
</assign>
<kw name="Get_Earfcn_From_Infomodel" library="SISO1 Resource">
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1</arg>
</arguments>
<assign>
<var>@{ret_earfcn}</var>
</assign>
<msg timestamp="20170703 13:36:21.461" level="INFO">[infomodel_control.py@327] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .</msg>
<msg timestamp="20170703 13:36:21.462" level="INFO">@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u's...</msg>
<status status="PASS" endtime="20170703 13:36:21.462" starttime="20170703 13:36:21.288"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${ret_earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.463" starttime="20170703 13:36:21.462"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${earfcn_list}</var>
</assign>
<msg timestamp="20170703 13:36:21.464" level="INFO">${earfcn_list} = []</msg>
<status status="PASS" endtime="20170703 13:36:21.464" starttime="20170703 13:36:21.463"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${freqency_list}</var>
</assign>
<msg timestamp="20170703 13:36:21.464" level="INFO">${freqency_list} = []</msg>
<status status="PASS" endtime="20170703 13:36:21.464" starttime="20170703 13:36:21.464"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${band_list}</var>
</assign>
<msg timestamp="20170703 13:36:21.465" level="INFO">${band_list} = []</msg>
<status status="PASS" endtime="20170703 13:36:21.465" starttime="20170703 13:36:21.465"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_OFFSET}</arg>
</arguments>
<assign>
<var>${offset_dict}</var>
</assign>
<msg timestamp="20170703 13:36:21.466" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.468" level="INFO">${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}</msg>
<status status="PASS" endtime="20170703 13:36:21.468" starttime="20170703 13:36:21.465"></status>
</kw>
<kw type="for" name="${index} IN [ @{ret_earfcn} ]">
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1: {u'fcnULs': [37900L], u'fcnDLs': [37900L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:36:21.470" level="INFO">${index.earfcn} = 37900</msg>
<status status="PASS" endtime="20170703 13:36:21.470" starttime="20170703 13:36:21.469"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.470" starttime="20170703 13:36:21.470"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:36:21.472" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.473" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:36:21.473" starttime="20170703 13:36:21.471"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:36:21.474" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.474" starttime="20170703 13:36:21.474"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.476" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.476" starttime="20170703 13:36:21.475"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.480" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:36:21.480" starttime="20170703 13:36:21.476"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:36:21.481" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:36:21.481" starttime="20170703 13:36:21.480"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.481" starttime="20170703 13:36:21.475"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.481" starttime="20170703 13:36:21.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.484" starttime="20170703 13:36:21.481"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:36:21.488" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170703 13:36:21.488" starttime="20170703 13:36:21.485"></status>
</kw>
<msg timestamp="20170703 13:36:21.489" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:36:21.489" starttime="20170703 13:36:21.471"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:36:21.489" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:36:21.490" starttime="20170703 13:36:21.489"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.490" starttime="20170703 13:36:21.490"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:36:21.491" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170703 13:36:21.491" starttime="20170703 13:36:21.490"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:36:21.495" level="INFO">${freq} = 25850.0</msg>
<status status="PASS" endtime="20170703 13:36:21.495" starttime="20170703 13:36:21.491"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:36:21.496" level="INFO">${fq} = 25850</msg>
<status status="PASS" endtime="20170703 13:36:21.496" starttime="20170703 13:36:21.495"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:36:21.496" level="INFO">${freqency} = 25850</msg>
<status status="PASS" endtime="20170703 13:36:21.496" starttime="20170703 13:36:21.496"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.497" starttime="20170703 13:36:21.497"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.497" starttime="20170703 13:36:21.469"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:36:21.498" level="INFO">${index.earfcn} = 38100</msg>
<status status="PASS" endtime="20170703 13:36:21.498" starttime="20170703 13:36:21.497"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.499" starttime="20170703 13:36:21.499"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:36:21.500" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.502" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:36:21.502" starttime="20170703 13:36:21.500"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:36:21.503" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.504" starttime="20170703 13:36:21.503"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.506" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.506" starttime="20170703 13:36:21.505"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.511" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:36:21.511" starttime="20170703 13:36:21.506"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:36:21.512" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:36:21.512" starttime="20170703 13:36:21.512"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.512" starttime="20170703 13:36:21.504"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.512" starttime="20170703 13:36:21.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.516" starttime="20170703 13:36:21.512"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:36:21.520" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170703 13:36:21.520" starttime="20170703 13:36:21.516"></status>
</kw>
<msg timestamp="20170703 13:36:21.520" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:36:21.520" starttime="20170703 13:36:21.499"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:36:21.521" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:36:21.521" starttime="20170703 13:36:21.520"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.521" starttime="20170703 13:36:21.521"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:36:21.522" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170703 13:36:21.522" starttime="20170703 13:36:21.522"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:36:21.526" level="INFO">${freq} = 26050.0</msg>
<status status="PASS" endtime="20170703 13:36:21.526" starttime="20170703 13:36:21.522"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:36:21.527" level="INFO">${fq} = 26050</msg>
<status status="PASS" endtime="20170703 13:36:21.527" starttime="20170703 13:36:21.526"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:36:21.528" level="INFO">${freqency} = 26050</msg>
<status status="PASS" endtime="20170703 13:36:21.528" starttime="20170703 13:36:21.527"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.528" starttime="20170703 13:36:21.528"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.528" starttime="20170703 13:36:21.497"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:36:21.530" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170703 13:36:21.531" starttime="20170703 13:36:21.529"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.531" starttime="20170703 13:36:21.531"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:36:21.533" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.535" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:36:21.535" starttime="20170703 13:36:21.532"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:36:21.536" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.536" starttime="20170703 13:36:21.535"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.537" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.538" starttime="20170703 13:36:21.537"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.543" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.543" starttime="20170703 13:36:21.538"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.544" starttime="20170703 13:36:21.543"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.544" starttime="20170703 13:36:21.536"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.545" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.545" starttime="20170703 13:36:21.544"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.549" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.549" starttime="20170703 13:36:21.545"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.550" starttime="20170703 13:36:21.549"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.550" starttime="20170703 13:36:21.544"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.552" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.552" starttime="20170703 13:36:21.551"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.558" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.558" starttime="20170703 13:36:21.553"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.559" starttime="20170703 13:36:21.558"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.559" starttime="20170703 13:36:21.550"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.561" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.561" starttime="20170703 13:36:21.560"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.567" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.567" starttime="20170703 13:36:21.562"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.568" starttime="20170703 13:36:21.568"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.568" starttime="20170703 13:36:21.559"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.570" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.570" starttime="20170703 13:36:21.569"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.576" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:36:21.576" starttime="20170703 13:36:21.570"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:36:21.577" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:36:21.577" starttime="20170703 13:36:21.577"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.577" starttime="20170703 13:36:21.568"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.577" starttime="20170703 13:36:21.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.583" starttime="20170703 13:36:21.578"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:36:21.586" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:36:21.586" starttime="20170703 13:36:21.583"></status>
</kw>
<msg timestamp="20170703 13:36:21.586" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:36:21.586" starttime="20170703 13:36:21.532"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:36:21.587" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:36:21.587" starttime="20170703 13:36:21.587"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.588" starttime="20170703 13:36:21.587"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:36:21.588" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:36:21.588" starttime="20170703 13:36:21.588"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:36:21.594" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170703 13:36:21.594" starttime="20170703 13:36:21.589"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:36:21.594" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170703 13:36:21.595" starttime="20170703 13:36:21.594"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:36:21.595" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170703 13:36:21.595" starttime="20170703 13:36:21.595"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.596" starttime="20170703 13:36:21.595"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.596" starttime="20170703 13:36:21.529"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:36:21.597" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170703 13:36:21.597" starttime="20170703 13:36:21.596"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.599" starttime="20170703 13:36:21.597"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:36:21.600" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.602" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:36:21.602" starttime="20170703 13:36:21.600"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:36:21.603" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.603" starttime="20170703 13:36:21.602"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.604" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.604" starttime="20170703 13:36:21.603"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.608" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.608" starttime="20170703 13:36:21.604"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.608" starttime="20170703 13:36:21.608"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.608" starttime="20170703 13:36:21.603"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.609" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.609" starttime="20170703 13:36:21.609"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.614" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.614" starttime="20170703 13:36:21.610"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.615" starttime="20170703 13:36:21.615"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.615" starttime="20170703 13:36:21.608"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.616" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.616" starttime="20170703 13:36:21.615"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.620" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.620" starttime="20170703 13:36:21.616"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.620" starttime="20170703 13:36:21.620"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.620" starttime="20170703 13:36:21.615"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.622" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.622" starttime="20170703 13:36:21.621"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.626" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.626" starttime="20170703 13:36:21.622"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.627" starttime="20170703 13:36:21.626"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.627" starttime="20170703 13:36:21.621"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.628" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.628" starttime="20170703 13:36:21.627"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.632" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:36:21.633" starttime="20170703 13:36:21.628"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:36:21.634" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:36:21.634" starttime="20170703 13:36:21.633"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.634" starttime="20170703 13:36:21.627"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.634" starttime="20170703 13:36:21.603"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.637" starttime="20170703 13:36:21.634"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:36:21.641" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:36:21.641" starttime="20170703 13:36:21.638"></status>
</kw>
<msg timestamp="20170703 13:36:21.641" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:36:21.641" starttime="20170703 13:36:21.599"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:36:21.643" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:36:21.643" starttime="20170703 13:36:21.642"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.644" starttime="20170703 13:36:21.644"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:36:21.645" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:36:21.645" starttime="20170703 13:36:21.644"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:36:21.648" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170703 13:36:21.648" starttime="20170703 13:36:21.645"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:36:21.649" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170703 13:36:21.649" starttime="20170703 13:36:21.649"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:36:21.650" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170703 13:36:21.650" starttime="20170703 13:36:21.649"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.650" starttime="20170703 13:36:21.650"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.650" starttime="20170703 13:36:21.596"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:36:21.652" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170703 13:36:21.652" starttime="20170703 13:36:21.651"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.654" starttime="20170703 13:36:21.653"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:36:21.655" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.657" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:36:21.658" starttime="20170703 13:36:21.655"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:36:21.658" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.658" starttime="20170703 13:36:21.658"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.659" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.659" starttime="20170703 13:36:21.659"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.665" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.665" starttime="20170703 13:36:21.660"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.666" starttime="20170703 13:36:21.665"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.666" starttime="20170703 13:36:21.659"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.667" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.667" starttime="20170703 13:36:21.666"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.670" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.671" starttime="20170703 13:36:21.667"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.671" starttime="20170703 13:36:21.671"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.671" starttime="20170703 13:36:21.666"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.672" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.672" starttime="20170703 13:36:21.672"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.678" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.678" starttime="20170703 13:36:21.673"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.679" starttime="20170703 13:36:21.678"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.679" starttime="20170703 13:36:21.671"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.680" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.680" starttime="20170703 13:36:21.679"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.686" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.686" starttime="20170703 13:36:21.680"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.687" starttime="20170703 13:36:21.687"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.687" starttime="20170703 13:36:21.679"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.688" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.688" starttime="20170703 13:36:21.687"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.692" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:36:21.692" starttime="20170703 13:36:21.688"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:36:21.692" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:36:21.693" starttime="20170703 13:36:21.692"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.693" starttime="20170703 13:36:21.687"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.693" starttime="20170703 13:36:21.658"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.698" starttime="20170703 13:36:21.693"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:36:21.701" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:36:21.701" starttime="20170703 13:36:21.698"></status>
</kw>
<msg timestamp="20170703 13:36:21.702" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:36:21.702" starttime="20170703 13:36:21.654"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:36:21.702" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:36:21.702" starttime="20170703 13:36:21.702"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.703" starttime="20170703 13:36:21.703"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:36:21.705" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:36:21.705" starttime="20170703 13:36:21.703"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:36:21.708" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170703 13:36:21.708" starttime="20170703 13:36:21.705"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:36:21.709" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170703 13:36:21.709" starttime="20170703 13:36:21.709"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:36:21.710" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170703 13:36:21.710" starttime="20170703 13:36:21.709"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.710" starttime="20170703 13:36:21.710"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.711" starttime="20170703 13:36:21.651"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:36:21.711" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170703 13:36:21.711" starttime="20170703 13:36:21.711"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.712" starttime="20170703 13:36:21.712"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:36:21.714" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.716" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:36:21.716" starttime="20170703 13:36:21.713"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:36:21.716" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.716" starttime="20170703 13:36:21.716"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.718" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.718" starttime="20170703 13:36:21.717"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.721" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.721" starttime="20170703 13:36:21.718"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.722" starttime="20170703 13:36:21.722"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.722" starttime="20170703 13:36:21.717"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.723" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.723" starttime="20170703 13:36:21.722"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.728" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.728" starttime="20170703 13:36:21.723"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.729" starttime="20170703 13:36:21.728"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.729" starttime="20170703 13:36:21.722"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.730" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.730" starttime="20170703 13:36:21.729"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.734" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.734" starttime="20170703 13:36:21.730"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.736" starttime="20170703 13:36:21.735"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.736" starttime="20170703 13:36:21.729"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.737" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.737" starttime="20170703 13:36:21.736"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.741" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:36:21.741" starttime="20170703 13:36:21.737"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.742" starttime="20170703 13:36:21.741"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.742" starttime="20170703 13:36:21.736"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:36:21.742" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:36:21.743" starttime="20170703 13:36:21.742"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:36:21.748" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:36:21.748" starttime="20170703 13:36:21.743"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:36:21.748" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:36:21.748" starttime="20170703 13:36:21.748"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.749" starttime="20170703 13:36:21.742"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.749" starttime="20170703 13:36:21.717"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.752" starttime="20170703 13:36:21.749"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:36:21.756" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:36:21.756" starttime="20170703 13:36:21.752"></status>
</kw>
<msg timestamp="20170703 13:36:21.757" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:36:21.757" starttime="20170703 13:36:21.712"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:36:21.757" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:36:21.757" starttime="20170703 13:36:21.757"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.758" starttime="20170703 13:36:21.758"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:36:21.759" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:36:21.759" starttime="20170703 13:36:21.758"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:36:21.763" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170703 13:36:21.763" starttime="20170703 13:36:21.759"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:36:21.764" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170703 13:36:21.764" starttime="20170703 13:36:21.763"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:36:21.764" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170703 13:36:21.764" starttime="20170703 13:36:21.764"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.766" starttime="20170703 13:36:21.765"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.766" starttime="20170703 13:36:21.711"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.766" starttime="20170703 13:36:21.468"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.767" starttime="20170703 13:36:21.288"></status>
</kw>
<msg timestamp="20170703 13:36:21.767" level="INFO">${earfcn_list2} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<msg timestamp="20170703 13:36:21.767" level="INFO">${freqency_list2} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<msg timestamp="20170703 13:36:21.767" level="INFO">${band_list2} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170703 13:36:21.767" starttime="20170703 13:36:21.282"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${earfcn_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<assign>
<var>${earfcn_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.774" starttime="20170703 13:36:21.771"></status>
</kw>
<msg timestamp="20170703 13:36:21.774" level="INFO">${earfcn_list} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<status status="PASS" endtime="20170703 13:36:21.774" starttime="20170703 13:36:21.767"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${freqency_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<assign>
<var>${freqency_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.783" starttime="20170703 13:36:21.779"></status>
</kw>
<msg timestamp="20170703 13:36:21.783" level="INFO">${freqency_list} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<status status="PASS" endtime="20170703 13:36:21.783" starttime="20170703 13:36:21.775"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${band_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<assign>
<var>${band_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.791" starttime="20170703 13:36:21.788"></status>
</kw>
<msg timestamp="20170703 13:36:21.791" level="INFO">${band_list} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170703 13:36:21.791" starttime="20170703 13:36:21.783"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170703 13:36:21.792" level="INFO">${cell_index1} = 0</msg>
<status status="PASS" endtime="20170703 13:36:21.792" starttime="20170703 13:36:21.792"></status>
</kw>
<kw type="for" name="${cell_index2} IN [ @{cell_list} ]">
<kw type="foritem" name="${cell_index2} = 2">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.800" starttime="20170703 13:36:21.797"></status>
</kw>
<msg timestamp="20170703 13:36:21.800" level="INFO">${cell_index} = 1</msg>
<status status="PASS" endtime="20170703 13:36:21.800" starttime="20170703 13:36:21.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.808" starttime="20170703 13:36:21.804"></status>
</kw>
<status status="PASS" endtime="20170703 13:36:21.808" starttime="20170703 13:36:21.801"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:36:21.812" starttime="20170703 13:36:21.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="TM500_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20170703 13:36:23.522" level="INFO">${TM500_PC_CONNECTION} = 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[robot_func.py@29] Can't get variable '${TM500_PC_CONNECTION}' ! details: 'Variable '${TM500_PC_CONNECTION}' not found.'</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 


login:</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester

password:</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@246]  

*===============================================================
Welcome to Microsoft Telnet Server.
*===============================================================
C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8272 -s True</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8272 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 2872.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[process_control.py@74] Process start successed ! process id: 2872</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8272</msg>
<msg timestamp="20170703 13:37:49.600" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 1 user queue.

"</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[tm500.py@412] Get TM500 resource success!</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"
FileZilla Server Interface.exe
FileZilla Server Interface.xml
FileZilla Server.xml
FileZilla server.exe
FzGSS.dll
Uninstall.exe
legal.htm
libeay32.dll
license.txt
readme.htm
ssleay32.dll

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"'</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170703 13:37:49.601" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@591] Prev msg:</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1728] TM500 command to be sent: GSTS</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1728] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1728] TM500 command to be sent: GETR</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1728] TM500 command to be sent: STRT</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20170703 13:37:49.602" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<status status="PASS" endtime="20170703 13:37:49.605" starttime="20170703 13:36:21.818"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20170703 13:37:49.610" level="INFO">${TM500_Use_Tag} = used</msg>
<status status="PASS" endtime="20170703 13:37:49.610" starttime="20170703 13:37:49.606"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170703 13:37:53.647" level="INFO">$TA,C,020A*</msg>
<msg timestamp="20170703 13:37:53.647" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,020A*', Receive&lt;-'$TA,C,020A*'</msg>
<msg timestamp="20170703 13:37:53.647" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,020A*'
$TA,C,060A*</msg>
<msg timestamp="20170703 13:37:53.647" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,060A*', Receive&lt;-'$TA,C,060A*'</msg>
<msg timestamp="20170703 13:37:53.647" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,060A*'</msg>
<status status="PASS" endtime="20170703 13:37:53.648" starttime="20170703 13:37:49.610"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1728] TM500 command to be sent: GVER</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@507] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170703 13:37:56.100" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20170703 13:37:56.101" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20170703 13:37:56.103" starttime="20170703 13:37:53.648"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20170703 13:37:56.728" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20170703 13:37:56.728" level="INFO">[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170703_133715_session/170703_133805'</msg>
<msg timestamp="20170703 13:37:56.728" level="INFO">[tm500.py@1352] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170703_133715_session/170703_133805'</msg>
<msg timestamp="20170703 13:37:56.728" level="INFO">[tm500.py@1363] C:\TM500_LOG\170703_133715_session\170703_133805</msg>
<status status="PASS" endtime="20170703 13:37:56.728" starttime="20170703 13:37:56.103"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${modify_tm500_script}</var>
</assign>
<msg timestamp="20170703 13:37:56.729" level="INFO">${modify_tm500_script} = []</msg>
<status status="PASS" endtime="20170703 13:37:56.729" starttime="20170703 13:37:56.728"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${attach_freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:37:56.730" starttime="20170703 13:37:56.729"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_scripts}</arg>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20170703 13:38:06.301" level="INFO">[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20170703 13:38:06.301" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:38:06.302" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 26050</msg>
<msg timestamp="20170703 13:38:06.302" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:38:06.302" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20170703 13:38:06.302" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:38:06.302" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20170703 13:38:06.302" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:38:06.302" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20170703 13:38:06.302" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:38:06.302" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170703 13:38:06.302" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170703 13:38:06.302" level="INFO">[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170703 13:38:06.302" level="INFO">[tm500.py@1673] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x9BD9, TimingAdv: 2, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
  Selected PLMN: 26203F
  Pdn Id: 0
  EPS Bearer Id: 5
  Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs
  IPv4 Address: 172.170.1.232
  Attach Result: EPS Only
  Mode: PS 2
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0</msg>
<msg timestamp="20170703 13:38:06.303" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20170703 13:38:06.303" starttime="20170703 13:37:56.730"></status>
</kw>
<kw name="Tm500 Start Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword connects TM500 PPPoE connections by their names.</doc>
<msg timestamp="20170703 13:38:07.918" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:38:07.918" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:38:07.918" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500</msg>
<msg timestamp="20170703 13:38:07.918" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170703 13:38:07.918" level="INFO">[tm500.py@1302] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\Documents and Settings\bts-tester&gt;</msg>
<status status="PASS" endtime="20170703 13:38:07.918" starttime="20170703 13:38:06.303"></status>
</kw>
<kw name="TM500 Log Stop And Fetch" library="ue_resource">
<doc>TM500: stop logging, convert log to csv format, copy logs to local PC.</doc>
<arguments>
<arg>tm500_attach_log${cell_id}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:38:07.939" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:38:07.939" starttime="20170703 13:38:07.929"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<msg timestamp="20170703 13:38:07.941" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\tm500_attach_log2"&gt;D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\tm500_attach_log2&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170703 13:38:07.941" starttime="20170703 13:38:07.939"></status>
</kw>
<kw name="Tm500 Stop Logging" library="tdd_ev_robotws">
<doc>This keyword stops TM500's logging.</doc>
<assign>
<var>${log_folder_path_on_tm500_pc}</var>
</assign>
<msg timestamp="20170703 13:38:20.505" level="INFO">[tm500.py@1376] Prev msg: I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0
  De Id: 8
  EPS Bearer Id: 5
  PDN IP Address String: 172.170.1.232</msg>
<msg timestamp="20170703 13:38:20.505" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$STOP_LOGGING</msg>
<msg timestamp="20170703 13:38:20.505" level="INFO">[tm500.py@1736] TM500 command reply: C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170703 13:38:20.505" level="INFO">[tm500.py@1387] TM500 command line response of "STOP LOGGING":
C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170703 13:38:20.505" level="INFO">[tm500.py@1391] TM500 stop logging succeeded.</msg>
<msg timestamp="20170703 13:38:20.506" level="INFO">${log_folder_path_on_tm500_pc} = C:\TM500_LOG\170703_133715_session\170703_133805</msg>
<status status="PASS" endtime="20170703 13:38:20.506" starttime="20170703 13:38:07.941"></status>
</kw>
<kw name="Tm500 Convert Log" library="tdd_ev_robotws">
<doc>This keyword converts TM500 log to csv format files.</doc>
<arguments>
<arg>timeout=${log_convertion_timeout}</arg>
</arguments>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1736] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_TO_TEXT 0</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 1%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%</msg>
<msg timestamp="20170703 13:38:34.068" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Suitable
I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 44%</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 100%

C: CONVERT_TO_TEXT 0x00 ok.</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\170703_133715_session\170703_133805"</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_COMMAND_LOG started</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1487] I: CONVERT_COMMAND_LOG progress= 5%
I: CONVERT_COMMAND_LOG progress= 10%
I: CONVERT_COMMAND_LOG progress= 15%
I: CONVERT_COMMAND_LOG progress= 20%
I: CONVERT_COMMAND_LOG progress= 25%
I: CONVERT_COMMAND_LOG progress= 30%
I: CONVERT_COMMAND_LOG progress= 35%
I: CONVERT_COMMAND_LOG progress= 40%
I: CONVERT_COMMAND_LOG progress= 45%
I: CONVERT_COMMAND_LOG progress= 50%
I: CONVERT_COMMAND_LOG progress= 55%
I: CONVERT_COMMAND_LOG progress= 60%
I: CONVERT_COMMAND_LOG progress= 65%
I: CONVERT_COMMAND_LOG progress= 70%
I: CONVERT_COMMAND_LOG progress= 76%
I: CONVERT_COMMAND_LOG progress= 81%
I: CONVERT_COMMAND_LOG progress= 86%
I: CONVERT_COMMAND_LOG progress= 91%
I: CONVERT_COMMAND_LOG progress= 96%
C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\170703_133715_SESSION\170703_133805\170703_133715_session_command_log.csv</msg>
<msg timestamp="20170703 13:38:34.069" level="INFO">[tm500.py@1492] TM500 convert log succeeded.</msg>
<status status="PASS" endtime="20170703 13:38:34.073" starttime="20170703 13:38:20.506"></status>
</kw>
<kw name="Tm500 Log Fetch" library="ue_resource">
<doc>TM500 Log fetching.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:38:34.083" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<status status="PASS" endtime="20170703 13:38:34.083" starttime="20170703 13:38:34.074"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170703 13:38:34.084" starttime="20170703 13:38:34.083"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cd /D "${log_folder_path_on_tm500_pc}"</arg>
</arguments>
<msg timestamp="20170703 13:38:35.398" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:38:35.399" level="INFO">[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\170703_133715_session\170703_133805"</msg>
<msg timestamp="20170703 13:38:35.399" level="INFO">[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\170703_133715_session\170703_133805"

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<status status="PASS" endtime="20170703 13:38:35.399" starttime="20170703 13:38:34.084"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cp ../*ommand*og*.txt session_command_log.txt</arg>
</arguments>
<msg timestamp="20170703 13:38:36.711" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:38:36.711" level="INFO">[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt</msg>
<msg timestamp="20170703 13:38:36.711" level="INFO">[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt
cp: cannot stat `../*ommand*og*.txt': No such file or directory

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<status status="PASS" endtime="20170703 13:38:36.712" starttime="20170703 13:38:35.399"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>chmod 777 -R *</arg>
</arguments>
<msg timestamp="20170703 13:38:38.022" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:38:38.022" level="INFO">[telnet_common.py@276] Execute command: chmod 777 -R *</msg>
<msg timestamp="20170703 13:38:38.022" level="INFO">[telnet_common.py@306] Get Response: chmod 777 -R *

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<status status="PASS" endtime="20170703 13:38:38.023" starttime="20170703 13:38:36.712"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zcvf tm500_log.tar *.*</arg>
</arguments>
<status status="PASS" endtime="20170703 13:38:38.023" starttime="20170703 13:38:38.023"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>:\\</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${driver_log_folder}</var>
</assign>
<msg timestamp="20170703 13:38:38.024" level="INFO">${driver_log_folder} = [u'C', u'TM500_LOG\\170703_133715_session\\170703_133805']</msg>
<status status="PASS" endtime="20170703 13:38:38.024" starttime="20170703 13:38:38.023"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${TM500_PC_INFO.IP}</arg>
<arg>21</arg>
<arg>TA_LOG</arg>
<arg>${None}</arg>
<arg>${log_folder_path_on_local_pc}</arg>
<arg>ALL</arg>
<arg>${driver_log_folder[1]}</arg>
</arguments>
<msg timestamp="20170703 13:38:38.386" level="INFO">[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.</msg>
<msg timestamp="20170703 13:38:38.386" level="INFO">[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta
220-written by Tim Kosse (Tim.Kosse@gmx.de)
220 Please visit http://sourceforge.net/projects/filezilla/</msg>
<status status="PASS" endtime="20170703 13:38:38.386" starttime="20170703 13:38:38.024"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:38:38.396" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:38:38.396" starttime="20170703 13:38:38.386"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>cd /D "${log_folder_path_on_local_pc}"</arg>
</arguments>
<status status="PASS" endtime="20170703 13:38:38.396" starttime="20170703 13:38:38.396"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170703 13:38:38.397" starttime="20170703 13:38:38.396"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>chmod 777 -R *</arg>
</arguments>
<status status="PASS" endtime="20170703 13:38:38.397" starttime="20170703 13:38:38.397"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${unzip_result}</arg>
<arg>Run keyword and ignore error</arg>
<arg>Unzip file</arg>
<arg>tm500_log.tar</arg>
<arg>${log_folder_path_on_local_pc}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:38:38.398" starttime="20170703 13:38:38.397"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword if</arg>
<arg>'${unzip_result[0]}' == 'FAIL'</arg>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170703 13:38:38.398" starttime="20170703 13:38:38.398"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>remove file</arg>
<arg>${log_folder_path_on_local_pc}/tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170703 13:38:38.398" starttime="20170703 13:38:38.398"></status>
</kw>
<status status="PASS" endtime="20170703 13:38:38.399" starttime="20170703 13:38:34.073"></status>
</kw>
<status status="PASS" endtime="20170703 13:38:38.399" starttime="20170703 13:38:07.929"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ue_attach_ip}</arg>
<arg>${tm500_attach_result.UE0}</arg>
</arguments>
<msg timestamp="20170703 13:38:38.403" level="INFO">${ue_attach_ip} = 172.170.1.232</msg>
<status status="PASS" endtime="20170703 13:38:38.403" starttime="20170703 13:38:38.399"></status>
</kw>
<status status="PASS" endtime="20170703 13:38:38.403" starttime="20170703 13:36:21.817"></status>
</kw>
<status status="PASS" endtime="20170703 13:38:38.403" starttime="20170703 13:36:21.813"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:38:38.408" starttime="20170703 13:38:38.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="TM500_Detach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:38:38.425" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:38:38.425" starttime="20170703 13:38:38.416"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170703 13:38:39.733" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:38:39.734" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170703 13:38:39.734" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170703 13:38:39.734" starttime="20170703 13:38:38.425"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:38:39.744" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<status status="PASS" endtime="20170703 13:38:39.744" starttime="20170703 13:38:39.734"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170703 13:38:41.100" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:38:41.100" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170703 13:38:41.100" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<status status="PASS" endtime="20170703 13:38:41.100" starttime="20170703 13:38:39.744"></status>
</kw>
<kw name="Tm500 Stop Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword disconnects TM500 PPPoE connection by PPPoE name.</doc>
<msg timestamp="20170703 13:38:42.438" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:38:42.438" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:38:42.438" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT</msg>
<msg timestamp="20170703 13:38:42.438" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<msg timestamp="20170703 13:38:42.438" level="INFO">[tm500.py@1321] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<status status="PASS" endtime="20170703 13:38:42.439" starttime="20170703 13:38:41.101"></status>
</kw>
<kw name="Tm500 Detach" library="tdd_ev_robotws">
<doc>This keyword does UE detach operation of TM500.</doc>
<msg timestamp="20170703 13:38:42.529" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170703 13:38:42.529" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0

C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170703 13:38:42.529" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte NasConfigEmmDeregister 0</msg>
<msg timestamp="20170703 13:38:42.529" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:38:42.529" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170703 13:38:42.529" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170703 13:38:42.529" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte Activate -1</msg>
<msg timestamp="20170703 13:38:42.529" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<status status="PASS" endtime="20170703 13:38:42.529" starttime="20170703 13:38:42.439"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:38:42.539" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:38:42.539" starttime="20170703 13:38:42.530"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170703 13:38:46.576" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170703 13:38:46.576" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170703 13:38:46.576" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170703 13:38:46.576" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170703 13:38:46.576" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170703 13:38:46.576" starttime="20170703 13:38:42.539"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170703 13:39:03.812" level="INFO">[tm500.py@591] Prev msg: I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x37A8, TimingAdv: 2, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0
    Detach Cause: UE Initiated 

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Acceptable</msg>
<msg timestamp="20170703 13:39:03.812" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170703 13:39:03.812" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170703 13:39:03.812" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8272 stopping</msg>
<status status="PASS" endtime="20170703 13:39:03.812" starttime="20170703 13:38:46.577"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:03.812" starttime="20170703 13:38:38.415"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:03.812" starttime="20170703 13:38:38.412"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:03.812" starttime="20170703 13:38:38.408"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index1}+1</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170703 13:39:03.818" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170703 13:39:03.818" starttime="20170703 13:39:03.813"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${cell_index1}</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170703 13:39:03.819" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170703 13:39:03.820" starttime="20170703 13:39:03.819"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:03.820" starttime="20170703 13:36:21.792"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:03.820" starttime="20170703 13:36:21.792"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:03.820" starttime="20170703 13:36:21.270"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:39:03.825" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:39:03.825" starttime="20170703 13:39:03.820"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${block_cell_index}</arg>
<arg>Unblock</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170703 13:39:03.828" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=1', u'HWAction=Unblock', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170703132353\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170703132356\\FZHR_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170703 13:39:03.828" starttime="20170703 13:39:03.828"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170703 13:39:18.414" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="1"
HWAction="Unblock"
LogPath="D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170703133903\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170703 13:39:18.414" starttime="20170703 13:39:03.829"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:18.414" starttime="20170703 13:39:03.826"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5 sec</arg>
</arguments>
<msg timestamp="20170703 13:39:23.415" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170703 13:39:23.415" starttime="20170703 13:39:18.415"></status>
</kw>
<kw name="GUI SM Check BTS HW Status" library="gui_resource">
<doc>This keyword is used to check the status on BTS Hardware panel.</doc>
<arguments>
<arg>AllCell</arg>
<arg>Operational state=Enabled;;Working state=Working</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>CompName=${CompName}</arg>
<arg>CheckField=${CheckField}</arg>
<arg>WaitTime=${WaitTime}</arg>
<arg>CheckSameFlag=${CheckSameFlag}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170703 13:39:23.418" level="INFO">${para_list} = [u'CompName=AllCell', u'CheckField=Operational state=Enabled;;Working state=Working', u'WaitTime=0', u'CheckSameFlag=1', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170703132353\\ev_logs\\FZHR_Operational_Ce...</msg>
<status status="PASS" endtime="20170703 13:39:23.418" starttime="20170703 13:39:23.417"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:23.419" starttime="20170703 13:39:23.418"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170703 13:39:32.397" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
CompName="AllCell"
CheckField="Operational state=Enabled;;Working state=Working"
WaitTime="0"
CheckSameFlag="1"
LogPath="D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170703133923\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170703 13:39:32.397" starttime="20170703 13:39:23.419"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.397" starttime="20170703 13:39:23.417"></status>
</kw>
<kw name="UE_Attach_SISO1" library="SISO1 Resource">
<doc>Example</doc>
<arguments>
<arg>${block_cell_index}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cell_id}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{cell_list}</var>
</assign>
<msg timestamp="20170703 13:39:32.404" level="INFO">@{cell_list} = [ 1 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.404" starttime="20170703 13:39:32.403"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${cell_list}</arg>
</arguments>
<assign>
<var>${cell_list_length}</var>
</assign>
<msg timestamp="20170703 13:39:32.404" level="INFO">Length is 1</msg>
<msg timestamp="20170703 13:39:32.405" level="INFO">${cell_list_length} = 1</msg>
<status status="PASS" endtime="20170703 13:39:32.405" starttime="20170703 13:39:32.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Split String</arg>
<arg>${attach_earfcn}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${earfcn_list1}</var>
</assign>
<msg timestamp="20170703 13:39:32.408" level="INFO">${earfcn_list1} = None</msg>
<status status="PASS" endtime="20170703 13:39:32.408" starttime="20170703 13:39:32.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Change_Earfcn_To_Freqency</arg>
<arg>${earfcn_list1}</arg>
</arguments>
<assign>
<var>${freqency_list1}</var>
<var>${band_list1}</var>
</assign>
<msg timestamp="20170703 13:39:32.412" level="INFO">${freqency_list1} = None</msg>
<msg timestamp="20170703 13:39:32.412" level="INFO">${band_list1} = None</msg>
<status status="PASS" endtime="20170703 13:39:32.412" starttime="20170703 13:39:32.409"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Get_Earfcn_From_Infomodel</arg>
</arguments>
<assign>
<var>${earfcn_list2}</var>
<var>${freqency_list2}</var>
<var>${band_list2}</var>
</assign>
<kw name="Get_Earfcn_From_Infomodel" library="SISO1 Resource">
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1</arg>
</arguments>
<assign>
<var>@{ret_earfcn}</var>
</assign>
<msg timestamp="20170703 13:39:32.558" level="INFO">[infomodel_control.py@327] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .</msg>
<msg timestamp="20170703 13:39:32.558" level="INFO">@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u's...</msg>
<status status="PASS" endtime="20170703 13:39:32.559" starttime="20170703 13:39:32.416"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${ret_earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.560" starttime="20170703 13:39:32.559"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${earfcn_list}</var>
</assign>
<msg timestamp="20170703 13:39:32.560" level="INFO">${earfcn_list} = []</msg>
<status status="PASS" endtime="20170703 13:39:32.560" starttime="20170703 13:39:32.560"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${freqency_list}</var>
</assign>
<msg timestamp="20170703 13:39:32.561" level="INFO">${freqency_list} = []</msg>
<status status="PASS" endtime="20170703 13:39:32.561" starttime="20170703 13:39:32.561"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${band_list}</var>
</assign>
<msg timestamp="20170703 13:39:32.562" level="INFO">${band_list} = []</msg>
<status status="PASS" endtime="20170703 13:39:32.562" starttime="20170703 13:39:32.562"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_OFFSET}</arg>
</arguments>
<assign>
<var>${offset_dict}</var>
</assign>
<msg timestamp="20170703 13:39:32.563" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.566" level="INFO">${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}</msg>
<status status="PASS" endtime="20170703 13:39:32.566" starttime="20170703 13:39:32.563"></status>
</kw>
<kw type="for" name="${index} IN [ @{ret_earfcn} ]">
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1: {u'fcnULs': [37900L], u'fcnDLs': [37900L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:39:32.568" level="INFO">${index.earfcn} = 37900</msg>
<status status="PASS" endtime="20170703 13:39:32.568" starttime="20170703 13:39:32.567"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.569" starttime="20170703 13:39:32.569"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:39:32.571" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.573" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:39:32.573" starttime="20170703 13:39:32.570"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:39:32.574" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.574" starttime="20170703 13:39:32.574"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.576" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.576" starttime="20170703 13:39:32.575"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.580" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:39:32.580" starttime="20170703 13:39:32.576"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:39:32.581" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:39:32.581" starttime="20170703 13:39:32.581"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.581" starttime="20170703 13:39:32.575"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.581" starttime="20170703 13:39:32.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.585" starttime="20170703 13:39:32.581"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:39:32.588" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170703 13:39:32.589" starttime="20170703 13:39:32.585"></status>
</kw>
<msg timestamp="20170703 13:39:32.589" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:39:32.589" starttime="20170703 13:39:32.569"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:39:32.589" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:39:32.590" starttime="20170703 13:39:32.589"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.590" starttime="20170703 13:39:32.590"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:39:32.591" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170703 13:39:32.591" starttime="20170703 13:39:32.591"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:39:32.595" level="INFO">${freq} = 25850.0</msg>
<status status="PASS" endtime="20170703 13:39:32.595" starttime="20170703 13:39:32.591"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:39:32.596" level="INFO">${fq} = 25850</msg>
<status status="PASS" endtime="20170703 13:39:32.596" starttime="20170703 13:39:32.595"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:39:32.596" level="INFO">${freqency} = 25850</msg>
<status status="PASS" endtime="20170703 13:39:32.596" starttime="20170703 13:39:32.596"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.597" starttime="20170703 13:39:32.597"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.597" starttime="20170703 13:39:32.567"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:39:32.598" level="INFO">${index.earfcn} = 38100</msg>
<status status="PASS" endtime="20170703 13:39:32.598" starttime="20170703 13:39:32.598"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.599" starttime="20170703 13:39:32.598"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:39:32.600" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.602" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:39:32.602" starttime="20170703 13:39:32.600"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:39:32.603" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.603" starttime="20170703 13:39:32.602"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.604" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.604" starttime="20170703 13:39:32.603"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.608" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:39:32.608" starttime="20170703 13:39:32.604"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:39:32.609" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:39:32.609" starttime="20170703 13:39:32.608"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.609" starttime="20170703 13:39:32.603"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.609" starttime="20170703 13:39:32.603"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.612" starttime="20170703 13:39:32.609"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:39:32.616" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170703 13:39:32.616" starttime="20170703 13:39:32.612"></status>
</kw>
<msg timestamp="20170703 13:39:32.616" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:39:32.616" starttime="20170703 13:39:32.599"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:39:32.617" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:39:32.617" starttime="20170703 13:39:32.616"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.618" starttime="20170703 13:39:32.617"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:39:32.618" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170703 13:39:32.618" starttime="20170703 13:39:32.618"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:39:32.622" level="INFO">${freq} = 26050.0</msg>
<status status="PASS" endtime="20170703 13:39:32.622" starttime="20170703 13:39:32.619"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:39:32.623" level="INFO">${fq} = 26050</msg>
<status status="PASS" endtime="20170703 13:39:32.623" starttime="20170703 13:39:32.623"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:39:32.624" level="INFO">${freqency} = 26050</msg>
<status status="PASS" endtime="20170703 13:39:32.624" starttime="20170703 13:39:32.623"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.625" starttime="20170703 13:39:32.624"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.625" starttime="20170703 13:39:32.597"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:39:32.625" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170703 13:39:32.626" starttime="20170703 13:39:32.625"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.626" starttime="20170703 13:39:32.626"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:39:32.628" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.630" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:39:32.630" starttime="20170703 13:39:32.628"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:39:32.631" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.631" starttime="20170703 13:39:32.631"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.632" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.632" starttime="20170703 13:39:32.632"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.636" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.636" starttime="20170703 13:39:32.633"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.637" starttime="20170703 13:39:32.636"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.637" starttime="20170703 13:39:32.631"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.638" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.638" starttime="20170703 13:39:32.637"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.642" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.642" starttime="20170703 13:39:32.638"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.642" starttime="20170703 13:39:32.642"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.642" starttime="20170703 13:39:32.637"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.643" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.643" starttime="20170703 13:39:32.643"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.647" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.647" starttime="20170703 13:39:32.643"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.648" starttime="20170703 13:39:32.647"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.648" starttime="20170703 13:39:32.642"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.649" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.649" starttime="20170703 13:39:32.648"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.652" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.652" starttime="20170703 13:39:32.649"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.653" starttime="20170703 13:39:32.653"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.653" starttime="20170703 13:39:32.648"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.654" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.654" starttime="20170703 13:39:32.653"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.658" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:39:32.658" starttime="20170703 13:39:32.654"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:39:32.658" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:39:32.659" starttime="20170703 13:39:32.658"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.659" starttime="20170703 13:39:32.653"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.659" starttime="20170703 13:39:32.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.662" starttime="20170703 13:39:32.659"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:39:32.666" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:39:32.666" starttime="20170703 13:39:32.663"></status>
</kw>
<msg timestamp="20170703 13:39:32.666" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:39:32.666" starttime="20170703 13:39:32.626"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:39:32.667" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:39:32.667" starttime="20170703 13:39:32.666"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.667" starttime="20170703 13:39:32.667"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:39:32.668" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:39:32.668" starttime="20170703 13:39:32.668"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:39:32.672" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170703 13:39:32.672" starttime="20170703 13:39:32.668"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:39:32.672" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170703 13:39:32.673" starttime="20170703 13:39:32.672"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:39:32.673" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170703 13:39:32.673" starttime="20170703 13:39:32.673"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.674" starttime="20170703 13:39:32.674"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.674" starttime="20170703 13:39:32.625"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:39:32.675" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170703 13:39:32.675" starttime="20170703 13:39:32.674"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.676" starttime="20170703 13:39:32.675"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:39:32.677" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.679" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:39:32.679" starttime="20170703 13:39:32.676"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:39:32.680" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.680" starttime="20170703 13:39:32.679"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.681" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.681" starttime="20170703 13:39:32.680"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.685" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.685" starttime="20170703 13:39:32.681"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.686" starttime="20170703 13:39:32.685"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.686" starttime="20170703 13:39:32.680"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.687" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.687" starttime="20170703 13:39:32.686"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.692" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.692" starttime="20170703 13:39:32.687"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.693" starttime="20170703 13:39:32.693"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.693" starttime="20170703 13:39:32.686"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.694" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.694" starttime="20170703 13:39:32.693"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.698" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.698" starttime="20170703 13:39:32.694"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.698" starttime="20170703 13:39:32.698"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.698" starttime="20170703 13:39:32.693"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.699" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.699" starttime="20170703 13:39:32.699"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.703" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.703" starttime="20170703 13:39:32.700"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.704" starttime="20170703 13:39:32.703"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.704" starttime="20170703 13:39:32.698"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.705" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.705" starttime="20170703 13:39:32.704"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.711" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:39:32.711" starttime="20170703 13:39:32.705"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:39:32.711" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:39:32.711" starttime="20170703 13:39:32.711"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.711" starttime="20170703 13:39:32.704"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.712" starttime="20170703 13:39:32.680"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.715" starttime="20170703 13:39:32.712"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:39:32.719" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:39:32.719" starttime="20170703 13:39:32.716"></status>
</kw>
<msg timestamp="20170703 13:39:32.720" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:39:32.720" starttime="20170703 13:39:32.676"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:39:32.720" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:39:32.721" starttime="20170703 13:39:32.720"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.721" starttime="20170703 13:39:32.721"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:39:32.722" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:39:32.722" starttime="20170703 13:39:32.721"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:39:32.726" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170703 13:39:32.726" starttime="20170703 13:39:32.722"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:39:32.726" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170703 13:39:32.726" starttime="20170703 13:39:32.726"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:39:32.727" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170703 13:39:32.727" starttime="20170703 13:39:32.727"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.728" starttime="20170703 13:39:32.727"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.728" starttime="20170703 13:39:32.674"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:39:32.729" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170703 13:39:32.729" starttime="20170703 13:39:32.729"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.730" starttime="20170703 13:39:32.730"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:39:32.731" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.734" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:39:32.734" starttime="20170703 13:39:32.731"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:39:32.735" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.735" starttime="20170703 13:39:32.734"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.736" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.736" starttime="20170703 13:39:32.735"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.740" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.740" starttime="20170703 13:39:32.736"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.741" starttime="20170703 13:39:32.740"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.741" starttime="20170703 13:39:32.735"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.742" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.742" starttime="20170703 13:39:32.741"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.746" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.746" starttime="20170703 13:39:32.742"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.746" starttime="20170703 13:39:32.746"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.746" starttime="20170703 13:39:32.741"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.747" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.747" starttime="20170703 13:39:32.747"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.752" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.752" starttime="20170703 13:39:32.747"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.752" starttime="20170703 13:39:32.752"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.752" starttime="20170703 13:39:32.746"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.753" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.753" starttime="20170703 13:39:32.753"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.757" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.757" starttime="20170703 13:39:32.754"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.758" starttime="20170703 13:39:32.758"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.758" starttime="20170703 13:39:32.753"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.759" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.759" starttime="20170703 13:39:32.758"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.763" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:39:32.763" starttime="20170703 13:39:32.759"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:39:32.764" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:39:32.764" starttime="20170703 13:39:32.763"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.764" starttime="20170703 13:39:32.758"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.764" starttime="20170703 13:39:32.735"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.767" starttime="20170703 13:39:32.764"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:39:32.771" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:39:32.771" starttime="20170703 13:39:32.767"></status>
</kw>
<msg timestamp="20170703 13:39:32.771" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:39:32.771" starttime="20170703 13:39:32.730"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:39:32.772" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:39:32.772" starttime="20170703 13:39:32.771"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.772" starttime="20170703 13:39:32.772"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:39:32.773" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:39:32.773" starttime="20170703 13:39:32.773"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:39:32.777" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170703 13:39:32.777" starttime="20170703 13:39:32.773"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:39:32.778" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170703 13:39:32.778" starttime="20170703 13:39:32.778"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:39:32.779" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170703 13:39:32.779" starttime="20170703 13:39:32.778"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.779" starttime="20170703 13:39:32.779"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.779" starttime="20170703 13:39:32.728"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:39:32.780" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170703 13:39:32.780" starttime="20170703 13:39:32.780"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.781" starttime="20170703 13:39:32.781"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:39:32.783" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.785" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:39:32.785" starttime="20170703 13:39:32.782"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:39:32.786" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.786" starttime="20170703 13:39:32.786"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.787" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.787" starttime="20170703 13:39:32.787"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.792" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.792" starttime="20170703 13:39:32.787"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.793" starttime="20170703 13:39:32.792"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.793" starttime="20170703 13:39:32.786"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.794" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.794" starttime="20170703 13:39:32.793"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.798" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.798" starttime="20170703 13:39:32.794"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.798" starttime="20170703 13:39:32.798"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.798" starttime="20170703 13:39:32.793"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.799" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.799" starttime="20170703 13:39:32.799"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.803" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.803" starttime="20170703 13:39:32.800"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.804" starttime="20170703 13:39:32.803"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.804" starttime="20170703 13:39:32.798"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.805" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.805" starttime="20170703 13:39:32.804"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.808" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:39:32.809" starttime="20170703 13:39:32.805"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.809" starttime="20170703 13:39:32.809"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.809" starttime="20170703 13:39:32.804"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:39:32.810" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:39:32.810" starttime="20170703 13:39:32.809"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:39:32.814" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:39:32.814" starttime="20170703 13:39:32.810"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:39:32.815" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:39:32.815" starttime="20170703 13:39:32.814"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.815" starttime="20170703 13:39:32.809"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.815" starttime="20170703 13:39:32.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.819" starttime="20170703 13:39:32.815"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:39:32.822" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:39:32.822" starttime="20170703 13:39:32.819"></status>
</kw>
<msg timestamp="20170703 13:39:32.822" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:39:32.822" starttime="20170703 13:39:32.781"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:39:32.823" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:39:32.823" starttime="20170703 13:39:32.823"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.824" starttime="20170703 13:39:32.823"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:39:32.824" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:39:32.824" starttime="20170703 13:39:32.824"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:39:32.828" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170703 13:39:32.828" starttime="20170703 13:39:32.825"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:39:32.829" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170703 13:39:32.829" starttime="20170703 13:39:32.828"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:39:32.830" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170703 13:39:32.830" starttime="20170703 13:39:32.829"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.830" starttime="20170703 13:39:32.830"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.830" starttime="20170703 13:39:32.780"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.830" starttime="20170703 13:39:32.566"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.831" starttime="20170703 13:39:32.416"></status>
</kw>
<msg timestamp="20170703 13:39:32.831" level="INFO">${earfcn_list2} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<msg timestamp="20170703 13:39:32.831" level="INFO">${freqency_list2} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<msg timestamp="20170703 13:39:32.831" level="INFO">${band_list2} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170703 13:39:32.831" starttime="20170703 13:39:32.412"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${earfcn_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<assign>
<var>${earfcn_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.838" starttime="20170703 13:39:32.835"></status>
</kw>
<msg timestamp="20170703 13:39:32.838" level="INFO">${earfcn_list} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<status status="PASS" endtime="20170703 13:39:32.838" starttime="20170703 13:39:32.831"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${freqency_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<assign>
<var>${freqency_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.846" starttime="20170703 13:39:32.842"></status>
</kw>
<msg timestamp="20170703 13:39:32.846" level="INFO">${freqency_list} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<status status="PASS" endtime="20170703 13:39:32.847" starttime="20170703 13:39:32.839"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${band_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<assign>
<var>${band_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.856" starttime="20170703 13:39:32.852"></status>
</kw>
<msg timestamp="20170703 13:39:32.856" level="INFO">${band_list} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170703 13:39:32.856" starttime="20170703 13:39:32.847"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170703 13:39:32.856" level="INFO">${cell_index1} = 0</msg>
<status status="PASS" endtime="20170703 13:39:32.856" starttime="20170703 13:39:32.856"></status>
</kw>
<kw type="for" name="${cell_index2} IN [ @{cell_list} ]">
<kw type="foritem" name="${cell_index2} = 1">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.865" starttime="20170703 13:39:32.862"></status>
</kw>
<msg timestamp="20170703 13:39:32.866" level="INFO">${cell_index} = 0</msg>
<status status="PASS" endtime="20170703 13:39:32.866" starttime="20170703 13:39:32.857"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.874" starttime="20170703 13:39:32.870"></status>
</kw>
<status status="PASS" endtime="20170703 13:39:32.874" starttime="20170703 13:39:32.866"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:39:32.878" starttime="20170703 13:39:32.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="TM500_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8274 -s True</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8274 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 3028.

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[process_control.py@74] Process start successed ! process id: 3028</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8274</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 1 user queue.

"</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@412] Get TM500 resource success!</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"
FileZilla Server Interface.exe
FileZilla Server Interface.xml
FileZilla Server.xml
FileZilla server.exe
FzGSS.dll
Uninstall.exe
legal.htm
libeay32.dll
license.txt
readme.htm
ssleay32.dll

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"'</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@591] Prev msg:</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1728] TM500 command to be sent: GSTS</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1728] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1728] TM500 command to be sent: GETR</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1728] TM500 command to be sent: STRT</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20170703 13:40:59.363" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<status status="PASS" endtime="20170703 13:40:59.363" starttime="20170703 13:39:32.883"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20170703 13:40:59.363" level="INFO">${TM500_Use_Tag} = used</msg>
<status status="PASS" endtime="20170703 13:40:59.363" starttime="20170703 13:40:59.363"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170703 13:41:03.451" level="INFO">$TA,C,020A*</msg>
<msg timestamp="20170703 13:41:03.451" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,020A*', Receive&lt;-'$TA,C,020A*'</msg>
<msg timestamp="20170703 13:41:03.451" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,020A*'
$TA,C,060A*</msg>
<msg timestamp="20170703 13:41:03.451" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,060A*', Receive&lt;-'$TA,C,060A*'</msg>
<msg timestamp="20170703 13:41:03.451" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,060A*'</msg>
<status status="PASS" endtime="20170703 13:41:03.451" starttime="20170703 13:40:59.363"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20170703 13:41:05.916" level="INFO">[tm500.py@1728] TM500 command to be sent: GVER</msg>
<msg timestamp="20170703 13:41:05.916" level="INFO">[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170703 13:41:05.916" level="INFO">[tm500.py@507] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170703 13:41:05.916" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20170703 13:41:05.916" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.916" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20170703 13:41:05.916" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.916" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20170703 13:41:05.916" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.916" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20170703 13:41:05.916" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20170703 13:41:05.931" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20170703 13:41:05.931" starttime="20170703 13:41:03.451"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20170703 13:41:06.540" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20170703 13:41:06.540" level="INFO">[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170703_134024_session/170703_134115'</msg>
<msg timestamp="20170703 13:41:06.540" level="INFO">[tm500.py@1352] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170703_134024_session/170703_134115'</msg>
<msg timestamp="20170703 13:41:06.540" level="INFO">[tm500.py@1363] C:\TM500_LOG\170703_134024_session\170703_134115</msg>
<status status="PASS" endtime="20170703 13:41:06.540" starttime="20170703 13:41:05.931"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${modify_tm500_script}</var>
</assign>
<msg timestamp="20170703 13:41:06.540" level="INFO">${modify_tm500_script} = []</msg>
<status status="PASS" endtime="20170703 13:41:06.540" starttime="20170703 13:41:06.540"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${attach_freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:41:06.540" starttime="20170703 13:41:06.540"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_scripts}</arg>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20170703 13:41:17.787" level="INFO">[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 25850</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">[tm500.py@1673] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x9BD9, TimingAdv: 2, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
  Selected PLMN: 26203F
  Pdn Id: 0
  EPS Bearer Id: 5
  Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs
  IPv4 Address: 172.170.43.115
  Attach Result: EPS Only
  Mode: PS 2
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0</msg>
<msg timestamp="20170703 13:41:17.787" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20170703 13:41:17.787" starttime="20170703 13:41:06.540"></status>
</kw>
<kw name="Tm500 Start Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword connects TM500 PPPoE connections by their names.</doc>
<msg timestamp="20170703 13:41:19.441" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:41:19.441" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:41:19.441" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500</msg>
<msg timestamp="20170703 13:41:19.441" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<msg timestamp="20170703 13:41:19.441" level="INFO">[tm500.py@1302] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170703_133715_session\170703_133805&gt;</msg>
<status status="PASS" endtime="20170703 13:41:19.441" starttime="20170703 13:41:17.787"></status>
</kw>
<kw name="TM500 Log Stop And Fetch" library="ue_resource">
<doc>TM500: stop logging, convert log to csv format, copy logs to local PC.</doc>
<arguments>
<arg>tm500_attach_log${cell_id}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:41:19.456" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:41:19.456" starttime="20170703 13:41:19.441"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<msg timestamp="20170703 13:41:19.456" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\tm500_attach_log1"&gt;D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\tm500_attach_log1&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170703 13:41:19.456" starttime="20170703 13:41:19.456"></status>
</kw>
<kw name="Tm500 Stop Logging" library="tdd_ev_robotws">
<doc>This keyword stops TM500's logging.</doc>
<assign>
<var>${log_folder_path_on_tm500_pc}</var>
</assign>
<msg timestamp="20170703 13:41:20.034" level="INFO">[tm500.py@1376] Prev msg: I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0
  De Id: 8
  EPS Bearer Id: 5
  PDN IP Address String: 172.170.43.115

I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x37A8, TimingAdv: 2, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0</msg>
<msg timestamp="20170703 13:41:20.034" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$STOP_LOGGING</msg>
<msg timestamp="20170703 13:41:20.034" level="INFO">[tm500.py@1736] TM500 command reply: C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170703 13:41:20.034" level="INFO">[tm500.py@1387] TM500 command line response of "STOP LOGGING":
C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170703 13:41:20.034" level="INFO">[tm500.py@1391] TM500 stop logging succeeded.</msg>
<msg timestamp="20170703 13:41:20.034" level="INFO">${log_folder_path_on_tm500_pc} = C:\TM500_LOG\170703_134024_session\170703_134115</msg>
<status status="PASS" endtime="20170703 13:41:20.034" starttime="20170703 13:41:19.456"></status>
</kw>
<kw name="Tm500 Convert Log" library="tdd_ev_robotws">
<doc>This keyword converts TM500 log to csv format files.</doc>
<arguments>
<arg>timeout=${log_convertion_timeout}</arg>
</arguments>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1736] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_TO_TEXT 0</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 44%</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 100%

C: CONVERT_TO_TEXT 0x00 ok.</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\170703_134024_session\170703_134115"</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_COMMAND_LOG started</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1487] I: CONVERT_COMMAND_LOG progress= 7%
I: CONVERT_COMMAND_LOG progress= 15%
I: CONVERT_COMMAND_LOG progress= 23%
I: CONVERT_COMMAND_LOG progress= 30%
I: CONVERT_COMMAND_LOG progress= 38%
I: CONVERT_COMMAND_LOG progress= 46%
I: CONVERT_COMMAND_LOG progress= 54%
I: CONVERT_COMMAND_LOG progress= 61%
I: CONVERT_COMMAND_LOG progress= 69%
I: CONVERT_COMMAND_LOG progress= 77%
I: CONVERT_COMMAND_LOG progress= 85%
I: CONVERT_COMMAND_LOG progress= 92%
C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\170703_134024_SESSION\170703_134115\170703_134024_session_command_log.csv</msg>
<msg timestamp="20170703 13:41:30.314" level="INFO">[tm500.py@1492] TM500 convert log succeeded.</msg>
<status status="PASS" endtime="20170703 13:41:30.314" starttime="20170703 13:41:20.034"></status>
</kw>
<kw name="Tm500 Log Fetch" library="ue_resource">
<doc>TM500 Log fetching.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:41:30.330" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<status status="PASS" endtime="20170703 13:41:30.330" starttime="20170703 13:41:30.314"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170703 13:41:30.330" starttime="20170703 13:41:30.330"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cd /D "${log_folder_path_on_tm500_pc}"</arg>
</arguments>
<msg timestamp="20170703 13:41:31.640" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:41:31.640" level="INFO">[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\170703_134024_session\170703_134115"</msg>
<msg timestamp="20170703 13:41:31.640" level="INFO">[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\170703_134024_session\170703_134115"

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<status status="PASS" endtime="20170703 13:41:31.640" starttime="20170703 13:41:30.330"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cp ../*ommand*og*.txt session_command_log.txt</arg>
</arguments>
<msg timestamp="20170703 13:41:32.966" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:41:32.966" level="INFO">[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt</msg>
<msg timestamp="20170703 13:41:32.966" level="INFO">[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt
cp: cannot stat `../*ommand*og*.txt': No such file or directory

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<status status="PASS" endtime="20170703 13:41:32.966" starttime="20170703 13:41:31.640"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>chmod 777 -R *</arg>
</arguments>
<msg timestamp="20170703 13:41:34.214" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:41:34.214" level="INFO">[telnet_common.py@276] Execute command: chmod 777 -R *</msg>
<msg timestamp="20170703 13:41:34.214" level="INFO">[telnet_common.py@306] Get Response: chmod 777 -R *

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<status status="PASS" endtime="20170703 13:41:34.230" starttime="20170703 13:41:32.966"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zcvf tm500_log.tar *.*</arg>
</arguments>
<status status="PASS" endtime="20170703 13:41:34.230" starttime="20170703 13:41:34.230"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>:\\</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${driver_log_folder}</var>
</assign>
<msg timestamp="20170703 13:41:34.230" level="INFO">${driver_log_folder} = [u'C', u'TM500_LOG\\170703_134024_session\\170703_134115']</msg>
<status status="PASS" endtime="20170703 13:41:34.230" starttime="20170703 13:41:34.230"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${TM500_PC_INFO.IP}</arg>
<arg>21</arg>
<arg>TA_LOG</arg>
<arg>${None}</arg>
<arg>${log_folder_path_on_local_pc}</arg>
<arg>ALL</arg>
<arg>${driver_log_folder[1]}</arg>
</arguments>
<msg timestamp="20170703 13:41:34.557" level="INFO">[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.</msg>
<msg timestamp="20170703 13:41:34.557" level="INFO">[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta
220-written by Tim Kosse (Tim.Kosse@gmx.de)
220 Please visit http://sourceforge.net/projects/filezilla/</msg>
<status status="PASS" endtime="20170703 13:41:34.557" starttime="20170703 13:41:34.230"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:41:34.573" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:41:34.573" starttime="20170703 13:41:34.557"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>cd /D "${log_folder_path_on_local_pc}"</arg>
</arguments>
<status status="PASS" endtime="20170703 13:41:34.573" starttime="20170703 13:41:34.573"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170703 13:41:34.573" starttime="20170703 13:41:34.573"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>chmod 777 -R *</arg>
</arguments>
<status status="PASS" endtime="20170703 13:41:34.573" starttime="20170703 13:41:34.573"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${unzip_result}</arg>
<arg>Run keyword and ignore error</arg>
<arg>Unzip file</arg>
<arg>tm500_log.tar</arg>
<arg>${log_folder_path_on_local_pc}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:41:34.573" starttime="20170703 13:41:34.573"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword if</arg>
<arg>'${unzip_result[0]}' == 'FAIL'</arg>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170703 13:41:34.573" starttime="20170703 13:41:34.573"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>remove file</arg>
<arg>${log_folder_path_on_local_pc}/tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170703 13:41:34.573" starttime="20170703 13:41:34.573"></status>
</kw>
<status status="PASS" endtime="20170703 13:41:34.573" starttime="20170703 13:41:30.314"></status>
</kw>
<status status="PASS" endtime="20170703 13:41:34.573" starttime="20170703 13:41:19.441"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ue_attach_ip}</arg>
<arg>${tm500_attach_result.UE0}</arg>
</arguments>
<msg timestamp="20170703 13:41:34.573" level="INFO">${ue_attach_ip} = 172.170.43.115</msg>
<status status="PASS" endtime="20170703 13:41:34.573" starttime="20170703 13:41:34.573"></status>
</kw>
<status status="PASS" endtime="20170703 13:41:34.573" starttime="20170703 13:39:32.882"></status>
</kw>
<status status="PASS" endtime="20170703 13:41:34.573" starttime="20170703 13:39:32.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:41:34.588" starttime="20170703 13:41:34.573"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="TM500_Detach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:41:34.604" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:41:34.604" starttime="20170703 13:41:34.588"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170703 13:41:35.930" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:41:35.930" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170703 13:41:35.930" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170703 13:41:35.930" starttime="20170703 13:41:34.604"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:41:35.930" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<status status="PASS" endtime="20170703 13:41:35.930" starttime="20170703 13:41:35.930"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170703 13:41:37.303" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:41:37.303" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170703 13:41:37.303" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<status status="PASS" endtime="20170703 13:41:37.303" starttime="20170703 13:41:35.930"></status>
</kw>
<kw name="Tm500 Stop Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword disconnects TM500 PPPoE connection by PPPoE name.</doc>
<msg timestamp="20170703 13:41:38.660" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:41:38.660" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:41:38.660" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT</msg>
<msg timestamp="20170703 13:41:38.660" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<msg timestamp="20170703 13:41:38.660" level="INFO">[tm500.py@1321] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<status status="PASS" endtime="20170703 13:41:38.660" starttime="20170703 13:41:37.303"></status>
</kw>
<kw name="Tm500 Detach" library="tdd_ev_robotws">
<doc>This keyword does UE detach operation of TM500.</doc>
<msg timestamp="20170703 13:41:38.988" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170703 13:41:38.988" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0

C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170703 13:41:38.988" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte NasConfigEmmDeregister 0</msg>
<msg timestamp="20170703 13:41:38.988" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:41:38.988" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170703 13:41:38.988" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170703 13:41:38.988" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte Activate -1</msg>
<msg timestamp="20170703 13:41:38.988" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<status status="PASS" endtime="20170703 13:41:38.988" starttime="20170703 13:41:38.660"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:41:38.988" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:41:38.988" starttime="20170703 13:41:38.988"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170703 13:41:43.075" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170703 13:41:43.075" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170703 13:41:43.075" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170703 13:41:43.075" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170703 13:41:43.075" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170703 13:41:43.075" starttime="20170703 13:41:38.988"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170703 13:42:00.204" level="INFO">[tm500.py@591] Prev msg: I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0xD377, TimingAdv: 2, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0
    Detach Cause: UE Initiated 

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Acceptable</msg>
<msg timestamp="20170703 13:42:00.204" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170703 13:42:00.204" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170703 13:42:00.204" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8274 stopping</msg>
<status status="PASS" endtime="20170703 13:42:00.204" starttime="20170703 13:41:43.075"></status>
</kw>
<status status="PASS" endtime="20170703 13:42:00.204" starttime="20170703 13:41:34.588"></status>
</kw>
<status status="PASS" endtime="20170703 13:42:00.204" starttime="20170703 13:41:34.588"></status>
</kw>
<status status="PASS" endtime="20170703 13:42:00.204" starttime="20170703 13:41:34.588"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index1}+1</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170703 13:42:00.204" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170703 13:42:00.204" starttime="20170703 13:42:00.204"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${cell_index1}</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170703 13:42:00.204" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170703 13:42:00.204" starttime="20170703 13:42:00.204"></status>
</kw>
<status status="PASS" endtime="20170703 13:42:00.204" starttime="20170703 13:39:32.857"></status>
</kw>
<status status="PASS" endtime="20170703 13:42:00.204" starttime="20170703 13:39:32.857"></status>
</kw>
<status status="PASS" endtime="20170703 13:42:00.204" starttime="20170703 13:39:32.402"></status>
</kw>
<status status="PASS" endtime="20170703 13:42:00.204" starttime="20170703 13:34:10.343"></status>
</kw>
<kw name="_Cell_Block_Unblock_and_Attach">
<doc>Operation with BTS</doc>
<arguments>
<arg>${cell_index_2}</arg>
<arg>${cell_index_1}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:42:00.204" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:42:00.204" starttime="20170703 13:42:00.204"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170703 13:42:04.275" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:42:04.275" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170703 13:42:04.275" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="3352"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:42:04.275" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:42:04.275" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170703 13:42:04.275" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="5332"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:42:04.275" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:42:04.275" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170703 13:42:04.275" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.


C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170703 13:42:04.275" starttime="20170703 13:42:00.204"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20170703 13:42:04.291" starttime="20170703 13:42:04.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20170703 13:42:04.291" starttime="20170703 13:42:04.291"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170703 13:42:04.291" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170703132353\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170703132356\\FZHR_Operational_Cell_...</msg>
<status status="PASS" endtime="20170703 13:42:04.291" starttime="20170703 13:42:04.291"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:42:04.291" starttime="20170703 13:42:04.291"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170703 13:43:14.768" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170703134204\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170703 13:43:14.768" starttime="20170703 13:42:04.291"></status>
</kw>
<status status="PASS" endtime="20170703 13:43:14.769" starttime="20170703 13:42:04.291"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>30 sec</arg>
</arguments>
<msg timestamp="20170703 13:43:44.770" level="INFO">Slept 30 seconds</msg>
<status status="PASS" endtime="20170703 13:43:44.770" starttime="20170703 13:43:14.769"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${block_cell_index}</arg>
<arg>Block</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170703 13:43:44.774" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=2', u'HWAction=Block', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170703132353\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170703132356\\FZHR_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170703 13:43:44.775" starttime="20170703 13:43:44.774"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170703 13:44:12.790" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="2"
HWAction="Block"
LogPath="D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170703134344\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170703 13:44:12.791" starttime="20170703 13:43:44.775"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:12.791" starttime="20170703 13:43:44.772"></status>
</kw>
<kw name="UE_Attach_SISO1" library="SISO1 Resource">
<doc>Example</doc>
<arguments>
<arg>${attach_cell_index}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cell_id}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{cell_list}</var>
</assign>
<msg timestamp="20170703 13:44:12.796" level="INFO">@{cell_list} = [ 1 ]</msg>
<status status="PASS" endtime="20170703 13:44:12.796" starttime="20170703 13:44:12.796"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${cell_list}</arg>
</arguments>
<assign>
<var>${cell_list_length}</var>
</assign>
<msg timestamp="20170703 13:44:12.797" level="INFO">Length is 1</msg>
<msg timestamp="20170703 13:44:12.797" level="INFO">${cell_list_length} = 1</msg>
<status status="PASS" endtime="20170703 13:44:12.797" starttime="20170703 13:44:12.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Split String</arg>
<arg>${attach_earfcn}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${earfcn_list1}</var>
</assign>
<msg timestamp="20170703 13:44:12.802" level="INFO">${earfcn_list1} = None</msg>
<status status="PASS" endtime="20170703 13:44:12.802" starttime="20170703 13:44:12.797"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Change_Earfcn_To_Freqency</arg>
<arg>${earfcn_list1}</arg>
</arguments>
<assign>
<var>${freqency_list1}</var>
<var>${band_list1}</var>
</assign>
<msg timestamp="20170703 13:44:12.806" level="INFO">${freqency_list1} = None</msg>
<msg timestamp="20170703 13:44:12.806" level="INFO">${band_list1} = None</msg>
<status status="PASS" endtime="20170703 13:44:12.806" starttime="20170703 13:44:12.802"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Get_Earfcn_From_Infomodel</arg>
</arguments>
<assign>
<var>${earfcn_list2}</var>
<var>${freqency_list2}</var>
<var>${band_list2}</var>
</assign>
<kw name="Get_Earfcn_From_Infomodel" library="SISO1 Resource">
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1</arg>
</arguments>
<assign>
<var>@{ret_earfcn}</var>
</assign>
<msg timestamp="20170703 13:44:12.899" level="INFO">[infomodel_control.py@327] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .</msg>
<msg timestamp="20170703 13:44:12.899" level="INFO">@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u's...</msg>
<status status="PASS" endtime="20170703 13:44:12.900" starttime="20170703 13:44:12.811"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${ret_earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:12.901" starttime="20170703 13:44:12.900"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${earfcn_list}</var>
</assign>
<msg timestamp="20170703 13:44:12.902" level="INFO">${earfcn_list} = []</msg>
<status status="PASS" endtime="20170703 13:44:12.902" starttime="20170703 13:44:12.902"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${freqency_list}</var>
</assign>
<msg timestamp="20170703 13:44:12.903" level="INFO">${freqency_list} = []</msg>
<status status="PASS" endtime="20170703 13:44:12.903" starttime="20170703 13:44:12.902"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${band_list}</var>
</assign>
<msg timestamp="20170703 13:44:12.903" level="INFO">${band_list} = []</msg>
<status status="PASS" endtime="20170703 13:44:12.903" starttime="20170703 13:44:12.903"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_OFFSET}</arg>
</arguments>
<assign>
<var>${offset_dict}</var>
</assign>
<msg timestamp="20170703 13:44:12.904" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:12.906" level="INFO">${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}</msg>
<status status="PASS" endtime="20170703 13:44:12.906" starttime="20170703 13:44:12.904"></status>
</kw>
<kw type="for" name="${index} IN [ @{ret_earfcn} ]">
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1: {u'fcnULs': [37900L], u'fcnDLs': [37900L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:44:12.907" level="INFO">${index.earfcn} = 37900</msg>
<status status="PASS" endtime="20170703 13:44:12.907" starttime="20170703 13:44:12.906"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:12.908" starttime="20170703 13:44:12.907"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:44:12.909" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:12.911" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:44:12.911" starttime="20170703 13:44:12.909"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:44:12.913" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:44:12.913" starttime="20170703 13:44:12.911"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:12.914" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:44:12.914" starttime="20170703 13:44:12.913"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:12.918" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:44:12.918" starttime="20170703 13:44:12.915"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:44:12.919" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:44:12.919" starttime="20170703 13:44:12.919"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:12.919" starttime="20170703 13:44:12.913"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:12.919" starttime="20170703 13:44:12.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:12.924" starttime="20170703 13:44:12.919"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:44:12.927" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170703 13:44:12.928" starttime="20170703 13:44:12.924"></status>
</kw>
<msg timestamp="20170703 13:44:12.928" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:44:12.928" starttime="20170703 13:44:12.908"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:44:12.929" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:44:12.929" starttime="20170703 13:44:12.928"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:12.930" starttime="20170703 13:44:12.929"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:44:12.930" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170703 13:44:12.930" starttime="20170703 13:44:12.930"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:44:12.935" level="INFO">${freq} = 25850.0</msg>
<status status="PASS" endtime="20170703 13:44:12.935" starttime="20170703 13:44:12.931"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:44:12.936" level="INFO">${fq} = 25850</msg>
<status status="PASS" endtime="20170703 13:44:12.936" starttime="20170703 13:44:12.935"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:44:12.937" level="INFO">${freqency} = 25850</msg>
<status status="PASS" endtime="20170703 13:44:12.937" starttime="20170703 13:44:12.936"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:12.937" starttime="20170703 13:44:12.937"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:12.937" starttime="20170703 13:44:12.906"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:44:12.938" level="INFO">${index.earfcn} = 38100</msg>
<status status="PASS" endtime="20170703 13:44:12.938" starttime="20170703 13:44:12.938"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:12.939" starttime="20170703 13:44:12.939"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:44:12.940" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:12.942" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:44:12.942" starttime="20170703 13:44:12.940"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:44:12.943" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:44:12.943" starttime="20170703 13:44:12.943"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:12.944" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:44:12.944" starttime="20170703 13:44:12.944"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:12.948" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:44:12.948" starttime="20170703 13:44:12.945"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:44:12.949" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:44:12.949" starttime="20170703 13:44:12.949"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:12.949" starttime="20170703 13:44:12.943"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:12.949" starttime="20170703 13:44:12.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:12.954" starttime="20170703 13:44:12.949"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:44:12.958" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170703 13:44:12.958" starttime="20170703 13:44:12.954"></status>
</kw>
<msg timestamp="20170703 13:44:12.959" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:44:12.959" starttime="20170703 13:44:12.939"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:44:12.960" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:44:12.960" starttime="20170703 13:44:12.959"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:12.960" starttime="20170703 13:44:12.960"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:44:12.961" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170703 13:44:12.961" starttime="20170703 13:44:12.961"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:44:12.968" level="INFO">${freq} = 26050.0</msg>
<status status="PASS" endtime="20170703 13:44:12.968" starttime="20170703 13:44:12.962"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:44:12.968" level="INFO">${fq} = 26050</msg>
<status status="PASS" endtime="20170703 13:44:12.968" starttime="20170703 13:44:12.968"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:44:12.969" level="INFO">${freqency} = 26050</msg>
<status status="PASS" endtime="20170703 13:44:12.969" starttime="20170703 13:44:12.969"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:12.970" starttime="20170703 13:44:12.969"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:12.970" starttime="20170703 13:44:12.937"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:44:12.971" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170703 13:44:12.971" starttime="20170703 13:44:12.970"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:12.972" starttime="20170703 13:44:12.971"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:44:12.974" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:12.977" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:44:12.977" starttime="20170703 13:44:12.973"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:44:12.977" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:44:12.978" starttime="20170703 13:44:12.977"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:12.980" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:44:12.980" starttime="20170703 13:44:12.979"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:12.986" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:12.986" starttime="20170703 13:44:12.980"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:12.987" starttime="20170703 13:44:12.986"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:12.987" starttime="20170703 13:44:12.979"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:12.988" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:44:12.988" starttime="20170703 13:44:12.987"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:12.992" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:12.992" starttime="20170703 13:44:12.988"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:12.992" starttime="20170703 13:44:12.992"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:12.993" starttime="20170703 13:44:12.987"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:12.995" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:44:12.995" starttime="20170703 13:44:12.995"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:12.999" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:12.999" starttime="20170703 13:44:12.996"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.000" starttime="20170703 13:44:13.000"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.000" starttime="20170703 13:44:12.994"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.001" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.001" starttime="20170703 13:44:13.000"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.007" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.007" starttime="20170703 13:44:13.001"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.007" starttime="20170703 13:44:13.007"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.007" starttime="20170703 13:44:13.000"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.008" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.008" starttime="20170703 13:44:13.008"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.014" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:44:13.014" starttime="20170703 13:44:13.009"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:44:13.015" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:44:13.015" starttime="20170703 13:44:13.015"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.015" starttime="20170703 13:44:13.007"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.016" starttime="20170703 13:44:12.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.019" starttime="20170703 13:44:13.016"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:44:13.023" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:44:13.023" starttime="20170703 13:44:13.019"></status>
</kw>
<msg timestamp="20170703 13:44:13.024" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:44:13.024" starttime="20170703 13:44:12.972"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:44:13.026" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:44:13.026" starttime="20170703 13:44:13.026"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.027" starttime="20170703 13:44:13.027"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:44:13.028" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:44:13.028" starttime="20170703 13:44:13.027"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:44:13.031" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170703 13:44:13.031" starttime="20170703 13:44:13.028"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:44:13.032" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170703 13:44:13.032" starttime="20170703 13:44:13.032"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:44:13.033" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170703 13:44:13.033" starttime="20170703 13:44:13.032"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.033" starttime="20170703 13:44:13.033"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.033" starttime="20170703 13:44:12.970"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:44:13.036" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170703 13:44:13.036" starttime="20170703 13:44:13.034"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.038" starttime="20170703 13:44:13.038"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:44:13.039" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:13.041" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:44:13.041" starttime="20170703 13:44:13.039"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:44:13.042" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.042" starttime="20170703 13:44:13.041"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.043" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.043" starttime="20170703 13:44:13.042"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.049" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.049" starttime="20170703 13:44:13.043"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.050" starttime="20170703 13:44:13.050"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.050" starttime="20170703 13:44:13.042"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.051" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.051" starttime="20170703 13:44:13.050"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.057" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.057" starttime="20170703 13:44:13.051"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.057" starttime="20170703 13:44:13.057"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.057" starttime="20170703 13:44:13.050"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.058" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.058" starttime="20170703 13:44:13.058"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.062" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.062" starttime="20170703 13:44:13.059"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.063" starttime="20170703 13:44:13.062"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.063" starttime="20170703 13:44:13.057"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.064" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.064" starttime="20170703 13:44:13.063"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.070" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.070" starttime="20170703 13:44:13.064"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.070" starttime="20170703 13:44:13.070"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.070" starttime="20170703 13:44:13.063"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.071" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.071" starttime="20170703 13:44:13.071"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.076" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:44:13.076" starttime="20170703 13:44:13.072"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:44:13.077" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:44:13.077" starttime="20170703 13:44:13.076"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.077" starttime="20170703 13:44:13.070"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.077" starttime="20170703 13:44:13.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.081" starttime="20170703 13:44:13.077"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:44:13.085" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:44:13.085" starttime="20170703 13:44:13.082"></status>
</kw>
<msg timestamp="20170703 13:44:13.086" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:44:13.086" starttime="20170703 13:44:13.038"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:44:13.087" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:44:13.087" starttime="20170703 13:44:13.087"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.088" starttime="20170703 13:44:13.088"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:44:13.089" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:44:13.089" starttime="20170703 13:44:13.088"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:44:13.093" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170703 13:44:13.093" starttime="20170703 13:44:13.089"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:44:13.094" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170703 13:44:13.094" starttime="20170703 13:44:13.093"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:44:13.094" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170703 13:44:13.095" starttime="20170703 13:44:13.094"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.095" starttime="20170703 13:44:13.095"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.095" starttime="20170703 13:44:13.033"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:44:13.097" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170703 13:44:13.097" starttime="20170703 13:44:13.096"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.098" starttime="20170703 13:44:13.097"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:44:13.099" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:13.101" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:44:13.101" starttime="20170703 13:44:13.099"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:44:13.102" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.102" starttime="20170703 13:44:13.101"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.103" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.103" starttime="20170703 13:44:13.102"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.108" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.108" starttime="20170703 13:44:13.103"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.109" starttime="20170703 13:44:13.109"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.109" starttime="20170703 13:44:13.102"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.110" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.110" starttime="20170703 13:44:13.109"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.114" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.114" starttime="20170703 13:44:13.110"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.114" starttime="20170703 13:44:13.114"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.115" starttime="20170703 13:44:13.109"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.115" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.115" starttime="20170703 13:44:13.115"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.121" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.121" starttime="20170703 13:44:13.116"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.121" starttime="20170703 13:44:13.121"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.122" starttime="20170703 13:44:13.115"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.123" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.123" starttime="20170703 13:44:13.122"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.127" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.127" starttime="20170703 13:44:13.123"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.129" starttime="20170703 13:44:13.128"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.129" starttime="20170703 13:44:13.122"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.130" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.130" starttime="20170703 13:44:13.129"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.134" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:44:13.134" starttime="20170703 13:44:13.130"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:44:13.134" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:44:13.134" starttime="20170703 13:44:13.134"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.134" starttime="20170703 13:44:13.129"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.134" starttime="20170703 13:44:13.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.140" starttime="20170703 13:44:13.135"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:44:13.143" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:44:13.143" starttime="20170703 13:44:13.140"></status>
</kw>
<msg timestamp="20170703 13:44:13.143" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:44:13.143" starttime="20170703 13:44:13.098"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:44:13.144" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:44:13.144" starttime="20170703 13:44:13.144"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.145" starttime="20170703 13:44:13.145"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:44:13.146" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:44:13.146" starttime="20170703 13:44:13.145"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:44:13.152" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170703 13:44:13.152" starttime="20170703 13:44:13.146"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:44:13.152" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170703 13:44:13.152" starttime="20170703 13:44:13.152"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:44:13.153" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170703 13:44:13.153" starttime="20170703 13:44:13.153"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.154" starttime="20170703 13:44:13.153"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.154" starttime="20170703 13:44:13.095"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:44:13.155" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170703 13:44:13.155" starttime="20170703 13:44:13.154"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.155" starttime="20170703 13:44:13.155"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:44:13.157" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:13.158" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:44:13.158" starttime="20170703 13:44:13.156"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:44:13.159" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.159" starttime="20170703 13:44:13.159"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.160" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.160" starttime="20170703 13:44:13.160"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.164" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.165" starttime="20170703 13:44:13.161"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.165" starttime="20170703 13:44:13.165"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.165" starttime="20170703 13:44:13.159"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.166" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.166" starttime="20170703 13:44:13.165"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.171" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.171" starttime="20170703 13:44:13.166"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.171" starttime="20170703 13:44:13.171"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.171" starttime="20170703 13:44:13.165"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.172" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.172" starttime="20170703 13:44:13.172"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.176" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.176" starttime="20170703 13:44:13.172"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.177" starttime="20170703 13:44:13.176"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.177" starttime="20170703 13:44:13.171"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.178" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.178" starttime="20170703 13:44:13.177"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.182" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:44:13.182" starttime="20170703 13:44:13.179"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.183" starttime="20170703 13:44:13.182"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.183" starttime="20170703 13:44:13.177"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:44:13.184" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:44:13.184" starttime="20170703 13:44:13.183"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:44:13.188" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:44:13.188" starttime="20170703 13:44:13.184"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:44:13.189" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:44:13.189" starttime="20170703 13:44:13.189"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.189" starttime="20170703 13:44:13.183"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.189" starttime="20170703 13:44:13.159"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.193" starttime="20170703 13:44:13.189"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:44:13.196" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:44:13.196" starttime="20170703 13:44:13.193"></status>
</kw>
<msg timestamp="20170703 13:44:13.196" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:44:13.196" starttime="20170703 13:44:13.156"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:44:13.197" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:44:13.197" starttime="20170703 13:44:13.197"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.198" starttime="20170703 13:44:13.197"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:44:13.199" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:44:13.199" starttime="20170703 13:44:13.199"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:44:13.203" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170703 13:44:13.203" starttime="20170703 13:44:13.200"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:44:13.204" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170703 13:44:13.204" starttime="20170703 13:44:13.204"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:44:13.205" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170703 13:44:13.205" starttime="20170703 13:44:13.204"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.205" starttime="20170703 13:44:13.205"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.205" starttime="20170703 13:44:13.154"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.205" starttime="20170703 13:44:12.906"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.206" starttime="20170703 13:44:12.811"></status>
</kw>
<msg timestamp="20170703 13:44:13.206" level="INFO">${earfcn_list2} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<msg timestamp="20170703 13:44:13.206" level="INFO">${freqency_list2} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<msg timestamp="20170703 13:44:13.206" level="INFO">${band_list2} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170703 13:44:13.206" starttime="20170703 13:44:12.806"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${earfcn_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<assign>
<var>${earfcn_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.214" starttime="20170703 13:44:13.211"></status>
</kw>
<msg timestamp="20170703 13:44:13.214" level="INFO">${earfcn_list} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<status status="PASS" endtime="20170703 13:44:13.214" starttime="20170703 13:44:13.206"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${freqency_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<assign>
<var>${freqency_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.222" starttime="20170703 13:44:13.218"></status>
</kw>
<msg timestamp="20170703 13:44:13.222" level="INFO">${freqency_list} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<status status="PASS" endtime="20170703 13:44:13.222" starttime="20170703 13:44:13.215"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${band_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<assign>
<var>${band_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.230" starttime="20170703 13:44:13.226"></status>
</kw>
<msg timestamp="20170703 13:44:13.230" level="INFO">${band_list} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170703 13:44:13.230" starttime="20170703 13:44:13.223"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170703 13:44:13.231" level="INFO">${cell_index1} = 0</msg>
<status status="PASS" endtime="20170703 13:44:13.231" starttime="20170703 13:44:13.230"></status>
</kw>
<kw type="for" name="${cell_index2} IN [ @{cell_list} ]">
<kw type="foritem" name="${cell_index2} = 1">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.238" starttime="20170703 13:44:13.235"></status>
</kw>
<msg timestamp="20170703 13:44:13.238" level="INFO">${cell_index} = 0</msg>
<status status="PASS" endtime="20170703 13:44:13.238" starttime="20170703 13:44:13.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.246" starttime="20170703 13:44:13.243"></status>
</kw>
<status status="PASS" endtime="20170703 13:44:13.246" starttime="20170703 13:44:13.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:44:13.251" starttime="20170703 13:44:13.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="TM500_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20170703 13:45:39.678" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:45:39.678" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.678" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.678" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20170703 13:45:39.678" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<msg timestamp="20170703 13:45:39.678" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.678" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8277 -s True</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8277 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 2444.

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[process_control.py@74] Process start successed ! process id: 2444</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8277</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 1 user queue.

"</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[tm500.py@412] Get TM500 resource success!</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"
FileZilla Server Interface.exe
FileZilla Server Interface.xml
FileZilla Server.xml
FileZilla server.exe
FzGSS.dll
Uninstall.exe
legal.htm
libeay32.dll
license.txt
readme.htm
ssleay32.dll

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"'</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<msg timestamp="20170703 13:45:39.679" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@591] Prev msg:</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1728] TM500 command to be sent: GSTS</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1728] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1728] TM500 command to be sent: GETR</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1728] TM500 command to be sent: STRT</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20170703 13:45:39.680" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<status status="PASS" endtime="20170703 13:45:39.683" starttime="20170703 13:44:13.257"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20170703 13:45:39.684" level="INFO">${TM500_Use_Tag} = used</msg>
<status status="PASS" endtime="20170703 13:45:39.684" starttime="20170703 13:45:39.684"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170703 13:45:43.732" level="INFO">$TA,C,020A*</msg>
<msg timestamp="20170703 13:45:43.732" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,020A*', Receive&lt;-'$TA,C,020A*'</msg>
<msg timestamp="20170703 13:45:43.732" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,020A*'
$TA,C,060A*</msg>
<msg timestamp="20170703 13:45:43.732" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,060A*', Receive&lt;-'$TA,C,060A*'</msg>
<msg timestamp="20170703 13:45:43.732" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,060A*'</msg>
<status status="PASS" endtime="20170703 13:45:43.732" starttime="20170703 13:45:39.685"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: GVER</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@507] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20170703 13:45:46.190" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20170703 13:45:46.192" starttime="20170703 13:45:43.733"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20170703 13:45:46.818" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20170703 13:45:46.818" level="INFO">[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170703_134505_session/170703_134555'</msg>
<msg timestamp="20170703 13:45:46.818" level="INFO">[tm500.py@1352] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170703_134505_session/170703_134555'</msg>
<msg timestamp="20170703 13:45:46.818" level="INFO">[tm500.py@1363] C:\TM500_LOG\170703_134505_session\170703_134555</msg>
<status status="PASS" endtime="20170703 13:45:46.819" starttime="20170703 13:45:46.192"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${modify_tm500_script}</var>
</assign>
<msg timestamp="20170703 13:45:46.820" level="INFO">${modify_tm500_script} = []</msg>
<status status="PASS" endtime="20170703 13:45:46.820" starttime="20170703 13:45:46.819"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${attach_freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:45:46.821" starttime="20170703 13:45:46.820"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_scripts}</arg>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20170703 13:45:58.085" level="INFO">[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 25850</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170703 13:45:58.085" level="INFO">[tm500.py@1673] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x6F46, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
  Selected PLMN: 26203F
  Pdn Id: 0
  EPS Bearer Id: 5
  Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs
  IPv4 Address: 172.170.3.22
  Attach Result: EPS Only
  Mode: PS 2
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0</msg>
<msg timestamp="20170703 13:45:58.086" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20170703 13:45:58.086" starttime="20170703 13:45:46.821"></status>
</kw>
<kw name="Tm500 Start Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword connects TM500 PPPoE connections by their names.</doc>
<msg timestamp="20170703 13:45:59.693" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:45:59.693" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:45:59.693" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500</msg>
<msg timestamp="20170703 13:45:59.693" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<msg timestamp="20170703 13:45:59.693" level="INFO">[tm500.py@1302] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170703_134024_session\170703_134115&gt;</msg>
<status status="PASS" endtime="20170703 13:45:59.693" starttime="20170703 13:45:58.087"></status>
</kw>
<kw name="TM500 Log Stop And Fetch" library="ue_resource">
<doc>TM500: stop logging, convert log to csv format, copy logs to local PC.</doc>
<arguments>
<arg>tm500_attach_log${cell_id}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:45:59.710" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:45:59.710" starttime="20170703 13:45:59.702"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<msg timestamp="20170703 13:45:59.711" html="yes" level="INFO">Directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\tm500_attach_log1"&gt;D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\tm500_attach_log1&lt;/a&gt;' already exists.</msg>
<status status="PASS" endtime="20170703 13:45:59.711" starttime="20170703 13:45:59.710"></status>
</kw>
<kw name="Tm500 Stop Logging" library="tdd_ev_robotws">
<doc>This keyword stops TM500's logging.</doc>
<assign>
<var>${log_folder_path_on_tm500_pc}</var>
</assign>
<msg timestamp="20170703 13:46:00.271" level="INFO">[tm500.py@1376] Prev msg: I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0
  De Id: 8
  EPS Bearer Id: 5
  PDN IP Address String: 172.170.3.22

I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0xB15, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0</msg>
<msg timestamp="20170703 13:46:00.271" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$STOP_LOGGING</msg>
<msg timestamp="20170703 13:46:00.271" level="INFO">[tm500.py@1736] TM500 command reply: C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170703 13:46:00.271" level="INFO">[tm500.py@1387] TM500 command line response of "STOP LOGGING":
C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170703 13:46:00.271" level="INFO">[tm500.py@1391] TM500 stop logging succeeded.</msg>
<msg timestamp="20170703 13:46:00.271" level="INFO">${log_folder_path_on_tm500_pc} = C:\TM500_LOG\170703_134505_session\170703_134555</msg>
<status status="PASS" endtime="20170703 13:46:00.271" starttime="20170703 13:45:59.711"></status>
</kw>
<kw name="Tm500 Convert Log" library="tdd_ev_robotws">
<doc>This keyword converts TM500 log to csv format files.</doc>
<arguments>
<arg>timeout=${log_convertion_timeout}</arg>
</arguments>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1736] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_TO_TEXT 0</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 77%</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 100%

C: CONVERT_TO_TEXT 0x00 ok.</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\170703_134505_session\170703_134555"</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_COMMAND_LOG started</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1487] I: CONVERT_COMMAND_LOG progress= 7%
I: CONVERT_COMMAND_LOG progress= 15%
I: CONVERT_COMMAND_LOG progress= 23%
I: CONVERT_COMMAND_LOG progress= 31%
I: CONVERT_COMMAND_LOG progress= 39%
I: CONVERT_COMMAND_LOG progress= 47%
I: CONVERT_COMMAND_LOG progress= 55%
I: CONVERT_COMMAND_LOG progress= 63%
I: CONVERT_COMMAND_LOG progress= 71%
I: CONVERT_COMMAND_LOG progress= 79%
I: CONVERT_COMMAND_LOG progress= 87%
I: CONVERT_COMMAND_LOG progress= 95%
C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\170703_134505_SESSION\170703_134555\170703_134505_session_command_log.csv</msg>
<msg timestamp="20170703 13:46:10.329" level="INFO">[tm500.py@1492] TM500 convert log succeeded.</msg>
<status status="PASS" endtime="20170703 13:46:10.332" starttime="20170703 13:46:00.272"></status>
</kw>
<kw name="Tm500 Log Fetch" library="ue_resource">
<doc>TM500 Log fetching.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:46:10.345" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<status status="PASS" endtime="20170703 13:46:10.346" starttime="20170703 13:46:10.334"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170703 13:46:10.346" starttime="20170703 13:46:10.346"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cd /D "${log_folder_path_on_tm500_pc}"</arg>
</arguments>
<msg timestamp="20170703 13:46:11.662" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:46:11.662" level="INFO">[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\170703_134505_session\170703_134555"</msg>
<msg timestamp="20170703 13:46:11.662" level="INFO">[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\170703_134505_session\170703_134555"

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<status status="PASS" endtime="20170703 13:46:11.662" starttime="20170703 13:46:10.346"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cp ../*ommand*og*.txt session_command_log.txt</arg>
</arguments>
<msg timestamp="20170703 13:46:12.977" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:46:12.978" level="INFO">[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt</msg>
<msg timestamp="20170703 13:46:12.978" level="INFO">[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt
cp: cannot stat `../*ommand*og*.txt': No such file or directory

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<status status="PASS" endtime="20170703 13:46:12.978" starttime="20170703 13:46:11.662"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>chmod 777 -R *</arg>
</arguments>
<msg timestamp="20170703 13:46:14.209" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:46:14.209" level="INFO">[telnet_common.py@276] Execute command: chmod 777 -R *</msg>
<msg timestamp="20170703 13:46:14.209" level="INFO">[telnet_common.py@306] Get Response: chmod 777 -R *

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<status status="PASS" endtime="20170703 13:46:14.209" starttime="20170703 13:46:12.978"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zcvf tm500_log.tar *.*</arg>
</arguments>
<status status="PASS" endtime="20170703 13:46:14.210" starttime="20170703 13:46:14.210"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>:\\</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${driver_log_folder}</var>
</assign>
<msg timestamp="20170703 13:46:14.211" level="INFO">${driver_log_folder} = [u'C', u'TM500_LOG\\170703_134505_session\\170703_134555']</msg>
<status status="PASS" endtime="20170703 13:46:14.211" starttime="20170703 13:46:14.210"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${TM500_PC_INFO.IP}</arg>
<arg>21</arg>
<arg>TA_LOG</arg>
<arg>${None}</arg>
<arg>${log_folder_path_on_local_pc}</arg>
<arg>ALL</arg>
<arg>${driver_log_folder[1]}</arg>
</arguments>
<msg timestamp="20170703 13:46:14.562" level="INFO">[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.</msg>
<msg timestamp="20170703 13:46:14.562" level="INFO">[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta
220-written by Tim Kosse (Tim.Kosse@gmx.de)
220 Please visit http://sourceforge.net/projects/filezilla/</msg>
<status status="PASS" endtime="20170703 13:46:14.563" starttime="20170703 13:46:14.211"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:46:14.571" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:46:14.572" starttime="20170703 13:46:14.563"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>cd /D "${log_folder_path_on_local_pc}"</arg>
</arguments>
<status status="PASS" endtime="20170703 13:46:14.572" starttime="20170703 13:46:14.572"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170703 13:46:14.572" starttime="20170703 13:46:14.572"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>chmod 777 -R *</arg>
</arguments>
<status status="PASS" endtime="20170703 13:46:14.573" starttime="20170703 13:46:14.573"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${unzip_result}</arg>
<arg>Run keyword and ignore error</arg>
<arg>Unzip file</arg>
<arg>tm500_log.tar</arg>
<arg>${log_folder_path_on_local_pc}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:46:14.574" starttime="20170703 13:46:14.573"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword if</arg>
<arg>'${unzip_result[0]}' == 'FAIL'</arg>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170703 13:46:14.574" starttime="20170703 13:46:14.574"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>remove file</arg>
<arg>${log_folder_path_on_local_pc}/tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170703 13:46:14.574" starttime="20170703 13:46:14.574"></status>
</kw>
<status status="PASS" endtime="20170703 13:46:14.575" starttime="20170703 13:46:10.333"></status>
</kw>
<status status="PASS" endtime="20170703 13:46:14.575" starttime="20170703 13:45:59.701"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ue_attach_ip}</arg>
<arg>${tm500_attach_result.UE0}</arg>
</arguments>
<msg timestamp="20170703 13:46:14.576" level="INFO">${ue_attach_ip} = 172.170.3.22</msg>
<status status="PASS" endtime="20170703 13:46:14.576" starttime="20170703 13:46:14.575"></status>
</kw>
<status status="PASS" endtime="20170703 13:46:14.576" starttime="20170703 13:44:13.255"></status>
</kw>
<status status="PASS" endtime="20170703 13:46:14.576" starttime="20170703 13:44:13.252"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:46:14.580" starttime="20170703 13:46:14.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="TM500_Detach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:46:14.596" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:46:14.596" starttime="20170703 13:46:14.588"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170703 13:46:15.917" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:46:15.917" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170703 13:46:15.917" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170703 13:46:15.917" starttime="20170703 13:46:14.597"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:46:15.930" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<status status="PASS" endtime="20170703 13:46:15.930" starttime="20170703 13:46:15.918"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170703 13:46:17.270" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:46:17.270" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170703 13:46:17.270" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<status status="PASS" endtime="20170703 13:46:17.270" starttime="20170703 13:46:15.931"></status>
</kw>
<kw name="Tm500 Stop Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword disconnects TM500 PPPoE connection by PPPoE name.</doc>
<msg timestamp="20170703 13:46:18.624" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:46:18.624" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:46:18.624" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT</msg>
<msg timestamp="20170703 13:46:18.624" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<msg timestamp="20170703 13:46:18.624" level="INFO">[tm500.py@1321] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<status status="PASS" endtime="20170703 13:46:18.625" starttime="20170703 13:46:17.270"></status>
</kw>
<kw name="Tm500 Detach" library="tdd_ev_robotws">
<doc>This keyword does UE detach operation of TM500.</doc>
<msg timestamp="20170703 13:46:18.902" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170703 13:46:18.902" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0

I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]
I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable</msg>
<msg timestamp="20170703 13:46:18.902" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte NasConfigEmmDeregister 0</msg>
<msg timestamp="20170703 13:46:18.902" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:46:18.902" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170703 13:46:18.902" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170703 13:46:18.902" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte Activate -1</msg>
<msg timestamp="20170703 13:46:18.902" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<status status="PASS" endtime="20170703 13:46:18.903" starttime="20170703 13:46:18.625"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:46:18.912" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:46:18.912" starttime="20170703 13:46:18.903"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170703 13:46:22.952" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170703 13:46:22.952" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170703 13:46:22.952" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170703 13:46:22.952" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170703 13:46:22.952" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170703 13:46:22.952" starttime="20170703 13:46:18.912"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170703 13:46:40.065" level="INFO">[tm500.py@591] Prev msg: I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0xA6E4, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0
    Detach Cause: UE Initiated 

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Acceptable</msg>
<msg timestamp="20170703 13:46:40.065" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170703 13:46:40.065" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170703 13:46:40.065" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8277 stopping</msg>
<status status="PASS" endtime="20170703 13:46:40.065" starttime="20170703 13:46:22.952"></status>
</kw>
<status status="PASS" endtime="20170703 13:46:40.065" starttime="20170703 13:46:14.587"></status>
</kw>
<status status="PASS" endtime="20170703 13:46:40.066" starttime="20170703 13:46:14.584"></status>
</kw>
<status status="PASS" endtime="20170703 13:46:40.066" starttime="20170703 13:46:14.580"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index1}+1</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170703 13:46:40.069" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170703 13:46:40.069" starttime="20170703 13:46:40.066"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${cell_index1}</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170703 13:46:40.070" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170703 13:46:40.070" starttime="20170703 13:46:40.070"></status>
</kw>
<status status="PASS" endtime="20170703 13:46:40.070" starttime="20170703 13:44:13.231"></status>
</kw>
<status status="PASS" endtime="20170703 13:46:40.070" starttime="20170703 13:44:13.231"></status>
</kw>
<status status="PASS" endtime="20170703 13:46:40.070" starttime="20170703 13:44:12.795"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:46:40.075" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:46:40.075" starttime="20170703 13:46:40.071"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${block_cell_index}</arg>
<arg>Unblock</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170703 13:46:40.078" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=2', u'HWAction=Unblock', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170703132353\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170703132356\\FZHR_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170703 13:46:40.078" starttime="20170703 13:46:40.078"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170703 13:46:54.698" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="2"
HWAction="Unblock"
LogPath="D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170703134640\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170703 13:46:54.698" starttime="20170703 13:46:40.079"></status>
</kw>
<status status="PASS" endtime="20170703 13:46:54.698" starttime="20170703 13:46:40.077"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5 sec</arg>
</arguments>
<msg timestamp="20170703 13:46:59.699" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170703 13:46:59.699" starttime="20170703 13:46:54.699"></status>
</kw>
<kw name="GUI SM Check BTS HW Status" library="gui_resource">
<doc>This keyword is used to check the status on BTS Hardware panel.</doc>
<arguments>
<arg>AllCell</arg>
<arg>Operational state=Enabled;;Working state=Working</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>CompName=${CompName}</arg>
<arg>CheckField=${CheckField}</arg>
<arg>WaitTime=${WaitTime}</arg>
<arg>CheckSameFlag=${CheckSameFlag}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170703 13:46:59.701" level="INFO">${para_list} = [u'CompName=AllCell', u'CheckField=Operational state=Enabled;;Working state=Working', u'WaitTime=0', u'CheckSameFlag=1', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170703132353\\ev_logs\\FZHR_Operational_Ce...</msg>
<status status="PASS" endtime="20170703 13:46:59.701" starttime="20170703 13:46:59.701"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:46:59.702" starttime="20170703 13:46:59.702"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170703 13:47:08.209" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
CompName="AllCell"
CheckField="Operational state=Enabled;;Working state=Working"
WaitTime="0"
CheckSameFlag="1"
LogPath="D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170703134659\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170703 13:47:08.209" starttime="20170703 13:46:59.702"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.209" starttime="20170703 13:46:59.700"></status>
</kw>
<kw name="UE_Attach_SISO1" library="SISO1 Resource">
<doc>Example</doc>
<arguments>
<arg>${block_cell_index}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cell_id}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{cell_list}</var>
</assign>
<msg timestamp="20170703 13:47:08.214" level="INFO">@{cell_list} = [ 2 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.214" starttime="20170703 13:47:08.214"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${cell_list}</arg>
</arguments>
<assign>
<var>${cell_list_length}</var>
</assign>
<msg timestamp="20170703 13:47:08.215" level="INFO">Length is 1</msg>
<msg timestamp="20170703 13:47:08.215" level="INFO">${cell_list_length} = 1</msg>
<status status="PASS" endtime="20170703 13:47:08.215" starttime="20170703 13:47:08.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Split String</arg>
<arg>${attach_earfcn}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${earfcn_list1}</var>
</assign>
<msg timestamp="20170703 13:47:08.220" level="INFO">${earfcn_list1} = None</msg>
<status status="PASS" endtime="20170703 13:47:08.220" starttime="20170703 13:47:08.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Change_Earfcn_To_Freqency</arg>
<arg>${earfcn_list1}</arg>
</arguments>
<assign>
<var>${freqency_list1}</var>
<var>${band_list1}</var>
</assign>
<msg timestamp="20170703 13:47:08.223" level="INFO">${freqency_list1} = None</msg>
<msg timestamp="20170703 13:47:08.223" level="INFO">${band_list1} = None</msg>
<status status="PASS" endtime="20170703 13:47:08.223" starttime="20170703 13:47:08.220"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Get_Earfcn_From_Infomodel</arg>
</arguments>
<assign>
<var>${earfcn_list2}</var>
<var>${freqency_list2}</var>
<var>${band_list2}</var>
</assign>
<kw name="Get_Earfcn_From_Infomodel" library="SISO1 Resource">
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1</arg>
</arguments>
<assign>
<var>@{ret_earfcn}</var>
</assign>
<msg timestamp="20170703 13:47:08.319" level="INFO">[infomodel_control.py@327] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .</msg>
<msg timestamp="20170703 13:47:08.319" level="INFO">@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u's...</msg>
<status status="PASS" endtime="20170703 13:47:08.319" starttime="20170703 13:47:08.229"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${ret_earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.320" starttime="20170703 13:47:08.319"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${earfcn_list}</var>
</assign>
<msg timestamp="20170703 13:47:08.321" level="INFO">${earfcn_list} = []</msg>
<status status="PASS" endtime="20170703 13:47:08.321" starttime="20170703 13:47:08.321"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${freqency_list}</var>
</assign>
<msg timestamp="20170703 13:47:08.322" level="INFO">${freqency_list} = []</msg>
<status status="PASS" endtime="20170703 13:47:08.322" starttime="20170703 13:47:08.321"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${band_list}</var>
</assign>
<msg timestamp="20170703 13:47:08.322" level="INFO">${band_list} = []</msg>
<status status="PASS" endtime="20170703 13:47:08.322" starttime="20170703 13:47:08.322"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_OFFSET}</arg>
</arguments>
<assign>
<var>${offset_dict}</var>
</assign>
<msg timestamp="20170703 13:47:08.323" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.325" level="INFO">${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}</msg>
<status status="PASS" endtime="20170703 13:47:08.325" starttime="20170703 13:47:08.323"></status>
</kw>
<kw type="for" name="${index} IN [ @{ret_earfcn} ]">
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1: {u'fcnULs': [37900L], u'fcnDLs': [37900L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:47:08.326" level="INFO">${index.earfcn} = 37900</msg>
<status status="PASS" endtime="20170703 13:47:08.326" starttime="20170703 13:47:08.325"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.327" starttime="20170703 13:47:08.326"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:47:08.328" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.330" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:47:08.330" starttime="20170703 13:47:08.328"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:47:08.331" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.331" starttime="20170703 13:47:08.330"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.332" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.332" starttime="20170703 13:47:08.332"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.336" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:47:08.336" starttime="20170703 13:47:08.333"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:47:08.337" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:47:08.337" starttime="20170703 13:47:08.336"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.337" starttime="20170703 13:47:08.331"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.337" starttime="20170703 13:47:08.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.341" starttime="20170703 13:47:08.337"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:47:08.345" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170703 13:47:08.345" starttime="20170703 13:47:08.341"></status>
</kw>
<msg timestamp="20170703 13:47:08.345" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:47:08.345" starttime="20170703 13:47:08.327"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:47:08.346" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:47:08.346" starttime="20170703 13:47:08.345"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.347" starttime="20170703 13:47:08.346"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:47:08.347" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170703 13:47:08.348" starttime="20170703 13:47:08.347"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:47:08.352" level="INFO">${freq} = 25850.0</msg>
<status status="PASS" endtime="20170703 13:47:08.352" starttime="20170703 13:47:08.348"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:47:08.353" level="INFO">${fq} = 25850</msg>
<status status="PASS" endtime="20170703 13:47:08.353" starttime="20170703 13:47:08.352"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:47:08.353" level="INFO">${freqency} = 25850</msg>
<status status="PASS" endtime="20170703 13:47:08.353" starttime="20170703 13:47:08.353"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.354" starttime="20170703 13:47:08.354"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.354" starttime="20170703 13:47:08.325"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:47:08.355" level="INFO">${index.earfcn} = 38100</msg>
<status status="PASS" endtime="20170703 13:47:08.355" starttime="20170703 13:47:08.355"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.356" starttime="20170703 13:47:08.355"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:47:08.357" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.358" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:47:08.358" starttime="20170703 13:47:08.357"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:47:08.359" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.359" starttime="20170703 13:47:08.359"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.362" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.363" starttime="20170703 13:47:08.361"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.367" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:47:08.367" starttime="20170703 13:47:08.364"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:47:08.368" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:47:08.368" starttime="20170703 13:47:08.367"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.368" starttime="20170703 13:47:08.360"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.368" starttime="20170703 13:47:08.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.372" starttime="20170703 13:47:08.368"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:47:08.376" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170703 13:47:08.376" starttime="20170703 13:47:08.372"></status>
</kw>
<msg timestamp="20170703 13:47:08.376" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:47:08.376" starttime="20170703 13:47:08.356"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:47:08.377" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170703 13:47:08.377" starttime="20170703 13:47:08.376"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.377" starttime="20170703 13:47:08.377"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:47:08.378" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170703 13:47:08.378" starttime="20170703 13:47:08.377"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:47:08.383" level="INFO">${freq} = 26050.0</msg>
<status status="PASS" endtime="20170703 13:47:08.384" starttime="20170703 13:47:08.378"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:47:08.384" level="INFO">${fq} = 26050</msg>
<status status="PASS" endtime="20170703 13:47:08.384" starttime="20170703 13:47:08.384"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:47:08.385" level="INFO">${freqency} = 26050</msg>
<status status="PASS" endtime="20170703 13:47:08.385" starttime="20170703 13:47:08.385"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.386" starttime="20170703 13:47:08.385"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.386" starttime="20170703 13:47:08.354"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:47:08.386" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170703 13:47:08.387" starttime="20170703 13:47:08.386"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.387" starttime="20170703 13:47:08.387"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:47:08.388" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.390" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:47:08.390" starttime="20170703 13:47:08.388"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:47:08.391" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.391" starttime="20170703 13:47:08.390"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.393" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.393" starttime="20170703 13:47:08.392"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.397" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.397" starttime="20170703 13:47:08.393"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.397" starttime="20170703 13:47:08.397"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.397" starttime="20170703 13:47:08.391"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.398" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.398" starttime="20170703 13:47:08.398"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.403" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.403" starttime="20170703 13:47:08.398"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.403" starttime="20170703 13:47:08.403"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.403" starttime="20170703 13:47:08.397"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.404" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.404" starttime="20170703 13:47:08.404"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.408" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.408" starttime="20170703 13:47:08.405"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.409" starttime="20170703 13:47:08.409"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.409" starttime="20170703 13:47:08.404"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.410" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.410" starttime="20170703 13:47:08.409"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.415" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.415" starttime="20170703 13:47:08.410"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.416" starttime="20170703 13:47:08.415"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.416" starttime="20170703 13:47:08.409"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.417" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.417" starttime="20170703 13:47:08.416"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.421" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:47:08.421" starttime="20170703 13:47:08.417"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:47:08.421" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:47:08.422" starttime="20170703 13:47:08.421"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.422" starttime="20170703 13:47:08.416"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.422" starttime="20170703 13:47:08.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.426" starttime="20170703 13:47:08.423"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:47:08.429" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:47:08.429" starttime="20170703 13:47:08.426"></status>
</kw>
<msg timestamp="20170703 13:47:08.429" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:47:08.429" starttime="20170703 13:47:08.387"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:47:08.430" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:47:08.430" starttime="20170703 13:47:08.430"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.431" starttime="20170703 13:47:08.430"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:47:08.432" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:47:08.432" starttime="20170703 13:47:08.431"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:47:08.436" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170703 13:47:08.436" starttime="20170703 13:47:08.433"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:47:08.437" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170703 13:47:08.437" starttime="20170703 13:47:08.436"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:47:08.437" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170703 13:47:08.438" starttime="20170703 13:47:08.437"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.438" starttime="20170703 13:47:08.438"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.438" starttime="20170703 13:47:08.386"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:47:08.439" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170703 13:47:08.439" starttime="20170703 13:47:08.439"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.440" starttime="20170703 13:47:08.439"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:47:08.441" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.443" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:47:08.443" starttime="20170703 13:47:08.441"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:47:08.444" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.444" starttime="20170703 13:47:08.443"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.445" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.445" starttime="20170703 13:47:08.444"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.449" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.449" starttime="20170703 13:47:08.445"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.449" starttime="20170703 13:47:08.449"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.449" starttime="20170703 13:47:08.444"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.450" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.450" starttime="20170703 13:47:08.450"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.455" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.455" starttime="20170703 13:47:08.450"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.456" starttime="20170703 13:47:08.456"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.456" starttime="20170703 13:47:08.449"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.457" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.457" starttime="20170703 13:47:08.456"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.461" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.461" starttime="20170703 13:47:08.457"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.461" starttime="20170703 13:47:08.461"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.462" starttime="20170703 13:47:08.456"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.464" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.464" starttime="20170703 13:47:08.462"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.468" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.468" starttime="20170703 13:47:08.465"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.469" starttime="20170703 13:47:08.468"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.469" starttime="20170703 13:47:08.462"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.470" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.470" starttime="20170703 13:47:08.469"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.475" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:47:08.475" starttime="20170703 13:47:08.470"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:47:08.476" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:47:08.476" starttime="20170703 13:47:08.475"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.476" starttime="20170703 13:47:08.469"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.476" starttime="20170703 13:47:08.444"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.480" starttime="20170703 13:47:08.477"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:47:08.485" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:47:08.485" starttime="20170703 13:47:08.480"></status>
</kw>
<msg timestamp="20170703 13:47:08.485" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:47:08.485" starttime="20170703 13:47:08.440"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:47:08.486" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:47:08.486" starttime="20170703 13:47:08.485"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.486" starttime="20170703 13:47:08.486"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:47:08.487" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:47:08.487" starttime="20170703 13:47:08.487"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:47:08.491" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170703 13:47:08.491" starttime="20170703 13:47:08.487"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:47:08.491" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170703 13:47:08.492" starttime="20170703 13:47:08.491"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:47:08.492" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170703 13:47:08.492" starttime="20170703 13:47:08.492"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.493" starttime="20170703 13:47:08.492"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.493" starttime="20170703 13:47:08.438"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:47:08.495" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170703 13:47:08.495" starttime="20170703 13:47:08.494"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.495" starttime="20170703 13:47:08.495"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:47:08.496" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.498" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:47:08.498" starttime="20170703 13:47:08.496"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:47:08.499" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.499" starttime="20170703 13:47:08.498"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.500" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.500" starttime="20170703 13:47:08.499"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.504" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.504" starttime="20170703 13:47:08.500"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.505" starttime="20170703 13:47:08.505"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.505" starttime="20170703 13:47:08.499"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.506" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.506" starttime="20170703 13:47:08.505"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.510" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.510" starttime="20170703 13:47:08.506"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.510" starttime="20170703 13:47:08.510"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.510" starttime="20170703 13:47:08.505"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.511" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.511" starttime="20170703 13:47:08.511"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.516" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.516" starttime="20170703 13:47:08.512"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.517" starttime="20170703 13:47:08.516"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.517" starttime="20170703 13:47:08.510"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.518" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.518" starttime="20170703 13:47:08.517"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.522" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.522" starttime="20170703 13:47:08.518"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.522" starttime="20170703 13:47:08.522"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.522" starttime="20170703 13:47:08.517"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.524" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.524" starttime="20170703 13:47:08.523"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.528" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:47:08.528" starttime="20170703 13:47:08.524"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:47:08.529" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:47:08.529" starttime="20170703 13:47:08.529"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.529" starttime="20170703 13:47:08.522"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.529" starttime="20170703 13:47:08.499"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.533" starttime="20170703 13:47:08.529"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:47:08.537" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:47:08.537" starttime="20170703 13:47:08.533"></status>
</kw>
<msg timestamp="20170703 13:47:08.537" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:47:08.538" starttime="20170703 13:47:08.496"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:47:08.538" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:47:08.538" starttime="20170703 13:47:08.538"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.539" starttime="20170703 13:47:08.539"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:47:08.540" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:47:08.540" starttime="20170703 13:47:08.539"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:47:08.544" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170703 13:47:08.544" starttime="20170703 13:47:08.540"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:47:08.545" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170703 13:47:08.545" starttime="20170703 13:47:08.545"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:47:08.546" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170703 13:47:08.546" starttime="20170703 13:47:08.545"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.546" starttime="20170703 13:47:08.546"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.546" starttime="20170703 13:47:08.494"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170703 13:47:08.547" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170703 13:47:08.547" starttime="20170703 13:47:08.547"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.548" starttime="20170703 13:47:08.548"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170703 13:47:08.549" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.551" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170703 13:47:08.551" starttime="20170703 13:47:08.549"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170703 13:47:08.551" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.551" starttime="20170703 13:47:08.551"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.552" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.553" starttime="20170703 13:47:08.552"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.557" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.557" starttime="20170703 13:47:08.553"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.558" starttime="20170703 13:47:08.557"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.558" starttime="20170703 13:47:08.552"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.559" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.559" starttime="20170703 13:47:08.558"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.562" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.562" starttime="20170703 13:47:08.559"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.563" starttime="20170703 13:47:08.563"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.563" starttime="20170703 13:47:08.558"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.565" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.565" starttime="20170703 13:47:08.564"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.569" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.569" starttime="20170703 13:47:08.565"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.569" starttime="20170703 13:47:08.569"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.569" starttime="20170703 13:47:08.563"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.570" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.570" starttime="20170703 13:47:08.570"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.575" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170703 13:47:08.575" starttime="20170703 13:47:08.571"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.576" starttime="20170703 13:47:08.575"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.576" starttime="20170703 13:47:08.570"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170703 13:47:08.577" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170703 13:47:08.577" starttime="20170703 13:47:08.576"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170703 13:47:08.581" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170703 13:47:08.581" starttime="20170703 13:47:08.577"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170703 13:47:08.581" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:47:08.581" starttime="20170703 13:47:08.581"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.581" starttime="20170703 13:47:08.576"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.581" starttime="20170703 13:47:08.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.586" starttime="20170703 13:47:08.582"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170703 13:47:08.589" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170703 13:47:08.589" starttime="20170703 13:47:08.586"></status>
</kw>
<msg timestamp="20170703 13:47:08.589" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:47:08.589" starttime="20170703 13:47:08.548"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170703 13:47:08.590" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170703 13:47:08.590" starttime="20170703 13:47:08.590"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.591" starttime="20170703 13:47:08.590"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170703 13:47:08.591" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170703 13:47:08.591" starttime="20170703 13:47:08.591"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170703 13:47:08.596" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170703 13:47:08.596" starttime="20170703 13:47:08.592"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170703 13:47:08.597" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170703 13:47:08.597" starttime="20170703 13:47:08.596"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170703 13:47:08.597" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170703 13:47:08.597" starttime="20170703 13:47:08.597"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.598" starttime="20170703 13:47:08.598"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.598" starttime="20170703 13:47:08.547"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.598" starttime="20170703 13:47:08.325"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.599" starttime="20170703 13:47:08.228"></status>
</kw>
<msg timestamp="20170703 13:47:08.599" level="INFO">${earfcn_list2} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<msg timestamp="20170703 13:47:08.599" level="INFO">${freqency_list2} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<msg timestamp="20170703 13:47:08.599" level="INFO">${band_list2} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170703 13:47:08.599" starttime="20170703 13:47:08.224"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${earfcn_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<assign>
<var>${earfcn_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.607" starttime="20170703 13:47:08.603"></status>
</kw>
<msg timestamp="20170703 13:47:08.607" level="INFO">${earfcn_list} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<status status="PASS" endtime="20170703 13:47:08.608" starttime="20170703 13:47:08.599"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${freqency_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<assign>
<var>${freqency_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.616" starttime="20170703 13:47:08.611"></status>
</kw>
<msg timestamp="20170703 13:47:08.616" level="INFO">${freqency_list} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<status status="PASS" endtime="20170703 13:47:08.616" starttime="20170703 13:47:08.608"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${band_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<assign>
<var>${band_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.623" starttime="20170703 13:47:08.620"></status>
</kw>
<msg timestamp="20170703 13:47:08.624" level="INFO">${band_list} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170703 13:47:08.624" starttime="20170703 13:47:08.616"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170703 13:47:08.624" level="INFO">${cell_index1} = 0</msg>
<status status="PASS" endtime="20170703 13:47:08.624" starttime="20170703 13:47:08.624"></status>
</kw>
<kw type="for" name="${cell_index2} IN [ @{cell_list} ]">
<kw type="foritem" name="${cell_index2} = 2">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.633" starttime="20170703 13:47:08.630"></status>
</kw>
<msg timestamp="20170703 13:47:08.633" level="INFO">${cell_index} = 1</msg>
<status status="PASS" endtime="20170703 13:47:08.633" starttime="20170703 13:47:08.626"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.641" starttime="20170703 13:47:08.638"></status>
</kw>
<status status="PASS" endtime="20170703 13:47:08.642" starttime="20170703 13:47:08.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:47:08.646" starttime="20170703 13:47:08.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="TM500_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8271 -s True</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8271 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 3464.

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[process_control.py@74] Process start successed ! process id: 3464</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8271</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 1 user queue.

"</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@412] Get TM500 resource success!</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"
FileZilla Server Interface.exe
FileZilla Server Interface.xml
FileZilla Server.xml
FileZilla server.exe
FzGSS.dll
Uninstall.exe
legal.htm
libeay32.dll
license.txt
readme.htm
ssleay32.dll

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"'</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@591] Prev msg:</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1728] TM500 command to be sent: GSTS</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1728] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1728] TM500 command to be sent: GETR</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1728] TM500 command to be sent: STRT</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20170703 13:48:35.514" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<status status="PASS" endtime="20170703 13:48:35.514" starttime="20170703 13:47:08.651"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20170703 13:48:35.514" level="INFO">${TM500_Use_Tag} = used</msg>
<status status="PASS" endtime="20170703 13:48:35.514" starttime="20170703 13:48:35.514"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170703 13:48:39.570" level="INFO">$TA,C,020A*</msg>
<msg timestamp="20170703 13:48:39.570" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,020A*', Receive&lt;-'$TA,C,020A*'</msg>
<msg timestamp="20170703 13:48:39.570" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,020A*'
$TA,C,060A*</msg>
<msg timestamp="20170703 13:48:39.570" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,060A*', Receive&lt;-'$TA,C,060A*'</msg>
<msg timestamp="20170703 13:48:39.570" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,060A*'</msg>
<status status="PASS" endtime="20170703 13:48:39.570" starttime="20170703 13:48:35.514"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: GVER</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@507] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20170703 13:48:42.035" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20170703 13:48:42.035" starttime="20170703 13:48:39.586"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20170703 13:48:42.659" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20170703 13:48:42.659" level="INFO">[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170703_134800_session/170703_134851'</msg>
<msg timestamp="20170703 13:48:42.659" level="INFO">[tm500.py@1352] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170703_134800_session/170703_134851'</msg>
<msg timestamp="20170703 13:48:42.659" level="INFO">[tm500.py@1363] C:\TM500_LOG\170703_134800_session\170703_134851</msg>
<status status="PASS" endtime="20170703 13:48:42.659" starttime="20170703 13:48:42.035"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${modify_tm500_script}</var>
</assign>
<msg timestamp="20170703 13:48:42.659" level="INFO">${modify_tm500_script} = []</msg>
<status status="PASS" endtime="20170703 13:48:42.659" starttime="20170703 13:48:42.659"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${attach_freqency}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:48:42.659" starttime="20170703 13:48:42.659"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_scripts}</arg>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20170703 13:48:53.922" level="INFO">[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 26050</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">[tm500.py@1673] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x9BD9, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
  Selected PLMN: 26203F
  Pdn Id: 0
  EPS Bearer Id: 5
  Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs
  IPv4 Address: 172.170.47.55
  Attach Result: EPS Only
  Mode: PS 2
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0</msg>
<msg timestamp="20170703 13:48:53.922" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20170703 13:48:53.922" starttime="20170703 13:48:42.659"></status>
</kw>
<kw name="Tm500 Start Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword connects TM500 PPPoE connections by their names.</doc>
<msg timestamp="20170703 13:48:55.404" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:48:55.404" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:48:55.404" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500</msg>
<msg timestamp="20170703 13:48:55.404" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<msg timestamp="20170703 13:48:55.404" level="INFO">[tm500.py@1302] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170703_134505_session\170703_134555&gt;</msg>
<status status="PASS" endtime="20170703 13:48:55.404" starttime="20170703 13:48:53.922"></status>
</kw>
<kw name="TM500 Log Stop And Fetch" library="ue_resource">
<doc>TM500: stop logging, convert log to csv format, copy logs to local PC.</doc>
<arguments>
<arg>tm500_attach_log${cell_id}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:48:55.420" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:48:55.420" starttime="20170703 13:48:55.420"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<msg timestamp="20170703 13:48:55.420" html="yes" level="INFO">Directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\tm500_attach_log2"&gt;D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\tm500_attach_log2&lt;/a&gt;' already exists.</msg>
<status status="PASS" endtime="20170703 13:48:55.420" starttime="20170703 13:48:55.420"></status>
</kw>
<kw name="Tm500 Stop Logging" library="tdd_ev_robotws">
<doc>This keyword stops TM500's logging.</doc>
<assign>
<var>${log_folder_path_on_tm500_pc}</var>
</assign>
<msg timestamp="20170703 13:48:55.982" level="INFO">[tm500.py@1376] Prev msg: I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Suitable
I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0
  De Id: 8
  EPS Bearer Id: 5
  PDN IP Address String: 172.170.47.55

I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x37A8, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0</msg>
<msg timestamp="20170703 13:48:55.982" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$STOP_LOGGING</msg>
<msg timestamp="20170703 13:48:55.982" level="INFO">[tm500.py@1736] TM500 command reply: C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170703 13:48:55.982" level="INFO">[tm500.py@1387] TM500 command line response of "STOP LOGGING":
C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170703 13:48:55.982" level="INFO">[tm500.py@1391] TM500 stop logging succeeded.</msg>
<msg timestamp="20170703 13:48:55.982" level="INFO">${log_folder_path_on_tm500_pc} = C:\TM500_LOG\170703_134800_session\170703_134851</msg>
<status status="PASS" endtime="20170703 13:48:55.982" starttime="20170703 13:48:55.420"></status>
</kw>
<kw name="Tm500 Convert Log" library="tdd_ev_robotws">
<doc>This keyword converts TM500 log to csv format files.</doc>
<arguments>
<arg>timeout=${log_convertion_timeout}</arg>
</arguments>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1736] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_TO_TEXT 0</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 44%</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 100%

C: CONVERT_TO_TEXT 0x00 ok.</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\170703_134800_session\170703_134851"</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_COMMAND_LOG started</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1487] I: CONVERT_COMMAND_LOG progress= 8%
I: CONVERT_COMMAND_LOG progress= 16%
I: CONVERT_COMMAND_LOG progress= 24%
I: CONVERT_COMMAND_LOG progress= 32%
I: CONVERT_COMMAND_LOG progress= 40%
I: CONVERT_COMMAND_LOG progress= 48%
I: CONVERT_COMMAND_LOG progress= 56%
I: CONVERT_COMMAND_LOG progress= 64%
I: CONVERT_COMMAND_LOG progress= 72%
I: CONVERT_COMMAND_LOG progress= 80%
I: CONVERT_COMMAND_LOG progress= 88%
I: CONVERT_COMMAND_LOG progress= 96%
C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\170703_134800_SESSION\170703_134851\170703_134800_session_command_log.csv</msg>
<msg timestamp="20170703 13:49:06.090" level="INFO">[tm500.py@1492] TM500 convert log succeeded.</msg>
<status status="PASS" endtime="20170703 13:49:06.090" starttime="20170703 13:48:55.982"></status>
</kw>
<kw name="Tm500 Log Fetch" library="ue_resource">
<doc>TM500 Log fetching.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:49:06.090" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<status status="PASS" endtime="20170703 13:49:06.090" starttime="20170703 13:49:06.090"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:06.090" starttime="20170703 13:49:06.090"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cd /D "${log_folder_path_on_tm500_pc}"</arg>
</arguments>
<msg timestamp="20170703 13:49:07.416" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:49:07.416" level="INFO">[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\170703_134800_session\170703_134851"</msg>
<msg timestamp="20170703 13:49:07.416" level="INFO">[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\170703_134800_session\170703_134851"

C:\TM500_log\170703_134800_session\170703_134851&gt;</msg>
<status status="PASS" endtime="20170703 13:49:07.416" starttime="20170703 13:49:06.090"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cp ../*ommand*og*.txt session_command_log.txt</arg>
</arguments>
<msg timestamp="20170703 13:49:08.758" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:49:08.758" level="INFO">[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt</msg>
<msg timestamp="20170703 13:49:08.758" level="INFO">[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt
cp: cannot stat `../*ommand*og*.txt': No such file or directory

C:\TM500_log\170703_134800_session\170703_134851&gt;</msg>
<status status="PASS" endtime="20170703 13:49:08.758" starttime="20170703 13:49:07.416"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>chmod 777 -R *</arg>
</arguments>
<msg timestamp="20170703 13:49:10.084" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:49:10.084" level="INFO">[telnet_common.py@276] Execute command: chmod 777 -R *</msg>
<msg timestamp="20170703 13:49:10.084" level="INFO">[telnet_common.py@306] Get Response: chmod 777 -R *

C:\TM500_log\170703_134800_session\170703_134851&gt;</msg>
<status status="PASS" endtime="20170703 13:49:10.084" starttime="20170703 13:49:08.758"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zcvf tm500_log.tar *.*</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:10.084" starttime="20170703 13:49:10.084"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>:\\</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${driver_log_folder}</var>
</assign>
<msg timestamp="20170703 13:49:10.084" level="INFO">${driver_log_folder} = [u'C', u'TM500_LOG\\170703_134800_session\\170703_134851']</msg>
<status status="PASS" endtime="20170703 13:49:10.084" starttime="20170703 13:49:10.084"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${TM500_PC_INFO.IP}</arg>
<arg>21</arg>
<arg>TA_LOG</arg>
<arg>${None}</arg>
<arg>${log_folder_path_on_local_pc}</arg>
<arg>ALL</arg>
<arg>${driver_log_folder[1]}</arg>
</arguments>
<msg timestamp="20170703 13:49:10.412" level="INFO">[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.</msg>
<msg timestamp="20170703 13:49:10.412" level="INFO">[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta
220-written by Tim Kosse (Tim.Kosse@gmx.de)
220 Please visit http://sourceforge.net/projects/filezilla/</msg>
<status status="PASS" endtime="20170703 13:49:10.412" starttime="20170703 13:49:10.084"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:49:10.427" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:49:10.412"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>cd /D "${log_folder_path_on_local_pc}"</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:49:10.427"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:49:10.427"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>chmod 777 -R *</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:49:10.427"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${unzip_result}</arg>
<arg>Run keyword and ignore error</arg>
<arg>Unzip file</arg>
<arg>tm500_log.tar</arg>
<arg>${log_folder_path_on_local_pc}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:49:10.427"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword if</arg>
<arg>'${unzip_result[0]}' == 'FAIL'</arg>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:49:10.427"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>remove file</arg>
<arg>${log_folder_path_on_local_pc}/tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:49:10.427"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:49:06.090"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:48:55.420"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ue_attach_ip}</arg>
<arg>${tm500_attach_result.UE0}</arg>
</arguments>
<msg timestamp="20170703 13:49:10.427" level="INFO">${ue_attach_ip} = 172.170.47.55</msg>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:49:10.427"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:47:08.650"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:47:08.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:10.427" starttime="20170703 13:49:10.427"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="TM500_Detach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:49:10.443" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:49:10.443" starttime="20170703 13:49:10.443"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170703 13:49:11.784" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;</msg>
<msg timestamp="20170703 13:49:11.784" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170703 13:49:11.784" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170703 13:49:11.784" starttime="20170703 13:49:10.443"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:49:11.784" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<status status="PASS" endtime="20170703 13:49:11.784" starttime="20170703 13:49:11.784"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170703 13:49:13.142" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:49:13.142" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170703 13:49:13.142" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\TM500_log\170703_134800_session\170703_134851&gt;</msg>
<status status="PASS" endtime="20170703 13:49:13.142" starttime="20170703 13:49:11.784"></status>
</kw>
<kw name="Tm500 Stop Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword disconnects TM500 PPPoE connection by PPPoE name.</doc>
<msg timestamp="20170703 13:49:14.499" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;.</msg>
<msg timestamp="20170703 13:49:14.499" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x052B8940&gt;</msg>
<msg timestamp="20170703 13:49:14.499" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT</msg>
<msg timestamp="20170703 13:49:14.499" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170703_134800_session\170703_134851&gt;</msg>
<msg timestamp="20170703 13:49:14.499" level="INFO">[tm500.py@1321] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170703_134800_session\170703_134851&gt;</msg>
<status status="PASS" endtime="20170703 13:49:14.499" starttime="20170703 13:49:13.142"></status>
</kw>
<kw name="Tm500 Detach" library="tdd_ev_robotws">
<doc>This keyword does UE detach operation of TM500.</doc>
<msg timestamp="20170703 13:49:14.780" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170703 13:49:14.780" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Suitable
C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170703 13:49:14.780" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte NasConfigEmmDeregister 0</msg>
<msg timestamp="20170703 13:49:14.780" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170703 13:49:14.780" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170703 13:49:14.780" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170703 13:49:14.780" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte Activate -1</msg>
<msg timestamp="20170703 13:49:14.780" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<status status="PASS" endtime="20170703 13:49:14.780" starttime="20170703 13:49:14.499"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:49:14.780" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:49:14.780" starttime="20170703 13:49:14.780"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170703 13:49:18.867" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170703 13:49:18.867" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170703 13:49:18.867" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170703 13:49:18.867" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170703 13:49:18.867" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170703 13:49:18.867" starttime="20170703 13:49:14.780"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170703 13:49:36.152" level="INFO">[tm500.py@591] Prev msg: I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0xD377, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0
    Detach Cause: UE Initiated 

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Acceptable</msg>
<msg timestamp="20170703 13:49:36.152" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170703 13:49:36.152" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170703 13:49:36.152" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8271 stopping</msg>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:49:18.867"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:49:10.443"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:49:10.443"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:49:10.427"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index1}+1</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170703 13:49:36.152" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:49:36.152"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${cell_index1}</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170703 13:49:36.152" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:49:36.152"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:47:08.625"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:47:08.624"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:47:08.213"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:42:00.204"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:34:10.343"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:34:10.343"></status>
</kw>
<kw type="teardown" name="Test_Tear_Down_Action" library="SISO1 Resource">
<doc>Action when case finishs</doc>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170703 13:49:36.152" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x057A1940&gt;.</msg>
<status status="PASS" endtime="20170703 13:49:36.152" starttime="20170703 13:49:36.152"></status>
</kw>
<kw name="Kill Qtp Process" library="tdd_ev_robotws">
<doc>This keyword is used to kill the processes related to QTP application.</doc>
<msg timestamp="20170703 13:49:36.698" level="INFO">Start to kill QTP process.
Finshed to kill QTP process.</msg>
<status status="PASS" endtime="20170703 13:49:36.698" starttime="20170703 13:49:36.152"></status>
</kw>
<kw name="Stop Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<status status="PASS" endtime="20170703 13:49:36.729" starttime="20170703 13:49:36.698"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${case_execute_log_name}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:36.729" starttime="20170703 13:49:36.729"></status>
</kw>
<msg timestamp="20170703 13:49:36.729" level="INFO">${return} = ('PASS', None)</msg>
<status status="PASS" endtime="20170703 13:49:36.729" starttime="20170703 13:49:36.729"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Save Infomodel Log" library="tdd_ev_robotws">
<doc>Save InfoModel log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20170703 13:49:36.744" level="INFO">[infomodel_control.py@214] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\owner_debug' succeed .</msg>
<status status="PASS" endtime="20170703 13:49:36.744" starttime="20170703 13:49:36.729"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:36.744" starttime="20170703 13:49:36.729"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:36.744" starttime="20170703 13:49:36.729"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Stop Infomodel" library="tdd_ev_robotws">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20170703 13:49:37.478" level="INFO">[infomodel_control.py@186] stop infomodel logger succeed .</msg>
<msg timestamp="20170703 13:49:37.478" level="INFO">[infomodel_control.py@198] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170703 13:49:37.478" starttime="20170703 13:49:36.744"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:37.478" starttime="20170703 13:49:36.744"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:37.478" starttime="20170703 13:49:36.744"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Release_TM500_And_Colse_PA_Port</arg>
</arguments>
<kw name="Release_TM500_And_Colse_PA_Port" library="SISO1 Resource">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${return}</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Variable Should Exist</arg>
<arg>${TM500_Use_Tag}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:37.478" starttime="20170703 13:49:37.478"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Use_Tag}'=='used'</arg>
<arg>Set Attenuators Off</arg>
<arg>${ATT_ALL_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:37.478" starttime="20170703 13:49:37.478"></status>
</kw>
<kw name="Set_Allcells_Attenuation_Off" library="SISO1 Resource">
<kw type="for" name="${index} IN RANGE [ 1 | 10 ]">
<kw type="foritem" name="${index} = 1">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:37.493" starttime="20170703 13:49:37.493"></status>
</kw>
<msg timestamp="20170703 13:49:37.493" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170703 13:49:37.493" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170703 13:49:37.493" starttime="20170703 13:49:37.493"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:37.493" starttime="20170703 13:49:37.493"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170703 13:49:41.549" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170703 13:49:41.549" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170703 13:49:41.549" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170703 13:49:41.549" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170703 13:49:41.549" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170703 13:49:41.549" starttime="20170703 13:49:37.493"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:41.549" starttime="20170703 13:49:37.478"></status>
</kw>
<kw type="foritem" name="${index} = 2">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:41.565" starttime="20170703 13:49:41.549"></status>
</kw>
<msg timestamp="20170703 13:49:41.565" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170703 13:49:41.565" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170703 13:49:41.565" starttime="20170703 13:49:41.549"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:41.565" starttime="20170703 13:49:41.565"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170703 13:49:45.621" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170703 13:49:45.621" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170703 13:49:45.621" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170703 13:49:45.621" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170703 13:49:45.621" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170703 13:49:45.621" starttime="20170703 13:49:41.565"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:45.621" starttime="20170703 13:49:41.549"></status>
</kw>
<kw type="foritem" name="${index} = 3">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:45.637" starttime="20170703 13:49:45.621"></status>
</kw>
<msg timestamp="20170703 13:49:45.637" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170703 13:49:45.637" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170703 13:49:45.637" starttime="20170703 13:49:45.621"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:45.637" starttime="20170703 13:49:45.637"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170703 13:49:49.708" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170703 13:49:49.708" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170703 13:49:49.708" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170703 13:49:49.708" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170703 13:49:49.708" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170703 13:49:49.708" starttime="20170703 13:49:45.637"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:49.708" starttime="20170703 13:49:45.621"></status>
</kw>
<kw type="foritem" name="${index} = 4">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170703 13:49:49.724" level="FAIL">Variable ${CELL4_ATT_INFO} does not exist.</msg>
<status status="FAIL" endtime="20170703 13:49:49.724" starttime="20170703 13:49:49.724"></status>
</kw>
<msg timestamp="20170703 13:49:49.724" level="INFO">${ret1} = FAIL</msg>
<msg timestamp="20170703 13:49:49.724" level="INFO">${ret2} = Variable ${CELL4_ATT_INFO} does not exist.</msg>
<status status="PASS" endtime="20170703 13:49:49.724" starttime="20170703 13:49:49.708"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<msg timestamp="20170703 13:49:49.724" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170703 13:49:49.724" starttime="20170703 13:49:49.724"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:49.724" starttime="20170703 13:49:49.708"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:49.724" starttime="20170703 13:49:37.478"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:49.724" starttime="20170703 13:49:37.478"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170703 13:49:54.731" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "10.56.6.32"</msg>
<status status="PASS" endtime="20170703 13:49:54.731" starttime="20170703 13:49:49.724"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Test Variable</arg>
<arg>${TM500_Use_Tag}</arg>
<arg>unused</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:54.731" starttime="20170703 13:49:54.731"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:54.731" starttime="20170703 13:49:37.478"></status>
</kw>
<status status="PASS" endtime="20170703 13:49:54.731" starttime="20170703 13:49:37.478"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<msg timestamp="20170703 13:49:54.731" level="FAIL">Variable ${route_add_cpe_pc} does not exist.</msg>
<status status="FAIL" endtime="20170703 13:49:54.731" starttime="20170703 13:49:54.731"></status>
</kw>
<msg timestamp="20170703 13:49:54.731" level="INFO">${return} = ('FAIL', u'Variable ${route_add_cpe_pc} does not exist.')</msg>
<status status="PASS" endtime="20170703 13:49:54.731" starttime="20170703 13:49:54.731"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${route_add_cpe_pc}'=='true'</arg>
<arg>Execute Shell Command</arg>
<arg>route delete ${BTS_PC_INFO.IP} mask 255.255.255.255 ${UE1_INFO.ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:49:54.747" starttime="20170703 13:49:54.731"></status>
</kw>
<kw name="Alarm Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20170703 13:50:10.444" level="ERROR">Infomodel not connected.</msg>
<msg timestamp="20170703 13:50:11.146" level="INFO">[infomodel_control.py@82] set up infomodel with following info succeed .
    details: address=192.168.255.1, port=12345, definitions_file_path=None
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}</msg>
<msg timestamp="20170703 13:50:11.146" level="INFO">[infomodel_control.py@100] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170703 13:50:11.146" starttime="20170703 13:49:54.747"></status>
</kw>
<kw name="Fatal Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20170703 13:50:15.186" level="INFO">['fatal'] ['fatal']</msg>
<msg timestamp="20170703 13:50:15.186" level="INFO">[file_control.py@109] *HTML*&lt;a href = "D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\udplog_20170703132611.log"&gt;fail log&lt;/a&gt;
Find '['fatal']' in 'D:\TA\TA_logs\TestLog_20170703132353\ev_logs\FZHR_Operational_Cell_block_unblock_20170703132356\FZHR_Operational_Cell_block_unblock\udplog_20170703132611.log'
write successfully</msg>
<status status="PASS" endtime="20170703 13:50:15.186" starttime="20170703 13:50:11.146"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<assign>
<var>${return1}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<msg timestamp="20170703 13:50:15.186" level="FAIL">'FZHR_Operational_Cell_block_unblock' does not contain 'Fiber'</msg>
<status status="FAIL" endtime="20170703 13:50:15.186" starttime="20170703 13:50:15.186"></status>
</kw>
<msg timestamp="20170703 13:50:15.186" level="INFO">${return1} = ('FAIL', u"'FZHR_Operational_Cell_block_unblock' does not contain 'Fiber'")</msg>
<status status="PASS" endtime="20170703 13:50:15.186" starttime="20170703 13:50:15.186"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<assign>
<var>${all_fiber_link}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<status status="PASS" endtime="20170703 13:50:15.186" starttime="20170703 13:50:15.186"></status>
</kw>
<msg timestamp="20170703 13:50:15.186" level="INFO">${all_fiber_link} = ('PASS', None)</msg>
<status status="PASS" endtime="20170703 13:50:15.186" starttime="20170703 13:50:15.186"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:50:15.186" starttime="20170703 13:50:15.186"></status>
</kw>
<status status="PASS" endtime="20170703 13:50:15.186" starttime="20170703 13:50:15.186"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Software Reboot Bts</arg>
</arguments>
<status status="PASS" endtime="20170703 13:50:15.186" starttime="20170703 13:50:15.186"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Sleep</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170703 13:50:15.186" starttime="20170703 13:50:15.186"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20170703 13:50:15.202" starttime="20170703 13:50:15.202"></status>
</kw>
<kw name="Common Test Teardown" library="common_resource">
<doc>[Caution] this keyword step:</doc>
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20170703 13:50:15.202" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20170703 13:50:15.202" starttime="20170703 13:50:15.202"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<status status="PASS" endtime="20170703 13:50:15.202" starttime="20170703 13:50:15.202"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<status status="PASS" endtime="20170703 13:50:15.202" starttime="20170703 13:50:15.202"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170703 13:50:15.202" starttime="20170703 13:50:15.202"></status>
</kw>
<kw name="Get Active Bts Sw Version" library="tdd_ev_robotws">
<doc>get active BTS SW Build Version from enb targetBD file..</doc>
<assign>
<var>${version}</var>
</assign>
<msg timestamp="20170703 13:50:36.480" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170703 13:50:36.480" level="INFO">[ssh_common.py@203] Last login: Mon Jul  3 13:35:24 CST 2017 from 10.69.80.114 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:50:36.480" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x059EA350&gt;</msg>
<msg timestamp="20170703 13:50:36.480" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170703 13:50:36.480" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:50:36.480" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x059EA350&gt;</msg>
<msg timestamp="20170703 13:50:36.480" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170703 13:50:36.480" level="INFO">[ssh_common.py@203] Last login: Mon Jul  3 13:50:18 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170703 13:50:36.480" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04A55648&gt;</msg>
<msg timestamp="20170703 13:50:36.480" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20170703 13:50:36.480" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000094_000000.xml
root@fctj-0a:/ffs/fs1 &gt;</msg>
<msg timestamp="20170703 13:50:36.480" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04A55648&gt;</msg>
<msg timestamp="20170703 13:50:36.480" level="INFO">${version} = TL17A_ENB_0000_000094_000000</msg>
<status status="PASS" endtime="20170703 13:50:36.480" starttime="20170703 13:50:15.202"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<status status="PASS" endtime="20170703 13:50:36.480" starttime="20170703 13:50:36.480"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<status status="PASS" endtime="20170703 13:50:36.480" starttime="20170703 13:50:36.480"></status>
</kw>
<status status="PASS" endtime="20170703 13:50:36.480" starttime="20170703 13:50:15.202"></status>
</kw>
<status status="PASS" endtime="20170703 13:50:36.480" starttime="20170703 13:49:36.152"></status>
</kw>
<tags>
<tag>owner-shaocheng.chen@nokia.com</tag>
<tag>QC_773297</tag>
</tags>
<status status="PASS" endtime="20170703 13:50:36.480" critical="yes" starttime="20170703 13:25:12.960"></status>
</test>
<doc>TD-LTE I&amp;V SISO1</doc>
<status status="PASS" endtime="20170703 13:50:36.636" starttime="20170703 13:23:55.068"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">owner-shaocheng.chen@nokia.com</stat>
<stat fail="0" pass="1">QC_773297</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="FZHR Operational Cell block unblock" pass="1">FZHR Operational Cell block unblock</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170703 13:23:55.849" level="ERROR">Loading tdd_config has failed. Please check if: 
       1. you executed pybot with --variable CONFIGURATION:$your_tl_config 
          i.e. pybot --variable CONFIGURATION:Wroclaw.test 
       2. check if there is no problem with your configuration 
       Error msg: Variable ${CONFIGURATION} does not exist.
</msg>
<msg timestamp="20170703 13:36:21.466" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.472" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.500" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.533" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.600" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.655" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:36:21.714" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.563" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.571" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.600" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.628" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.677" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.731" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:39:32.783" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:12.904" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:12.909" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:12.940" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:12.974" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:13.039" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:13.099" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:44:13.157" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.323" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.328" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.357" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.388" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.441" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.496" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:47:08.549" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170703 13:50:10.444" level="ERROR">Infomodel not connected.</msg>
</errors>
</robot>
