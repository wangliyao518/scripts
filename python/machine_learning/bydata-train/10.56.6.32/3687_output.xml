<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170920 22:39:49.106" generator="Rebot 3.0 (Python 2.7.5 on win32)">
<suite source="D:\TA\Test_Case_Svn\TL17A\SISO1\CPRI_Single_FZHR\FZHR_Operational_Cell_block_unblock\FZHR_Operational_Cell_block_unblock.html" id="s1" name="FZHR Operational Cell block unblock">
<kw type="setup" name="Common Suite Setup" library="common_resource">
<doc>this keyword create suite name directory path as D:\TA\TA_logs\TestLog_20170920221319//logs//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20170920 22:13:21.617" level="INFO">${timestamp} = 20170920221321</msg>
<status status="PASS" endtime="20170920 22:13:21.617" starttime="20170920 22:13:21.581"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_NAME[:50]}</arg>
<arg>\\s+$</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${FILE_NAME}</var>
</assign>
<msg timestamp="20170920 22:13:21.618" level="INFO">${FILE_NAME} = FZHR Operational Cell block unblock</msg>
<status status="PASS" endtime="20170920 22:13:21.618" starttime="20170920 22:13:21.618"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>ev_logs</arg>
<arg>${FILE_NAME}_${timestamp}</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20170920 22:13:21.619" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR Operational Cell block unblock_20170920221321</msg>
<status status="PASS" endtime="20170920 22:13:21.619" starttime="20170920 22:13:21.619"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20170920 22:13:21.620" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321</msg>
<status status="PASS" endtime="20170920 22:13:21.620" starttime="20170920 22:13:21.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170920 22:13:21.620" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321</msg>
<status status="PASS" endtime="20170920 22:13:21.621" starttime="20170920 22:13:21.620"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170920 22:13:21.622" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321"&gt;D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170920 22:13:21.622" starttime="20170920 22:13:21.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170920 22:13:21.622" level="INFO">save log dir:D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321</msg>
<status status="PASS" endtime="20170920 22:13:21.622" starttime="20170920 22:13:21.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${snapshot_flag}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170920 22:13:21.626" level="INFO">${snapshot_flag} = 0</msg>
<status status="PASS" endtime="20170920 22:13:21.626" starttime="20170920 22:13:21.623"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<msg timestamp="20170920 22:13:21.644" level="FAIL">Variable ${TEST LOG DIR} does not exist.</msg>
<status status="FAIL" endtime="20170920 22:13:21.645" starttime="20170920 22:13:21.638"></status>
</kw>
<msg timestamp="20170920 22:13:21.645" level="INFO">${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')</msg>
<status status="PASS" endtime="20170920 22:13:21.645" starttime="20170920 22:13:21.638"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:13:21.646" starttime="20170920 22:13:21.645"></status>
</kw>
<msg timestamp="20170920 22:13:21.646" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170920 22:13:21.646" starttime="20170920 22:13:21.645"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:13:21.652" starttime="20170920 22:13:21.649"></status>
</kw>
<msg timestamp="20170920 22:13:21.652" level="INFO">${log dir} = D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321</msg>
<status status="PASS" endtime="20170920 22:13:21.652" starttime="20170920 22:13:21.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20170920 22:13:21.656" level="INFO">${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321</msg>
<status status="PASS" endtime="20170920 22:13:21.656" starttime="20170920 22:13:21.653"></status>
</kw>
<status status="PASS" endtime="20170920 22:13:21.656" starttime="20170920 22:13:21.638"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Make Sure FCT Ping Ok</arg>
</arguments>
<kw name="Make Sure FCT Ping Ok" library="common_resource">
<kw name="Ping Should Ok" library="tdd_ev_robotws">
<doc>This function is used for check whether ping host success, if yes, return 1, else return 0</doc>
<arguments>
<arg>${FCMD_IP}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20170920 22:13:21.686" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20170920 22:13:21.686" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20170920 22:13:21.686" starttime="20170920 22:13:21.657"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${FTM_IP}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:13:21.687" starttime="20170920 22:13:21.686"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Btscli Disable Bts Port Security</arg>
</arguments>
<status status="PASS" endtime="20170920 22:13:21.687" starttime="20170920 22:13:21.687"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>60</arg>
<arg>${FCMD_IP}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:13:21.688" starttime="20170920 22:13:21.687"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5min</arg>
<arg>5s</arg>
<arg>_make sure fctb connect ok</arg>
</arguments>
<status status="PASS" endtime="20170920 22:13:21.688" starttime="20170920 22:13:21.688"></status>
</kw>
<status status="PASS" endtime="20170920 22:13:21.688" starttime="20170920 22:13:21.657"></status>
</kw>
<status status="PASS" endtime="20170920 22:13:21.688" starttime="20170920 22:13:21.656"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>get_enb_infomation</arg>
</arguments>
<kw name="Get Enb Infomation" library="tdd_ev_robotws">
<doc>This keyword will print bts sw version, bbu type and RRU type.</doc>
<msg timestamp="20170920 22:14:21.901" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170920 22:14:21.934" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170920 22:14:32.998" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170920 22:14:33.196" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170920 22:14:33.683" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170920 22:14:33.722" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:04:05 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0597A4B8&gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0597A4B8&gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:13:20 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04993198&gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000337_000000.xml
root@fctj-0a:/ffs/fs2 &gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04993198&gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1505916823&amp;token=19ab2e676f1dd41cb071229260aa759ae2b1202179a364d0dde0412b629df15e&amp;frame=sshservice'</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;SSH Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1505916826&amp;token=bdbe09aaa95e3681a0124a76b0ab8db2e24df861e299e2ab96b1e95aa85e4117&amp;frame=RndPortsService'</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;R&amp;D Ports Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:13:30 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0580BF30&gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0580BF30&gt;</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:15:01.454" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:13:48 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0582B1E8&gt;</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000337_000000.xml
root@fctj-0a:/ffs/fs2 &gt;</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0582B1E8&gt;</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[enb_resource.py@1141] 
 ****Current BTS version is 'TL17A_ENB_0000_000337_000000' *****</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[enb_resource.py@1171] activeBuildVersion=TL17A_ENB_0000_000337_000000</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:13:58 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05804620&gt;</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ssh_common.py@258] Execute command: ls /ram/SiteConf.xml</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ssh_common.py@314] Get Response: ls /ram/SiteConf.xml
/ram/SiteConf.xml
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05804620&gt;</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[sftp_control.py@176] /ram/SiteConf.xml</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[sftp_control.py@79] sftp download from '/ram/SiteConf.xml' to 'D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\SiteConf.xml' is ok. local file size is 113k</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:14:19 CST 2017 from 192.168.255.126 on ssh
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05984120&gt;</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05984120&gt;</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[enb_resource.py@403] The real falsh folder is /ffs/fs2</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[sftp_control.py@176] /ffs/fs2/FileDirectory.xml</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs2/FileDirectory.xml' to 'D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FileDirectory_20170920221421.xml' is ok. local file size is 36k</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[sftp_control.py@176] /ffs/fs2/config/SCFC_143.xml</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs2/config/SCFC_143.xml' to 'D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\SCFC_143.xml' is ok. local file size is 152k</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[enb_resource.py@1141] 
 ****Current bbu type is 'ASIA' *****</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[enb_resource.py@1266] HW_BBU_TYPE=ASIA</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[enb_resource.py@1141] 
 ****Current rru type is 'FZHR' *****</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[enb_resource.py@1269] HW_RRU_TYPE=FZHR</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[enb_resource.py@1141] 
 ****Current HW type is '#2720-2CL1-T3-L-14' *****</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[enb_resource.py@1272] BTS_HW_TYPE=#2720-2CL1-T3-L-14</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ping_control.py@189] 
Pinging 192.168.200.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.200.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170920 22:15:01.455" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.20 with 32 bytes of data:
Reply from 192.168.255.126: Destination host unreachable.

Ping statistics for 192.168.255.20:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),</msg>
<status status="PASS" endtime="20170920 22:15:01.457" starttime="20170920 22:13:21.689"></status>
</kw>
<status status="PASS" endtime="20170920 22:15:01.457" starttime="20170920 22:13:21.688"></status>
</kw>
<kw name="Set Library Search Order" library="BuiltIn">
<doc>Sets the resolution order to use when a name matches multiple keywords.</doc>
<arguments>
<arg>tdd_ev_robotws</arg>
<arg>OperatingSystem</arg>
</arguments>
<status status="PASS" endtime="20170920 22:15:01.458" starttime="20170920 22:15:01.458"></status>
</kw>
<kw name="Initial Connection With BTS PC" library="common_resource">
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20170920 22:15:01.459" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20170920 22:15:01.459" starttime="20170920 22:15:01.459"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>${TELNET_PORT}</arg>
<arg>${SSH_PORT}</arg>
</arguments>
<assign>
<var>${conn_port}</var>
</assign>
<msg timestamp="20170920 22:15:01.462" level="INFO">${conn_port} = 23</msg>
<status status="PASS" endtime="20170920 22:15:01.462" starttime="20170920 22:15:01.460"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>TELNET</arg>
<arg>SSH</arg>
</arguments>
<assign>
<var>${conn_type}</var>
</assign>
<msg timestamp="20170920 22:15:01.465" level="INFO">${conn_type} = TELNET</msg>
<status status="PASS" endtime="20170920 22:15:01.466" starttime="20170920 22:15:01.463"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>30</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${timeout}</var>
</assign>
<msg timestamp="20170920 22:15:01.469" level="INFO">${timeout} = 30</msg>
<status status="PASS" endtime="20170920 22:15:01.469" starttime="20170920 22:15:01.466"></status>
</kw>
<kw name="Connect To Host" library="tdd_ev_robotws">
<doc>Used to connect to host, either TELNET or SSH</doc>
<arguments>
<arg>${BTS_PC_INFO.IP}</arg>
<arg>port=${conn_port}</arg>
<arg>username=${BTS_PC_INFO.USERNAME}</arg>
<arg>password=${BTS_PC_INFO.PASSWORD}</arg>
<arg>conn_type=${conn_type}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${BTS_PC_CONNECTION}</var>
</assign>
<msg timestamp="20170920 22:15:02.892" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 


login:</msg>
<msg timestamp="20170920 22:15:02.892" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20170920 22:15:02.892" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester

password:</msg>
<msg timestamp="20170920 22:15:02.892" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20170920 22:15:02.892" level="INFO">[telnet_common.py@246]  

*===============================================================
Microsoft Telnet Server.
*===============================================================
C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:15:02.892" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<status status="PASS" endtime="20170920 22:15:02.892" starttime="20170920 22:15:01.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:15:02.893" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<status status="PASS" endtime="20170920 22:15:02.893" starttime="20170920 22:15:02.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>Execute Shell Command</arg>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<msg timestamp="20170920 22:15:04.094" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:15:04.094" level="INFO">[telnet_common.py@276] Execute command: tlntadmn config timeoutactive=no</msg>
<msg timestamp="20170920 22:15:04.094" level="INFO">[telnet_common.py@306] Get Response: tlntadmn config timeoutactive=no
The settings were successfully updated.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170920 22:15:04.094" starttime="20170920 22:15:02.896"></status>
</kw>
<status status="PASS" endtime="20170920 22:15:04.094" starttime="20170920 22:15:02.893"></status>
</kw>
<status status="PASS" endtime="20170920 22:15:04.094" starttime="20170920 22:15:01.458"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:15:04.098" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:15:04.098" starttime="20170920 22:15:04.095"></status>
</kw>
<status status="PASS" endtime="20170920 22:15:04.098" starttime="20170920 22:13:21.581"></status>
</kw>
<kw type="teardown" name="Common Suite Teardown" library="common_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${REMOVE_LOGS}'=='on'</arg>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:45.966" starttime="20170920 22:39:45.963"></status>
</kw>
<kw name="Disconnect All Hosts" library="tdd_ev_robotws">
<doc>Closes all existing telnet connections to remote hosts.</doc>
<msg timestamp="20170920 22:39:45.980" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20170920 22:39:45.980" level="INFO">[telnet_common.py@189] Disconnect from 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:39:45.981" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20170920 22:39:45.981" level="INFO">[telnet_common.py@189] Disconnect from 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<status status="PASS" endtime="20170920 22:39:45.981" starttime="20170920 22:39:45.967"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Run Keyword If</arg>
<arg>${need_zip} == ${True}</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${value}</var>
</assign>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>${need_zip} == ${True}</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${need_zip} == ${True}</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<kw name="Zip File" library="tdd_ev_robotws">
<doc>This keyword can zip specific files.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<msg timestamp="20170920 22:39:46.011" level="INFO">[zip_control.py@325]</msg>
<msg timestamp="20170920 22:39:46.011" level="FAIL">zip D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321 to D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321.zip failed!</msg>
<status status="FAIL" endtime="20170920 22:39:46.011" starttime="20170920 22:39:45.985"></status>
</kw>
<status status="FAIL" endtime="20170920 22:39:46.011" starttime="20170920 22:39:45.982"></status>
</kw>
<status status="FAIL" endtime="20170920 22:39:46.011" starttime="20170920 22:39:45.982"></status>
</kw>
<msg timestamp="20170920 22:39:46.012" level="INFO">${status} = FAIL</msg>
<msg timestamp="20170920 22:39:46.012" level="INFO">${value} = zip D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321 to D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321.z...</msg>
<status status="PASS" endtime="20170920 22:39:46.012" starttime="20170920 22:39:45.981"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Run Keyword If</arg>
<arg>'${status}' == 'PASS' and ${need_zip} == ${True}</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${status}' == 'PASS' and ${need_zip} == ${True}</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == 'PASS' and ${need_zip} == ${True}</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:46.016" starttime="20170920 22:39:46.013"></status>
</kw>
<status status="PASS" endtime="20170920 22:39:46.016" starttime="20170920 22:39:46.012"></status>
</kw>
<status status="PASS" endtime="20170920 22:39:46.016" starttime="20170920 22:39:46.012"></status>
</kw>
<status status="PASS" endtime="20170920 22:39:46.016" starttime="20170920 22:39:45.963"></status>
</kw>
<test id="s1-t1" name="FZHR_Operational_Cell_block_unblock">
<kw type="setup" name="Common Test Setup" library="common_resource">
<doc>this keyword create case name directory path as D:\TA\TA_logs\TestLog_20170920221319//ev_logs//D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20170920 22:15:04.103" level="INFO">${timestamp} = 20170920221504</msg>
<status status="PASS" endtime="20170920 22:15:04.103" starttime="20170920 22:15:04.103"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20170920 22:15:04.104" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170920 22:15:04.104" starttime="20170920 22:15:04.104"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20170920 22:15:04.105" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170920 22:15:04.105" starttime="20170920 22:15:04.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170920 22:15:04.106" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170920 22:15:04.106" starttime="20170920 22:15:04.105"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170920 22:15:04.107" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock"&gt;D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170920 22:15:04.107" starttime="20170920 22:15:04.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170920 22:15:04.107" level="INFO">save log dir:D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170920 22:15:04.107" starttime="20170920 22:15:04.107"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${BTS PC CONNECTION.connected}</arg>
<arg>Initial Connection With BTS PC</arg>
</arguments>
<status status="PASS" endtime="20170920 22:15:04.108" starttime="20170920 22:15:04.107"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:15:04.110" starttime="20170920 22:15:04.109"></status>
</kw>
<msg timestamp="20170920 22:15:04.110" level="INFO">${case_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170920 22:15:04.110" starttime="20170920 22:15:04.109"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:15:04.111" starttime="20170920 22:15:04.111"></status>
</kw>
<msg timestamp="20170920 22:15:04.111" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170920 22:15:04.111" starttime="20170920 22:15:04.110"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<msg timestamp="20170920 22:15:04.114" level="INFO">${log dir} = D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170920 22:15:04.114" starttime="20170920 22:15:04.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20170920 22:15:04.115" level="INFO">${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170920 22:15:04.115" starttime="20170920 22:15:04.115"></status>
</kw>
<status status="PASS" endtime="20170920 22:15:04.115" starttime="20170920 22:15:04.108"></status>
</kw>
<status status="PASS" endtime="20170920 22:15:04.115" starttime="20170920 22:15:04.102"></status>
</kw>
<kw name="BTS_On_Air" library="SISO1 Resource">
<arguments>
<arg>${source_scf}</arg>
<arg>${parameter_list}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:15:04.120" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:15:04.120" starttime="20170920 22:15:04.117"></status>
</kw>
<kw name="Parse Ping Result" library="tdd_ev_robotws">
<doc>This keyword test the reachability of remote system.</doc>
<arguments>
<arg>192.168.255.1</arg>
</arguments>
<assign>
<var>${package_summary}</var>
<var>${ping_delay}</var>
</assign>
<msg timestamp="20170920 22:15:08.310" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:15:08.310" level="INFO">[telnet_common.py@276] Execute command: ping  192.168.255.1</msg>
<msg timestamp="20170920 22:15:08.310" level="INFO">[telnet_common.py@306] Get Response: ping  192.168.255.1

Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms

C:\Users\tdlte-tester&gt;
Total ping delay is: [1, 1, 1, 1]
Statistic ping delay is: [1, 1, 1, 1]
Valid ping delay is: [1, 1, 1, 1]</msg>
<msg timestamp="20170920 22:15:08.311" level="INFO">${package_summary} = ('4', '4', '0')</msg>
<msg timestamp="20170920 22:15:08.311" level="INFO">${ping_delay} = [1, 1, 1.0]</msg>
<status status="PASS" endtime="20170920 22:15:08.311" starttime="20170920 22:15:04.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Restart Device With Powerbreaker</arg>
<arg>${bts_powerbreak}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:15:08.314" starttime="20170920 22:15:08.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20170920 22:15:08.317" starttime="20170920 22:15:08.314"></status>
</kw>
<kw name="Modify And Upload Scf File" library="tdd_ev_robotws">
<doc>modify source_scf according parameter list and then upload to enb.</doc>
<arguments>
<arg>${source_scf}</arg>
<arg>${parameters_list}</arg>
</arguments>
<msg timestamp="20170920 22:16:07.815" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170920 22:16:07.839" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170920 22:16:18.893" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170920 22:16:19.316" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:14:31 CST 2017 from 192.168.255.126 on ssh
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05804DC8&gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05804DC8&gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:15:07 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05804C88&gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000337_000000.xml
root@fctj-0a:/ffs/fs2 &gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05804C88&gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1505916929&amp;token=b2f1f3936bff8615dce11bf01ae91343fb32f4b4296c1ed0e78edd620fe72efa&amp;frame=sshservice'</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;SSH Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1505916931&amp;token=0d20e82c5a1c0c13f2e0ec6b14da80b4434e2e284a14e2c4dd09288ce127bca2&amp;frame=RndPortsService'</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;R&amp;D Ports Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:15:17 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A5D5D0&gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A5D5D0&gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:15:34 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A5D5D0&gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000337_000000.xml
root@fctj-0a:/ffs/fs2 &gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A5D5D0&gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:15:44 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x058AAFA8&gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:16:19.322" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x058AAFA8&gt;</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[enb_resource.py@403] The real falsh folder is /ffs/fs2</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[sftp_control.py@176] /ffs/fs2/FileDirectory.xml</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs2/FileDirectory.xml' to 'D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileDirectory_20170920221556.xml' is ok. local file size is 36k</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.129</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:16:05 CST 2017 from 192.168.255.126 on ssh
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x059F0990&gt;</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[ssh_common.py@258] Execute command: rm -rf /ffs/fs2/config/hwf.bin.gz</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[ssh_common.py@314] Get Response: rm -rf /ffs/fs2/config/hwf.bin.gz
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x059F0990&gt;</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[sftp_control.py@61] sftp upload from 'D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\scf_modified.xml' to '/ffs/fs2/config/SCFC_143.xml' is ok.</msg>
<msg timestamp="20170920 22:16:19.323" level="INFO">[sftp_control.py@176] /ffs/fs2/config/SCFC_143.xml</msg>
<status status="PASS" endtime="20170920 22:16:19.325" starttime="20170920 22:15:08.318"></status>
</kw>
<kw name="Restart Bts Until Onair" library="tdd_ev_robotws">
<doc>restart bts with powerbreaker and then wait until it is onair.</doc>
<arguments>
<arg>bts_powerbreak_port=${bts_powerbreak}</arg>
</arguments>
<msg timestamp="20170920 22:22:28.984" level="INFO">[tools_resource.py@34] start power off ..</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[base.py@48] trial power off for 0 times</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[facom.py@60] Power off port 3 succeed!</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[base.py@48] trial power off for 0 times</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[facom.py@60] Power off port 6 succeed!</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[tools_resource.py@37] start power on ..</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[base.py@36] trial power on for 0 times</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[facom.py@83] Power on port 3 succeed!</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[base.py@36] trial power on for 0 times</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[facom.py@83] Power on port 6 succeed!</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[tools_resource.py@39] restart port '['FACOM:10.56.7.128:3', 'FACOM:10.56.7.128:6']' with powerbreak succeed !</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[btslog_control.py@174] use ip is 192.168.255.126</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock" already exists, no need to create it again.</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170920 22:22:28.984" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[infomodel_control.py@158] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None
             ftp_username=toor4nsn,ftp_password=oZPS0POrRieRtu</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[infomodel_control.py@162] start infomodel succeed .</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[infomodel_control.py@164] start infomodel logger succeed .</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': None, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': None, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'UploadOngoing', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'UploadOngoing', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[infomodel_control.py@328] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[infomodel_control.py@328] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[infomodel_control.py@328] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[infomodel_control.py@328] query infomodel: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' succeed .</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@225] infomodel check every cell onair succeed !</msg>
<msg timestamp="20170920 22:22:28.985" level="INFO">[enb_resource.py@253] bts log check onair msg succeed !</msg>
<msg timestamp="20170920 22:22:28.986" level="INFO">[infomodel_control.py@215] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\im_20170920222228' succeed .</msg>
<msg timestamp="20170920 22:22:28.986" level="INFO">[infomodel_control.py@187] stop infomodel logger succeed .</msg>
<msg timestamp="20170920 22:22:28.986" level="INFO">[infomodel_control.py@199] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170920 22:22:28.989" starttime="20170920 22:16:19.325"></status>
</kw>
<status status="PASS" endtime="20170920 22:22:28.989" starttime="20170920 22:15:04.116"></status>
</kw>
<kw name="Start_Udp_And_Infomodel_Log" library="SISO1 Resource">
<kw name="Start Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword starts catching of BTS system(UDP) log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}.log</arg>
</arguments>
<msg timestamp="20170920 22:22:29.290" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'</msg>
<msg timestamp="20170920 22:22:29.290" level="INFO">[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock" already exists, no need to create it again.</msg>
<status status="PASS" endtime="20170920 22:22:29.290" starttime="20170920 22:22:28.991"></status>
</kw>
<kw name="Start Infomodel" library="tdd_ev_robotws">
<doc>Setup InfoModel library and Connect to InfoModel.</doc>
<arguments>
<arg>port=${BTS_INFOMODEL_PORT}</arg>
</arguments>
<msg timestamp="20170920 22:22:39.217" level="INFO">[infomodel_control.py@158] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None
             ftp_username=toor4nsn,ftp_password=oZPS0POrRieRtu</msg>
<msg timestamp="20170920 22:22:39.217" level="INFO">[infomodel_control.py@162] start infomodel succeed .</msg>
<msg timestamp="20170920 22:22:39.217" level="INFO">[infomodel_control.py@164] start infomodel logger succeed .</msg>
<status status="PASS" endtime="20170920 22:22:39.218" starttime="20170920 22:22:29.291"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20170920 22:22:39.218" level="INFO">${case_execute_log_name} = owner_debug</msg>
<status status="PASS" endtime="20170920 22:22:39.219" starttime="20170920 22:22:39.218"></status>
</kw>
<status status="PASS" endtime="20170920 22:22:39.219" starttime="20170920 22:22:28.990"></status>
</kw>
<kw name="UE_Reboot_SISO1" library="SISO1 Resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Ue Software Reboot</arg>
<arg>${UE1_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:22:39.223" starttime="20170920 22:22:39.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${UE1_INFO.ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:22:39.226" starttime="20170920 22:22:39.223"></status>
</kw>
<status status="PASS" endtime="20170920 22:22:39.226" starttime="20170920 22:22:39.219"></status>
</kw>
<kw type="for" name="${num} IN RANGE [ ${total_times} ]">
<kw type="foritem" name="${num} = 0">
<kw name="_Cell_Block_Unblock_and_Attach">
<doc>Operation with BTS</doc>
<arguments>
<arg>${cell_index_1}</arg>
<arg>${cell_index_2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:22:39.232" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:22:39.232" starttime="20170920 22:22:39.228"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170920 22:22:43.166" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:22:43.166" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170920 22:22:43.166" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="6960"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:22:43.166" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:22:43.166" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170920 22:22:43.166" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="5848"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:22:43.166" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:22:43.166" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170920 22:22:43.166" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.


C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170920 22:22:43.166" starttime="20170920 22:22:39.232"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20170920 22:22:43.172" starttime="20170920 22:22:43.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20170920 22:22:43.176" starttime="20170920 22:22:43.172"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170920 22:22:43.177" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170920221319\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170920221321\\FZHR_Operational_Cell_...</msg>
<status status="PASS" endtime="20170920 22:22:43.177" starttime="20170920 22:22:43.176"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:22:43.178" starttime="20170920 22:22:43.178"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170920 22:23:52.418" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170920222243\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170920 22:23:52.419" starttime="20170920 22:22:43.178"></status>
</kw>
<status status="PASS" endtime="20170920 22:23:52.419" starttime="20170920 22:22:43.171"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>30 sec</arg>
</arguments>
<msg timestamp="20170920 22:24:22.421" level="INFO">Slept 30 seconds</msg>
<status status="PASS" endtime="20170920 22:24:22.421" starttime="20170920 22:23:52.421"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${block_cell_index}</arg>
<arg>Block</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170920 22:24:22.425" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=1', u'HWAction=Block', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170920221319\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170920221321\\FZHR_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170920 22:24:22.425" starttime="20170920 22:24:22.425"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170920 22:25:25.926" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="1"
HWAction="Block"
LogPath="D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170920222422\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170920 22:25:25.927" starttime="20170920 22:24:22.425"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:25.927" starttime="20170920 22:24:22.424"></status>
</kw>
<kw name="UE_Attach_SISO1" library="SISO1 Resource">
<doc>Example</doc>
<arguments>
<arg>${attach_cell_index}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cell_id}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{cell_list}</var>
</assign>
<msg timestamp="20170920 22:25:25.933" level="INFO">@{cell_list} = [ 2 ]</msg>
<status status="PASS" endtime="20170920 22:25:25.933" starttime="20170920 22:25:25.932"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${cell_list}</arg>
</arguments>
<assign>
<var>${cell_list_length}</var>
</assign>
<msg timestamp="20170920 22:25:25.933" level="INFO">Length is 1</msg>
<msg timestamp="20170920 22:25:25.934" level="INFO">${cell_list_length} = 1</msg>
<status status="PASS" endtime="20170920 22:25:25.934" starttime="20170920 22:25:25.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Split String</arg>
<arg>${attach_earfcn}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${earfcn_list1}</var>
</assign>
<msg timestamp="20170920 22:25:25.938" level="INFO">${earfcn_list1} = None</msg>
<status status="PASS" endtime="20170920 22:25:25.938" starttime="20170920 22:25:25.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Change_Earfcn_To_Freqency</arg>
<arg>${earfcn_list1}</arg>
</arguments>
<assign>
<var>${freqency_list1}</var>
<var>${band_list1}</var>
</assign>
<msg timestamp="20170920 22:25:25.942" level="INFO">${freqency_list1} = None</msg>
<msg timestamp="20170920 22:25:25.942" level="INFO">${band_list1} = None</msg>
<status status="PASS" endtime="20170920 22:25:25.942" starttime="20170920 22:25:25.939"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Get_Earfcn_From_Infomodel</arg>
</arguments>
<assign>
<var>${earfcn_list2}</var>
<var>${freqency_list2}</var>
<var>${band_list2}</var>
</assign>
<kw name="Get_Earfcn_From_Infomodel" library="SISO1 Resource">
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1</arg>
</arguments>
<assign>
<var>@{ret_earfcn}</var>
</assign>
<msg timestamp="20170920 22:25:26.116" level="INFO">[infomodel_control.py@328] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .</msg>
<msg timestamp="20170920 22:25:26.116" level="INFO">@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u's...</msg>
<status status="PASS" endtime="20170920 22:25:26.116" starttime="20170920 22:25:25.946"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${ret_earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.117" starttime="20170920 22:25:26.117"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${earfcn_list}</var>
</assign>
<msg timestamp="20170920 22:25:26.118" level="INFO">${earfcn_list} = []</msg>
<status status="PASS" endtime="20170920 22:25:26.118" starttime="20170920 22:25:26.117"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${freqency_list}</var>
</assign>
<msg timestamp="20170920 22:25:26.118" level="INFO">${freqency_list} = []</msg>
<status status="PASS" endtime="20170920 22:25:26.118" starttime="20170920 22:25:26.118"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${band_list}</var>
</assign>
<msg timestamp="20170920 22:25:26.119" level="INFO">${band_list} = []</msg>
<status status="PASS" endtime="20170920 22:25:26.119" starttime="20170920 22:25:26.118"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_OFFSET}</arg>
</arguments>
<assign>
<var>${offset_dict}</var>
</assign>
<msg timestamp="20170920 22:25:26.120" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:26.475" level="INFO">${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}</msg>
<status status="PASS" endtime="20170920 22:25:26.475" starttime="20170920 22:25:26.119"></status>
</kw>
<kw type="for" name="${index} IN [ @{ret_earfcn} ]">
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1: {u'fcnULs': [37900L], u'fcnDLs': [37900L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:25:26.477" level="INFO">${index.earfcn} = 37900</msg>
<status status="PASS" endtime="20170920 22:25:26.477" starttime="20170920 22:25:26.476"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.478" starttime="20170920 22:25:26.477"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:25:26.481" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:26.483" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:25:26.483" starttime="20170920 22:25:26.480"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:25:26.484" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:25:26.484" starttime="20170920 22:25:26.484"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:26.486" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:25:26.486" starttime="20170920 22:25:26.485"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:26.492" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:25:26.492" starttime="20170920 22:25:26.486"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:25:26.493" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:25:26.493" starttime="20170920 22:25:26.492"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.493" starttime="20170920 22:25:26.485"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.493" starttime="20170920 22:25:26.484"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.497" starttime="20170920 22:25:26.493"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:25:26.502" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170920 22:25:26.502" starttime="20170920 22:25:26.497"></status>
</kw>
<msg timestamp="20170920 22:25:26.502" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:25:26.502" starttime="20170920 22:25:26.478"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:25:26.503" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:25:26.503" starttime="20170920 22:25:26.502"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.503" starttime="20170920 22:25:26.503"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:25:26.504" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170920 22:25:26.504" starttime="20170920 22:25:26.504"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:25:26.508" level="INFO">${freq} = 25850.0</msg>
<status status="PASS" endtime="20170920 22:25:26.508" starttime="20170920 22:25:26.504"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:25:26.509" level="INFO">${fq} = 25850</msg>
<status status="PASS" endtime="20170920 22:25:26.509" starttime="20170920 22:25:26.508"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:25:26.510" level="INFO">${freqency} = 25850</msg>
<status status="PASS" endtime="20170920 22:25:26.510" starttime="20170920 22:25:26.510"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.511" starttime="20170920 22:25:26.511"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.511" starttime="20170920 22:25:26.476"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:25:26.512" level="INFO">${index.earfcn} = 38100</msg>
<status status="PASS" endtime="20170920 22:25:26.512" starttime="20170920 22:25:26.511"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.512" starttime="20170920 22:25:26.512"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:25:26.514" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:26.516" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:25:26.516" starttime="20170920 22:25:26.513"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:25:26.517" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:25:26.517" starttime="20170920 22:25:26.516"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:26.518" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:25:26.518" starttime="20170920 22:25:26.517"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:26.523" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:25:26.523" starttime="20170920 22:25:26.518"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:25:26.524" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:25:26.524" starttime="20170920 22:25:26.523"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.524" starttime="20170920 22:25:26.517"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.524" starttime="20170920 22:25:26.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.527" starttime="20170920 22:25:26.524"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:25:26.532" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170920 22:25:26.532" starttime="20170920 22:25:26.528"></status>
</kw>
<msg timestamp="20170920 22:25:26.533" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:25:26.533" starttime="20170920 22:25:26.513"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:25:26.533" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:25:26.533" starttime="20170920 22:25:26.533"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.534" starttime="20170920 22:25:26.534"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:25:26.535" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170920 22:25:26.535" starttime="20170920 22:25:26.534"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:25:26.539" level="INFO">${freq} = 26050.0</msg>
<status status="PASS" endtime="20170920 22:25:26.539" starttime="20170920 22:25:26.535"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:25:26.539" level="INFO">${fq} = 26050</msg>
<status status="PASS" endtime="20170920 22:25:26.539" starttime="20170920 22:25:26.539"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:25:26.542" level="INFO">${freqency} = 26050</msg>
<status status="PASS" endtime="20170920 22:25:26.542" starttime="20170920 22:25:26.540"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.543" starttime="20170920 22:25:26.542"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.543" starttime="20170920 22:25:26.511"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:25:26.544" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170920 22:25:26.544" starttime="20170920 22:25:26.543"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.544" starttime="20170920 22:25:26.544"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:25:26.546" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:26.548" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:25:26.548" starttime="20170920 22:25:26.545"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:25:26.549" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:25:26.549" starttime="20170920 22:25:26.548"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:26.550" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:25:26.551" starttime="20170920 22:25:26.549"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:26.555" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:26.555" starttime="20170920 22:25:26.551"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.556" starttime="20170920 22:25:26.555"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.556" starttime="20170920 22:25:26.549"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:26.557" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:25:26.557" starttime="20170920 22:25:26.556"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:26.562" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:26.562" starttime="20170920 22:25:26.557"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.562" starttime="20170920 22:25:26.562"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.562" starttime="20170920 22:25:26.556"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:26.563" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:25:26.563" starttime="20170920 22:25:26.563"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:26.568" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:26.568" starttime="20170920 22:25:26.564"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.569" starttime="20170920 22:25:26.568"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.569" starttime="20170920 22:25:26.563"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:26.570" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:25:26.570" starttime="20170920 22:25:26.569"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:26.574" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:26.575" starttime="20170920 22:25:26.570"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.575" starttime="20170920 22:25:26.575"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.575" starttime="20170920 22:25:26.569"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:26.576" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:25:26.576" starttime="20170920 22:25:26.576"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:26.581" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:25:26.582" starttime="20170920 22:25:26.577"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:25:26.582" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:25:26.583" starttime="20170920 22:25:26.582"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.583" starttime="20170920 22:25:26.575"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.583" starttime="20170920 22:25:26.549"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.586" starttime="20170920 22:25:26.583"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:25:26.591" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:25:26.591" starttime="20170920 22:25:26.587"></status>
</kw>
<msg timestamp="20170920 22:25:26.592" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:25:26.592" starttime="20170920 22:25:26.545"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:25:26.593" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:25:26.593" starttime="20170920 22:25:26.593"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.594" starttime="20170920 22:25:26.593"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:25:26.594" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:25:26.594" starttime="20170920 22:25:26.594"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:25:26.598" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170920 22:25:26.598" starttime="20170920 22:25:26.595"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:25:26.598" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170920 22:25:26.599" starttime="20170920 22:25:26.598"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:25:26.599" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170920 22:25:26.599" starttime="20170920 22:25:26.599"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.600" starttime="20170920 22:25:26.599"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:26.600" starttime="20170920 22:25:26.543"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:25:26.601" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170920 22:25:26.601" starttime="20170920 22:25:26.600"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:26.602" starttime="20170920 22:25:26.601"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:25:26.603" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:27.495" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:25:27.495" starttime="20170920 22:25:26.603"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:25:27.496" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.496" starttime="20170920 22:25:27.495"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.497" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.497" starttime="20170920 22:25:27.496"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.500" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:27.500" starttime="20170920 22:25:27.497"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.501" starttime="20170920 22:25:27.501"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.502" starttime="20170920 22:25:27.496"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.502" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.503" starttime="20170920 22:25:27.502"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.506" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:27.507" starttime="20170920 22:25:27.503"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.507" starttime="20170920 22:25:27.507"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.507" starttime="20170920 22:25:27.502"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.508" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.508" starttime="20170920 22:25:27.507"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.513" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:27.513" starttime="20170920 22:25:27.508"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.514" starttime="20170920 22:25:27.513"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.514" starttime="20170920 22:25:27.507"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.515" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.515" starttime="20170920 22:25:27.514"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.519" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:27.520" starttime="20170920 22:25:27.515"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.520" starttime="20170920 22:25:27.520"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.520" starttime="20170920 22:25:27.514"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.522" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.522" starttime="20170920 22:25:27.521"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.527" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:25:27.527" starttime="20170920 22:25:27.523"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:25:27.527" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:25:27.528" starttime="20170920 22:25:27.527"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.528" starttime="20170920 22:25:27.520"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.528" starttime="20170920 22:25:27.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.533" starttime="20170920 22:25:27.528"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:25:27.536" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:25:27.536" starttime="20170920 22:25:27.533"></status>
</kw>
<msg timestamp="20170920 22:25:27.537" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:25:27.537" starttime="20170920 22:25:26.602"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:25:27.538" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:25:27.538" starttime="20170920 22:25:27.537"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.538" starttime="20170920 22:25:27.538"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:25:27.539" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:25:27.539" starttime="20170920 22:25:27.539"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:25:27.545" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170920 22:25:27.545" starttime="20170920 22:25:27.539"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:25:27.546" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170920 22:25:27.546" starttime="20170920 22:25:27.545"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:25:27.546" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170920 22:25:27.547" starttime="20170920 22:25:27.546"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.547" starttime="20170920 22:25:27.547"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.547" starttime="20170920 22:25:26.600"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:25:27.548" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170920 22:25:27.548" starttime="20170920 22:25:27.548"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.549" starttime="20170920 22:25:27.549"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:25:27.550" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:27.553" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:25:27.553" starttime="20170920 22:25:27.550"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:25:27.553" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.554" starttime="20170920 22:25:27.553"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.554" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.554" starttime="20170920 22:25:27.554"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.558" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:27.558" starttime="20170920 22:25:27.555"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.559" starttime="20170920 22:25:27.558"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.559" starttime="20170920 22:25:27.554"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.560" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.560" starttime="20170920 22:25:27.559"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.565" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:27.565" starttime="20170920 22:25:27.561"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.565" starttime="20170920 22:25:27.565"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.565" starttime="20170920 22:25:27.559"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.566" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.566" starttime="20170920 22:25:27.565"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.569" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:27.569" starttime="20170920 22:25:27.566"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.570" starttime="20170920 22:25:27.570"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.570" starttime="20170920 22:25:27.565"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.571" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.571" starttime="20170920 22:25:27.570"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.575" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:27.575" starttime="20170920 22:25:27.571"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.576" starttime="20170920 22:25:27.575"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.576" starttime="20170920 22:25:27.570"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.576" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.577" starttime="20170920 22:25:27.576"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.580" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:25:27.580" starttime="20170920 22:25:27.577"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:25:27.580" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:25:27.580" starttime="20170920 22:25:27.580"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.581" starttime="20170920 22:25:27.576"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.581" starttime="20170920 22:25:27.554"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.585" starttime="20170920 22:25:27.581"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:25:27.588" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:25:27.588" starttime="20170920 22:25:27.585"></status>
</kw>
<msg timestamp="20170920 22:25:27.588" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:25:27.588" starttime="20170920 22:25:27.549"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:25:27.588" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:25:27.589" starttime="20170920 22:25:27.588"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.589" starttime="20170920 22:25:27.589"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:25:27.590" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:25:27.590" starttime="20170920 22:25:27.589"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:25:27.594" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170920 22:25:27.594" starttime="20170920 22:25:27.590"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:25:27.595" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170920 22:25:27.595" starttime="20170920 22:25:27.594"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:25:27.595" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170920 22:25:27.595" starttime="20170920 22:25:27.595"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.596" starttime="20170920 22:25:27.595"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.596" starttime="20170920 22:25:27.547"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:25:27.597" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170920 22:25:27.597" starttime="20170920 22:25:27.596"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.597" starttime="20170920 22:25:27.597"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:25:27.598" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:27.600" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:25:27.600" starttime="20170920 22:25:27.598"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:25:27.601" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.601" starttime="20170920 22:25:27.601"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.603" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.603" starttime="20170920 22:25:27.602"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.605" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:27.606" starttime="20170920 22:25:27.603"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.607" starttime="20170920 22:25:27.606"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.607" starttime="20170920 22:25:27.601"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.608" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.608" starttime="20170920 22:25:27.607"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.611" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:27.611" starttime="20170920 22:25:27.608"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.611" starttime="20170920 22:25:27.611"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.612" starttime="20170920 22:25:27.607"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.613" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.613" starttime="20170920 22:25:27.612"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.617" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:27.617" starttime="20170920 22:25:27.613"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.617" starttime="20170920 22:25:27.617"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.617" starttime="20170920 22:25:27.612"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.618" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.618" starttime="20170920 22:25:27.618"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.624" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:25:27.624" starttime="20170920 22:25:27.619"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.624" starttime="20170920 22:25:27.624"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.624" starttime="20170920 22:25:27.617"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:25:27.625" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:25:27.625" starttime="20170920 22:25:27.625"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:25:27.628" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:25:27.628" starttime="20170920 22:25:27.625"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:25:27.629" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:25:27.629" starttime="20170920 22:25:27.629"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.629" starttime="20170920 22:25:27.624"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.629" starttime="20170920 22:25:27.601"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.632" starttime="20170920 22:25:27.629"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:25:27.636" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:25:27.636" starttime="20170920 22:25:27.633"></status>
</kw>
<msg timestamp="20170920 22:25:27.636" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:25:27.636" starttime="20170920 22:25:27.598"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:25:27.637" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:25:27.637" starttime="20170920 22:25:27.637"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.638" starttime="20170920 22:25:27.637"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:25:27.638" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:25:27.638" starttime="20170920 22:25:27.638"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:25:27.642" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170920 22:25:27.642" starttime="20170920 22:25:27.638"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:25:27.642" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170920 22:25:27.642" starttime="20170920 22:25:27.642"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:25:27.644" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170920 22:25:27.644" starttime="20170920 22:25:27.643"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.645" starttime="20170920 22:25:27.644"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.645" starttime="20170920 22:25:27.596"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.645" starttime="20170920 22:25:26.475"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.645" starttime="20170920 22:25:25.945"></status>
</kw>
<msg timestamp="20170920 22:25:27.645" level="INFO">${earfcn_list2} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<msg timestamp="20170920 22:25:27.645" level="INFO">${freqency_list2} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<msg timestamp="20170920 22:25:27.645" level="INFO">${band_list2} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170920 22:25:27.645" starttime="20170920 22:25:25.942"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${earfcn_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<assign>
<var>${earfcn_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.652" starttime="20170920 22:25:27.649"></status>
</kw>
<msg timestamp="20170920 22:25:27.652" level="INFO">${earfcn_list} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<status status="PASS" endtime="20170920 22:25:27.652" starttime="20170920 22:25:27.645"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${freqency_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<assign>
<var>${freqency_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.659" starttime="20170920 22:25:27.656"></status>
</kw>
<msg timestamp="20170920 22:25:27.659" level="INFO">${freqency_list} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<status status="PASS" endtime="20170920 22:25:27.659" starttime="20170920 22:25:27.652"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${band_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<assign>
<var>${band_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.666" starttime="20170920 22:25:27.662"></status>
</kw>
<msg timestamp="20170920 22:25:27.666" level="INFO">${band_list} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170920 22:25:27.666" starttime="20170920 22:25:27.659"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170920 22:25:27.667" level="INFO">${cell_index1} = 0</msg>
<status status="PASS" endtime="20170920 22:25:27.667" starttime="20170920 22:25:27.666"></status>
</kw>
<kw type="for" name="${cell_index2} IN [ @{cell_list} ]">
<kw type="foritem" name="${cell_index2} = 2">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.673" starttime="20170920 22:25:27.670"></status>
</kw>
<msg timestamp="20170920 22:25:27.673" level="INFO">${cell_index} = 1</msg>
<status status="PASS" endtime="20170920 22:25:27.674" starttime="20170920 22:25:27.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.681" starttime="20170920 22:25:27.677"></status>
</kw>
<status status="PASS" endtime="20170920 22:25:27.681" starttime="20170920 22:25:27.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:25:27.685" starttime="20170920 22:25:27.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="TM500_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20170920 22:25:29.302" level="INFO">${TM500_PC_CONNECTION} = 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[robot_func.py@29] Can't get variable '${TM500_PC_CONNECTION}' ! details: 'Variable '${TM500_PC_CONNECTION}' not found.'</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 


login:</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester

password:</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@246]  

*===============================================================
Welcome to Microsoft Telnet Server.
*===============================================================
C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8275 -s True</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8275 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 3260.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[process_control.py@74] Process start successed ! process id: 3260</msg>
<msg timestamp="20170920 22:26:56.572" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8275</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 1 user queue.

"</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@412] Get TM500 resource success!</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"
FileZilla Server Interface.exe
FileZilla Server Interface.xml
FileZilla Server.xml
FileZilla server.exe
FzGSS.dll
Uninstall.exe
legal.htm
libeay32.dll
license.txt
readme.htm
ssleay32.dll

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"'</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@591] Prev msg:</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1728] TM500 command to be sent: GSTS</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20170920 22:26:56.573" level="INFO">[tm500.py@1728] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20170920 22:26:56.574" level="INFO">[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20170920 22:26:56.574" level="INFO">[tm500.py@1728] TM500 command to be sent: GETR</msg>
<msg timestamp="20170920 22:26:56.574" level="INFO">[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20170920 22:26:56.574" level="INFO">[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20170920 22:26:56.574" level="INFO">[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20170920 22:26:56.574" level="INFO">[tm500.py@1728] TM500 command to be sent: STRT</msg>
<msg timestamp="20170920 22:26:56.574" level="INFO">[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20170920 22:26:56.574" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20170920 22:26:56.574" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20170920 22:26:56.574" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20170920 22:26:56.574" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<status status="PASS" endtime="20170920 22:26:56.577" starttime="20170920 22:25:27.689"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20170920 22:26:56.582" level="INFO">${TM500_Use_Tag} = used</msg>
<status status="PASS" endtime="20170920 22:26:56.582" starttime="20170920 22:26:56.577"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170920 22:27:00.614" level="INFO">$TA,C,020A*</msg>
<msg timestamp="20170920 22:27:00.614" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,020A*', Receive&lt;-'$TA,C,020A*'</msg>
<msg timestamp="20170920 22:27:00.614" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,020A*'
$TA,C,060A*</msg>
<msg timestamp="20170920 22:27:00.614" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,060A*', Receive&lt;-'$TA,C,060A*'</msg>
<msg timestamp="20170920 22:27:00.614" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,060A*'</msg>
<status status="PASS" endtime="20170920 22:27:00.614" starttime="20170920 22:26:56.582"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: GVER</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@507] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20170920 22:27:03.178" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20170920 22:27:03.179" starttime="20170920 22:27:00.615"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20170920 22:27:03.796" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20170920 22:27:03.796" level="INFO">[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170920_222611_session/170920_222701'</msg>
<msg timestamp="20170920 22:27:03.796" level="INFO">[tm500.py@1352] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170920_222611_session/170920_222701'</msg>
<msg timestamp="20170920 22:27:03.796" level="INFO">[tm500.py@1363] C:\TM500_LOG\170920_222611_session\170920_222701</msg>
<status status="PASS" endtime="20170920 22:27:03.797" starttime="20170920 22:27:03.180"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${modify_tm500_script}</var>
</assign>
<msg timestamp="20170920 22:27:03.797" level="INFO">${modify_tm500_script} = []</msg>
<status status="PASS" endtime="20170920 22:27:03.797" starttime="20170920 22:27:03.797"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${attach_freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:27:03.798" starttime="20170920 22:27:03.798"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_scripts}</arg>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20170920 22:27:15.038" level="INFO">[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 26050</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170920 22:27:15.038" level="INFO">[tm500.py@1673] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x9BD9, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
  Selected PLMN: 26203F
  Pdn Id: 0
  EPS Bearer Id: 5
  Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs
  IPv4 Address: 172.170.44.81
  Attach Result: EPS Only
  Mode: PS 2
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0</msg>
<msg timestamp="20170920 22:27:15.039" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20170920 22:27:15.040" starttime="20170920 22:27:03.798"></status>
</kw>
<kw name="Tm500 Start Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword connects TM500 PPPoE connections by their names.</doc>
<msg timestamp="20170920 22:27:16.650" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:27:16.650" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:27:16.650" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500</msg>
<msg timestamp="20170920 22:27:16.651" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170920 22:27:16.651" level="INFO">[tm500.py@1302] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\Documents and Settings\bts-tester&gt;</msg>
<status status="PASS" endtime="20170920 22:27:16.651" starttime="20170920 22:27:15.040"></status>
</kw>
<kw name="TM500 Log Stop And Fetch" library="ue_resource">
<doc>TM500: stop logging, convert log to csv format, copy logs to local PC.</doc>
<arguments>
<arg>tm500_attach_log${cell_id}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:27:16.668" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:27:16.668" starttime="20170920 22:27:16.659"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<msg timestamp="20170920 22:27:16.669" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\tm500_attach_log2"&gt;D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\tm500_attach_log2&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170920 22:27:16.669" starttime="20170920 22:27:16.668"></status>
</kw>
<kw name="Tm500 Stop Logging" library="tdd_ev_robotws">
<doc>This keyword stops TM500's logging.</doc>
<assign>
<var>${log_folder_path_on_tm500_pc}</var>
</assign>
<msg timestamp="20170920 22:27:17.236" level="INFO">[tm500.py@1376] Prev msg: I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Suitable
I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0
  De Id: 8
  EPS Bearer Id: 5
  PDN IP Address String: 172.170.44.81

I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x37A8, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0</msg>
<msg timestamp="20170920 22:27:17.237" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$STOP_LOGGING</msg>
<msg timestamp="20170920 22:27:17.237" level="INFO">[tm500.py@1736] TM500 command reply: C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170920 22:27:17.237" level="INFO">[tm500.py@1387] TM500 command line response of "STOP LOGGING":
C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170920 22:27:17.237" level="INFO">[tm500.py@1391] TM500 stop logging succeeded.</msg>
<msg timestamp="20170920 22:27:17.237" level="INFO">${log_folder_path_on_tm500_pc} = C:\TM500_LOG\170920_222611_session\170920_222701</msg>
<status status="PASS" endtime="20170920 22:27:17.237" starttime="20170920 22:27:16.669"></status>
</kw>
<kw name="Tm500 Convert Log" library="tdd_ev_robotws">
<doc>This keyword converts TM500 log to csv format files.</doc>
<arguments>
<arg>timeout=${log_convertion_timeout}</arg>
</arguments>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1736] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_TO_TEXT 0</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 44%</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 100%

C: CONVERT_TO_TEXT 0x00 ok.</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\170920_222611_session\170920_222701"</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_COMMAND_LOG started</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1487] I: CONVERT_COMMAND_LOG progress= 7%
I: CONVERT_COMMAND_LOG progress= 15%
I: CONVERT_COMMAND_LOG progress= 23%
I: CONVERT_COMMAND_LOG progress= 31%
I: CONVERT_COMMAND_LOG progress= 39%
I: CONVERT_COMMAND_LOG progress= 47%
I: CONVERT_COMMAND_LOG progress= 55%
I: CONVERT_COMMAND_LOG progress= 62%
I: CONVERT_COMMAND_LOG progress= 70%
I: CONVERT_COMMAND_LOG progress= 78%
I: CONVERT_COMMAND_LOG progress= 86%
I: CONVERT_COMMAND_LOG progress= 94%
C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\170920_222611_SESSION\170920_222701\170920_222611_session_command_log.csv</msg>
<msg timestamp="20170920 22:27:27.577" level="INFO">[tm500.py@1492] TM500 convert log succeeded.</msg>
<status status="PASS" endtime="20170920 22:27:27.580" starttime="20170920 22:27:17.237"></status>
</kw>
<kw name="Tm500 Log Fetch" library="ue_resource">
<doc>TM500 Log fetching.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:27:27.592" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<status status="PASS" endtime="20170920 22:27:27.592" starttime="20170920 22:27:27.582"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170920 22:27:27.592" starttime="20170920 22:27:27.592"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cd /D "${log_folder_path_on_tm500_pc}"</arg>
</arguments>
<msg timestamp="20170920 22:27:28.893" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:27:28.893" level="INFO">[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\170920_222611_session\170920_222701"</msg>
<msg timestamp="20170920 22:27:28.893" level="INFO">[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\170920_222611_session\170920_222701"

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<status status="PASS" endtime="20170920 22:27:28.893" starttime="20170920 22:27:27.593"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cp ../*ommand*og*.txt session_command_log.txt</arg>
</arguments>
<msg timestamp="20170920 22:27:30.204" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:27:30.204" level="INFO">[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt</msg>
<msg timestamp="20170920 22:27:30.204" level="INFO">[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt
cp: cannot stat `../*ommand*og*.txt': No such file or directory

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<status status="PASS" endtime="20170920 22:27:30.204" starttime="20170920 22:27:28.895"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>chmod 777 -R *</arg>
</arguments>
<msg timestamp="20170920 22:27:31.501" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:27:31.501" level="INFO">[telnet_common.py@276] Execute command: chmod 777 -R *</msg>
<msg timestamp="20170920 22:27:31.501" level="INFO">[telnet_common.py@306] Get Response: chmod 777 -R *

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<status status="PASS" endtime="20170920 22:27:31.502" starttime="20170920 22:27:30.204"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zcvf tm500_log.tar *.*</arg>
</arguments>
<status status="PASS" endtime="20170920 22:27:31.502" starttime="20170920 22:27:31.502"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>:\\</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${driver_log_folder}</var>
</assign>
<msg timestamp="20170920 22:27:31.504" level="INFO">${driver_log_folder} = [u'C', u'TM500_LOG\\170920_222611_session\\170920_222701']</msg>
<status status="PASS" endtime="20170920 22:27:31.504" starttime="20170920 22:27:31.503"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${TM500_PC_INFO.IP}</arg>
<arg>21</arg>
<arg>TA_LOG</arg>
<arg>${None}</arg>
<arg>${log_folder_path_on_local_pc}</arg>
<arg>ALL</arg>
<arg>${driver_log_folder[1]}</arg>
</arguments>
<msg timestamp="20170920 22:27:31.824" level="INFO">[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.</msg>
<msg timestamp="20170920 22:27:31.824" level="INFO">[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta
220-written by Tim Kosse (Tim.Kosse@gmx.de)
220 Please visit http://sourceforge.net/projects/filezilla/</msg>
<status status="PASS" endtime="20170920 22:27:31.824" starttime="20170920 22:27:31.504"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:27:31.833" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:27:31.833" starttime="20170920 22:27:31.824"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>cd /D "${log_folder_path_on_local_pc}"</arg>
</arguments>
<status status="PASS" endtime="20170920 22:27:31.833" starttime="20170920 22:27:31.833"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170920 22:27:31.834" starttime="20170920 22:27:31.833"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>chmod 777 -R *</arg>
</arguments>
<status status="PASS" endtime="20170920 22:27:31.834" starttime="20170920 22:27:31.834"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${unzip_result}</arg>
<arg>Run keyword and ignore error</arg>
<arg>Unzip file</arg>
<arg>tm500_log.tar</arg>
<arg>${log_folder_path_on_local_pc}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:27:31.834" starttime="20170920 22:27:31.834"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword if</arg>
<arg>'${unzip_result[0]}' == 'FAIL'</arg>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170920 22:27:31.835" starttime="20170920 22:27:31.835"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>remove file</arg>
<arg>${log_folder_path_on_local_pc}/tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170920 22:27:31.835" starttime="20170920 22:27:31.835"></status>
</kw>
<status status="PASS" endtime="20170920 22:27:31.835" starttime="20170920 22:27:27.581"></status>
</kw>
<status status="PASS" endtime="20170920 22:27:31.835" starttime="20170920 22:27:16.658"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ue_attach_ip}</arg>
<arg>${tm500_attach_result.UE0}</arg>
</arguments>
<msg timestamp="20170920 22:27:31.839" level="INFO">${ue_attach_ip} = 172.170.44.81</msg>
<status status="PASS" endtime="20170920 22:27:31.840" starttime="20170920 22:27:31.836"></status>
</kw>
<status status="PASS" endtime="20170920 22:27:31.840" starttime="20170920 22:25:27.688"></status>
</kw>
<status status="PASS" endtime="20170920 22:27:31.840" starttime="20170920 22:25:27.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:27:31.843" starttime="20170920 22:27:31.840"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="TM500_Detach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:27:31.860" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:27:31.860" starttime="20170920 22:27:31.851"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170920 22:27:33.140" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:27:33.140" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170920 22:27:33.140" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170920 22:27:33.140" starttime="20170920 22:27:31.860"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:27:33.149" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<status status="PASS" endtime="20170920 22:27:33.149" starttime="20170920 22:27:33.141"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170920 22:27:34.485" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:27:34.485" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170920 22:27:34.486" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<status status="PASS" endtime="20170920 22:27:34.486" starttime="20170920 22:27:33.150"></status>
</kw>
<kw name="Tm500 Stop Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword disconnects TM500 PPPoE connection by PPPoE name.</doc>
<msg timestamp="20170920 22:27:35.823" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:27:35.823" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:27:35.823" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT</msg>
<msg timestamp="20170920 22:27:35.823" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<msg timestamp="20170920 22:27:35.823" level="INFO">[tm500.py@1321] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<status status="PASS" endtime="20170920 22:27:35.823" starttime="20170920 22:27:34.486"></status>
</kw>
<kw name="Tm500 Detach" library="tdd_ev_robotws">
<doc>This keyword does UE detach operation of TM500.</doc>
<msg timestamp="20170920 22:27:35.921" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170920 22:27:35.921" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Suitable
I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0

C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170920 22:27:35.921" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte NasConfigEmmDeregister 0</msg>
<msg timestamp="20170920 22:27:35.921" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:27:35.921" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170920 22:27:35.921" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170920 22:27:35.921" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte Activate -1</msg>
<msg timestamp="20170920 22:27:35.921" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<status status="PASS" endtime="20170920 22:27:35.922" starttime="20170920 22:27:35.823"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:27:35.930" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:27:35.931" starttime="20170920 22:27:35.922"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170920 22:27:39.966" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170920 22:27:39.966" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170920 22:27:39.966" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170920 22:27:39.966" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170920 22:27:39.966" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170920 22:27:39.967" starttime="20170920 22:27:35.931"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170920 22:27:57.183" level="INFO">[tm500.py@591] Prev msg: I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0xD377, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0
    Detach Cause: UE Initiated 

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Acceptable</msg>
<msg timestamp="20170920 22:27:57.183" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170920 22:27:57.183" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170920 22:27:57.183" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8275 stopping</msg>
<status status="PASS" endtime="20170920 22:27:57.184" starttime="20170920 22:27:39.967"></status>
</kw>
<status status="PASS" endtime="20170920 22:27:57.184" starttime="20170920 22:27:31.850"></status>
</kw>
<status status="PASS" endtime="20170920 22:27:57.184" starttime="20170920 22:27:31.847"></status>
</kw>
<status status="PASS" endtime="20170920 22:27:57.184" starttime="20170920 22:27:31.844"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index1}+1</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170920 22:27:57.189" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170920 22:27:57.189" starttime="20170920 22:27:57.184"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${cell_index1}</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170920 22:27:57.191" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170920 22:27:57.191" starttime="20170920 22:27:57.190"></status>
</kw>
<status status="PASS" endtime="20170920 22:27:57.191" starttime="20170920 22:25:27.667"></status>
</kw>
<status status="PASS" endtime="20170920 22:27:57.191" starttime="20170920 22:25:27.667"></status>
</kw>
<status status="PASS" endtime="20170920 22:27:57.191" starttime="20170920 22:25:25.932"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:27:57.197" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:27:57.197" starttime="20170920 22:27:57.191"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${block_cell_index}</arg>
<arg>Unblock</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170920 22:27:57.200" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=1', u'HWAction=Unblock', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170920221319\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170920221321\\FZHR_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170920 22:27:57.200" starttime="20170920 22:27:57.199"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170920 22:28:11.466" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="1"
HWAction="Unblock"
LogPath="D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170920222757\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170920 22:28:11.466" starttime="20170920 22:27:57.200"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:11.466" starttime="20170920 22:27:57.198"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5 sec</arg>
</arguments>
<msg timestamp="20170920 22:28:16.466" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170920 22:28:16.466" starttime="20170920 22:28:11.466"></status>
</kw>
<kw name="GUI SM Check BTS HW Status" library="gui_resource">
<doc>This keyword is used to check the status on BTS Hardware panel.</doc>
<arguments>
<arg>AllCell</arg>
<arg>Operational state=Enabled;;Working state=Working</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>CompName=${CompName}</arg>
<arg>CheckField=${CheckField}</arg>
<arg>WaitTime=${WaitTime}</arg>
<arg>CheckSameFlag=${CheckSameFlag}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170920 22:28:16.469" level="INFO">${para_list} = [u'CompName=AllCell', u'CheckField=Operational state=Enabled;;Working state=Working', u'WaitTime=0', u'CheckSameFlag=1', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170920221319\\ev_logs\\FZHR_Operational_Ce...</msg>
<status status="PASS" endtime="20170920 22:28:16.469" starttime="20170920 22:28:16.468"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:16.469" starttime="20170920 22:28:16.469"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170920 22:28:24.735" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
CompName="AllCell"
CheckField="Operational state=Enabled;;Working state=Working"
WaitTime="0"
CheckSameFlag="1"
LogPath="D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170920222816\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170920 22:28:24.735" starttime="20170920 22:28:16.469"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.736" starttime="20170920 22:28:16.467"></status>
</kw>
<kw name="UE_Attach_SISO1" library="SISO1 Resource">
<doc>Example</doc>
<arguments>
<arg>${block_cell_index}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cell_id}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{cell_list}</var>
</assign>
<msg timestamp="20170920 22:28:24.741" level="INFO">@{cell_list} = [ 1 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.741" starttime="20170920 22:28:24.741"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${cell_list}</arg>
</arguments>
<assign>
<var>${cell_list_length}</var>
</assign>
<msg timestamp="20170920 22:28:24.742" level="INFO">Length is 1</msg>
<msg timestamp="20170920 22:28:24.742" level="INFO">${cell_list_length} = 1</msg>
<status status="PASS" endtime="20170920 22:28:24.742" starttime="20170920 22:28:24.742"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Split String</arg>
<arg>${attach_earfcn}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${earfcn_list1}</var>
</assign>
<msg timestamp="20170920 22:28:24.746" level="INFO">${earfcn_list1} = None</msg>
<status status="PASS" endtime="20170920 22:28:24.746" starttime="20170920 22:28:24.742"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Change_Earfcn_To_Freqency</arg>
<arg>${earfcn_list1}</arg>
</arguments>
<assign>
<var>${freqency_list1}</var>
<var>${band_list1}</var>
</assign>
<msg timestamp="20170920 22:28:24.750" level="INFO">${freqency_list1} = None</msg>
<msg timestamp="20170920 22:28:24.750" level="INFO">${band_list1} = None</msg>
<status status="PASS" endtime="20170920 22:28:24.750" starttime="20170920 22:28:24.746"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Get_Earfcn_From_Infomodel</arg>
</arguments>
<assign>
<var>${earfcn_list2}</var>
<var>${freqency_list2}</var>
<var>${band_list2}</var>
</assign>
<kw name="Get_Earfcn_From_Infomodel" library="SISO1 Resource">
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1</arg>
</arguments>
<assign>
<var>@{ret_earfcn}</var>
</assign>
<msg timestamp="20170920 22:28:24.849" level="INFO">[infomodel_control.py@328] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .</msg>
<msg timestamp="20170920 22:28:24.850" level="INFO">@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u's...</msg>
<status status="PASS" endtime="20170920 22:28:24.850" starttime="20170920 22:28:24.754"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${ret_earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.850" starttime="20170920 22:28:24.850"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${earfcn_list}</var>
</assign>
<msg timestamp="20170920 22:28:24.851" level="INFO">${earfcn_list} = []</msg>
<status status="PASS" endtime="20170920 22:28:24.851" starttime="20170920 22:28:24.850"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${freqency_list}</var>
</assign>
<msg timestamp="20170920 22:28:24.851" level="INFO">${freqency_list} = []</msg>
<status status="PASS" endtime="20170920 22:28:24.851" starttime="20170920 22:28:24.851"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${band_list}</var>
</assign>
<msg timestamp="20170920 22:28:24.852" level="INFO">${band_list} = []</msg>
<status status="PASS" endtime="20170920 22:28:24.852" starttime="20170920 22:28:24.851"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_OFFSET}</arg>
</arguments>
<assign>
<var>${offset_dict}</var>
</assign>
<msg timestamp="20170920 22:28:24.852" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:24.855" level="INFO">${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}</msg>
<status status="PASS" endtime="20170920 22:28:24.855" starttime="20170920 22:28:24.852"></status>
</kw>
<kw type="for" name="${index} IN [ @{ret_earfcn} ]">
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1: {u'fcnULs': [37900L], u'fcnDLs': [37900L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:28:24.856" level="INFO">${index.earfcn} = 37900</msg>
<status status="PASS" endtime="20170920 22:28:24.856" starttime="20170920 22:28:24.855"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.857" starttime="20170920 22:28:24.856"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:28:24.858" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:24.860" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:28:24.860" starttime="20170920 22:28:24.858"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:28:24.860" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.861" starttime="20170920 22:28:24.860"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:24.862" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.862" starttime="20170920 22:28:24.861"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:24.865" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:28:24.865" starttime="20170920 22:28:24.862"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:28:24.866" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:28:24.866" starttime="20170920 22:28:24.866"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.866" starttime="20170920 22:28:24.861"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.866" starttime="20170920 22:28:24.861"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.870" starttime="20170920 22:28:24.866"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:28:24.873" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170920 22:28:24.873" starttime="20170920 22:28:24.870"></status>
</kw>
<msg timestamp="20170920 22:28:24.873" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:28:24.873" starttime="20170920 22:28:24.857"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:28:24.874" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:28:24.874" starttime="20170920 22:28:24.874"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.875" starttime="20170920 22:28:24.874"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:28:24.875" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170920 22:28:24.875" starttime="20170920 22:28:24.875"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:28:24.879" level="INFO">${freq} = 25850.0</msg>
<status status="PASS" endtime="20170920 22:28:24.879" starttime="20170920 22:28:24.876"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:28:24.880" level="INFO">${fq} = 25850</msg>
<status status="PASS" endtime="20170920 22:28:24.880" starttime="20170920 22:28:24.879"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:28:24.880" level="INFO">${freqency} = 25850</msg>
<status status="PASS" endtime="20170920 22:28:24.880" starttime="20170920 22:28:24.880"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.882" starttime="20170920 22:28:24.881"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.882" starttime="20170920 22:28:24.855"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:28:24.883" level="INFO">${index.earfcn} = 38100</msg>
<status status="PASS" endtime="20170920 22:28:24.883" starttime="20170920 22:28:24.882"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.883" starttime="20170920 22:28:24.883"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:28:24.885" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:24.887" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:28:24.887" starttime="20170920 22:28:24.885"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:28:24.887" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.887" starttime="20170920 22:28:24.887"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:24.888" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.888" starttime="20170920 22:28:24.888"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:24.892" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:28:24.892" starttime="20170920 22:28:24.889"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:28:24.893" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:28:24.893" starttime="20170920 22:28:24.893"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.893" starttime="20170920 22:28:24.888"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.893" starttime="20170920 22:28:24.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.896" starttime="20170920 22:28:24.893"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:28:24.900" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170920 22:28:24.900" starttime="20170920 22:28:24.896"></status>
</kw>
<msg timestamp="20170920 22:28:24.900" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:28:24.901" starttime="20170920 22:28:24.884"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:28:24.901" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:28:24.901" starttime="20170920 22:28:24.901"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.902" starttime="20170920 22:28:24.901"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:28:24.902" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170920 22:28:24.902" starttime="20170920 22:28:24.902"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:28:24.906" level="INFO">${freq} = 26050.0</msg>
<status status="PASS" endtime="20170920 22:28:24.906" starttime="20170920 22:28:24.903"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:28:24.906" level="INFO">${fq} = 26050</msg>
<status status="PASS" endtime="20170920 22:28:24.906" starttime="20170920 22:28:24.906"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:28:24.907" level="INFO">${freqency} = 26050</msg>
<status status="PASS" endtime="20170920 22:28:24.907" starttime="20170920 22:28:24.907"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.908" starttime="20170920 22:28:24.907"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.908" starttime="20170920 22:28:24.882"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:28:24.908" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170920 22:28:24.908" starttime="20170920 22:28:24.908"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.909" starttime="20170920 22:28:24.909"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:28:24.910" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:24.912" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:28:24.912" starttime="20170920 22:28:24.910"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:28:24.913" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.913" starttime="20170920 22:28:24.913"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:24.914" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.914" starttime="20170920 22:28:24.914"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:24.918" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:24.918" starttime="20170920 22:28:24.914"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.918" starttime="20170920 22:28:24.918"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.918" starttime="20170920 22:28:24.913"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:24.919" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.919" starttime="20170920 22:28:24.919"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:24.923" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:24.923" starttime="20170920 22:28:24.919"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.923" starttime="20170920 22:28:24.923"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.923" starttime="20170920 22:28:24.918"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:24.924" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.924" starttime="20170920 22:28:24.923"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:24.927" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:24.928" starttime="20170920 22:28:24.924"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.928" starttime="20170920 22:28:24.928"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.928" starttime="20170920 22:28:24.923"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:24.929" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.929" starttime="20170920 22:28:24.928"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:24.934" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:24.934" starttime="20170920 22:28:24.929"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.935" starttime="20170920 22:28:24.934"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.935" starttime="20170920 22:28:24.928"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:24.936" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.936" starttime="20170920 22:28:24.935"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:24.939" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:28:24.939" starttime="20170920 22:28:24.936"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:28:24.940" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:28:24.940" starttime="20170920 22:28:24.939"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.940" starttime="20170920 22:28:24.935"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.940" starttime="20170920 22:28:24.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.944" starttime="20170920 22:28:24.941"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:28:24.947" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:28:24.948" starttime="20170920 22:28:24.945"></status>
</kw>
<msg timestamp="20170920 22:28:24.948" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:28:24.948" starttime="20170920 22:28:24.909"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:28:24.948" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:28:24.948" starttime="20170920 22:28:24.948"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.949" starttime="20170920 22:28:24.949"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:28:24.950" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:28:24.950" starttime="20170920 22:28:24.949"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:28:24.954" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170920 22:28:24.954" starttime="20170920 22:28:24.950"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:28:24.954" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170920 22:28:24.955" starttime="20170920 22:28:24.954"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:28:24.955" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170920 22:28:24.955" starttime="20170920 22:28:24.955"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.956" starttime="20170920 22:28:24.955"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.956" starttime="20170920 22:28:24.908"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:28:24.957" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170920 22:28:24.957" starttime="20170920 22:28:24.956"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.957" starttime="20170920 22:28:24.957"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:28:24.959" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:24.961" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:28:24.962" starttime="20170920 22:28:24.958"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:28:24.963" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.963" starttime="20170920 22:28:24.963"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:24.964" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.964" starttime="20170920 22:28:24.964"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:24.968" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:24.968" starttime="20170920 22:28:24.965"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.968" starttime="20170920 22:28:24.968"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.968" starttime="20170920 22:28:24.963"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:24.969" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.969" starttime="20170920 22:28:24.969"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:24.974" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:24.974" starttime="20170920 22:28:24.969"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.974" starttime="20170920 22:28:24.974"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.974" starttime="20170920 22:28:24.968"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:24.975" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.975" starttime="20170920 22:28:24.975"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:24.979" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:24.979" starttime="20170920 22:28:24.976"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.980" starttime="20170920 22:28:24.979"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.980" starttime="20170920 22:28:24.974"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:24.980" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.981" starttime="20170920 22:28:24.980"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:24.985" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:24.985" starttime="20170920 22:28:24.981"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.986" starttime="20170920 22:28:24.985"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.986" starttime="20170920 22:28:24.980"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:24.987" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:28:24.987" starttime="20170920 22:28:24.986"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:24.990" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:28:24.990" starttime="20170920 22:28:24.987"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:28:24.991" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:28:24.991" starttime="20170920 22:28:24.990"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.991" starttime="20170920 22:28:24.986"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:24.991" starttime="20170920 22:28:24.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:24.995" starttime="20170920 22:28:24.991"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:28:24.999" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:28:24.999" starttime="20170920 22:28:24.996"></status>
</kw>
<msg timestamp="20170920 22:28:24.999" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:28:24.999" starttime="20170920 22:28:24.958"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:28:24.999" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:28:24.999" starttime="20170920 22:28:24.999"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.000" starttime="20170920 22:28:25.000"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:28:25.001" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:28:25.001" starttime="20170920 22:28:25.000"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:28:25.005" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170920 22:28:25.005" starttime="20170920 22:28:25.001"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:28:25.005" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170920 22:28:25.005" starttime="20170920 22:28:25.005"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:28:25.006" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170920 22:28:25.006" starttime="20170920 22:28:25.006"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.007" starttime="20170920 22:28:25.006"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.007" starttime="20170920 22:28:24.956"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:28:25.008" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170920 22:28:25.008" starttime="20170920 22:28:25.007"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.008" starttime="20170920 22:28:25.008"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:28:25.009" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:25.011" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:28:25.011" starttime="20170920 22:28:25.009"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:28:25.013" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:28:25.013" starttime="20170920 22:28:25.012"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:25.014" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:28:25.014" starttime="20170920 22:28:25.013"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:25.017" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:25.017" starttime="20170920 22:28:25.014"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.018" starttime="20170920 22:28:25.017"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.018" starttime="20170920 22:28:25.013"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:25.019" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:28:25.019" starttime="20170920 22:28:25.018"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:25.022" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:25.022" starttime="20170920 22:28:25.019"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.023" starttime="20170920 22:28:25.023"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.023" starttime="20170920 22:28:25.018"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:25.024" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:28:25.024" starttime="20170920 22:28:25.023"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:25.027" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:25.027" starttime="20170920 22:28:25.024"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.028" starttime="20170920 22:28:25.028"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.028" starttime="20170920 22:28:25.023"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:25.029" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:28:25.029" starttime="20170920 22:28:25.028"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:25.032" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:25.033" starttime="20170920 22:28:25.029"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.033" starttime="20170920 22:28:25.033"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.033" starttime="20170920 22:28:25.028"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:25.034" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:28:25.034" starttime="20170920 22:28:25.033"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:25.037" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:28:25.037" starttime="20170920 22:28:25.034"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:28:25.038" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:28:25.038" starttime="20170920 22:28:25.038"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.038" starttime="20170920 22:28:25.033"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.038" starttime="20170920 22:28:25.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.041" starttime="20170920 22:28:25.038"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:28:25.044" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:28:25.044" starttime="20170920 22:28:25.042"></status>
</kw>
<msg timestamp="20170920 22:28:25.045" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:28:25.045" starttime="20170920 22:28:25.008"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:28:25.045" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:28:25.045" starttime="20170920 22:28:25.045"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.046" starttime="20170920 22:28:25.046"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:28:25.046" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:28:25.046" starttime="20170920 22:28:25.046"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:28:25.050" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170920 22:28:25.050" starttime="20170920 22:28:25.047"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:28:25.051" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170920 22:28:25.051" starttime="20170920 22:28:25.050"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:28:25.051" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170920 22:28:25.051" starttime="20170920 22:28:25.051"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.052" starttime="20170920 22:28:25.052"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.052" starttime="20170920 22:28:25.007"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:28:25.053" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170920 22:28:25.053" starttime="20170920 22:28:25.053"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.054" starttime="20170920 22:28:25.053"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:28:25.055" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:25.057" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:28:25.057" starttime="20170920 22:28:25.055"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:28:25.058" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:28:25.058" starttime="20170920 22:28:25.058"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:25.059" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:28:25.059" starttime="20170920 22:28:25.059"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:25.064" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:25.064" starttime="20170920 22:28:25.060"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.065" starttime="20170920 22:28:25.064"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.065" starttime="20170920 22:28:25.058"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:25.066" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:28:25.066" starttime="20170920 22:28:25.065"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:25.070" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:25.070" starttime="20170920 22:28:25.066"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.070" starttime="20170920 22:28:25.070"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.070" starttime="20170920 22:28:25.065"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:25.071" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:28:25.071" starttime="20170920 22:28:25.071"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:25.075" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:25.076" starttime="20170920 22:28:25.072"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.076" starttime="20170920 22:28:25.076"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.076" starttime="20170920 22:28:25.070"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:25.077" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:28:25.077" starttime="20170920 22:28:25.077"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:25.081" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:28:25.081" starttime="20170920 22:28:25.078"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.081" starttime="20170920 22:28:25.081"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.081" starttime="20170920 22:28:25.076"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:28:25.082" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:28:25.082" starttime="20170920 22:28:25.082"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:28:25.086" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:28:25.086" starttime="20170920 22:28:25.082"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:28:25.086" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:28:25.086" starttime="20170920 22:28:25.086"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.087" starttime="20170920 22:28:25.081"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.087" starttime="20170920 22:28:25.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.090" starttime="20170920 22:28:25.087"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:28:25.093" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:28:25.093" starttime="20170920 22:28:25.090"></status>
</kw>
<msg timestamp="20170920 22:28:25.093" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:28:25.093" starttime="20170920 22:28:25.054"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:28:25.094" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:28:25.094" starttime="20170920 22:28:25.093"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.095" starttime="20170920 22:28:25.094"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:28:25.095" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:28:25.095" starttime="20170920 22:28:25.095"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:28:25.098" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170920 22:28:25.099" starttime="20170920 22:28:25.095"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:28:25.099" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170920 22:28:25.099" starttime="20170920 22:28:25.099"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:28:25.100" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170920 22:28:25.100" starttime="20170920 22:28:25.099"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.100" starttime="20170920 22:28:25.100"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.100" starttime="20170920 22:28:25.052"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.100" starttime="20170920 22:28:24.855"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.101" starttime="20170920 22:28:24.754"></status>
</kw>
<msg timestamp="20170920 22:28:25.101" level="INFO">${earfcn_list2} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<msg timestamp="20170920 22:28:25.101" level="INFO">${freqency_list2} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<msg timestamp="20170920 22:28:25.101" level="INFO">${band_list2} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170920 22:28:25.101" starttime="20170920 22:28:24.751"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${earfcn_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<assign>
<var>${earfcn_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.108" starttime="20170920 22:28:25.105"></status>
</kw>
<msg timestamp="20170920 22:28:25.108" level="INFO">${earfcn_list} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<status status="PASS" endtime="20170920 22:28:25.108" starttime="20170920 22:28:25.101"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${freqency_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<assign>
<var>${freqency_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.114" starttime="20170920 22:28:25.111"></status>
</kw>
<msg timestamp="20170920 22:28:25.114" level="INFO">${freqency_list} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<status status="PASS" endtime="20170920 22:28:25.114" starttime="20170920 22:28:25.108"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${band_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<assign>
<var>${band_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.121" starttime="20170920 22:28:25.118"></status>
</kw>
<msg timestamp="20170920 22:28:25.121" level="INFO">${band_list} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170920 22:28:25.121" starttime="20170920 22:28:25.115"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170920 22:28:25.122" level="INFO">${cell_index1} = 0</msg>
<status status="PASS" endtime="20170920 22:28:25.122" starttime="20170920 22:28:25.121"></status>
</kw>
<kw type="for" name="${cell_index2} IN [ @{cell_list} ]">
<kw type="foritem" name="${cell_index2} = 1">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.129" starttime="20170920 22:28:25.126"></status>
</kw>
<msg timestamp="20170920 22:28:25.129" level="INFO">${cell_index} = 0</msg>
<status status="PASS" endtime="20170920 22:28:25.129" starttime="20170920 22:28:25.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.136" starttime="20170920 22:28:25.133"></status>
</kw>
<status status="PASS" endtime="20170920 22:28:25.136" starttime="20170920 22:28:25.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:28:25.140" starttime="20170920 22:28:25.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="TM500_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20170920 22:29:51.229" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8274 -s True</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8274 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 436.

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[process_control.py@74] Process start successed ! process id: 436</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8274</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 1 user queue.

"</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[tm500.py@412] Get TM500 resource success!</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"</msg>
<msg timestamp="20170920 22:29:51.229" level="INFO">[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"
FileZilla Server Interface.exe
FileZilla Server Interface.xml
FileZilla Server.xml
FileZilla server.exe
FzGSS.dll
Uninstall.exe
legal.htm
libeay32.dll
license.txt
readme.htm
ssleay32.dll

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"'</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@591] Prev msg:</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1728] TM500 command to be sent: GSTS</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1728] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1728] TM500 command to be sent: GETR</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1728] TM500 command to be sent: STRT</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20170920 22:29:51.230" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<status status="PASS" endtime="20170920 22:29:51.235" starttime="20170920 22:28:25.144"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20170920 22:29:51.236" level="INFO">${TM500_Use_Tag} = used</msg>
<status status="PASS" endtime="20170920 22:29:51.236" starttime="20170920 22:29:51.235"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170920 22:29:55.268" level="INFO">$TA,C,020A*</msg>
<msg timestamp="20170920 22:29:55.268" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,020A*', Receive&lt;-'$TA,C,020A*'</msg>
<msg timestamp="20170920 22:29:55.268" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,020A*'
$TA,C,060A*</msg>
<msg timestamp="20170920 22:29:55.268" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,060A*', Receive&lt;-'$TA,C,060A*'</msg>
<msg timestamp="20170920 22:29:55.268" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,060A*'</msg>
<status status="PASS" endtime="20170920 22:29:55.268" starttime="20170920 22:29:51.236"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: GVER</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@507] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20170920 22:29:57.846" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20170920 22:29:57.847" starttime="20170920 22:29:55.269"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20170920 22:29:58.471" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20170920 22:29:58.471" level="INFO">[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170920_222905_session/170920_222956'</msg>
<msg timestamp="20170920 22:29:58.471" level="INFO">[tm500.py@1352] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170920_222905_session/170920_222956'</msg>
<msg timestamp="20170920 22:29:58.471" level="INFO">[tm500.py@1363] C:\TM500_LOG\170920_222905_session\170920_222956</msg>
<status status="PASS" endtime="20170920 22:29:58.471" starttime="20170920 22:29:57.848"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${modify_tm500_script}</var>
</assign>
<msg timestamp="20170920 22:29:58.474" level="INFO">${modify_tm500_script} = []</msg>
<status status="PASS" endtime="20170920 22:29:58.474" starttime="20170920 22:29:58.473"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${attach_freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:29:58.475" starttime="20170920 22:29:58.474"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_scripts}</arg>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20170920 22:30:09.773" level="INFO">[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 25850</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170920 22:30:09.773" level="INFO">[tm500.py@1673] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x9BD9, TimingAdv: 3, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
  Selected PLMN: 26203F
  Pdn Id: 0
  EPS Bearer Id: 5
  Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs
  IPv4 Address: 172.170.30.251
  Attach Result: EPS Only
  Mode: PS 2
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0</msg>
<msg timestamp="20170920 22:30:09.774" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20170920 22:30:09.774" starttime="20170920 22:29:58.475"></status>
</kw>
<kw name="Tm500 Start Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword connects TM500 PPPoE connections by their names.</doc>
<msg timestamp="20170920 22:30:11.277" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:30:11.277" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:30:11.277" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500</msg>
<msg timestamp="20170920 22:30:11.277" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<msg timestamp="20170920 22:30:11.277" level="INFO">[tm500.py@1302] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170920_222611_session\170920_222701&gt;</msg>
<status status="PASS" endtime="20170920 22:30:11.277" starttime="20170920 22:30:09.774"></status>
</kw>
<kw name="TM500 Log Stop And Fetch" library="ue_resource">
<doc>TM500: stop logging, convert log to csv format, copy logs to local PC.</doc>
<arguments>
<arg>tm500_attach_log${cell_id}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:30:11.293" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:30:11.293" starttime="20170920 22:30:11.285"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<msg timestamp="20170920 22:30:11.295" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\tm500_attach_log1"&gt;D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\tm500_attach_log1&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170920 22:30:11.295" starttime="20170920 22:30:11.294"></status>
</kw>
<kw name="Tm500 Stop Logging" library="tdd_ev_robotws">
<doc>This keyword stops TM500's logging.</doc>
<assign>
<var>${log_folder_path_on_tm500_pc}</var>
</assign>
<msg timestamp="20170920 22:30:11.862" level="INFO">[tm500.py@1376] Prev msg: I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0
  De Id: 8
  EPS Bearer Id: 5
  PDN IP Address String: 172.170.30.251

I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0xA6E4, TimingAdv: 3, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0</msg>
<msg timestamp="20170920 22:30:11.863" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$STOP_LOGGING</msg>
<msg timestamp="20170920 22:30:11.863" level="INFO">[tm500.py@1736] TM500 command reply: C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170920 22:30:11.863" level="INFO">[tm500.py@1387] TM500 command line response of "STOP LOGGING":
C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170920 22:30:11.863" level="INFO">[tm500.py@1391] TM500 stop logging succeeded.</msg>
<msg timestamp="20170920 22:30:11.863" level="INFO">${log_folder_path_on_tm500_pc} = C:\TM500_LOG\170920_222905_session\170920_222956</msg>
<status status="PASS" endtime="20170920 22:30:11.863" starttime="20170920 22:30:11.295"></status>
</kw>
<kw name="Tm500 Convert Log" library="tdd_ev_robotws">
<doc>This keyword converts TM500 log to csv format files.</doc>
<arguments>
<arg>timeout=${log_convertion_timeout}</arg>
</arguments>
<msg timestamp="20170920 22:30:22.232" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0</msg>
<msg timestamp="20170920 22:30:22.232" level="INFO">[tm500.py@1736] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.</msg>
<msg timestamp="20170920 22:30:22.232" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_TO_TEXT 0</msg>
<msg timestamp="20170920 22:30:22.232" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170920 22:30:22.232" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170920 22:30:22.232" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170920 22:30:22.232" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170920 22:30:22.232" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170920 22:30:22.232" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170920 22:30:22.232" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170920 22:30:22.232" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170920 22:30:22.232" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 44%</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 100%

C: CONVERT_TO_TEXT 0x00 ok.</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\170920_222905_session\170920_222956"</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_COMMAND_LOG started</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1487] I: CONVERT_COMMAND_LOG progress= 8%
I: CONVERT_COMMAND_LOG progress= 16%
I: CONVERT_COMMAND_LOG progress= 24%
I: CONVERT_COMMAND_LOG progress= 32%
I: CONVERT_COMMAND_LOG progress= 40%
I: CONVERT_COMMAND_LOG progress= 48%
I: CONVERT_COMMAND_LOG progress= 56%
I: CONVERT_COMMAND_LOG progress= 64%
I: CONVERT_COMMAND_LOG progress= 72%
I: CONVERT_COMMAND_LOG progress= 80%
I: CONVERT_COMMAND_LOG progress= 88%
I: CONVERT_COMMAND_LOG progress= 96%
C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\170920_222905_SESSION\170920_222956\170920_222905_session_command_log.csv</msg>
<msg timestamp="20170920 22:30:22.233" level="INFO">[tm500.py@1492] TM500 convert log succeeded.</msg>
<status status="PASS" endtime="20170920 22:30:22.235" starttime="20170920 22:30:11.863"></status>
</kw>
<kw name="Tm500 Log Fetch" library="ue_resource">
<doc>TM500 Log fetching.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:30:22.246" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<status status="PASS" endtime="20170920 22:30:22.246" starttime="20170920 22:30:22.237"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170920 22:30:22.247" starttime="20170920 22:30:22.247"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cd /D "${log_folder_path_on_tm500_pc}"</arg>
</arguments>
<msg timestamp="20170920 22:30:23.545" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:30:23.545" level="INFO">[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\170920_222905_session\170920_222956"</msg>
<msg timestamp="20170920 22:30:23.545" level="INFO">[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\170920_222905_session\170920_222956"

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<status status="PASS" endtime="20170920 22:30:23.546" starttime="20170920 22:30:22.247"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cp ../*ommand*og*.txt session_command_log.txt</arg>
</arguments>
<msg timestamp="20170920 22:30:24.858" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:30:24.858" level="INFO">[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt</msg>
<msg timestamp="20170920 22:30:24.858" level="INFO">[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt
cp: cannot stat `../*ommand*og*.txt': No such file or directory

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<status status="PASS" endtime="20170920 22:30:24.858" starttime="20170920 22:30:23.546"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>chmod 777 -R *</arg>
</arguments>
<msg timestamp="20170920 22:30:26.170" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:30:26.170" level="INFO">[telnet_common.py@276] Execute command: chmod 777 -R *</msg>
<msg timestamp="20170920 22:30:26.170" level="INFO">[telnet_common.py@306] Get Response: chmod 777 -R *

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<status status="PASS" endtime="20170920 22:30:26.171" starttime="20170920 22:30:24.858"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zcvf tm500_log.tar *.*</arg>
</arguments>
<status status="PASS" endtime="20170920 22:30:26.171" starttime="20170920 22:30:26.171"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>:\\</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${driver_log_folder}</var>
</assign>
<msg timestamp="20170920 22:30:26.172" level="INFO">${driver_log_folder} = [u'C', u'TM500_LOG\\170920_222905_session\\170920_222956']</msg>
<status status="PASS" endtime="20170920 22:30:26.172" starttime="20170920 22:30:26.172"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${TM500_PC_INFO.IP}</arg>
<arg>21</arg>
<arg>TA_LOG</arg>
<arg>${None}</arg>
<arg>${log_folder_path_on_local_pc}</arg>
<arg>ALL</arg>
<arg>${driver_log_folder[1]}</arg>
</arguments>
<msg timestamp="20170920 22:30:26.511" level="INFO">[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.</msg>
<msg timestamp="20170920 22:30:26.511" level="INFO">[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta
220-written by Tim Kosse (Tim.Kosse@gmx.de)
220 Please visit http://sourceforge.net/projects/filezilla/</msg>
<status status="PASS" endtime="20170920 22:30:26.511" starttime="20170920 22:30:26.172"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:30:26.521" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:30:26.521" starttime="20170920 22:30:26.512"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>cd /D "${log_folder_path_on_local_pc}"</arg>
</arguments>
<status status="PASS" endtime="20170920 22:30:26.521" starttime="20170920 22:30:26.521"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170920 22:30:26.522" starttime="20170920 22:30:26.522"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>chmod 777 -R *</arg>
</arguments>
<status status="PASS" endtime="20170920 22:30:26.522" starttime="20170920 22:30:26.522"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${unzip_result}</arg>
<arg>Run keyword and ignore error</arg>
<arg>Unzip file</arg>
<arg>tm500_log.tar</arg>
<arg>${log_folder_path_on_local_pc}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:30:26.523" starttime="20170920 22:30:26.523"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword if</arg>
<arg>'${unzip_result[0]}' == 'FAIL'</arg>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170920 22:30:26.523" starttime="20170920 22:30:26.523"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>remove file</arg>
<arg>${log_folder_path_on_local_pc}/tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170920 22:30:26.524" starttime="20170920 22:30:26.524"></status>
</kw>
<status status="PASS" endtime="20170920 22:30:26.524" starttime="20170920 22:30:22.236"></status>
</kw>
<status status="PASS" endtime="20170920 22:30:26.524" starttime="20170920 22:30:11.284"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ue_attach_ip}</arg>
<arg>${tm500_attach_result.UE0}</arg>
</arguments>
<msg timestamp="20170920 22:30:26.525" level="INFO">${ue_attach_ip} = 172.170.30.251</msg>
<status status="PASS" endtime="20170920 22:30:26.525" starttime="20170920 22:30:26.524"></status>
</kw>
<status status="PASS" endtime="20170920 22:30:26.525" starttime="20170920 22:28:25.143"></status>
</kw>
<status status="PASS" endtime="20170920 22:30:26.525" starttime="20170920 22:28:25.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:30:26.531" starttime="20170920 22:30:26.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="TM500_Detach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:30:26.552" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:30:26.553" starttime="20170920 22:30:26.541"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170920 22:30:27.883" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:30:27.883" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170920 22:30:27.883" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170920 22:30:27.883" starttime="20170920 22:30:26.553"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:30:27.891" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<status status="PASS" endtime="20170920 22:30:27.891" starttime="20170920 22:30:27.883"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170920 22:30:29.237" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:30:29.237" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170920 22:30:29.237" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<status status="PASS" endtime="20170920 22:30:29.237" starttime="20170920 22:30:27.892"></status>
</kw>
<kw name="Tm500 Stop Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword disconnects TM500 PPPoE connection by PPPoE name.</doc>
<msg timestamp="20170920 22:30:30.568" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:30:30.568" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:30:30.568" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT</msg>
<msg timestamp="20170920 22:30:30.568" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<msg timestamp="20170920 22:30:30.568" level="INFO">[tm500.py@1321] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<status status="PASS" endtime="20170920 22:30:30.569" starttime="20170920 22:30:29.237"></status>
</kw>
<kw name="Tm500 Detach" library="tdd_ev_robotws">
<doc>This keyword does UE detach operation of TM500.</doc>
<msg timestamp="20170920 22:30:30.643" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170920 22:30:30.643" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0

C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170920 22:30:30.643" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte NasConfigEmmDeregister 0</msg>
<msg timestamp="20170920 22:30:30.643" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:30:30.643" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170920 22:30:30.643" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170920 22:30:30.643" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte Activate -1</msg>
<msg timestamp="20170920 22:30:30.643" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<status status="PASS" endtime="20170920 22:30:30.644" starttime="20170920 22:30:30.569"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:30:30.652" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:30:30.652" starttime="20170920 22:30:30.644"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170920 22:30:34.693" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170920 22:30:34.693" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170920 22:30:34.693" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170920 22:30:34.693" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170920 22:30:34.693" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170920 22:30:34.694" starttime="20170920 22:30:30.652"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170920 22:30:51.818" level="INFO">[tm500.py@591] Prev msg: I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x7A51, TimingAdv: 3, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0
    Detach Cause: UE Initiated 

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Acceptable</msg>
<msg timestamp="20170920 22:30:51.818" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170920 22:30:51.818" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170920 22:30:51.818" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8274 stopping</msg>
<status status="PASS" endtime="20170920 22:30:51.818" starttime="20170920 22:30:34.694"></status>
</kw>
<status status="PASS" endtime="20170920 22:30:51.818" starttime="20170920 22:30:26.541"></status>
</kw>
<status status="PASS" endtime="20170920 22:30:51.818" starttime="20170920 22:30:26.536"></status>
</kw>
<status status="PASS" endtime="20170920 22:30:51.818" starttime="20170920 22:30:26.531"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index1}+1</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170920 22:30:51.822" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170920 22:30:51.822" starttime="20170920 22:30:51.818"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${cell_index1}</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170920 22:30:51.824" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170920 22:30:51.824" starttime="20170920 22:30:51.823"></status>
</kw>
<status status="PASS" endtime="20170920 22:30:51.824" starttime="20170920 22:28:25.122"></status>
</kw>
<status status="PASS" endtime="20170920 22:30:51.824" starttime="20170920 22:28:25.122"></status>
</kw>
<status status="PASS" endtime="20170920 22:30:51.824" starttime="20170920 22:28:24.740"></status>
</kw>
<status status="PASS" endtime="20170920 22:30:51.824" starttime="20170920 22:22:39.227"></status>
</kw>
<kw name="_Cell_Block_Unblock_and_Attach">
<doc>Operation with BTS</doc>
<arguments>
<arg>${cell_index_2}</arg>
<arg>${cell_index_1}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:30:51.829" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:30:51.829" starttime="20170920 22:30:51.825"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170920 22:30:55.755" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:30:55.755" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170920 22:30:55.755" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="5556"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:30:55.755" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:30:55.755" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170920 22:30:55.755" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="2152"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:30:55.755" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:30:55.755" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170920 22:30:55.756" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.


C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170920 22:30:55.756" starttime="20170920 22:30:51.829"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20170920 22:30:55.762" starttime="20170920 22:30:55.762"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20170920 22:30:55.767" starttime="20170920 22:30:55.763"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170920 22:30:55.768" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170920221319\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170920221321\\FZHR_Operational_Cell_...</msg>
<status status="PASS" endtime="20170920 22:30:55.768" starttime="20170920 22:30:55.767"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:30:55.768" starttime="20170920 22:30:55.768"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170920 22:31:42.534" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170920223055\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170920 22:31:42.534" starttime="20170920 22:30:55.769"></status>
</kw>
<status status="PASS" endtime="20170920 22:31:42.534" starttime="20170920 22:30:55.761"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>30 sec</arg>
</arguments>
<msg timestamp="20170920 22:32:12.535" level="INFO">Slept 30 seconds</msg>
<status status="PASS" endtime="20170920 22:32:12.535" starttime="20170920 22:31:42.535"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${block_cell_index}</arg>
<arg>Block</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170920 22:32:12.538" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=2', u'HWAction=Block', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170920221319\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170920221321\\FZHR_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170920 22:32:12.538" starttime="20170920 22:32:12.537"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170920 22:32:37.940" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="2"
HWAction="Block"
LogPath="D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170920223212\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170920 22:32:37.940" starttime="20170920 22:32:12.538"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:37.940" starttime="20170920 22:32:12.536"></status>
</kw>
<kw name="UE_Attach_SISO1" library="SISO1 Resource">
<doc>Example</doc>
<arguments>
<arg>${attach_cell_index}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cell_id}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{cell_list}</var>
</assign>
<msg timestamp="20170920 22:32:37.945" level="INFO">@{cell_list} = [ 1 ]</msg>
<status status="PASS" endtime="20170920 22:32:37.945" starttime="20170920 22:32:37.944"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${cell_list}</arg>
</arguments>
<assign>
<var>${cell_list_length}</var>
</assign>
<msg timestamp="20170920 22:32:37.945" level="INFO">Length is 1</msg>
<msg timestamp="20170920 22:32:37.945" level="INFO">${cell_list_length} = 1</msg>
<status status="PASS" endtime="20170920 22:32:37.945" starttime="20170920 22:32:37.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Split String</arg>
<arg>${attach_earfcn}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${earfcn_list1}</var>
</assign>
<msg timestamp="20170920 22:32:37.950" level="INFO">${earfcn_list1} = None</msg>
<status status="PASS" endtime="20170920 22:32:37.951" starttime="20170920 22:32:37.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Change_Earfcn_To_Freqency</arg>
<arg>${earfcn_list1}</arg>
</arguments>
<assign>
<var>${freqency_list1}</var>
<var>${band_list1}</var>
</assign>
<msg timestamp="20170920 22:32:37.954" level="INFO">${freqency_list1} = None</msg>
<msg timestamp="20170920 22:32:37.954" level="INFO">${band_list1} = None</msg>
<status status="PASS" endtime="20170920 22:32:37.954" starttime="20170920 22:32:37.951"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Get_Earfcn_From_Infomodel</arg>
</arguments>
<assign>
<var>${earfcn_list2}</var>
<var>${freqency_list2}</var>
<var>${band_list2}</var>
</assign>
<kw name="Get_Earfcn_From_Infomodel" library="SISO1 Resource">
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1</arg>
</arguments>
<assign>
<var>@{ret_earfcn}</var>
</assign>
<msg timestamp="20170920 22:32:38.041" level="INFO">[infomodel_control.py@328] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .</msg>
<msg timestamp="20170920 22:32:38.041" level="INFO">@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u's...</msg>
<status status="PASS" endtime="20170920 22:32:38.041" starttime="20170920 22:32:37.961"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${ret_earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.042" starttime="20170920 22:32:38.042"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${earfcn_list}</var>
</assign>
<msg timestamp="20170920 22:32:38.043" level="INFO">${earfcn_list} = []</msg>
<status status="PASS" endtime="20170920 22:32:38.043" starttime="20170920 22:32:38.042"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${freqency_list}</var>
</assign>
<msg timestamp="20170920 22:32:38.043" level="INFO">${freqency_list} = []</msg>
<status status="PASS" endtime="20170920 22:32:38.043" starttime="20170920 22:32:38.043"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${band_list}</var>
</assign>
<msg timestamp="20170920 22:32:38.044" level="INFO">${band_list} = []</msg>
<status status="PASS" endtime="20170920 22:32:38.044" starttime="20170920 22:32:38.043"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_OFFSET}</arg>
</arguments>
<assign>
<var>${offset_dict}</var>
</assign>
<msg timestamp="20170920 22:32:38.044" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.046" level="INFO">${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}</msg>
<status status="PASS" endtime="20170920 22:32:38.046" starttime="20170920 22:32:38.044"></status>
</kw>
<kw type="for" name="${index} IN [ @{ret_earfcn} ]">
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1: {u'fcnULs': [37900L], u'fcnDLs': [37900L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:32:38.048" level="INFO">${index.earfcn} = 37900</msg>
<status status="PASS" endtime="20170920 22:32:38.048" starttime="20170920 22:32:38.047"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.048" starttime="20170920 22:32:38.048"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:32:38.050" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.052" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:32:38.052" starttime="20170920 22:32:38.050"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:32:38.052" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.053" starttime="20170920 22:32:38.052"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.054" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.054" starttime="20170920 22:32:38.053"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.057" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:32:38.057" starttime="20170920 22:32:38.054"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:32:38.058" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:32:38.058" starttime="20170920 22:32:38.058"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.058" starttime="20170920 22:32:38.053"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.058" starttime="20170920 22:32:38.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.062" starttime="20170920 22:32:38.058"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:32:38.065" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170920 22:32:38.066" starttime="20170920 22:32:38.062"></status>
</kw>
<msg timestamp="20170920 22:32:38.066" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:32:38.066" starttime="20170920 22:32:38.048"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:32:38.066" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:32:38.066" starttime="20170920 22:32:38.066"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.067" starttime="20170920 22:32:38.067"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:32:38.068" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170920 22:32:38.068" starttime="20170920 22:32:38.067"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:32:38.072" level="INFO">${freq} = 25850.0</msg>
<status status="PASS" endtime="20170920 22:32:38.072" starttime="20170920 22:32:38.068"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:32:38.073" level="INFO">${fq} = 25850</msg>
<status status="PASS" endtime="20170920 22:32:38.073" starttime="20170920 22:32:38.072"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:32:38.073" level="INFO">${freqency} = 25850</msg>
<status status="PASS" endtime="20170920 22:32:38.073" starttime="20170920 22:32:38.073"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.074" starttime="20170920 22:32:38.074"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.074" starttime="20170920 22:32:38.047"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:32:38.075" level="INFO">${index.earfcn} = 38100</msg>
<status status="PASS" endtime="20170920 22:32:38.075" starttime="20170920 22:32:38.074"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.076" starttime="20170920 22:32:38.075"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:32:38.077" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.079" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:32:38.079" starttime="20170920 22:32:38.076"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:32:38.079" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.079" starttime="20170920 22:32:38.079"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.082" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.082" starttime="20170920 22:32:38.081"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.085" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:32:38.085" starttime="20170920 22:32:38.082"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:32:38.086" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:32:38.086" starttime="20170920 22:32:38.086"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.086" starttime="20170920 22:32:38.080"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.086" starttime="20170920 22:32:38.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.090" starttime="20170920 22:32:38.087"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:32:38.094" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170920 22:32:38.094" starttime="20170920 22:32:38.090"></status>
</kw>
<msg timestamp="20170920 22:32:38.094" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:32:38.094" starttime="20170920 22:32:38.076"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:32:38.095" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:32:38.095" starttime="20170920 22:32:38.094"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.095" starttime="20170920 22:32:38.095"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:32:38.096" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170920 22:32:38.096" starttime="20170920 22:32:38.095"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:32:38.099" level="INFO">${freq} = 26050.0</msg>
<status status="PASS" endtime="20170920 22:32:38.100" starttime="20170920 22:32:38.096"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:32:38.101" level="INFO">${fq} = 26050</msg>
<status status="PASS" endtime="20170920 22:32:38.101" starttime="20170920 22:32:38.100"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:32:38.102" level="INFO">${freqency} = 26050</msg>
<status status="PASS" endtime="20170920 22:32:38.102" starttime="20170920 22:32:38.102"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.103" starttime="20170920 22:32:38.102"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.103" starttime="20170920 22:32:38.074"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:32:38.104" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170920 22:32:38.104" starttime="20170920 22:32:38.103"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.105" starttime="20170920 22:32:38.104"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:32:38.106" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.108" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:32:38.109" starttime="20170920 22:32:38.106"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:32:38.109" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.109" starttime="20170920 22:32:38.109"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.111" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.111" starttime="20170920 22:32:38.110"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.115" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.115" starttime="20170920 22:32:38.112"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.116" starttime="20170920 22:32:38.115"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.116" starttime="20170920 22:32:38.110"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.116" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.116" starttime="20170920 22:32:38.116"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.120" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.120" starttime="20170920 22:32:38.117"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.121" starttime="20170920 22:32:38.120"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.121" starttime="20170920 22:32:38.116"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.123" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.123" starttime="20170920 22:32:38.123"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.128" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.128" starttime="20170920 22:32:38.124"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.129" starttime="20170920 22:32:38.128"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.129" starttime="20170920 22:32:38.122"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.130" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.130" starttime="20170920 22:32:38.129"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.135" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.135" starttime="20170920 22:32:38.130"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.136" starttime="20170920 22:32:38.136"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.136" starttime="20170920 22:32:38.129"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.138" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.138" starttime="20170920 22:32:38.136"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.142" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:32:38.142" starttime="20170920 22:32:38.138"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:32:38.143" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:32:38.143" starttime="20170920 22:32:38.142"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.143" starttime="20170920 22:32:38.136"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.143" starttime="20170920 22:32:38.109"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.146" starttime="20170920 22:32:38.143"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:32:38.149" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:32:38.149" starttime="20170920 22:32:38.146"></status>
</kw>
<msg timestamp="20170920 22:32:38.149" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:32:38.149" starttime="20170920 22:32:38.105"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:32:38.150" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:32:38.150" starttime="20170920 22:32:38.150"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.151" starttime="20170920 22:32:38.150"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:32:38.152" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:32:38.152" starttime="20170920 22:32:38.151"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:32:38.156" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170920 22:32:38.156" starttime="20170920 22:32:38.153"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:32:38.157" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170920 22:32:38.157" starttime="20170920 22:32:38.156"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:32:38.158" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170920 22:32:38.158" starttime="20170920 22:32:38.157"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.158" starttime="20170920 22:32:38.158"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.158" starttime="20170920 22:32:38.103"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:32:38.159" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170920 22:32:38.159" starttime="20170920 22:32:38.159"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.160" starttime="20170920 22:32:38.160"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:32:38.161" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.163" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:32:38.163" starttime="20170920 22:32:38.161"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:32:38.164" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.164" starttime="20170920 22:32:38.164"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.165" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.165" starttime="20170920 22:32:38.165"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.169" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.169" starttime="20170920 22:32:38.166"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.170" starttime="20170920 22:32:38.169"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.170" starttime="20170920 22:32:38.164"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.170" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.171" starttime="20170920 22:32:38.170"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.175" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.175" starttime="20170920 22:32:38.171"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.175" starttime="20170920 22:32:38.175"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.175" starttime="20170920 22:32:38.170"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.177" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.177" starttime="20170920 22:32:38.176"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.180" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.180" starttime="20170920 22:32:38.177"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.180" starttime="20170920 22:32:38.180"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.181" starttime="20170920 22:32:38.176"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.181" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.181" starttime="20170920 22:32:38.181"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.186" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.186" starttime="20170920 22:32:38.182"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.187" starttime="20170920 22:32:38.186"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.187" starttime="20170920 22:32:38.181"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.187" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.188" starttime="20170920 22:32:38.187"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.191" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:32:38.191" starttime="20170920 22:32:38.188"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:32:38.192" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:32:38.192" starttime="20170920 22:32:38.192"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.192" starttime="20170920 22:32:38.187"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.193" starttime="20170920 22:32:38.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.196" starttime="20170920 22:32:38.193"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:32:38.199" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:32:38.199" starttime="20170920 22:32:38.196"></status>
</kw>
<msg timestamp="20170920 22:32:38.200" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:32:38.200" starttime="20170920 22:32:38.160"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:32:38.201" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:32:38.201" starttime="20170920 22:32:38.200"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.201" starttime="20170920 22:32:38.201"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:32:38.202" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:32:38.202" starttime="20170920 22:32:38.201"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:32:38.205" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170920 22:32:38.205" starttime="20170920 22:32:38.202"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:32:38.206" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170920 22:32:38.206" starttime="20170920 22:32:38.206"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:32:38.207" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170920 22:32:38.207" starttime="20170920 22:32:38.206"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.207" starttime="20170920 22:32:38.207"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.207" starttime="20170920 22:32:38.158"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:32:38.208" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170920 22:32:38.208" starttime="20170920 22:32:38.208"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.209" starttime="20170920 22:32:38.208"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:32:38.210" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.212" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:32:38.212" starttime="20170920 22:32:38.210"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:32:38.212" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.212" starttime="20170920 22:32:38.212"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.213" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.214" starttime="20170920 22:32:38.213"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.218" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.218" starttime="20170920 22:32:38.214"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.218" starttime="20170920 22:32:38.218"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.218" starttime="20170920 22:32:38.213"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.219" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.219" starttime="20170920 22:32:38.219"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.224" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.224" starttime="20170920 22:32:38.219"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.224" starttime="20170920 22:32:38.224"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.224" starttime="20170920 22:32:38.218"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.225" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.225" starttime="20170920 22:32:38.224"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.229" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.229" starttime="20170920 22:32:38.225"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.229" starttime="20170920 22:32:38.229"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.229" starttime="20170920 22:32:38.224"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.230" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.230" starttime="20170920 22:32:38.230"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.234" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.234" starttime="20170920 22:32:38.231"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.235" starttime="20170920 22:32:38.234"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.235" starttime="20170920 22:32:38.229"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.236" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.236" starttime="20170920 22:32:38.235"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.239" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:32:38.239" starttime="20170920 22:32:38.236"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:32:38.240" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:32:38.240" starttime="20170920 22:32:38.240"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.240" starttime="20170920 22:32:38.235"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.240" starttime="20170920 22:32:38.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.244" starttime="20170920 22:32:38.241"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:32:38.248" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:32:38.248" starttime="20170920 22:32:38.245"></status>
</kw>
<msg timestamp="20170920 22:32:38.248" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:32:38.248" starttime="20170920 22:32:38.209"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:32:38.248" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:32:38.249" starttime="20170920 22:32:38.248"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.249" starttime="20170920 22:32:38.249"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:32:38.250" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:32:38.250" starttime="20170920 22:32:38.249"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:32:38.254" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170920 22:32:38.254" starttime="20170920 22:32:38.250"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:32:38.255" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170920 22:32:38.255" starttime="20170920 22:32:38.254"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:32:38.255" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170920 22:32:38.255" starttime="20170920 22:32:38.255"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.256" starttime="20170920 22:32:38.256"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.256" starttime="20170920 22:32:38.208"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:32:38.257" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170920 22:32:38.257" starttime="20170920 22:32:38.256"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.258" starttime="20170920 22:32:38.257"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:32:38.259" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.261" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:32:38.261" starttime="20170920 22:32:38.258"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:32:38.261" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.261" starttime="20170920 22:32:38.261"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.262" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.262" starttime="20170920 22:32:38.262"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.266" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.266" starttime="20170920 22:32:38.263"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.267" starttime="20170920 22:32:38.266"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.267" starttime="20170920 22:32:38.262"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.267" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.267" starttime="20170920 22:32:38.267"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.271" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.271" starttime="20170920 22:32:38.268"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.271" starttime="20170920 22:32:38.271"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.271" starttime="20170920 22:32:38.267"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.272" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.272" starttime="20170920 22:32:38.272"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.276" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.276" starttime="20170920 22:32:38.273"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.277" starttime="20170920 22:32:38.277"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.277" starttime="20170920 22:32:38.272"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.278" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.278" starttime="20170920 22:32:38.277"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.282" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:32:38.282" starttime="20170920 22:32:38.278"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.283" starttime="20170920 22:32:38.282"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.283" starttime="20170920 22:32:38.277"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:32:38.284" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:32:38.284" starttime="20170920 22:32:38.283"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:32:38.288" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:32:38.288" starttime="20170920 22:32:38.284"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:32:38.288" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:32:38.289" starttime="20170920 22:32:38.288"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.289" starttime="20170920 22:32:38.283"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.289" starttime="20170920 22:32:38.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.292" starttime="20170920 22:32:38.289"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:32:38.296" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:32:38.296" starttime="20170920 22:32:38.292"></status>
</kw>
<msg timestamp="20170920 22:32:38.296" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:32:38.296" starttime="20170920 22:32:38.258"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:32:38.297" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:32:38.297" starttime="20170920 22:32:38.296"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.297" starttime="20170920 22:32:38.297"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:32:38.298" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:32:38.298" starttime="20170920 22:32:38.298"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:32:38.301" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170920 22:32:38.301" starttime="20170920 22:32:38.298"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:32:38.302" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170920 22:32:38.302" starttime="20170920 22:32:38.302"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:32:38.303" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170920 22:32:38.303" starttime="20170920 22:32:38.302"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.303" starttime="20170920 22:32:38.303"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.303" starttime="20170920 22:32:38.256"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.303" starttime="20170920 22:32:38.047"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.304" starttime="20170920 22:32:37.960"></status>
</kw>
<msg timestamp="20170920 22:32:38.304" level="INFO">${earfcn_list2} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<msg timestamp="20170920 22:32:38.304" level="INFO">${freqency_list2} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<msg timestamp="20170920 22:32:38.304" level="INFO">${band_list2} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170920 22:32:38.304" starttime="20170920 22:32:37.955"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${earfcn_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<assign>
<var>${earfcn_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.311" starttime="20170920 22:32:38.308"></status>
</kw>
<msg timestamp="20170920 22:32:38.311" level="INFO">${earfcn_list} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<status status="PASS" endtime="20170920 22:32:38.311" starttime="20170920 22:32:38.304"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${freqency_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<assign>
<var>${freqency_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.318" starttime="20170920 22:32:38.315"></status>
</kw>
<msg timestamp="20170920 22:32:38.318" level="INFO">${freqency_list} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<status status="PASS" endtime="20170920 22:32:38.318" starttime="20170920 22:32:38.311"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${band_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<assign>
<var>${band_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.325" starttime="20170920 22:32:38.322"></status>
</kw>
<msg timestamp="20170920 22:32:38.326" level="INFO">${band_list} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170920 22:32:38.326" starttime="20170920 22:32:38.318"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170920 22:32:38.326" level="INFO">${cell_index1} = 0</msg>
<status status="PASS" endtime="20170920 22:32:38.326" starttime="20170920 22:32:38.326"></status>
</kw>
<kw type="for" name="${cell_index2} IN [ @{cell_list} ]">
<kw type="foritem" name="${cell_index2} = 1">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.333" starttime="20170920 22:32:38.330"></status>
</kw>
<msg timestamp="20170920 22:32:38.333" level="INFO">${cell_index} = 0</msg>
<status status="PASS" endtime="20170920 22:32:38.333" starttime="20170920 22:32:38.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.341" starttime="20170920 22:32:38.337"></status>
</kw>
<status status="PASS" endtime="20170920 22:32:38.341" starttime="20170920 22:32:38.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:32:38.344" starttime="20170920 22:32:38.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="TM500_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20170920 22:34:04.347" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8278 -s True</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8278 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 1096.

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[process_control.py@74] Process start successed ! process id: 1096</msg>
<msg timestamp="20170920 22:34:04.347" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8278</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 1 user queue.

"</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@412] Get TM500 resource success!</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"
FileZilla Server Interface.exe
FileZilla Server Interface.xml
FileZilla Server.xml
FileZilla server.exe
FzGSS.dll
Uninstall.exe
legal.htm
libeay32.dll
license.txt
readme.htm
ssleay32.dll

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"'</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@591] Prev msg:</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1728] TM500 command to be sent: GSTS</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1728] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1728] TM500 command to be sent: GETR</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1728] TM500 command to be sent: STRT</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20170920 22:34:04.348" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<status status="PASS" endtime="20170920 22:34:04.351" starttime="20170920 22:32:38.349"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20170920 22:34:04.352" level="INFO">${TM500_Use_Tag} = used</msg>
<status status="PASS" endtime="20170920 22:34:04.353" starttime="20170920 22:34:04.352"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170920 22:34:08.387" level="INFO">$TA,C,020A*</msg>
<msg timestamp="20170920 22:34:08.387" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,020A*', Receive&lt;-'$TA,C,020A*'</msg>
<msg timestamp="20170920 22:34:08.387" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,020A*'
$TA,C,060A*</msg>
<msg timestamp="20170920 22:34:08.387" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,060A*', Receive&lt;-'$TA,C,060A*'</msg>
<msg timestamp="20170920 22:34:08.387" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,060A*'</msg>
<status status="PASS" endtime="20170920 22:34:08.387" starttime="20170920 22:34:04.353"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: GVER</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@507] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20170920 22:34:10.951" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20170920 22:34:10.953" starttime="20170920 22:34:08.387"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20170920 22:34:11.588" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20170920 22:34:11.588" level="INFO">[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170920_223318_session/170920_223409'</msg>
<msg timestamp="20170920 22:34:11.588" level="INFO">[tm500.py@1352] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170920_223318_session/170920_223409'</msg>
<msg timestamp="20170920 22:34:11.588" level="INFO">[tm500.py@1363] C:\TM500_LOG\170920_223318_session\170920_223409</msg>
<status status="PASS" endtime="20170920 22:34:11.589" starttime="20170920 22:34:10.954"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${modify_tm500_script}</var>
</assign>
<msg timestamp="20170920 22:34:11.589" level="INFO">${modify_tm500_script} = []</msg>
<status status="PASS" endtime="20170920 22:34:11.589" starttime="20170920 22:34:11.589"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${attach_freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:34:11.591" starttime="20170920 22:34:11.590"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_scripts}</arg>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20170920 22:34:22.901" level="INFO">[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 25850</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170920 22:34:22.901" level="INFO">[tm500.py@1673] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x1620, TimingAdv: 2, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
  Selected PLMN: 26203F
  Pdn Id: 0
  EPS Bearer Id: 5
  Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs
  IPv4 Address: 172.170.2.209
  Attach Result: EPS Only
  Mode: PS 2
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0</msg>
<msg timestamp="20170920 22:34:22.902" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20170920 22:34:22.902" starttime="20170920 22:34:11.592"></status>
</kw>
<kw name="Tm500 Start Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword connects TM500 PPPoE connections by their names.</doc>
<msg timestamp="20170920 22:34:24.513" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:34:24.513" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:24.513" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500</msg>
<msg timestamp="20170920 22:34:24.513" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<msg timestamp="20170920 22:34:24.513" level="INFO">[tm500.py@1302] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170920_222905_session\170920_222956&gt;</msg>
<status status="PASS" endtime="20170920 22:34:24.513" starttime="20170920 22:34:22.903"></status>
</kw>
<kw name="TM500 Log Stop And Fetch" library="ue_resource">
<doc>TM500: stop logging, convert log to csv format, copy logs to local PC.</doc>
<arguments>
<arg>tm500_attach_log${cell_id}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:34:24.530" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:34:24.530" starttime="20170920 22:34:24.522"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<msg timestamp="20170920 22:34:24.531" html="yes" level="INFO">Directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\tm500_attach_log1"&gt;D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\tm500_attach_log1&lt;/a&gt;' already exists.</msg>
<status status="PASS" endtime="20170920 22:34:24.531" starttime="20170920 22:34:24.530"></status>
</kw>
<kw name="Tm500 Stop Logging" library="tdd_ev_robotws">
<doc>This keyword stops TM500's logging.</doc>
<assign>
<var>${log_folder_path_on_tm500_pc}</var>
</assign>
<msg timestamp="20170920 22:34:25.104" level="INFO">[tm500.py@1376] Prev msg: I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0
  De Id: 8
  EPS Bearer Id: 5
  PDN IP Address String: 172.170.2.209

I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x855C, TimingAdv: 2, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0</msg>
<msg timestamp="20170920 22:34:25.104" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$STOP_LOGGING</msg>
<msg timestamp="20170920 22:34:25.104" level="INFO">[tm500.py@1736] TM500 command reply: C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170920 22:34:25.104" level="INFO">[tm500.py@1387] TM500 command line response of "STOP LOGGING":
C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170920 22:34:25.104" level="INFO">[tm500.py@1391] TM500 stop logging succeeded.</msg>
<msg timestamp="20170920 22:34:25.105" level="INFO">${log_folder_path_on_tm500_pc} = C:\TM500_LOG\170920_223318_session\170920_223409</msg>
<status status="PASS" endtime="20170920 22:34:25.105" starttime="20170920 22:34:24.531"></status>
</kw>
<kw name="Tm500 Convert Log" library="tdd_ev_robotws">
<doc>This keyword converts TM500 log to csv format files.</doc>
<arguments>
<arg>timeout=${log_convertion_timeout}</arg>
</arguments>
<msg timestamp="20170920 22:34:35.617" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0</msg>
<msg timestamp="20170920 22:34:35.617" level="INFO">[tm500.py@1736] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.</msg>
<msg timestamp="20170920 22:34:35.617" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_TO_TEXT 0</msg>
<msg timestamp="20170920 22:34:35.618" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170920 22:34:35.618" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170920 22:34:35.618" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170920 22:34:35.618" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170920 22:34:35.618" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170920 22:34:35.618" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170920 22:34:35.618" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170920 22:34:35.618" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170920 22:34:35.618" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 44%</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 100%

C: CONVERT_TO_TEXT 0x00 ok.</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\170920_223318_session\170920_223409"</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_COMMAND_LOG started</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1487] I: CONVERT_COMMAND_LOG progress= 7%
I: CONVERT_COMMAND_LOG progress= 14%
I: CONVERT_COMMAND_LOG progress= 21%
I: CONVERT_COMMAND_LOG progress= 28%
I: CONVERT_COMMAND_LOG progress= 35%
I: CONVERT_COMMAND_LOG progress= 43%
I: CONVERT_COMMAND_LOG progress= 50%
I: CONVERT_COMMAND_LOG progress= 57%
I: CONVERT_COMMAND_LOG progress= 64%
I: CONVERT_COMMAND_LOG progress= 71%
I: CONVERT_COMMAND_LOG progress= 78%
I: CONVERT_COMMAND_LOG progress= 86%
I: CONVERT_COMMAND_LOG progress= 93%
C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\170920_223318_SESSION\170920_223409\170920_223318_session_command_log.csv</msg>
<msg timestamp="20170920 22:34:35.619" level="INFO">[tm500.py@1492] TM500 convert log succeeded.</msg>
<status status="PASS" endtime="20170920 22:34:35.622" starttime="20170920 22:34:25.105"></status>
</kw>
<kw name="Tm500 Log Fetch" library="ue_resource">
<doc>TM500 Log fetching.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:34:35.630" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<status status="PASS" endtime="20170920 22:34:35.631" starttime="20170920 22:34:35.623"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170920 22:34:35.631" starttime="20170920 22:34:35.631"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cd /D "${log_folder_path_on_tm500_pc}"</arg>
</arguments>
<msg timestamp="20170920 22:34:36.932" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:36.932" level="INFO">[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\170920_223318_session\170920_223409"</msg>
<msg timestamp="20170920 22:34:36.932" level="INFO">[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\170920_223318_session\170920_223409"

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<status status="PASS" endtime="20170920 22:34:36.932" starttime="20170920 22:34:35.631"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cp ../*ommand*og*.txt session_command_log.txt</arg>
</arguments>
<msg timestamp="20170920 22:34:38.244" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:38.244" level="INFO">[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt</msg>
<msg timestamp="20170920 22:34:38.244" level="INFO">[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt
cp: cannot stat `../*ommand*og*.txt': No such file or directory

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<status status="PASS" endtime="20170920 22:34:38.244" starttime="20170920 22:34:36.932"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>chmod 777 -R *</arg>
</arguments>
<msg timestamp="20170920 22:34:39.540" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:39.540" level="INFO">[telnet_common.py@276] Execute command: chmod 777 -R *</msg>
<msg timestamp="20170920 22:34:39.540" level="INFO">[telnet_common.py@306] Get Response: chmod 777 -R *

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<status status="PASS" endtime="20170920 22:34:39.540" starttime="20170920 22:34:38.245"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zcvf tm500_log.tar *.*</arg>
</arguments>
<status status="PASS" endtime="20170920 22:34:39.540" starttime="20170920 22:34:39.540"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>:\\</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${driver_log_folder}</var>
</assign>
<msg timestamp="20170920 22:34:39.541" level="INFO">${driver_log_folder} = [u'C', u'TM500_LOG\\170920_223318_session\\170920_223409']</msg>
<status status="PASS" endtime="20170920 22:34:39.541" starttime="20170920 22:34:39.541"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${TM500_PC_INFO.IP}</arg>
<arg>21</arg>
<arg>TA_LOG</arg>
<arg>${None}</arg>
<arg>${log_folder_path_on_local_pc}</arg>
<arg>ALL</arg>
<arg>${driver_log_folder[1]}</arg>
</arguments>
<msg timestamp="20170920 22:34:39.846" level="INFO">[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.</msg>
<msg timestamp="20170920 22:34:39.846" level="INFO">[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta
220-written by Tim Kosse (Tim.Kosse@gmx.de)
220 Please visit http://sourceforge.net/projects/filezilla/</msg>
<status status="PASS" endtime="20170920 22:34:39.846" starttime="20170920 22:34:39.541"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:34:39.855" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:34:39.855" starttime="20170920 22:34:39.847"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>cd /D "${log_folder_path_on_local_pc}"</arg>
</arguments>
<status status="PASS" endtime="20170920 22:34:39.855" starttime="20170920 22:34:39.855"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170920 22:34:39.856" starttime="20170920 22:34:39.855"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>chmod 777 -R *</arg>
</arguments>
<status status="PASS" endtime="20170920 22:34:39.856" starttime="20170920 22:34:39.856"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${unzip_result}</arg>
<arg>Run keyword and ignore error</arg>
<arg>Unzip file</arg>
<arg>tm500_log.tar</arg>
<arg>${log_folder_path_on_local_pc}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:34:39.856" starttime="20170920 22:34:39.856"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword if</arg>
<arg>'${unzip_result[0]}' == 'FAIL'</arg>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170920 22:34:39.857" starttime="20170920 22:34:39.857"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>remove file</arg>
<arg>${log_folder_path_on_local_pc}/tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170920 22:34:39.857" starttime="20170920 22:34:39.857"></status>
</kw>
<status status="PASS" endtime="20170920 22:34:39.857" starttime="20170920 22:34:35.622"></status>
</kw>
<status status="PASS" endtime="20170920 22:34:39.857" starttime="20170920 22:34:24.521"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ue_attach_ip}</arg>
<arg>${tm500_attach_result.UE0}</arg>
</arguments>
<msg timestamp="20170920 22:34:39.858" level="INFO">${ue_attach_ip} = 172.170.2.209</msg>
<status status="PASS" endtime="20170920 22:34:39.858" starttime="20170920 22:34:39.858"></status>
</kw>
<status status="PASS" endtime="20170920 22:34:39.858" starttime="20170920 22:32:38.348"></status>
</kw>
<status status="PASS" endtime="20170920 22:34:39.858" starttime="20170920 22:32:38.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:34:39.862" starttime="20170920 22:34:39.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="TM500_Detach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:34:39.877" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:34:39.877" starttime="20170920 22:34:39.870"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170920 22:34:41.147" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:34:41.147" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170920 22:34:41.147" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170920 22:34:41.147" starttime="20170920 22:34:39.877"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:34:41.156" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<status status="PASS" endtime="20170920 22:34:41.156" starttime="20170920 22:34:41.147"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170920 22:34:42.498" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:42.498" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170920 22:34:42.499" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<status status="PASS" endtime="20170920 22:34:42.499" starttime="20170920 22:34:41.156"></status>
</kw>
<kw name="Tm500 Stop Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword disconnects TM500 PPPoE connection by PPPoE name.</doc>
<msg timestamp="20170920 22:34:43.861" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:34:43.861" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:34:43.861" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT</msg>
<msg timestamp="20170920 22:34:43.861" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<msg timestamp="20170920 22:34:43.861" level="INFO">[tm500.py@1321] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<status status="PASS" endtime="20170920 22:34:43.862" starttime="20170920 22:34:42.499"></status>
</kw>
<kw name="Tm500 Detach" library="tdd_ev_robotws">
<doc>This keyword does UE detach operation of TM500.</doc>
<msg timestamp="20170920 22:34:43.966" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170920 22:34:43.966" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0

C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170920 22:34:43.966" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte NasConfigEmmDeregister 0</msg>
<msg timestamp="20170920 22:34:43.966" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:34:43.966" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170920 22:34:43.966" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170920 22:34:43.966" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte Activate -1</msg>
<msg timestamp="20170920 22:34:43.966" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<status status="PASS" endtime="20170920 22:34:43.966" starttime="20170920 22:34:43.863"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:34:43.974" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:34:43.974" starttime="20170920 22:34:43.967"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170920 22:34:48.012" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170920 22:34:48.012" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170920 22:34:48.012" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170920 22:34:48.012" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170920 22:34:48.012" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170920 22:34:48.012" starttime="20170920 22:34:43.974"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170920 22:35:06.882" level="INFO">[tm500.py@591] Prev msg: I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0xBCFA, TimingAdv: 2, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0
    Detach Cause: UE Initiated 

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Acceptable</msg>
<msg timestamp="20170920 22:35:06.882" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170920 22:35:06.882" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170920 22:35:06.882" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8278 stopping</msg>
<status status="PASS" endtime="20170920 22:35:06.882" starttime="20170920 22:34:48.012"></status>
</kw>
<status status="PASS" endtime="20170920 22:35:06.882" starttime="20170920 22:34:39.869"></status>
</kw>
<status status="PASS" endtime="20170920 22:35:06.882" starttime="20170920 22:34:39.865"></status>
</kw>
<status status="PASS" endtime="20170920 22:35:06.882" starttime="20170920 22:34:39.862"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index1}+1</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170920 22:35:06.889" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170920 22:35:06.889" starttime="20170920 22:35:06.883"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${cell_index1}</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170920 22:35:06.890" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170920 22:35:06.890" starttime="20170920 22:35:06.889"></status>
</kw>
<status status="PASS" endtime="20170920 22:35:06.890" starttime="20170920 22:32:38.326"></status>
</kw>
<status status="PASS" endtime="20170920 22:35:06.890" starttime="20170920 22:32:38.326"></status>
</kw>
<status status="PASS" endtime="20170920 22:35:06.891" starttime="20170920 22:32:37.943"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:35:06.897" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:35:06.898" starttime="20170920 22:35:06.891"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${block_cell_index}</arg>
<arg>Unblock</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170920 22:35:06.900" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=2', u'HWAction=Unblock', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170920221319\\ev_logs\\FZHR_Operational_Cell_block_unblock_20170920221321\\FZHR_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170920 22:35:06.900" starttime="20170920 22:35:06.899"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170920 22:35:56.263" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="2"
HWAction="Unblock"
LogPath="D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170920223506\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170920 22:35:56.263" starttime="20170920 22:35:06.900"></status>
</kw>
<status status="PASS" endtime="20170920 22:35:56.263" starttime="20170920 22:35:06.899"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5 sec</arg>
</arguments>
<msg timestamp="20170920 22:36:01.264" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170920 22:36:01.264" starttime="20170920 22:35:56.264"></status>
</kw>
<kw name="GUI SM Check BTS HW Status" library="gui_resource">
<doc>This keyword is used to check the status on BTS Hardware panel.</doc>
<arguments>
<arg>AllCell</arg>
<arg>Operational state=Enabled;;Working state=Working</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>CompName=${CompName}</arg>
<arg>CheckField=${CheckField}</arg>
<arg>WaitTime=${WaitTime}</arg>
<arg>CheckSameFlag=${CheckSameFlag}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170920 22:36:01.267" level="INFO">${para_list} = [u'CompName=AllCell', u'CheckField=Operational state=Enabled;;Working state=Working', u'WaitTime=0', u'CheckSameFlag=1', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170920221319\\ev_logs\\FZHR_Operational_Ce...</msg>
<status status="PASS" endtime="20170920 22:36:01.267" starttime="20170920 22:36:01.266"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:01.267" starttime="20170920 22:36:01.267"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170920 22:36:09.362" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
CompName="AllCell"
CheckField="Operational state=Enabled;;Working state=Working"
WaitTime="0"
CheckSameFlag="1"
LogPath="D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20170920223601\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170920 22:36:09.362" starttime="20170920 22:36:01.267"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.363" starttime="20170920 22:36:01.265"></status>
</kw>
<kw name="UE_Attach_SISO1" library="SISO1 Resource">
<doc>Example</doc>
<arguments>
<arg>${block_cell_index}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cell_id}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{cell_list}</var>
</assign>
<msg timestamp="20170920 22:36:09.367" level="INFO">@{cell_list} = [ 2 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.367" starttime="20170920 22:36:09.367"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${cell_list}</arg>
</arguments>
<assign>
<var>${cell_list_length}</var>
</assign>
<msg timestamp="20170920 22:36:09.368" level="INFO">Length is 1</msg>
<msg timestamp="20170920 22:36:09.368" level="INFO">${cell_list_length} = 1</msg>
<status status="PASS" endtime="20170920 22:36:09.368" starttime="20170920 22:36:09.367"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Split String</arg>
<arg>${attach_earfcn}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${earfcn_list1}</var>
</assign>
<msg timestamp="20170920 22:36:09.371" level="INFO">${earfcn_list1} = None</msg>
<status status="PASS" endtime="20170920 22:36:09.372" starttime="20170920 22:36:09.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Change_Earfcn_To_Freqency</arg>
<arg>${earfcn_list1}</arg>
</arguments>
<assign>
<var>${freqency_list1}</var>
<var>${band_list1}</var>
</assign>
<msg timestamp="20170920 22:36:09.380" level="INFO">${freqency_list1} = None</msg>
<msg timestamp="20170920 22:36:09.380" level="INFO">${band_list1} = None</msg>
<status status="PASS" endtime="20170920 22:36:09.380" starttime="20170920 22:36:09.373"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Get_Earfcn_From_Infomodel</arg>
</arguments>
<assign>
<var>${earfcn_list2}</var>
<var>${freqency_list2}</var>
<var>${band_list2}</var>
</assign>
<kw name="Get_Earfcn_From_Infomodel" library="SISO1 Resource">
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1</arg>
</arguments>
<assign>
<var>@{ret_earfcn}</var>
</assign>
<msg timestamp="20170920 22:36:09.461" level="INFO">[infomodel_control.py@328] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .</msg>
<msg timestamp="20170920 22:36:09.462" level="INFO">@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u's...</msg>
<status status="PASS" endtime="20170920 22:36:09.462" starttime="20170920 22:36:09.387"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${ret_earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.462" starttime="20170920 22:36:09.462"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${earfcn_list}</var>
</assign>
<msg timestamp="20170920 22:36:09.463" level="INFO">${earfcn_list} = []</msg>
<status status="PASS" endtime="20170920 22:36:09.463" starttime="20170920 22:36:09.463"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${freqency_list}</var>
</assign>
<msg timestamp="20170920 22:36:09.463" level="INFO">${freqency_list} = []</msg>
<status status="PASS" endtime="20170920 22:36:09.463" starttime="20170920 22:36:09.463"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${band_list}</var>
</assign>
<msg timestamp="20170920 22:36:09.464" level="INFO">${band_list} = []</msg>
<status status="PASS" endtime="20170920 22:36:09.464" starttime="20170920 22:36:09.464"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_OFFSET}</arg>
</arguments>
<assign>
<var>${offset_dict}</var>
</assign>
<msg timestamp="20170920 22:36:09.464" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.467" level="INFO">${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}</msg>
<status status="PASS" endtime="20170920 22:36:09.467" starttime="20170920 22:36:09.464"></status>
</kw>
<kw type="for" name="${index} IN [ @{ret_earfcn} ]">
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1: {u'fcnULs': [37900L], u'fcnDLs': [37900L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:36:09.468" level="INFO">${index.earfcn} = 37900</msg>
<status status="PASS" endtime="20170920 22:36:09.468" starttime="20170920 22:36:09.467"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.469" starttime="20170920 22:36:09.468"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:36:09.470" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.472" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:36:09.472" starttime="20170920 22:36:09.470"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:36:09.472" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.472" starttime="20170920 22:36:09.472"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.473" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.473" starttime="20170920 22:36:09.473"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.479" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:36:09.479" starttime="20170920 22:36:09.474"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:36:09.480" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:36:09.480" starttime="20170920 22:36:09.480"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.480" starttime="20170920 22:36:09.473"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.480" starttime="20170920 22:36:09.472"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.485" starttime="20170920 22:36:09.480"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:36:09.490" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170920 22:36:09.490" starttime="20170920 22:36:09.485"></status>
</kw>
<msg timestamp="20170920 22:36:09.490" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:36:09.490" starttime="20170920 22:36:09.469"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:36:09.491" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:36:09.491" starttime="20170920 22:36:09.491"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.492" starttime="20170920 22:36:09.491"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:36:09.492" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170920 22:36:09.492" starttime="20170920 22:36:09.492"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:36:09.496" level="INFO">${freq} = 25850.0</msg>
<status status="PASS" endtime="20170920 22:36:09.496" starttime="20170920 22:36:09.492"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:36:09.496" level="INFO">${fq} = 25850</msg>
<status status="PASS" endtime="20170920 22:36:09.496" starttime="20170920 22:36:09.496"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:36:09.499" level="INFO">${freqency} = 25850</msg>
<status status="PASS" endtime="20170920 22:36:09.499" starttime="20170920 22:36:09.497"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.500" starttime="20170920 22:36:09.500"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.500" starttime="20170920 22:36:09.467"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:36:09.501" level="INFO">${index.earfcn} = 38100</msg>
<status status="PASS" endtime="20170920 22:36:09.501" starttime="20170920 22:36:09.501"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.502" starttime="20170920 22:36:09.502"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:36:09.503" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.506" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:36:09.506" starttime="20170920 22:36:09.503"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:36:09.506" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.506" starttime="20170920 22:36:09.506"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.508" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.508" starttime="20170920 22:36:09.507"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.514" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:36:09.514" starttime="20170920 22:36:09.509"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:36:09.514" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:36:09.515" starttime="20170920 22:36:09.514"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.515" starttime="20170920 22:36:09.506"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.515" starttime="20170920 22:36:09.506"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.521" starttime="20170920 22:36:09.515"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:36:09.524" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170920 22:36:09.524" starttime="20170920 22:36:09.521"></status>
</kw>
<msg timestamp="20170920 22:36:09.524" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:36:09.524" starttime="20170920 22:36:09.502"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:36:09.525" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170920 22:36:09.525" starttime="20170920 22:36:09.524"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.525" starttime="20170920 22:36:09.525"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:36:09.526" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170920 22:36:09.526" starttime="20170920 22:36:09.526"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:36:09.532" level="INFO">${freq} = 26050.0</msg>
<status status="PASS" endtime="20170920 22:36:09.532" starttime="20170920 22:36:09.526"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:36:09.533" level="INFO">${fq} = 26050</msg>
<status status="PASS" endtime="20170920 22:36:09.533" starttime="20170920 22:36:09.533"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:36:09.534" level="INFO">${freqency} = 26050</msg>
<status status="PASS" endtime="20170920 22:36:09.534" starttime="20170920 22:36:09.533"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.534" starttime="20170920 22:36:09.534"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.534" starttime="20170920 22:36:09.501"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:36:09.535" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170920 22:36:09.535" starttime="20170920 22:36:09.535"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.536" starttime="20170920 22:36:09.535"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:36:09.537" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.539" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:36:09.539" starttime="20170920 22:36:09.537"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:36:09.540" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.540" starttime="20170920 22:36:09.539"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.541" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.541" starttime="20170920 22:36:09.540"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.544" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.544" starttime="20170920 22:36:09.541"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.544" starttime="20170920 22:36:09.544"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.545" starttime="20170920 22:36:09.540"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.545" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.545" starttime="20170920 22:36:09.545"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.551" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.551" starttime="20170920 22:36:09.546"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.551" starttime="20170920 22:36:09.551"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.552" starttime="20170920 22:36:09.545"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.552" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.552" starttime="20170920 22:36:09.552"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.556" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.556" starttime="20170920 22:36:09.553"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.556" starttime="20170920 22:36:09.556"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.556" starttime="20170920 22:36:09.552"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.557" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.557" starttime="20170920 22:36:09.557"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.564" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.564" starttime="20170920 22:36:09.557"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.564" starttime="20170920 22:36:09.564"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.564" starttime="20170920 22:36:09.557"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.566" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.566" starttime="20170920 22:36:09.565"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.569" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:36:09.569" starttime="20170920 22:36:09.566"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:36:09.571" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:36:09.571" starttime="20170920 22:36:09.570"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.571" starttime="20170920 22:36:09.565"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.571" starttime="20170920 22:36:09.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.574" starttime="20170920 22:36:09.571"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:36:09.577" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:36:09.577" starttime="20170920 22:36:09.574"></status>
</kw>
<msg timestamp="20170920 22:36:09.577" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:36:09.578" starttime="20170920 22:36:09.536"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:36:09.578" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:36:09.578" starttime="20170920 22:36:09.578"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.579" starttime="20170920 22:36:09.579"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:36:09.580" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:36:09.580" starttime="20170920 22:36:09.579"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:36:09.583" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170920 22:36:09.583" starttime="20170920 22:36:09.580"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:36:09.584" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170920 22:36:09.584" starttime="20170920 22:36:09.583"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:36:09.584" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170920 22:36:09.584" starttime="20170920 22:36:09.584"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.585" starttime="20170920 22:36:09.584"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.585" starttime="20170920 22:36:09.534"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:36:09.586" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170920 22:36:09.586" starttime="20170920 22:36:09.585"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.586" starttime="20170920 22:36:09.586"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:36:09.587" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.590" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:36:09.590" starttime="20170920 22:36:09.587"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:36:09.591" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.591" starttime="20170920 22:36:09.590"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.592" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.592" starttime="20170920 22:36:09.591"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.595" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.595" starttime="20170920 22:36:09.592"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.596" starttime="20170920 22:36:09.595"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.596" starttime="20170920 22:36:09.591"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.596" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.596" starttime="20170920 22:36:09.596"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.600" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.600" starttime="20170920 22:36:09.597"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.601" starttime="20170920 22:36:09.600"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.601" starttime="20170920 22:36:09.596"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.602" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.602" starttime="20170920 22:36:09.601"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.605" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.605" starttime="20170920 22:36:09.602"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.605" starttime="20170920 22:36:09.605"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.606" starttime="20170920 22:36:09.601"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.606" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.606" starttime="20170920 22:36:09.606"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.611" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.611" starttime="20170920 22:36:09.607"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.612" starttime="20170920 22:36:09.611"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.612" starttime="20170920 22:36:09.606"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.612" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.613" starttime="20170920 22:36:09.612"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.616" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:36:09.616" starttime="20170920 22:36:09.613"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:36:09.617" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:36:09.617" starttime="20170920 22:36:09.616"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.617" starttime="20170920 22:36:09.612"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.617" starttime="20170920 22:36:09.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.620" starttime="20170920 22:36:09.617"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:36:09.624" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:36:09.624" starttime="20170920 22:36:09.621"></status>
</kw>
<msg timestamp="20170920 22:36:09.624" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:36:09.624" starttime="20170920 22:36:09.586"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:36:09.625" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:36:09.625" starttime="20170920 22:36:09.624"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.625" starttime="20170920 22:36:09.625"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:36:09.626" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:36:09.626" starttime="20170920 22:36:09.625"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:36:09.629" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170920 22:36:09.629" starttime="20170920 22:36:09.626"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:36:09.630" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170920 22:36:09.630" starttime="20170920 22:36:09.630"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:36:09.630" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170920 22:36:09.631" starttime="20170920 22:36:09.630"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.631" starttime="20170920 22:36:09.631"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.631" starttime="20170920 22:36:09.585"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:36:09.632" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20170920 22:36:09.632" starttime="20170920 22:36:09.631"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.633" starttime="20170920 22:36:09.632"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:36:09.634" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.636" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:36:09.636" starttime="20170920 22:36:09.633"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:36:09.636" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.636" starttime="20170920 22:36:09.636"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.637" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.637" starttime="20170920 22:36:09.637"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.641" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.641" starttime="20170920 22:36:09.638"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.641" starttime="20170920 22:36:09.641"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.642" starttime="20170920 22:36:09.637"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.642" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.642" starttime="20170920 22:36:09.642"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.646" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.646" starttime="20170920 22:36:09.643"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.646" starttime="20170920 22:36:09.646"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.647" starttime="20170920 22:36:09.642"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.647" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.647" starttime="20170920 22:36:09.647"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.651" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.651" starttime="20170920 22:36:09.648"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.651" starttime="20170920 22:36:09.651"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.651" starttime="20170920 22:36:09.647"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.652" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.652" starttime="20170920 22:36:09.652"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.656" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.656" starttime="20170920 22:36:09.653"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.657" starttime="20170920 22:36:09.656"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.657" starttime="20170920 22:36:09.651"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.658" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.658" starttime="20170920 22:36:09.657"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.661" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:36:09.661" starttime="20170920 22:36:09.658"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:36:09.662" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:36:09.662" starttime="20170920 22:36:09.662"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.662" starttime="20170920 22:36:09.657"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.662" starttime="20170920 22:36:09.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.665" starttime="20170920 22:36:09.662"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:36:09.669" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:36:09.669" starttime="20170920 22:36:09.665"></status>
</kw>
<msg timestamp="20170920 22:36:09.669" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:36:09.670" starttime="20170920 22:36:09.633"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:36:09.671" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:36:09.671" starttime="20170920 22:36:09.670"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.671" starttime="20170920 22:36:09.671"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:36:09.672" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:36:09.672" starttime="20170920 22:36:09.672"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:36:09.676" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20170920 22:36:09.676" starttime="20170920 22:36:09.672"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:36:09.676" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20170920 22:36:09.676" starttime="20170920 22:36:09.676"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:36:09.677" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20170920 22:36:09.677" starttime="20170920 22:36:09.677"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.677" starttime="20170920 22:36:09.677"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.678" starttime="20170920 22:36:09.631"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170920 22:36:09.678" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20170920 22:36:09.678" starttime="20170920 22:36:09.678"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.679" starttime="20170920 22:36:09.679"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170920 22:36:09.680" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.682" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170920 22:36:09.682" starttime="20170920 22:36:09.680"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170920 22:36:09.683" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.683" starttime="20170920 22:36:09.683"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.684" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.684" starttime="20170920 22:36:09.683"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.687" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.688" starttime="20170920 22:36:09.684"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.688" starttime="20170920 22:36:09.688"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.688" starttime="20170920 22:36:09.683"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.689" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.689" starttime="20170920 22:36:09.688"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.692" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.692" starttime="20170920 22:36:09.689"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.693" starttime="20170920 22:36:09.693"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.693" starttime="20170920 22:36:09.688"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.694" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.694" starttime="20170920 22:36:09.693"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.697" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.697" starttime="20170920 22:36:09.694"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.698" starttime="20170920 22:36:09.698"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.698" starttime="20170920 22:36:09.693"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.699" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.699" starttime="20170920 22:36:09.698"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.703" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170920 22:36:09.703" starttime="20170920 22:36:09.699"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.703" starttime="20170920 22:36:09.703"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.703" starttime="20170920 22:36:09.698"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170920 22:36:09.704" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20170920 22:36:09.704" starttime="20170920 22:36:09.704"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170920 22:36:09.708" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170920 22:36:09.708" starttime="20170920 22:36:09.704"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170920 22:36:09.708" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:36:09.708" starttime="20170920 22:36:09.708"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.708" starttime="20170920 22:36:09.703"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.708" starttime="20170920 22:36:09.683"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.712" starttime="20170920 22:36:09.709"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170920 22:36:09.715" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20170920 22:36:09.715" starttime="20170920 22:36:09.712"></status>
</kw>
<msg timestamp="20170920 22:36:09.715" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:36:09.715" starttime="20170920 22:36:09.679"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170920 22:36:09.716" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20170920 22:36:09.716" starttime="20170920 22:36:09.716"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.717" starttime="20170920 22:36:09.716"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170920 22:36:09.717" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20170920 22:36:09.717" starttime="20170920 22:36:09.717"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170920 22:36:09.721" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20170920 22:36:09.721" starttime="20170920 22:36:09.717"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170920 22:36:09.722" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20170920 22:36:09.722" starttime="20170920 22:36:09.721"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170920 22:36:09.723" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20170920 22:36:09.723" starttime="20170920 22:36:09.722"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.723" starttime="20170920 22:36:09.723"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.723" starttime="20170920 22:36:09.678"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.723" starttime="20170920 22:36:09.467"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.724" starttime="20170920 22:36:09.386"></status>
</kw>
<msg timestamp="20170920 22:36:09.724" level="INFO">${earfcn_list2} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<msg timestamp="20170920 22:36:09.724" level="INFO">${freqency_list2} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<msg timestamp="20170920 22:36:09.724" level="INFO">${band_list2} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170920 22:36:09.724" starttime="20170920 22:36:09.380"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${earfcn_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<assign>
<var>${earfcn_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.732" starttime="20170920 22:36:09.728"></status>
</kw>
<msg timestamp="20170920 22:36:09.732" level="INFO">${earfcn_list} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<status status="PASS" endtime="20170920 22:36:09.732" starttime="20170920 22:36:09.724"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${freqency_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<assign>
<var>${freqency_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.739" starttime="20170920 22:36:09.736"></status>
</kw>
<msg timestamp="20170920 22:36:09.739" level="INFO">${freqency_list} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<status status="PASS" endtime="20170920 22:36:09.739" starttime="20170920 22:36:09.732"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${band_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<assign>
<var>${band_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.748" starttime="20170920 22:36:09.743"></status>
</kw>
<msg timestamp="20170920 22:36:09.748" level="INFO">${band_list} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20170920 22:36:09.748" starttime="20170920 22:36:09.739"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170920 22:36:09.748" level="INFO">${cell_index1} = 0</msg>
<status status="PASS" endtime="20170920 22:36:09.748" starttime="20170920 22:36:09.748"></status>
</kw>
<kw type="for" name="${cell_index2} IN [ @{cell_list} ]">
<kw type="foritem" name="${cell_index2} = 2">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.757" starttime="20170920 22:36:09.753"></status>
</kw>
<msg timestamp="20170920 22:36:09.757" level="INFO">${cell_index} = 1</msg>
<status status="PASS" endtime="20170920 22:36:09.757" starttime="20170920 22:36:09.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.765" starttime="20170920 22:36:09.761"></status>
</kw>
<status status="PASS" endtime="20170920 22:36:09.765" starttime="20170920 22:36:09.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:36:09.769" starttime="20170920 22:36:09.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="TM500_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20170920 22:37:36.047" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:37:36.047" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.047" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.047" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20170920 22:37:36.047" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<msg timestamp="20170920 22:37:36.047" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.047" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8276 -s True</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8276 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 1704.

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[process_control.py@74] Process start successed ! process id: 1704</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8276</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 1 user queue.

"</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[tm500.py@412] Get TM500 resource success!</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"
FileZilla Server Interface.exe
FileZilla Server Interface.xml
FileZilla Server.xml
FileZilla server.exe
FzGSS.dll
Uninstall.exe
legal.htm
libeay32.dll
license.txt
readme.htm
ssleay32.dll

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"'</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20170920 22:37:36.048" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@591] Prev msg:</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1728] TM500 command to be sent: GSTS</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1728] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1728] TM500 command to be sent: GETR</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1728] TM500 command to be sent: STRT</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20170920 22:37:36.049" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<status status="PASS" endtime="20170920 22:37:36.053" starttime="20170920 22:36:09.774"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20170920 22:37:36.054" level="INFO">${TM500_Use_Tag} = used</msg>
<status status="PASS" endtime="20170920 22:37:36.054" starttime="20170920 22:37:36.054"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170920 22:37:40.086" level="INFO">$TA,C,020A*</msg>
<msg timestamp="20170920 22:37:40.086" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,020A*', Receive&lt;-'$TA,C,020A*'</msg>
<msg timestamp="20170920 22:37:40.086" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,020A*'
$TA,C,060A*</msg>
<msg timestamp="20170920 22:37:40.086" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,060A*', Receive&lt;-'$TA,C,060A*'</msg>
<msg timestamp="20170920 22:37:40.086" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,060A*'</msg>
<status status="PASS" endtime="20170920 22:37:40.086" starttime="20170920 22:37:36.054"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20170920 22:37:42.669" level="INFO">[tm500.py@1728] TM500 command to be sent: GVER</msg>
<msg timestamp="20170920 22:37:42.669" level="INFO">[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170920 22:37:42.669" level="INFO">[tm500.py@507] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170920 22:37:42.669" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20170920 22:37:42.669" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.669" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20170920 22:37:42.669" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.669" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20170920 22:37:42.669" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20170920 22:37:42.670" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20170920 22:37:42.671" starttime="20170920 22:37:40.087"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20170920 22:37:43.289" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20170920 22:37:43.290" level="INFO">[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170920_223650_session/170920_223741'</msg>
<msg timestamp="20170920 22:37:43.290" level="INFO">[tm500.py@1352] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170920_223650_session/170920_223741'</msg>
<msg timestamp="20170920 22:37:43.290" level="INFO">[tm500.py@1363] C:\TM500_LOG\170920_223650_session\170920_223741</msg>
<status status="PASS" endtime="20170920 22:37:43.290" starttime="20170920 22:37:42.672"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${modify_tm500_script}</var>
</assign>
<msg timestamp="20170920 22:37:43.291" level="INFO">${modify_tm500_script} = []</msg>
<status status="PASS" endtime="20170920 22:37:43.291" starttime="20170920 22:37:43.290"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${attach_freqency}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:37:43.291" starttime="20170920 22:37:43.291"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_scripts}</arg>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20170920 22:37:52.820" level="INFO">[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 26050</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170920 22:37:52.820" level="INFO">[tm500.py@1673] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x9BD9, TimingAdv: 2, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
  Selected PLMN: 26203F
  Pdn Id: 0
  EPS Bearer Id: 5
  Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs
  IPv4 Address: 172.170.52.90
  Attach Result: EPS Only
  Mode: PS 2
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0</msg>
<msg timestamp="20170920 22:37:52.821" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20170920 22:37:52.821" starttime="20170920 22:37:43.291"></status>
</kw>
<kw name="Tm500 Start Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword connects TM500 PPPoE connections by their names.</doc>
<msg timestamp="20170920 22:37:54.233" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:37:54.233" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:37:54.233" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500</msg>
<msg timestamp="20170920 22:37:54.233" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<msg timestamp="20170920 22:37:54.233" level="INFO">[tm500.py@1302] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170920_223318_session\170920_223409&gt;</msg>
<status status="PASS" endtime="20170920 22:37:54.233" starttime="20170920 22:37:52.822"></status>
</kw>
<kw name="TM500 Log Stop And Fetch" library="ue_resource">
<doc>TM500: stop logging, convert log to csv format, copy logs to local PC.</doc>
<arguments>
<arg>tm500_attach_log${cell_id}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:37:54.247" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:37:54.247" starttime="20170920 22:37:54.240"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<msg timestamp="20170920 22:37:54.248" html="yes" level="INFO">Directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\tm500_attach_log2"&gt;D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\tm500_attach_log2&lt;/a&gt;' already exists.</msg>
<status status="PASS" endtime="20170920 22:37:54.248" starttime="20170920 22:37:54.248"></status>
</kw>
<kw name="Tm500 Stop Logging" library="tdd_ev_robotws">
<doc>This keyword stops TM500's logging.</doc>
<assign>
<var>${log_folder_path_on_tm500_pc}</var>
</assign>
<msg timestamp="20170920 22:38:02.818" level="INFO">[tm500.py@1376] Prev msg: I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0
  De Id: 8
  EPS Bearer Id: 5
  PDN IP Address String: 172.170.52.90</msg>
<msg timestamp="20170920 22:38:02.818" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$STOP_LOGGING</msg>
<msg timestamp="20170920 22:38:02.818" level="INFO">[tm500.py@1736] TM500 command reply: C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170920 22:38:02.818" level="INFO">[tm500.py@1387] TM500 command line response of "STOP LOGGING":
C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170920 22:38:02.818" level="INFO">[tm500.py@1391] TM500 stop logging succeeded.</msg>
<msg timestamp="20170920 22:38:02.818" level="INFO">${log_folder_path_on_tm500_pc} = C:\TM500_LOG\170920_223650_session\170920_223741</msg>
<status status="PASS" endtime="20170920 22:38:02.818" starttime="20170920 22:37:54.248"></status>
</kw>
<kw name="Tm500 Convert Log" library="tdd_ev_robotws">
<doc>This keyword converts TM500 log to csv format files.</doc>
<arguments>
<arg>timeout=${log_convertion_timeout}</arg>
</arguments>
<msg timestamp="20170920 22:38:15.601" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1736] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_TO_TEXT 0</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 1%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170920 22:38:15.602" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170920 22:38:15.603" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170920 22:38:15.603" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170920 22:38:15.603" level="INFO">[tm500.py@1468] I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Suitable</msg>
<msg timestamp="20170920 22:38:15.603" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 77%</msg>
<msg timestamp="20170920 22:38:15.603" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 100%

C: CONVERT_TO_TEXT 0x00 ok.</msg>
<msg timestamp="20170920 22:38:15.603" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\170920_223650_session\170920_223741"</msg>
<msg timestamp="20170920 22:38:15.603" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_COMMAND_LOG started</msg>
<msg timestamp="20170920 22:38:15.603" level="INFO">[tm500.py@1487] I: CONVERT_COMMAND_LOG progress= 5%
I: CONVERT_COMMAND_LOG progress= 10%
I: CONVERT_COMMAND_LOG progress= 15%
I: CONVERT_COMMAND_LOG progress= 21%
I: CONVERT_COMMAND_LOG progress= 26%
I: CONVERT_COMMAND_LOG progress= 31%
I: CONVERT_COMMAND_LOG progress= 36%
I: CONVERT_COMMAND_LOG progress= 42%
I: CONVERT_COMMAND_LOG progress= 47%
I: CONVERT_COMMAND_LOG progress= 52%
I: CONVERT_COMMAND_LOG progress= 57%
I: CONVERT_COMMAND_LOG progress= 63%
I: CONVERT_COMMAND_LOG progress= 68%
I: CONVERT_COMMAND_LOG progress= 73%
I: CONVERT_COMMAND_LOG progress= 79%
I: CONVERT_COMMAND_LOG progress= 84%
I: CONVERT_COMMAND_LOG progress= 89%
I: CONVERT_COMMAND_LOG progress= 94%
C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\170920_223650_SESSION\170920_223741\170920_223650_session_command_log.csv</msg>
<msg timestamp="20170920 22:38:15.603" level="INFO">[tm500.py@1492] TM500 convert log succeeded.</msg>
<status status="PASS" endtime="20170920 22:38:15.606" starttime="20170920 22:38:02.819"></status>
</kw>
<kw name="Tm500 Log Fetch" library="ue_resource">
<doc>TM500 Log fetching.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:38:15.616" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<status status="PASS" endtime="20170920 22:38:15.616" starttime="20170920 22:38:15.607"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:15.617" starttime="20170920 22:38:15.617"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cd /D "${log_folder_path_on_tm500_pc}"</arg>
</arguments>
<msg timestamp="20170920 22:38:16.930" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:38:16.930" level="INFO">[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\170920_223650_session\170920_223741"</msg>
<msg timestamp="20170920 22:38:16.930" level="INFO">[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\170920_223650_session\170920_223741"

C:\TM500_log\170920_223650_session\170920_223741&gt;</msg>
<status status="PASS" endtime="20170920 22:38:16.930" starttime="20170920 22:38:15.617"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cp ../*ommand*og*.txt session_command_log.txt</arg>
</arguments>
<msg timestamp="20170920 22:38:18.238" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:38:18.238" level="INFO">[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt</msg>
<msg timestamp="20170920 22:38:18.238" level="INFO">[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt
cp: cannot stat `../*ommand*og*.txt': No such file or directory

C:\TM500_log\170920_223650_session\170920_223741&gt;</msg>
<status status="PASS" endtime="20170920 22:38:18.238" starttime="20170920 22:38:16.930"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>chmod 777 -R *</arg>
</arguments>
<msg timestamp="20170920 22:38:19.535" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:38:19.535" level="INFO">[telnet_common.py@276] Execute command: chmod 777 -R *</msg>
<msg timestamp="20170920 22:38:19.535" level="INFO">[telnet_common.py@306] Get Response: chmod 777 -R *

C:\TM500_log\170920_223650_session\170920_223741&gt;</msg>
<status status="PASS" endtime="20170920 22:38:19.536" starttime="20170920 22:38:18.239"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zcvf tm500_log.tar *.*</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:19.536" starttime="20170920 22:38:19.536"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>:\\</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${driver_log_folder}</var>
</assign>
<msg timestamp="20170920 22:38:19.537" level="INFO">${driver_log_folder} = [u'C', u'TM500_LOG\\170920_223650_session\\170920_223741']</msg>
<status status="PASS" endtime="20170920 22:38:19.537" starttime="20170920 22:38:19.536"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${TM500_PC_INFO.IP}</arg>
<arg>21</arg>
<arg>TA_LOG</arg>
<arg>${None}</arg>
<arg>${log_folder_path_on_local_pc}</arg>
<arg>ALL</arg>
<arg>${driver_log_folder[1]}</arg>
</arguments>
<msg timestamp="20170920 22:38:19.866" level="INFO">[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.</msg>
<msg timestamp="20170920 22:38:19.866" level="INFO">[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta
220-written by Tim Kosse (Tim.Kosse@gmx.de)
220 Please visit http://sourceforge.net/projects/filezilla/</msg>
<status status="PASS" endtime="20170920 22:38:19.867" starttime="20170920 22:38:19.537"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:38:19.875" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:38:19.876" starttime="20170920 22:38:19.868"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>cd /D "${log_folder_path_on_local_pc}"</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:19.876" starttime="20170920 22:38:19.876"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:19.877" starttime="20170920 22:38:19.876"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>chmod 777 -R *</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:19.877" starttime="20170920 22:38:19.877"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${unzip_result}</arg>
<arg>Run keyword and ignore error</arg>
<arg>Unzip file</arg>
<arg>tm500_log.tar</arg>
<arg>${log_folder_path_on_local_pc}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:19.878" starttime="20170920 22:38:19.878"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword if</arg>
<arg>'${unzip_result[0]}' == 'FAIL'</arg>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:19.878" starttime="20170920 22:38:19.878"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>remove file</arg>
<arg>${log_folder_path_on_local_pc}/tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:19.879" starttime="20170920 22:38:19.879"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:19.879" starttime="20170920 22:38:15.606"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:19.879" starttime="20170920 22:37:54.239"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ue_attach_ip}</arg>
<arg>${tm500_attach_result.UE0}</arg>
</arguments>
<msg timestamp="20170920 22:38:19.880" level="INFO">${ue_attach_ip} = 172.170.52.90</msg>
<status status="PASS" endtime="20170920 22:38:19.880" starttime="20170920 22:38:19.879"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:19.880" starttime="20170920 22:36:09.774"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:19.880" starttime="20170920 22:36:09.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:19.884" starttime="20170920 22:38:19.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="TM500_Detach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:38:19.927" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:38:19.928" starttime="20170920 22:38:19.892"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170920 22:38:21.188" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;</msg>
<msg timestamp="20170920 22:38:21.188" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170920 22:38:21.188" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170920 22:38:21.189" starttime="20170920 22:38:19.928"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:38:21.197" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<status status="PASS" endtime="20170920 22:38:21.198" starttime="20170920 22:38:21.189"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170920 22:38:22.550" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:38:22.550" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170920 22:38:22.550" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\TM500_log\170920_223650_session\170920_223741&gt;</msg>
<status status="PASS" endtime="20170920 22:38:22.550" starttime="20170920 22:38:21.198"></status>
</kw>
<kw name="Tm500 Stop Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword disconnects TM500 PPPoE connection by PPPoE name.</doc>
<msg timestamp="20170920 22:38:23.887" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;.</msg>
<msg timestamp="20170920 22:38:23.887" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x045722B0&gt;</msg>
<msg timestamp="20170920 22:38:23.887" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT</msg>
<msg timestamp="20170920 22:38:23.887" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170920_223650_session\170920_223741&gt;</msg>
<msg timestamp="20170920 22:38:23.887" level="INFO">[tm500.py@1321] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170920_223650_session\170920_223741&gt;</msg>
<status status="PASS" endtime="20170920 22:38:23.887" starttime="20170920 22:38:22.551"></status>
</kw>
<kw name="Tm500 Detach" library="tdd_ev_robotws">
<doc>This keyword does UE detach operation of TM500.</doc>
<msg timestamp="20170920 22:38:23.956" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170920 22:38:23.956" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0

C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170920 22:38:23.956" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte NasConfigEmmDeregister 0</msg>
<msg timestamp="20170920 22:38:23.956" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170920 22:38:23.956" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170920 22:38:23.956" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170920 22:38:23.956" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte Activate -1</msg>
<msg timestamp="20170920 22:38:23.956" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<status status="PASS" endtime="20170920 22:38:23.956" starttime="20170920 22:38:23.887"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:38:23.965" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:38:23.965" starttime="20170920 22:38:23.957"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170920 22:38:28.004" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170920 22:38:28.004" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170920 22:38:28.004" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170920 22:38:28.004" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170920 22:38:28.004" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170920 22:38:28.004" starttime="20170920 22:38:23.965"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170920 22:38:45.183" level="INFO">[tm500.py@591] Prev msg: I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x37A8, TimingAdv: 2, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0
    Detach Cause: UE Initiated 

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Acceptable</msg>
<msg timestamp="20170920 22:38:45.183" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170920 22:38:45.183" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170920 22:38:45.183" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8276 stopping</msg>
<status status="PASS" endtime="20170920 22:38:45.183" starttime="20170920 22:38:28.005"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:45.184" starttime="20170920 22:38:19.891"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:45.184" starttime="20170920 22:38:19.888"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:45.184" starttime="20170920 22:38:19.884"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index1}+1</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170920 22:38:45.188" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170920 22:38:45.188" starttime="20170920 22:38:45.184"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${cell_index1}</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170920 22:38:45.189" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170920 22:38:45.189" starttime="20170920 22:38:45.188"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:45.189" starttime="20170920 22:36:09.749"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:45.189" starttime="20170920 22:36:09.748"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:45.189" starttime="20170920 22:36:09.366"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:45.190" starttime="20170920 22:30:51.824"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:45.190" starttime="20170920 22:22:39.227"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:45.190" starttime="20170920 22:22:39.227"></status>
</kw>
<kw type="teardown" name="Test_Tear_Down_Action" library="SISO1 Resource">
<doc>Action when case finishs</doc>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170920 22:38:45.195" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x059F0AD0&gt;.</msg>
<status status="PASS" endtime="20170920 22:38:45.195" starttime="20170920 22:38:45.191"></status>
</kw>
<kw name="Kill Qtp Process" library="tdd_ev_robotws">
<doc>This keyword is used to kill the processes related to QTP application.</doc>
<msg timestamp="20170920 22:38:46.070" level="INFO">Start to kill QTP process.
Finshed to kill QTP process.</msg>
<status status="PASS" endtime="20170920 22:38:46.071" starttime="20170920 22:38:45.195"></status>
</kw>
<kw name="Stop Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<status status="PASS" endtime="20170920 22:38:46.073" starttime="20170920 22:38:46.071"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${case_execute_log_name}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:46.074" starttime="20170920 22:38:46.074"></status>
</kw>
<msg timestamp="20170920 22:38:46.074" level="INFO">${return} = ('PASS', None)</msg>
<status status="PASS" endtime="20170920 22:38:46.074" starttime="20170920 22:38:46.073"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Save Infomodel Log" library="tdd_ev_robotws">
<doc>Save InfoModel log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20170920 22:38:46.094" level="INFO">[infomodel_control.py@215] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\owner_debug' succeed .</msg>
<status status="PASS" endtime="20170920 22:38:46.094" starttime="20170920 22:38:46.079"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:46.094" starttime="20170920 22:38:46.075"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:46.094" starttime="20170920 22:38:46.074"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Stop Infomodel" library="tdd_ev_robotws">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20170920 22:38:46.838" level="INFO">[infomodel_control.py@187] stop infomodel logger succeed .</msg>
<msg timestamp="20170920 22:38:46.838" level="INFO">[infomodel_control.py@199] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170920 22:38:46.839" starttime="20170920 22:38:46.098"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:46.839" starttime="20170920 22:38:46.095"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:46.839" starttime="20170920 22:38:46.095"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Release_TM500_And_Colse_PA_Port</arg>
</arguments>
<kw name="Release_TM500_And_Colse_PA_Port" library="SISO1 Resource">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${return}</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Variable Should Exist</arg>
<arg>${TM500_Use_Tag}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:46.840" starttime="20170920 22:38:46.840"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Use_Tag}'=='used'</arg>
<arg>Set Attenuators Off</arg>
<arg>${ATT_ALL_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:46.841" starttime="20170920 22:38:46.840"></status>
</kw>
<kw name="Set_Allcells_Attenuation_Off" library="SISO1 Resource">
<kw type="for" name="${index} IN RANGE [ 1 | 10 ]">
<kw type="foritem" name="${index} = 1">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:46.843" starttime="20170920 22:38:46.842"></status>
</kw>
<msg timestamp="20170920 22:38:46.843" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170920 22:38:46.843" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170920 22:38:46.843" starttime="20170920 22:38:46.842"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:46.846" starttime="20170920 22:38:46.843"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170920 22:38:50.872" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170920 22:38:50.872" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170920 22:38:50.872" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170920 22:38:50.872" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170920 22:38:50.872" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170920 22:38:50.873" starttime="20170920 22:38:46.846"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:50.873" starttime="20170920 22:38:46.841"></status>
</kw>
<kw type="foritem" name="${index} = 2">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:50.874" starttime="20170920 22:38:50.874"></status>
</kw>
<msg timestamp="20170920 22:38:50.874" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170920 22:38:50.874" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170920 22:38:50.874" starttime="20170920 22:38:50.873"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:50.877" starttime="20170920 22:38:50.875"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170920 22:38:54.908" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170920 22:38:54.908" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170920 22:38:54.908" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170920 22:38:54.908" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170920 22:38:54.908" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170920 22:38:54.909" starttime="20170920 22:38:50.878"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:54.909" starttime="20170920 22:38:50.873"></status>
</kw>
<kw type="foritem" name="${index} = 3">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:54.910" starttime="20170920 22:38:54.910"></status>
</kw>
<msg timestamp="20170920 22:38:54.910" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170920 22:38:54.910" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170920 22:38:54.910" starttime="20170920 22:38:54.909"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170920 22:38:54.914" starttime="20170920 22:38:54.911"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170920 22:38:58.941" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170920 22:38:58.941" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170920 22:38:58.941" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170920 22:38:58.941" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170920 22:38:58.941" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170920 22:38:58.941" starttime="20170920 22:38:54.915"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:58.941" starttime="20170920 22:38:54.909"></status>
</kw>
<kw type="foritem" name="${index} = 4">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170920 22:38:58.949" level="FAIL">Variable ${CELL4_ATT_INFO} does not exist.</msg>
<status status="FAIL" endtime="20170920 22:38:58.949" starttime="20170920 22:38:58.942"></status>
</kw>
<msg timestamp="20170920 22:38:58.949" level="INFO">${ret1} = FAIL</msg>
<msg timestamp="20170920 22:38:58.949" level="INFO">${ret2} = Variable ${CELL4_ATT_INFO} does not exist.</msg>
<status status="PASS" endtime="20170920 22:38:58.949" starttime="20170920 22:38:58.942"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<msg timestamp="20170920 22:38:58.953" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170920 22:38:58.953" starttime="20170920 22:38:58.950"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:58.953" starttime="20170920 22:38:58.941"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:58.953" starttime="20170920 22:38:46.841"></status>
</kw>
<status status="PASS" endtime="20170920 22:38:58.953" starttime="20170920 22:38:46.841"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170920 22:39:03.962" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "10.56.6.32"</msg>
<status status="PASS" endtime="20170920 22:39:03.962" starttime="20170920 22:38:58.954"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Test Variable</arg>
<arg>${TM500_Use_Tag}</arg>
<arg>unused</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:03.963" starttime="20170920 22:39:03.963"></status>
</kw>
<status status="PASS" endtime="20170920 22:39:03.963" starttime="20170920 22:38:46.840"></status>
</kw>
<status status="PASS" endtime="20170920 22:39:03.963" starttime="20170920 22:38:46.839"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<msg timestamp="20170920 22:39:03.970" level="FAIL">Variable ${route_add_cpe_pc} does not exist.</msg>
<status status="FAIL" endtime="20170920 22:39:03.970" starttime="20170920 22:39:03.964"></status>
</kw>
<msg timestamp="20170920 22:39:03.971" level="INFO">${return} = ('FAIL', u'Variable ${route_add_cpe_pc} does not exist.')</msg>
<status status="PASS" endtime="20170920 22:39:03.971" starttime="20170920 22:39:03.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${route_add_cpe_pc}'=='true'</arg>
<arg>Execute Shell Command</arg>
<arg>route delete ${BTS_PC_INFO.IP} mask 255.255.255.255 ${UE1_INFO.ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:03.974" starttime="20170920 22:39:03.971"></status>
</kw>
<kw name="Alarm Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20170920 22:39:18.853" level="ERROR">Infomodel not connected.</msg>
<msg timestamp="20170920 22:39:19.521" level="INFO">[infomodel_control.py@82] set up infomodel with following info succeed .
    details: address=192.168.255.1, port=12345, definitions_file_path=None
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}</msg>
<msg timestamp="20170920 22:39:19.521" level="INFO">[infomodel_control.py@100] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170920 22:39:19.522" starttime="20170920 22:39:03.974"></status>
</kw>
<kw name="Fatal Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20170920 22:39:24.438" level="INFO">['fatal'] ['fatal']</msg>
<msg timestamp="20170920 22:39:24.438" level="INFO">[file_control.py@109] *HTML*&lt;a href = "D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\udplog_20170920221624.log"&gt;fail log&lt;/a&gt;
Find '['fatal']' in 'D:\TA\TA_logs\TestLog_20170920221319\ev_logs\FZHR_Operational_Cell_block_unblock_20170920221321\FZHR_Operational_Cell_block_unblock\udplog_20170920221624.log'
write successfully</msg>
<status status="PASS" endtime="20170920 22:39:24.438" starttime="20170920 22:39:19.522"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<assign>
<var>${return1}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<msg timestamp="20170920 22:39:24.440" level="FAIL">'FZHR_Operational_Cell_block_unblock' does not contain 'Fiber'</msg>
<status status="FAIL" endtime="20170920 22:39:24.440" starttime="20170920 22:39:24.439"></status>
</kw>
<msg timestamp="20170920 22:39:24.440" level="INFO">${return1} = ('FAIL', u"'FZHR_Operational_Cell_block_unblock' does not contain 'Fiber'")</msg>
<status status="PASS" endtime="20170920 22:39:24.440" starttime="20170920 22:39:24.439"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<assign>
<var>${all_fiber_link}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:24.444" starttime="20170920 22:39:24.441"></status>
</kw>
<msg timestamp="20170920 22:39:24.444" level="INFO">${all_fiber_link} = ('PASS', None)</msg>
<status status="PASS" endtime="20170920 22:39:24.444" starttime="20170920 22:39:24.440"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:24.448" starttime="20170920 22:39:24.445"></status>
</kw>
<status status="PASS" endtime="20170920 22:39:24.448" starttime="20170920 22:39:24.444"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Software Reboot Bts</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:24.448" starttime="20170920 22:39:24.448"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Sleep</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:24.449" starttime="20170920 22:39:24.448"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:24.449" starttime="20170920 22:39:24.449"></status>
</kw>
<kw name="Common Test Teardown" library="common_resource">
<doc>[Caution] this keyword step:</doc>
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20170920 22:39:24.450" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20170920 22:39:24.450" starttime="20170920 22:39:24.450"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:24.451" starttime="20170920 22:39:24.450"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:24.451" starttime="20170920 22:39:24.451"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:24.452" starttime="20170920 22:39:24.451"></status>
</kw>
<kw name="Get Active Bts Sw Version" library="tdd_ev_robotws">
<doc>get active BTS SW Build Version from enb targetBD file..</doc>
<assign>
<var>${version}</var>
</assign>
<msg timestamp="20170920 22:39:45.957" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:39:45.957" level="INFO">[ssh_common.py@203] root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:39:45.957" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x059DE6C0&gt;</msg>
<msg timestamp="20170920 22:39:45.957" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170920 22:39:45.957" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:39:45.957" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x059DE6C0&gt;</msg>
<msg timestamp="20170920 22:39:45.957" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170920 22:39:45.957" level="INFO">[ssh_common.py@203] Last login: Wed Sep 20 22:39:23 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170920 22:39:45.957" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x059DE6C0&gt;</msg>
<msg timestamp="20170920 22:39:45.957" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20170920 22:39:45.957" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000337_000000.xml
root@fctj-0a:/ffs/fs2 &gt;</msg>
<msg timestamp="20170920 22:39:45.957" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x059DE6C0&gt;</msg>
<msg timestamp="20170920 22:39:45.958" level="INFO">${version} = TL17A_ENB_0000_000337_000000</msg>
<status status="PASS" endtime="20170920 22:39:45.958" starttime="20170920 22:39:24.452"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:45.958" starttime="20170920 22:39:45.958"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<status status="PASS" endtime="20170920 22:39:45.959" starttime="20170920 22:39:45.959"></status>
</kw>
<status status="PASS" endtime="20170920 22:39:45.959" starttime="20170920 22:39:24.449"></status>
</kw>
<status status="PASS" endtime="20170920 22:39:45.959" starttime="20170920 22:38:45.191"></status>
</kw>
<tags>
<tag>owner-shaocheng.chen@nokia.com</tag>
<tag>QC_773297</tag>
</tags>
<status status="PASS" endtime="20170920 22:39:45.960" critical="yes" starttime="20170920 22:15:04.098"></status>
</test>
<doc>TD-LTE I&amp;V SISO1</doc>
<status status="PASS" endtime="20170920 22:39:46.016" starttime="20170920 22:13:20.467"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">owner-shaocheng.chen@nokia.com</stat>
<stat fail="0" pass="1">QC_773297</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="FZHR Operational Cell block unblock" pass="1">FZHR Operational Cell block unblock</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170920 22:13:21.069" level="ERROR">Loading tdd_config has failed. Please check if: 
       1. you executed pybot with --variable CONFIGURATION:$your_tl_config 
          i.e. pybot --variable CONFIGURATION:Wroclaw.test 
       2. check if there is no problem with your configuration 
       Error msg: Variable ${CONFIGURATION} does not exist.
</msg>
<msg timestamp="20170920 22:25:26.120" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:26.481" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:26.514" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:26.546" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:26.603" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:27.550" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:25:27.598" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:24.852" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:24.858" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:24.885" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:24.910" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:24.959" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:25.009" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:28:25.055" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.044" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.050" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.077" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.106" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.161" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.210" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:32:38.259" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.464" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.470" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.503" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.537" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.587" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.634" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:36:09.680" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170920 22:39:18.853" level="ERROR">Infomodel not connected.</msg>
</errors>
</robot>
