<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20171026 15:23:37.163" generator="Rebot 3.0 (Python 2.7.5 on win32)">
<suite source="D:\TA\Test_Case_Svn\TL17A\SISO1\CPRI_Single_FZHR\FZHR_Operational_Cell_block_unblock\FZHR_Operational_Cell_block_unblock.html" id="s1" name="FZHR Operational Cell block unblock">
<kw type="setup" name="Common Suite Setup" library="common_resource">
<doc>this keyword create suite name directory path as D:\TA\TA_logs\TestLog_20171026142953//logs//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20171026 15:03:39.729" level="INFO">${timestamp} = 20171026150339</msg>
<status status="PASS" endtime="20171026 15:03:39.729" starttime="20171026 15:03:39.698"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_NAME[:50]}</arg>
<arg>\\s+$</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${FILE_NAME}</var>
</assign>
<msg timestamp="20171026 15:03:39.729" level="INFO">${FILE_NAME} = FZHR Operational Cell block unblock</msg>
<status status="PASS" endtime="20171026 15:03:39.745" starttime="20171026 15:03:39.729"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>ev_logs</arg>
<arg>${FILE_NAME}_${timestamp}</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20171026 15:03:39.745" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR Operational Cell block unblock_20171026150339</msg>
<status status="PASS" endtime="20171026 15:03:39.745" starttime="20171026 15:03:39.745"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20171026 15:03:39.745" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339</msg>
<status status="PASS" endtime="20171026 15:03:39.745" starttime="20171026 15:03:39.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20171026 15:03:39.745" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339</msg>
<status status="PASS" endtime="20171026 15:03:39.745" starttime="20171026 15:03:39.745"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20171026 15:03:39.745" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339"&gt;D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20171026 15:03:39.745" starttime="20171026 15:03:39.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20171026 15:03:39.745" level="INFO">save log dir:D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339</msg>
<status status="PASS" endtime="20171026 15:03:39.745" starttime="20171026 15:03:39.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${snapshot_flag}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20171026 15:03:39.745" level="INFO">${snapshot_flag} = 0</msg>
<status status="PASS" endtime="20171026 15:03:39.745" starttime="20171026 15:03:39.745"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<msg timestamp="20171026 15:03:39.761" level="FAIL">Variable ${TEST LOG DIR} does not exist.</msg>
<status status="FAIL" endtime="20171026 15:03:39.761" starttime="20171026 15:03:39.761"></status>
</kw>
<msg timestamp="20171026 15:03:39.761" level="INFO">${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')</msg>
<status status="PASS" endtime="20171026 15:03:39.761" starttime="20171026 15:03:39.761"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:03:39.761" starttime="20171026 15:03:39.761"></status>
</kw>
<msg timestamp="20171026 15:03:39.761" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20171026 15:03:39.761" starttime="20171026 15:03:39.761"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:03:39.776" starttime="20171026 15:03:39.776"></status>
</kw>
<msg timestamp="20171026 15:03:39.776" level="INFO">${log dir} = D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339</msg>
<status status="PASS" endtime="20171026 15:03:39.776" starttime="20171026 15:03:39.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20171026 15:03:39.776" level="INFO">${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339</msg>
<status status="PASS" endtime="20171026 15:03:39.776" starttime="20171026 15:03:39.776"></status>
</kw>
<status status="PASS" endtime="20171026 15:03:39.776" starttime="20171026 15:03:39.761"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Make Sure FCT Ping Ok</arg>
</arguments>
<kw name="Make Sure FCT Ping Ok" library="common_resource">
<kw name="Ping Should Ok" library="tdd_ev_robotws">
<doc>This function is used for check whether ping host success, if yes, return 1, else return 0</doc>
<arguments>
<arg>${FCMD_IP}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20171026 15:03:39.807" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20171026 15:03:39.807" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20171026 15:03:39.807" starttime="20171026 15:03:39.776"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${FTM_IP}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:03:39.807" starttime="20171026 15:03:39.807"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Btscli Disable Bts Port Security</arg>
</arguments>
<status status="PASS" endtime="20171026 15:03:39.807" starttime="20171026 15:03:39.807"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>60</arg>
<arg>${FCMD_IP}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:03:39.807" starttime="20171026 15:03:39.807"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5min</arg>
<arg>5s</arg>
<arg>_make sure fctb connect ok</arg>
</arguments>
<status status="PASS" endtime="20171026 15:03:39.807" starttime="20171026 15:03:39.807"></status>
</kw>
<status status="PASS" endtime="20171026 15:03:39.807" starttime="20171026 15:03:39.776"></status>
</kw>
<status status="PASS" endtime="20171026 15:03:39.807" starttime="20171026 15:03:39.776"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>get_enb_infomation</arg>
</arguments>
<kw name="Get Enb Infomation" library="tdd_ev_robotws">
<doc>This keyword will print bts sw version, bbu type and RRU type.</doc>
<msg timestamp="20171026 15:04:34.595" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171026 15:04:34.626" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171026 15:04:45.780" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171026 15:04:45.811" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171026 15:04:46.341" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171026 15:04:46.373" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:03:41 CST 2017 from 10.69.80.114 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x054A8418&gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x054A8418&gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:03:46 CST 2017 from 192.168.255.126 on pts/1
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04578210&gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000475_000000.xml
root@fctj-0a:/ffs/fs2 &gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04578210&gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:03:56 CST 2017 from 192.168.255.126 on pts/1
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04C144E0&gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04C144E0&gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:04:08 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053D7378&gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000475_000000.xml
root@fctj-0a:/ffs/fs2 &gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053D7378&gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_resource.py@1141] 
 ****Current BTS version is 'TL17A_ENB_0000_000475_000000' *****</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_resource.py@1171] activeBuildVersion=TL17A_ENB_0000_000475_000000</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:04:19 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053D7EB8&gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@258] Execute command: ls /ram/SiteConf.xml</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@314] Get Response: ls /ram/SiteConf.xml
/ram/SiteConf.xml
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053D7EB8&gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[sftp_control.py@176] /ram/SiteConf.xml</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[sftp_control.py@79] sftp download from '/ram/SiteConf.xml' to 'D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\SiteConf.xml' is ok. local file size is 21k</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:04:40 CST 2017 from 192.168.255.126 on ssh
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053D7378&gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053D7378&gt;</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_resource.py@403] The real falsh folder is /ffs/fs2</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[sftp_control.py@176] /ffs/fs2/FileDirectory.xml</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs2/FileDirectory.xml' to 'D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FileDirectory_20171026150434.xml' is ok. local file size is 36k</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[sftp_control.py@176] /ffs/fs2/config/SCFC_154.xml</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs2/config/SCFC_154.xml' to 'D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\SCFC_154.xml' is ok. local file size is 100k</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_resource.py@1141] 
 ****Current bbu type is 'ASIA' *****</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_resource.py@1266] HW_BBU_TYPE=ASIA</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_resource.py@1141] 
 ****Current rru type is 'FR' *****</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_resource.py@1269] HW_RRU_TYPE=FR</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_resource.py@1141] 
 ****Current HW type is 'null' *****</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[enb_resource.py@1272] BTS_HW_TYPE=null</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.200.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.200.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20171026 15:05:13.985" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.20 with 32 bytes of data:
Reply from 192.168.255.126: Destination host unreachable.

Ping statistics for 192.168.255.20:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),</msg>
<status status="PASS" endtime="20171026 15:05:13.985" starttime="20171026 15:03:39.807"></status>
</kw>
<status status="PASS" endtime="20171026 15:05:13.985" starttime="20171026 15:03:39.807"></status>
</kw>
<kw name="Set Library Search Order" library="BuiltIn">
<doc>Sets the resolution order to use when a name matches multiple keywords.</doc>
<arguments>
<arg>tdd_ev_robotws</arg>
<arg>OperatingSystem</arg>
</arguments>
<status status="PASS" endtime="20171026 15:05:13.985" starttime="20171026 15:05:13.985"></status>
</kw>
<kw name="Initial Connection With BTS PC" library="common_resource">
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20171026 15:05:13.985" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20171026 15:05:13.985" starttime="20171026 15:05:13.985"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>${TELNET_PORT}</arg>
<arg>${SSH_PORT}</arg>
</arguments>
<assign>
<var>${conn_port}</var>
</assign>
<msg timestamp="20171026 15:05:13.985" level="INFO">${conn_port} = 23</msg>
<status status="PASS" endtime="20171026 15:05:13.985" starttime="20171026 15:05:13.985"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>TELNET</arg>
<arg>SSH</arg>
</arguments>
<assign>
<var>${conn_type}</var>
</assign>
<msg timestamp="20171026 15:05:13.985" level="INFO">${conn_type} = TELNET</msg>
<status status="PASS" endtime="20171026 15:05:13.985" starttime="20171026 15:05:13.985"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>30</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${timeout}</var>
</assign>
<msg timestamp="20171026 15:05:14.000" level="INFO">${timeout} = 30</msg>
<status status="PASS" endtime="20171026 15:05:14.000" starttime="20171026 15:05:13.985"></status>
</kw>
<kw name="Connect To Host" library="tdd_ev_robotws">
<doc>Used to connect to host, either TELNET or SSH</doc>
<arguments>
<arg>${BTS_PC_INFO.IP}</arg>
<arg>port=${conn_port}</arg>
<arg>username=${BTS_PC_INFO.USERNAME}</arg>
<arg>password=${BTS_PC_INFO.PASSWORD}</arg>
<arg>conn_type=${conn_type}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${BTS_PC_CONNECTION}</var>
</assign>
<msg timestamp="20171026 15:05:15.482" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 


login:</msg>
<msg timestamp="20171026 15:05:15.482" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20171026 15:05:15.482" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester

password:</msg>
<msg timestamp="20171026 15:05:15.482" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20171026 15:05:15.482" level="INFO">[telnet_common.py@246]  

*===============================================================
Microsoft Telnet Server.
*===============================================================
C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20171026 15:05:15.482" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;</msg>
<status status="PASS" endtime="20171026 15:05:15.482" starttime="20171026 15:05:14.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171026 15:05:15.482" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;</msg>
<status status="PASS" endtime="20171026 15:05:15.482" starttime="20171026 15:05:15.482"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>Execute Shell Command</arg>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<msg timestamp="20171026 15:05:16.715" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;</msg>
<msg timestamp="20171026 15:05:16.715" level="INFO">[telnet_common.py@276] Execute command: tlntadmn config timeoutactive=no</msg>
<msg timestamp="20171026 15:05:16.715" level="INFO">[telnet_common.py@306] Get Response: tlntadmn config timeoutactive=no
The settings were successfully updated.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20171026 15:05:16.715" starttime="20171026 15:05:15.482"></status>
</kw>
<status status="PASS" endtime="20171026 15:05:16.715" starttime="20171026 15:05:15.482"></status>
</kw>
<status status="PASS" endtime="20171026 15:05:16.715" starttime="20171026 15:05:13.985"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171026 15:05:16.730" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;.</msg>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:05:16.715"></status>
</kw>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:03:39.698"></status>
</kw>
<kw type="teardown" name="Common Suite Teardown" library="common_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${REMOVE_LOGS}'=='on'</arg>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:33.856" starttime="20171026 15:23:33.856"></status>
</kw>
<kw name="Disconnect All Hosts" library="tdd_ev_robotws">
<doc>Closes all existing telnet connections to remote hosts.</doc>
<msg timestamp="20171026 15:23:33.872" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20171026 15:23:33.872" level="INFO">[telnet_common.py@189] Disconnect from 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;</msg>
<msg timestamp="20171026 15:23:33.872" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20171026 15:23:33.872" level="INFO">[telnet_common.py@189] Disconnect from 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<status status="PASS" endtime="20171026 15:23:33.872" starttime="20171026 15:23:33.856"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Run Keyword If</arg>
<arg>${need_zip} == ${True}</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${value}</var>
</assign>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>${need_zip} == ${True}</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:33.872" starttime="20171026 15:23:33.872"></status>
</kw>
<msg timestamp="20171026 15:23:33.872" level="INFO">${status} = PASS</msg>
<msg timestamp="20171026 15:23:33.872" level="INFO">${value} = None</msg>
<status status="PASS" endtime="20171026 15:23:33.872" starttime="20171026 15:23:33.872"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Run Keyword If</arg>
<arg>'${status}' == 'PASS' and ${need_zip} == ${True}</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${status}' == 'PASS' and ${need_zip} == ${True}</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:33.872" starttime="20171026 15:23:33.872"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:33.872" starttime="20171026 15:23:33.872"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:33.872" starttime="20171026 15:23:33.856"></status>
</kw>
<test id="s1-t1" name="FZHR_Operational_Cell_block_unblock">
<kw type="setup" name="Common Test Setup" library="common_resource">
<doc>this keyword create case name directory path as D:\TA\TA_logs\TestLog_20171026142953//ev_logs//D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20171026 15:05:16.730" level="INFO">${timestamp} = 20171026150516</msg>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:05:16.730"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20171026 15:05:16.730" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:05:16.730"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20171026 15:05:16.730" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:05:16.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20171026 15:05:16.730" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:05:16.730"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20171026 15:05:16.730" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock"&gt;D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:05:16.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20171026 15:05:16.730" level="INFO">save log dir:D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:05:16.730"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${BTS PC CONNECTION.connected}</arg>
<arg>Initial Connection With BTS PC</arg>
</arguments>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:05:16.730"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:05:16.730"></status>
</kw>
<msg timestamp="20171026 15:05:16.730" level="INFO">${case_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:05:16.730"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:05:16.730"></status>
</kw>
<msg timestamp="20171026 15:05:16.730" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20171026 15:05:16.730" starttime="20171026 15:05:16.730"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<msg timestamp="20171026 15:05:16.746" level="INFO">${log dir} = D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20171026 15:05:16.746" starttime="20171026 15:05:16.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20171026 15:05:16.746" level="INFO">${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20171026 15:05:16.746" starttime="20171026 15:05:16.746"></status>
</kw>
<status status="PASS" endtime="20171026 15:05:16.746" starttime="20171026 15:05:16.730"></status>
</kw>
<status status="PASS" endtime="20171026 15:05:16.746" starttime="20171026 15:05:16.730"></status>
</kw>
<kw name="BTS_On_Air" library="SISO1 Resource">
<arguments>
<arg>${source_scf}</arg>
<arg>${parameter_list}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171026 15:05:16.746" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;.</msg>
<status status="PASS" endtime="20171026 15:05:16.746" starttime="20171026 15:05:16.746"></status>
</kw>
<kw name="Parse Ping Result" library="tdd_ev_robotws">
<doc>This keyword test the reachability of remote system.</doc>
<arguments>
<arg>192.168.255.1</arg>
</arguments>
<assign>
<var>${package_summary}</var>
<var>${ping_delay}</var>
</assign>
<msg timestamp="20171026 15:05:20.989" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;</msg>
<msg timestamp="20171026 15:05:20.989" level="INFO">[telnet_common.py@276] Execute command: ping  192.168.255.1</msg>
<msg timestamp="20171026 15:05:20.989" level="INFO">[telnet_common.py@306] Get Response: ping  192.168.255.1

Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms

C:\Users\tdlte-tester&gt;
Total ping delay is: [1, 1, 1, 1]
Statistic ping delay is: [1, 1, 1, 1]
Valid ping delay is: [1, 1, 1, 1]</msg>
<msg timestamp="20171026 15:05:20.989" level="INFO">${package_summary} = ('4', '4', '0')</msg>
<msg timestamp="20171026 15:05:20.989" level="INFO">${ping_delay} = [1, 1, 1.0]</msg>
<status status="PASS" endtime="20171026 15:05:20.989" starttime="20171026 15:05:16.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Restart Device With Powerbreaker</arg>
<arg>${bts_powerbreak}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:05:21.005" starttime="20171026 15:05:21.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20171026 15:05:21.005" starttime="20171026 15:05:21.005"></status>
</kw>
<kw name="Modify And Upload Scf File" library="tdd_ev_robotws">
<doc>modify source_scf according parameter list and then upload to enb.</doc>
<arguments>
<arg>${source_scf}</arg>
<arg>${parameters_list}</arg>
</arguments>
<msg timestamp="20171026 15:06:14.591" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171026 15:06:14.622" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171026 15:06:25.792" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171026 15:06:26.182" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:04:51 CST 2017 from 192.168.255.126 on ssh
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0551B8F0&gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0551B8F0&gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:05:27 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0551BF80&gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000475_000000.xml
root@fctj-0a:/ffs/fs2 &gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0551BF80&gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[enb_resource.py@360] enable ssh and rdport failed.</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:05:37 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x046875A8&gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x046875A8&gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:05:48 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0532B5A8&gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000475_000000.xml
root@fctj-0a:/ffs/fs2 &gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0532B5A8&gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:05:59 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0532B5A8&gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0532B5A8&gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[enb_resource.py@403] The real falsh folder is /ffs/fs2</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[sftp_control.py@176] /ffs/fs2/FileDirectory.xml</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs2/FileDirectory.xml' to 'D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\FileDirectory_20171026150603.xml' is ok. local file size is 36k</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.129</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:06:20 CST 2017 from 192.168.255.126 on ssh
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0532BBE8&gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@258] Execute command: rm -rf /ffs/fs2/config/hwf.bin.gz</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@314] Get Response: rm -rf /ffs/fs2/config/hwf.bin.gz
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0532BBE8&gt;</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[sftp_control.py@61] sftp upload from 'D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\scf_modified.xml' to '/ffs/fs2/config/SCFC_154.xml' is ok.</msg>
<msg timestamp="20171026 15:06:26.197" level="INFO">[sftp_control.py@176] /ffs/fs2/config/SCFC_154.xml</msg>
<status status="PASS" endtime="20171026 15:06:26.197" starttime="20171026 15:05:21.005"></status>
</kw>
<kw name="Restart Bts Until Onair" library="tdd_ev_robotws">
<doc>restart bts with powerbreaker and then wait until it is onair.</doc>
<arguments>
<arg>bts_powerbreak_port=${bts_powerbreak}</arg>
</arguments>
<msg timestamp="20171026 15:13:39.702" level="INFO">[tools_resource.py@34] start power off ..</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[base.py@48] trial power off for 0 times</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[facom.py@60] Power off port 3 succeed!</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[base.py@48] trial power off for 0 times</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[facom.py@60] Power off port 6 succeed!</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[tools_resource.py@37] start power on ..</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[base.py@36] trial power on for 0 times</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[facom.py@83] Power on port 3 succeed!</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[base.py@36] trial power on for 0 times</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[facom.py@83] Power on port 6 succeed!</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[tools_resource.py@39] restart port '['FACOM:10.56.7.128:3', 'FACOM:10.56.7.128:6']' with powerbreak succeed !</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[btslog_control.py@174] use ip is 192.168.255.126</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock" already exists, no need to create it again.</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[infomodel_control.py@158] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None
             ftp_username=toor4nsn,ftp_password=oZPS0POrRieRtu</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[infomodel_control.py@162] start infomodel succeed .</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[infomodel_control.py@164] start infomodel logger succeed .</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'UploadOngoing', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'UploadOngoing', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'UploadOngoing', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'UploadOngoing', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[infomodel_control.py@328] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[infomodel_control.py@328] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[infomodel_control.py@328] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[infomodel_control.py@328] query infomodel: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' succeed .</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@225] infomodel check every cell onair succeed !</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[enb_resource.py@253] bts log check onair msg succeed !</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[infomodel_control.py@215] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\im_20171026151338' succeed .</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[infomodel_control.py@187] stop infomodel logger succeed .</msg>
<msg timestamp="20171026 15:13:39.702" level="INFO">[infomodel_control.py@199] stop infomodel succeed .</msg>
<status status="PASS" endtime="20171026 15:13:39.702" starttime="20171026 15:06:26.197"></status>
</kw>
<status status="PASS" endtime="20171026 15:13:39.702" starttime="20171026 15:05:16.746"></status>
</kw>
<kw name="Start_Udp_And_Infomodel_Log" library="SISO1 Resource">
<kw name="Start Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword starts catching of BTS system(UDP) log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}.log</arg>
</arguments>
<msg timestamp="20171026 15:13:40.092" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'</msg>
<msg timestamp="20171026 15:13:40.092" level="INFO">[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock" already exists, no need to create it again.</msg>
<status status="PASS" endtime="20171026 15:13:40.092" starttime="20171026 15:13:39.702"></status>
</kw>
<kw name="Start Infomodel" library="tdd_ev_robotws">
<doc>Setup InfoModel library and Connect to InfoModel.</doc>
<arguments>
<arg>port=${BTS_INFOMODEL_PORT}</arg>
</arguments>
<msg timestamp="20171026 15:13:48.643" level="INFO">[infomodel_control.py@158] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None
             ftp_username=toor4nsn,ftp_password=oZPS0POrRieRtu</msg>
<msg timestamp="20171026 15:13:48.643" level="INFO">[infomodel_control.py@162] start infomodel succeed .</msg>
<msg timestamp="20171026 15:13:48.643" level="INFO">[infomodel_control.py@164] start infomodel logger succeed .</msg>
<status status="PASS" endtime="20171026 15:13:48.643" starttime="20171026 15:13:40.092"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20171026 15:13:48.643" level="INFO">${case_execute_log_name} = owner_debug</msg>
<status status="PASS" endtime="20171026 15:13:48.643" starttime="20171026 15:13:48.643"></status>
</kw>
<status status="PASS" endtime="20171026 15:13:48.643" starttime="20171026 15:13:39.702"></status>
</kw>
<kw name="UE_Reboot_SISO1" library="SISO1 Resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Ue Software Reboot</arg>
<arg>${UE1_INFO}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:13:48.659" starttime="20171026 15:13:48.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${UE1_INFO.ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:13:48.659" starttime="20171026 15:13:48.659"></status>
</kw>
<status status="PASS" endtime="20171026 15:13:48.659" starttime="20171026 15:13:48.659"></status>
</kw>
<kw type="for" name="${num} IN RANGE [ ${total_times} ]">
<kw type="foritem" name="${num} = 0">
<kw name="_Cell_Block_Unblock_and_Attach">
<doc>Operation with BTS</doc>
<arguments>
<arg>${cell_index_1}</arg>
<arg>${cell_index_2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171026 15:13:48.659" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;.</msg>
<status status="PASS" endtime="20171026 15:13:48.659" starttime="20171026 15:13:48.659"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20171026 15:13:52.809" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;</msg>
<msg timestamp="20171026 15:13:52.809" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171026 15:13:52.809" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="4384"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20171026 15:13:52.809" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;</msg>
<msg timestamp="20171026 15:13:52.809" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171026 15:13:52.809" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="7276"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20171026 15:13:52.809" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;</msg>
<msg timestamp="20171026 15:13:52.809" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171026 15:13:52.809" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.


C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20171026 15:13:52.809" starttime="20171026 15:13:48.659"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20171026 15:13:52.824" starttime="20171026 15:13:52.824"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20171026 15:13:52.824" starttime="20171026 15:13:52.824"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171026 15:13:52.824" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA\\TA_logs\\TestLog_20171026142953\\ev_logs\\FZHR_Operational_Cell_block_unblock_20171026150339\\FZHR_Operational_Cell_...</msg>
<status status="PASS" endtime="20171026 15:13:52.824" starttime="20171026 15:13:52.824"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:13:52.824" starttime="20171026 15:13:52.824"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171026 15:14:54.440" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20171026151352\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20171026 15:14:54.440" starttime="20171026 15:13:52.824"></status>
</kw>
<status status="PASS" endtime="20171026 15:14:54.440" starttime="20171026 15:13:52.824"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>30 sec</arg>
</arguments>
<msg timestamp="20171026 15:15:24.442" level="INFO">Slept 30 seconds</msg>
<status status="PASS" endtime="20171026 15:15:24.442" starttime="20171026 15:14:54.441"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${block_cell_index}</arg>
<arg>Block</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171026 15:15:24.445" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=1', u'HWAction=Block', u'LogPath=D:\\TA\\TA_logs\\TestLog_20171026142953\\ev_logs\\FZHR_Operational_Cell_block_unblock_20171026150339\\FZHR_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20171026 15:15:24.445" starttime="20171026 15:15:24.444"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171026 15:15:58.087" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="1"
HWAction="Block"
LogPath="D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20171026151524\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20171026 15:15:58.087" starttime="20171026 15:15:24.445"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.087" starttime="20171026 15:15:24.443"></status>
</kw>
<kw name="UE_Attach_SISO1" library="SISO1 Resource">
<doc>Example</doc>
<arguments>
<arg>${attach_cell_index}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cell_id}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{cell_list}</var>
</assign>
<msg timestamp="20171026 15:15:58.093" level="INFO">@{cell_list} = [ 2 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.093" starttime="20171026 15:15:58.092"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${cell_list}</arg>
</arguments>
<assign>
<var>${cell_list_length}</var>
</assign>
<msg timestamp="20171026 15:15:58.093" level="INFO">Length is 1</msg>
<msg timestamp="20171026 15:15:58.093" level="INFO">${cell_list_length} = 1</msg>
<status status="PASS" endtime="20171026 15:15:58.094" starttime="20171026 15:15:58.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Split String</arg>
<arg>${attach_earfcn}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${earfcn_list1}</var>
</assign>
<msg timestamp="20171026 15:15:58.099" level="INFO">${earfcn_list1} = None</msg>
<status status="PASS" endtime="20171026 15:15:58.099" starttime="20171026 15:15:58.094"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Change_Earfcn_To_Freqency</arg>
<arg>${earfcn_list1}</arg>
</arguments>
<assign>
<var>${freqency_list1}</var>
<var>${band_list1}</var>
</assign>
<msg timestamp="20171026 15:15:58.102" level="INFO">${freqency_list1} = None</msg>
<msg timestamp="20171026 15:15:58.102" level="INFO">${band_list1} = None</msg>
<status status="PASS" endtime="20171026 15:15:58.102" starttime="20171026 15:15:58.099"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Get_Earfcn_From_Infomodel</arg>
</arguments>
<assign>
<var>${earfcn_list2}</var>
<var>${freqency_list2}</var>
<var>${band_list2}</var>
</assign>
<kw name="Get_Earfcn_From_Infomodel" library="SISO1 Resource">
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1</arg>
</arguments>
<assign>
<var>@{ret_earfcn}</var>
</assign>
<msg timestamp="20171026 15:15:58.296" level="INFO">[infomodel_control.py@328] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .</msg>
<msg timestamp="20171026 15:15:58.297" level="INFO">@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u's...</msg>
<status status="PASS" endtime="20171026 15:15:58.297" starttime="20171026 15:15:58.107"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${ret_earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.298" starttime="20171026 15:15:58.297"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${earfcn_list}</var>
</assign>
<msg timestamp="20171026 15:15:58.298" level="INFO">${earfcn_list} = []</msg>
<status status="PASS" endtime="20171026 15:15:58.298" starttime="20171026 15:15:58.298"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${freqency_list}</var>
</assign>
<msg timestamp="20171026 15:15:58.299" level="INFO">${freqency_list} = []</msg>
<status status="PASS" endtime="20171026 15:15:58.299" starttime="20171026 15:15:58.298"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${band_list}</var>
</assign>
<msg timestamp="20171026 15:15:58.299" level="INFO">${band_list} = []</msg>
<status status="PASS" endtime="20171026 15:15:58.299" starttime="20171026 15:15:58.299"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_OFFSET}</arg>
</arguments>
<assign>
<var>${offset_dict}</var>
</assign>
<msg timestamp="20171026 15:15:58.300" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.303" level="INFO">${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}</msg>
<status status="PASS" endtime="20171026 15:15:58.303" starttime="20171026 15:15:58.299"></status>
</kw>
<kw type="for" name="${index} IN [ @{ret_earfcn} ]">
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1: {u'fcnULs': [37900L], u'fcnDLs': [37900L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20171026 15:15:58.304" level="INFO">${index.earfcn} = 37900</msg>
<status status="PASS" endtime="20171026 15:15:58.304" starttime="20171026 15:15:58.303"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.305" starttime="20171026 15:15:58.304"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20171026 15:15:58.306" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.308" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20171026 15:15:58.308" starttime="20171026 15:15:58.306"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20171026 15:15:58.308" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.308" starttime="20171026 15:15:58.308"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.309" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.310" starttime="20171026 15:15:58.309"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.315" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20171026 15:15:58.316" starttime="20171026 15:15:58.311"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20171026 15:15:58.316" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:15:58.316" starttime="20171026 15:15:58.316"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.316" starttime="20171026 15:15:58.309"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.316" starttime="20171026 15:15:58.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.320" starttime="20171026 15:15:58.317"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20171026 15:15:58.325" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20171026 15:15:58.326" starttime="20171026 15:15:58.321"></status>
</kw>
<msg timestamp="20171026 15:15:58.326" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20171026 15:15:58.326" starttime="20171026 15:15:58.305"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20171026 15:15:58.327" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20171026 15:15:58.327" starttime="20171026 15:15:58.326"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.328" starttime="20171026 15:15:58.327"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20171026 15:15:58.328" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20171026 15:15:58.328" starttime="20171026 15:15:58.328"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20171026 15:15:58.334" level="INFO">${freq} = 25850.0</msg>
<status status="PASS" endtime="20171026 15:15:58.334" starttime="20171026 15:15:58.329"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20171026 15:15:58.334" level="INFO">${fq} = 25850</msg>
<status status="PASS" endtime="20171026 15:15:58.334" starttime="20171026 15:15:58.334"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20171026 15:15:58.335" level="INFO">${freqency} = 25850</msg>
<status status="PASS" endtime="20171026 15:15:58.335" starttime="20171026 15:15:58.335"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.336" starttime="20171026 15:15:58.335"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.336" starttime="20171026 15:15:58.303"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20171026 15:15:58.337" level="INFO">${index.earfcn} = 38100</msg>
<status status="PASS" endtime="20171026 15:15:58.337" starttime="20171026 15:15:58.336"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.338" starttime="20171026 15:15:58.337"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20171026 15:15:58.339" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.341" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20171026 15:15:58.341" starttime="20171026 15:15:58.339"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20171026 15:15:58.342" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.343" starttime="20171026 15:15:58.342"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.344" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.344" starttime="20171026 15:15:58.343"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.347" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20171026 15:15:58.347" starttime="20171026 15:15:58.344"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20171026 15:15:58.348" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:15:58.348" starttime="20171026 15:15:58.348"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.348" starttime="20171026 15:15:58.343"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.348" starttime="20171026 15:15:58.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.353" starttime="20171026 15:15:58.348"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20171026 15:15:58.356" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20171026 15:15:58.356" starttime="20171026 15:15:58.353"></status>
</kw>
<msg timestamp="20171026 15:15:58.356" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20171026 15:15:58.356" starttime="20171026 15:15:58.338"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20171026 15:15:58.357" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20171026 15:15:58.357" starttime="20171026 15:15:58.357"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.358" starttime="20171026 15:15:58.357"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20171026 15:15:58.358" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20171026 15:15:58.358" starttime="20171026 15:15:58.358"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20171026 15:15:58.364" level="INFO">${freq} = 26050.0</msg>
<status status="PASS" endtime="20171026 15:15:58.364" starttime="20171026 15:15:58.359"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20171026 15:15:58.365" level="INFO">${fq} = 26050</msg>
<status status="PASS" endtime="20171026 15:15:58.365" starttime="20171026 15:15:58.364"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20171026 15:15:58.365" level="INFO">${freqency} = 26050</msg>
<status status="PASS" endtime="20171026 15:15:58.365" starttime="20171026 15:15:58.365"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.366" starttime="20171026 15:15:58.366"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.366" starttime="20171026 15:15:58.336"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20171026 15:15:58.367" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20171026 15:15:58.367" starttime="20171026 15:15:58.367"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.368" starttime="20171026 15:15:58.367"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20171026 15:15:58.369" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.371" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20171026 15:15:58.372" starttime="20171026 15:15:58.369"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20171026 15:15:58.373" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.373" starttime="20171026 15:15:58.373"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.375" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.375" starttime="20171026 15:15:58.374"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.379" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.379" starttime="20171026 15:15:58.375"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.380" starttime="20171026 15:15:58.379"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.380" starttime="20171026 15:15:58.374"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.381" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.381" starttime="20171026 15:15:58.380"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.386" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.386" starttime="20171026 15:15:58.381"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.387" starttime="20171026 15:15:58.386"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.387" starttime="20171026 15:15:58.380"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.388" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.388" starttime="20171026 15:15:58.387"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.393" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.393" starttime="20171026 15:15:58.388"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.393" starttime="20171026 15:15:58.393"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.393" starttime="20171026 15:15:58.387"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.394" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.394" starttime="20171026 15:15:58.394"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.398" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.398" starttime="20171026 15:15:58.395"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.399" starttime="20171026 15:15:58.398"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.399" starttime="20171026 15:15:58.393"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.400" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.400" starttime="20171026 15:15:58.399"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.404" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20171026 15:15:58.404" starttime="20171026 15:15:58.400"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20171026 15:15:58.405" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:15:58.405" starttime="20171026 15:15:58.405"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.405" starttime="20171026 15:15:58.399"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.405" starttime="20171026 15:15:58.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.409" starttime="20171026 15:15:58.406"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20171026 15:15:58.413" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20171026 15:15:58.413" starttime="20171026 15:15:58.409"></status>
</kw>
<msg timestamp="20171026 15:15:58.413" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:15:58.413" starttime="20171026 15:15:58.368"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20171026 15:15:58.414" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:15:58.414" starttime="20171026 15:15:58.414"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.415" starttime="20171026 15:15:58.414"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20171026 15:15:58.416" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20171026 15:15:58.416" starttime="20171026 15:15:58.415"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20171026 15:15:58.420" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20171026 15:15:58.420" starttime="20171026 15:15:58.416"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20171026 15:15:58.421" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20171026 15:15:58.421" starttime="20171026 15:15:58.420"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20171026 15:15:58.421" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20171026 15:15:58.421" starttime="20171026 15:15:58.421"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.422" starttime="20171026 15:15:58.422"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.423" starttime="20171026 15:15:58.366"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20171026 15:15:58.424" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20171026 15:15:58.424" starttime="20171026 15:15:58.423"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.425" starttime="20171026 15:15:58.424"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20171026 15:15:58.426" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.427" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20171026 15:15:58.427" starttime="20171026 15:15:58.425"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20171026 15:15:58.428" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.428" starttime="20171026 15:15:58.428"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.429" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.429" starttime="20171026 15:15:58.429"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.434" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.434" starttime="20171026 15:15:58.429"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.434" starttime="20171026 15:15:58.434"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.434" starttime="20171026 15:15:58.428"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.435" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.435" starttime="20171026 15:15:58.435"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.439" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.439" starttime="20171026 15:15:58.436"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.440" starttime="20171026 15:15:58.439"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.440" starttime="20171026 15:15:58.434"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.441" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.441" starttime="20171026 15:15:58.440"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.445" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.445" starttime="20171026 15:15:58.441"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.445" starttime="20171026 15:15:58.445"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.445" starttime="20171026 15:15:58.440"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.446" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.446" starttime="20171026 15:15:58.446"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.450" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.450" starttime="20171026 15:15:58.446"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.451" starttime="20171026 15:15:58.450"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.451" starttime="20171026 15:15:58.445"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.452" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.452" starttime="20171026 15:15:58.451"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.456" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20171026 15:15:58.456" starttime="20171026 15:15:58.452"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20171026 15:15:58.457" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:15:58.457" starttime="20171026 15:15:58.456"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.457" starttime="20171026 15:15:58.451"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.457" starttime="20171026 15:15:58.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.461" starttime="20171026 15:15:58.458"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20171026 15:15:58.465" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20171026 15:15:58.465" starttime="20171026 15:15:58.461"></status>
</kw>
<msg timestamp="20171026 15:15:58.466" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:15:58.466" starttime="20171026 15:15:58.425"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20171026 15:15:58.466" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:15:58.466" starttime="20171026 15:15:58.466"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.467" starttime="20171026 15:15:58.467"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20171026 15:15:58.468" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20171026 15:15:58.468" starttime="20171026 15:15:58.467"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20171026 15:15:58.471" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20171026 15:15:58.471" starttime="20171026 15:15:58.468"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20171026 15:15:58.472" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20171026 15:15:58.472" starttime="20171026 15:15:58.472"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20171026 15:15:58.473" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20171026 15:15:58.473" starttime="20171026 15:15:58.472"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.474" starttime="20171026 15:15:58.474"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.474" starttime="20171026 15:15:58.423"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20171026 15:15:58.475" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20171026 15:15:58.475" starttime="20171026 15:15:58.474"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.476" starttime="20171026 15:15:58.475"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20171026 15:15:58.477" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.479" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20171026 15:15:58.479" starttime="20171026 15:15:58.477"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20171026 15:15:58.479" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.479" starttime="20171026 15:15:58.479"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.480" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.481" starttime="20171026 15:15:58.480"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.486" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.486" starttime="20171026 15:15:58.481"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.487" starttime="20171026 15:15:58.486"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.487" starttime="20171026 15:15:58.480"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.488" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.488" starttime="20171026 15:15:58.487"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.491" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.491" starttime="20171026 15:15:58.488"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.492" starttime="20171026 15:15:58.492"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.492" starttime="20171026 15:15:58.487"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.493" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.493" starttime="20171026 15:15:58.492"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.498" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.498" starttime="20171026 15:15:58.494"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.499" starttime="20171026 15:15:58.499"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.499" starttime="20171026 15:15:58.492"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.500" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.500" starttime="20171026 15:15:58.499"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.506" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.506" starttime="20171026 15:15:58.500"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.507" starttime="20171026 15:15:58.506"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.507" starttime="20171026 15:15:58.499"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.508" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.508" starttime="20171026 15:15:58.507"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.512" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20171026 15:15:58.512" starttime="20171026 15:15:58.508"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20171026 15:15:58.513" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:15:58.513" starttime="20171026 15:15:58.513"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.513" starttime="20171026 15:15:58.507"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.513" starttime="20171026 15:15:58.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.517" starttime="20171026 15:15:58.514"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20171026 15:15:58.521" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20171026 15:15:58.521" starttime="20171026 15:15:58.518"></status>
</kw>
<msg timestamp="20171026 15:15:58.521" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:15:58.521" starttime="20171026 15:15:58.476"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20171026 15:15:58.522" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:15:58.522" starttime="20171026 15:15:58.522"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.523" starttime="20171026 15:15:58.522"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20171026 15:15:58.524" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20171026 15:15:58.524" starttime="20171026 15:15:58.523"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20171026 15:15:58.529" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20171026 15:15:58.529" starttime="20171026 15:15:58.525"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20171026 15:15:58.530" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20171026 15:15:58.530" starttime="20171026 15:15:58.529"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20171026 15:15:58.530" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20171026 15:15:58.530" starttime="20171026 15:15:58.530"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.531" starttime="20171026 15:15:58.531"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.531" starttime="20171026 15:15:58.474"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20171026 15:15:58.532" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20171026 15:15:58.532" starttime="20171026 15:15:58.531"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.533" starttime="20171026 15:15:58.532"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20171026 15:15:58.534" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.536" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20171026 15:15:58.536" starttime="20171026 15:15:58.534"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20171026 15:15:58.537" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.537" starttime="20171026 15:15:58.536"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.538" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.538" starttime="20171026 15:15:58.537"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.541" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.542" starttime="20171026 15:15:58.538"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.542" starttime="20171026 15:15:58.542"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.542" starttime="20171026 15:15:58.537"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.543" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.543" starttime="20171026 15:15:58.542"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.548" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.548" starttime="20171026 15:15:58.543"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.548" starttime="20171026 15:15:58.548"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.548" starttime="20171026 15:15:58.542"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.549" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.549" starttime="20171026 15:15:58.549"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.553" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.553" starttime="20171026 15:15:58.550"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.554" starttime="20171026 15:15:58.553"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.554" starttime="20171026 15:15:58.548"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.555" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.555" starttime="20171026 15:15:58.554"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.560" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:15:58.560" starttime="20171026 15:15:58.556"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.561" starttime="20171026 15:15:58.560"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.561" starttime="20171026 15:15:58.554"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:15:58.561" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20171026 15:15:58.561" starttime="20171026 15:15:58.561"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:15:58.567" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20171026 15:15:58.567" starttime="20171026 15:15:58.562"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20171026 15:15:58.567" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:15:58.568" starttime="20171026 15:15:58.567"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.568" starttime="20171026 15:15:58.561"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.568" starttime="20171026 15:15:58.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.571" starttime="20171026 15:15:58.568"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20171026 15:15:58.575" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20171026 15:15:58.575" starttime="20171026 15:15:58.571"></status>
</kw>
<msg timestamp="20171026 15:15:58.576" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:15:58.576" starttime="20171026 15:15:58.533"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20171026 15:15:58.577" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:15:58.577" starttime="20171026 15:15:58.577"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.578" starttime="20171026 15:15:58.578"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20171026 15:15:58.579" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20171026 15:15:58.579" starttime="20171026 15:15:58.578"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20171026 15:15:58.583" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20171026 15:15:58.583" starttime="20171026 15:15:58.579"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20171026 15:15:58.583" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20171026 15:15:58.583" starttime="20171026 15:15:58.583"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20171026 15:15:58.584" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20171026 15:15:58.584" starttime="20171026 15:15:58.584"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.585" starttime="20171026 15:15:58.584"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.585" starttime="20171026 15:15:58.531"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.585" starttime="20171026 15:15:58.303"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.586" starttime="20171026 15:15:58.106"></status>
</kw>
<msg timestamp="20171026 15:15:58.586" level="INFO">${earfcn_list2} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<msg timestamp="20171026 15:15:58.587" level="INFO">${freqency_list2} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<msg timestamp="20171026 15:15:58.587" level="INFO">${band_list2} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20171026 15:15:58.587" starttime="20171026 15:15:58.103"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${earfcn_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<assign>
<var>${earfcn_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.595" starttime="20171026 15:15:58.591"></status>
</kw>
<msg timestamp="20171026 15:15:58.595" level="INFO">${earfcn_list} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<status status="PASS" endtime="20171026 15:15:58.595" starttime="20171026 15:15:58.588"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${freqency_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<assign>
<var>${freqency_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.604" starttime="20171026 15:15:58.601"></status>
</kw>
<msg timestamp="20171026 15:15:58.604" level="INFO">${freqency_list} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<status status="PASS" endtime="20171026 15:15:58.604" starttime="20171026 15:15:58.595"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${band_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<assign>
<var>${band_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.615" starttime="20171026 15:15:58.611"></status>
</kw>
<msg timestamp="20171026 15:15:58.615" level="INFO">${band_list} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20171026 15:15:58.615" starttime="20171026 15:15:58.605"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20171026 15:15:58.617" level="INFO">${cell_index1} = 0</msg>
<status status="PASS" endtime="20171026 15:15:58.617" starttime="20171026 15:15:58.616"></status>
</kw>
<kw type="for" name="${cell_index2} IN [ @{cell_list} ]">
<kw type="foritem" name="${cell_index2} = 2">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.626" starttime="20171026 15:15:58.622"></status>
</kw>
<msg timestamp="20171026 15:15:58.626" level="INFO">${cell_index} = 1</msg>
<status status="PASS" endtime="20171026 15:15:58.626" starttime="20171026 15:15:58.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.635" starttime="20171026 15:15:58.632"></status>
</kw>
<status status="PASS" endtime="20171026 15:15:58.635" starttime="20171026 15:15:58.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:15:58.641" starttime="20171026 15:15:58.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="TM500_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20171026 15:16:00.342" level="INFO">${TM500_PC_CONNECTION} = 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.151" level="INFO">[robot_func.py@29] Can't get variable '${TM500_PC_CONNECTION}' ! details: 'Variable '${TM500_PC_CONNECTION}' not found.'</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 


login:</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester

password:</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@246]  

*===============================================================
Welcome to Microsoft Telnet Server.
*===============================================================
C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;.</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8278 -s True</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8278 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 3068.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[process_control.py@74] Process start successed ! process id: 3068</msg>
<msg timestamp="20171026 15:17:25.152" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8278</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 1 user queue.

"</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@412] Get TM500 resource success!</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;.</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"
FileZilla Server Interface.exe
FileZilla Server Interface.xml
FileZilla Server.xml
FileZilla server.exe
FzGSS.dll
Uninstall.exe
legal.htm
libeay32.dll
license.txt
readme.htm
ssleay32.dll

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;.</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"'</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;.</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@591] Prev msg: I: TMAE 0x2 Error - Raw Script Error: Cannot find C:\Documents and Settings\bts-tester\Desktop\Attach.txt</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@1728] TM500 command to be sent: GSTS</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20171026 15:17:25.153" level="INFO">[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1728] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1728] TM500 command to be sent: GETR</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1728] TM500 command to be sent: STRT</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20171026 15:17:25.154" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<status status="PASS" endtime="20171026 15:17:25.158" starttime="20171026 15:15:58.648"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20171026 15:17:25.163" level="INFO">${TM500_Use_Tag} = used</msg>
<status status="PASS" endtime="20171026 15:17:25.163" starttime="20171026 15:17:25.159"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20171026 15:17:29.196" level="INFO">$TA,C,020A*</msg>
<msg timestamp="20171026 15:17:29.196" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,020A*', Receive&lt;-'$TA,C,020A*'</msg>
<msg timestamp="20171026 15:17:29.196" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,020A*'
$TA,C,060A*</msg>
<msg timestamp="20171026 15:17:29.196" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,060A*', Receive&lt;-'$TA,C,060A*'</msg>
<msg timestamp="20171026 15:17:29.196" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,060A*'</msg>
<status status="PASS" endtime="20171026 15:17:29.196" starttime="20171026 15:17:25.163"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1728] TM500 command to be sent: GVER</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@507] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20171026 15:17:32.249" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20171026 15:17:32.250" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20171026 15:17:32.251" starttime="20171026 15:17:29.197"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20171026 15:17:32.889" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20171026 15:17:32.889" level="INFO">[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/171026_151649_session/171026_151739'</msg>
<msg timestamp="20171026 15:17:32.889" level="INFO">[tm500.py@1352] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/171026_151649_session/171026_151739'</msg>
<msg timestamp="20171026 15:17:32.889" level="INFO">[tm500.py@1363] C:\TM500_LOG\171026_151649_session\171026_151739</msg>
<status status="PASS" endtime="20171026 15:17:32.889" starttime="20171026 15:17:32.252"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${modify_tm500_script}</var>
</assign>
<msg timestamp="20171026 15:17:32.890" level="INFO">${modify_tm500_script} = []</msg>
<status status="PASS" endtime="20171026 15:17:32.890" starttime="20171026 15:17:32.889"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${attach_freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:17:32.890" starttime="20171026 15:17:32.890"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_scripts}</arg>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20171026 15:17:44.189" level="INFO">[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 26050</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20171026 15:17:44.189" level="INFO">[tm500.py@1673] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x9BD9, TimingAdv: 2, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
  Selected PLMN: 26203F
  Pdn Id: 0
  EPS Bearer Id: 5
  Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs
  IPv4 Address: 172.170.7.9
  Attach Result: EPS Only
  Mode: PS 2
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0</msg>
<msg timestamp="20171026 15:17:44.191" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20171026 15:17:44.191" starttime="20171026 15:17:32.891"></status>
</kw>
<kw name="Tm500 Start Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword connects TM500 PPPoE connections by their names.</doc>
<msg timestamp="20171026 15:17:45.807" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;.</msg>
<msg timestamp="20171026 15:17:45.807" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:45.807" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500</msg>
<msg timestamp="20171026 15:17:45.807" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20171026 15:17:45.807" level="INFO">[tm500.py@1302] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\Documents and Settings\bts-tester&gt;</msg>
<status status="PASS" endtime="20171026 15:17:45.808" starttime="20171026 15:17:44.191"></status>
</kw>
<kw name="TM500 Log Stop And Fetch" library="ue_resource">
<doc>TM500: stop logging, convert log to csv format, copy logs to local PC.</doc>
<arguments>
<arg>tm500_attach_log${cell_id}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171026 15:17:45.825" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;.</msg>
<status status="PASS" endtime="20171026 15:17:45.825" starttime="20171026 15:17:45.816"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<msg timestamp="20171026 15:17:45.826" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\tm500_attach_log2"&gt;D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\tm500_attach_log2&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20171026 15:17:45.826" starttime="20171026 15:17:45.825"></status>
</kw>
<kw name="Tm500 Stop Logging" library="tdd_ev_robotws">
<doc>This keyword stops TM500's logging.</doc>
<assign>
<var>${log_folder_path_on_tm500_pc}</var>
</assign>
<msg timestamp="20171026 15:17:46.443" level="INFO">[tm500.py@1376] Prev msg: I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Suitable
I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0
  De Id: 8
  EPS Bearer Id: 5
  PDN IP Address String: 172.170.7.9

I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x37A8, TimingAdv: 2, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0</msg>
<msg timestamp="20171026 15:17:46.443" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$STOP_LOGGING</msg>
<msg timestamp="20171026 15:17:46.443" level="INFO">[tm500.py@1736] TM500 command reply: C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20171026 15:17:46.443" level="INFO">[tm500.py@1387] TM500 command line response of "STOP LOGGING":
C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20171026 15:17:46.443" level="INFO">[tm500.py@1391] TM500 stop logging succeeded.</msg>
<msg timestamp="20171026 15:17:46.444" level="INFO">${log_folder_path_on_tm500_pc} = C:\TM500_LOG\171026_151649_session\171026_151739</msg>
<status status="PASS" endtime="20171026 15:17:46.444" starttime="20171026 15:17:45.827"></status>
</kw>
<kw name="Tm500 Convert Log" library="tdd_ev_robotws">
<doc>This keyword converts TM500 log to csv format files.</doc>
<arguments>
<arg>timeout=${log_convertion_timeout}</arg>
</arguments>
<msg timestamp="20171026 15:17:57.012" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0</msg>
<msg timestamp="20171026 15:17:57.012" level="INFO">[tm500.py@1736] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.</msg>
<msg timestamp="20171026 15:17:57.012" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_TO_TEXT 0</msg>
<msg timestamp="20171026 15:17:57.012" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20171026 15:17:57.012" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20171026 15:17:57.012" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 44%</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 100%

C: CONVERT_TO_TEXT 0x00 ok.</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\171026_151649_session\171026_151739"</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_COMMAND_LOG started</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1487] I: CONVERT_COMMAND_LOG progress= 7%
I: CONVERT_COMMAND_LOG progress= 14%
I: CONVERT_COMMAND_LOG progress= 21%
I: CONVERT_COMMAND_LOG progress= 28%
I: CONVERT_COMMAND_LOG progress= 35%
I: CONVERT_COMMAND_LOG progress= 43%
I: CONVERT_COMMAND_LOG progress= 50%
I: CONVERT_COMMAND_LOG progress= 57%
I: CONVERT_COMMAND_LOG progress= 64%
I: CONVERT_COMMAND_LOG progress= 71%
I: CONVERT_COMMAND_LOG progress= 78%
I: CONVERT_COMMAND_LOG progress= 86%
I: CONVERT_COMMAND_LOG progress= 93%
C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\171026_151649_SESSION\171026_151739\171026_151649_session_command_log.csv</msg>
<msg timestamp="20171026 15:17:57.013" level="INFO">[tm500.py@1492] TM500 convert log succeeded.</msg>
<status status="PASS" endtime="20171026 15:17:57.016" starttime="20171026 15:17:46.444"></status>
</kw>
<kw name="Tm500 Log Fetch" library="ue_resource">
<doc>TM500 Log fetching.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171026 15:17:57.028" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;.</msg>
<status status="PASS" endtime="20171026 15:17:57.028" starttime="20171026 15:17:57.017"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20171026 15:17:57.029" starttime="20171026 15:17:57.028"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cd /D "${log_folder_path_on_tm500_pc}"</arg>
</arguments>
<msg timestamp="20171026 15:17:58.344" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:58.344" level="INFO">[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\171026_151649_session\171026_151739"</msg>
<msg timestamp="20171026 15:17:58.344" level="INFO">[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\171026_151649_session\171026_151739"

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<status status="PASS" endtime="20171026 15:17:58.344" starttime="20171026 15:17:57.029"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cp ../*ommand*og*.txt session_command_log.txt</arg>
</arguments>
<msg timestamp="20171026 15:17:59.663" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:17:59.664" level="INFO">[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt</msg>
<msg timestamp="20171026 15:17:59.664" level="INFO">[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt
cp: cannot stat `../*ommand*og*.txt': No such file or directory

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<status status="PASS" endtime="20171026 15:17:59.664" starttime="20171026 15:17:58.345"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>chmod 777 -R *</arg>
</arguments>
<msg timestamp="20171026 15:18:00.997" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:18:00.997" level="INFO">[telnet_common.py@276] Execute command: chmod 777 -R *</msg>
<msg timestamp="20171026 15:18:00.997" level="INFO">[telnet_common.py@306] Get Response: chmod 777 -R *

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<status status="PASS" endtime="20171026 15:18:00.998" starttime="20171026 15:17:59.665"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zcvf tm500_log.tar *.*</arg>
</arguments>
<status status="PASS" endtime="20171026 15:18:00.999" starttime="20171026 15:18:00.999"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>:\\</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${driver_log_folder}</var>
</assign>
<msg timestamp="20171026 15:18:01.000" level="INFO">${driver_log_folder} = [u'C', u'TM500_LOG\\171026_151649_session\\171026_151739']</msg>
<status status="PASS" endtime="20171026 15:18:01.000" starttime="20171026 15:18:01.000"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${TM500_PC_INFO.IP}</arg>
<arg>21</arg>
<arg>TA_LOG</arg>
<arg>${None}</arg>
<arg>${log_folder_path_on_local_pc}</arg>
<arg>ALL</arg>
<arg>${driver_log_folder[1]}</arg>
</arguments>
<msg timestamp="20171026 15:18:01.379" level="INFO">[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.</msg>
<msg timestamp="20171026 15:18:01.379" level="INFO">[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta
220-written by Tim Kosse (Tim.Kosse@gmx.de)
220 Please visit http://sourceforge.net/projects/filezilla/</msg>
<status status="PASS" endtime="20171026 15:18:01.381" starttime="20171026 15:18:01.000"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171026 15:18:01.394" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;.</msg>
<status status="PASS" endtime="20171026 15:18:01.394" starttime="20171026 15:18:01.381"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>cd /D "${log_folder_path_on_local_pc}"</arg>
</arguments>
<status status="PASS" endtime="20171026 15:18:01.395" starttime="20171026 15:18:01.394"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20171026 15:18:01.395" starttime="20171026 15:18:01.395"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>chmod 777 -R *</arg>
</arguments>
<status status="PASS" endtime="20171026 15:18:01.396" starttime="20171026 15:18:01.396"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${unzip_result}</arg>
<arg>Run keyword and ignore error</arg>
<arg>Unzip file</arg>
<arg>tm500_log.tar</arg>
<arg>${log_folder_path_on_local_pc}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:18:01.398" starttime="20171026 15:18:01.397"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword if</arg>
<arg>'${unzip_result[0]}' == 'FAIL'</arg>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20171026 15:18:01.399" starttime="20171026 15:18:01.398"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>remove file</arg>
<arg>${log_folder_path_on_local_pc}/tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20171026 15:18:01.399" starttime="20171026 15:18:01.399"></status>
</kw>
<status status="PASS" endtime="20171026 15:18:01.399" starttime="20171026 15:17:57.017"></status>
</kw>
<status status="PASS" endtime="20171026 15:18:01.399" starttime="20171026 15:17:45.816"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ue_attach_ip}</arg>
<arg>${tm500_attach_result.UE0}</arg>
</arguments>
<msg timestamp="20171026 15:18:01.404" level="INFO">${ue_attach_ip} = 172.170.7.9</msg>
<status status="PASS" endtime="20171026 15:18:01.404" starttime="20171026 15:18:01.400"></status>
</kw>
<status status="PASS" endtime="20171026 15:18:01.404" starttime="20171026 15:15:58.645"></status>
</kw>
<status status="PASS" endtime="20171026 15:18:01.404" starttime="20171026 15:15:58.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:18:01.409" starttime="20171026 15:18:01.404"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="TM500_Detach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171026 15:18:01.429" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;.</msg>
<status status="PASS" endtime="20171026 15:18:01.430" starttime="20171026 15:18:01.419"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20171026 15:18:02.734" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;</msg>
<msg timestamp="20171026 15:18:02.734" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20171026 15:18:02.734" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20171026 15:18:02.734" starttime="20171026 15:18:01.430"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171026 15:18:02.745" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;.</msg>
<status status="PASS" endtime="20171026 15:18:02.745" starttime="20171026 15:18:02.735"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20171026 15:18:04.091" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:18:04.091" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20171026 15:18:04.091" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<status status="PASS" endtime="20171026 15:18:04.092" starttime="20171026 15:18:02.746"></status>
</kw>
<kw name="Tm500 Stop Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword disconnects TM500 PPPoE connection by PPPoE name.</doc>
<msg timestamp="20171026 15:18:05.445" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;.</msg>
<msg timestamp="20171026 15:18:05.445" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:18:05.445" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT</msg>
<msg timestamp="20171026 15:18:05.445" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<msg timestamp="20171026 15:18:05.445" level="INFO">[tm500.py@1321] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<status status="PASS" endtime="20171026 15:18:05.446" starttime="20171026 15:18:04.093"></status>
</kw>
<kw name="Tm500 Detach" library="tdd_ev_robotws">
<doc>This keyword does UE detach operation of TM500.</doc>
<msg timestamp="20171026 15:18:05.549" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20171026 15:18:05.549" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0

C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20171026 15:18:05.549" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte NasConfigEmmDeregister 0</msg>
<msg timestamp="20171026 15:18:05.549" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:18:05.549" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20171026 15:18:05.549" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20171026 15:18:05.549" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte Activate -1</msg>
<msg timestamp="20171026 15:18:05.549" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<status status="PASS" endtime="20171026 15:18:05.549" starttime="20171026 15:18:05.447"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171026 15:18:05.562" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;.</msg>
<status status="PASS" endtime="20171026 15:18:05.562" starttime="20171026 15:18:05.550"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20171026 15:18:09.604" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20171026 15:18:09.604" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20171026 15:18:09.604" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20171026 15:18:09.604" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20171026 15:18:09.604" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20171026 15:18:09.604" starttime="20171026 15:18:05.562"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20171026 15:18:32.135" level="INFO">[tm500.py@591] Prev msg: I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0
    Detach Cause: UE Initiated 

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Acceptable
I: CMPI RRC Any Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Acceptable
I: CMPI RRC Any Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 26050 Cell Type: Acceptable</msg>
<msg timestamp="20171026 15:18:32.135" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20171026 15:18:32.135" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20171026 15:18:32.135" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8278 stopping</msg>
<status status="PASS" endtime="20171026 15:18:32.136" starttime="20171026 15:18:09.605"></status>
</kw>
<status status="PASS" endtime="20171026 15:18:32.136" starttime="20171026 15:18:01.417"></status>
</kw>
<status status="PASS" endtime="20171026 15:18:32.136" starttime="20171026 15:18:01.413"></status>
</kw>
<status status="PASS" endtime="20171026 15:18:32.136" starttime="20171026 15:18:01.409"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index1}+1</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20171026 15:18:32.141" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20171026 15:18:32.141" starttime="20171026 15:18:32.137"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${cell_index1}</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20171026 15:18:32.142" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20171026 15:18:32.142" starttime="20171026 15:18:32.142"></status>
</kw>
<status status="PASS" endtime="20171026 15:18:32.142" starttime="20171026 15:15:58.618"></status>
</kw>
<status status="PASS" endtime="20171026 15:18:32.142" starttime="20171026 15:15:58.618"></status>
</kw>
<status status="PASS" endtime="20171026 15:18:32.142" starttime="20171026 15:15:58.091"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171026 15:18:32.147" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;.</msg>
<status status="PASS" endtime="20171026 15:18:32.148" starttime="20171026 15:18:32.142"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${block_cell_index}</arg>
<arg>Unblock</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171026 15:18:32.150" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=1', u'HWAction=Unblock', u'LogPath=D:\\TA\\TA_logs\\TestLog_20171026142953\\ev_logs\\FZHR_Operational_Cell_block_unblock_20171026150339\\FZHR_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20171026 15:18:32.150" starttime="20171026 15:18:32.149"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171026 15:18:48.553" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="1"
HWAction="Unblock"
LogPath="D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20171026151832\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20171026 15:18:48.553" starttime="20171026 15:18:32.150"></status>
</kw>
<status status="PASS" endtime="20171026 15:18:48.553" starttime="20171026 15:18:32.149"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5 sec</arg>
</arguments>
<msg timestamp="20171026 15:18:53.554" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20171026 15:18:53.554" starttime="20171026 15:18:48.554"></status>
</kw>
<kw name="GUI SM Check BTS HW Status" library="gui_resource">
<doc>This keyword is used to check the status on BTS Hardware panel.</doc>
<arguments>
<arg>AllCell</arg>
<arg>Operational state=Enabled;;Working state=Working</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>CompName=${CompName}</arg>
<arg>CheckField=${CheckField}</arg>
<arg>WaitTime=${WaitTime}</arg>
<arg>CheckSameFlag=${CheckSameFlag}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171026 15:18:53.557" level="INFO">${para_list} = [u'CompName=AllCell', u'CheckField=Operational state=Enabled;;Working state=Working', u'WaitTime=0', u'CheckSameFlag=1', u'LogPath=D:\\TA\\TA_logs\\TestLog_20171026142953\\ev_logs\\FZHR_Operational_Ce...</msg>
<status status="PASS" endtime="20171026 15:18:53.558" starttime="20171026 15:18:53.556"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:18:53.558" starttime="20171026 15:18:53.558"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171026 15:19:08.507" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
CompName="AllCell"
CheckField="Operational state=Enabled;;Working state=Working"
WaitTime="0"
CheckSameFlag="1"
LogPath="D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\GUILog\qtp_log20171026151853\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20171026 15:19:08.507" starttime="20171026 15:18:53.558"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.507" starttime="20171026 15:18:53.555"></status>
</kw>
<kw name="UE_Attach_SISO1" library="SISO1 Resource">
<doc>Example</doc>
<arguments>
<arg>${block_cell_index}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cell_id}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{cell_list}</var>
</assign>
<msg timestamp="20171026 15:19:08.515" level="INFO">@{cell_list} = [ 1 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.515" starttime="20171026 15:19:08.514"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${cell_list}</arg>
</arguments>
<assign>
<var>${cell_list_length}</var>
</assign>
<msg timestamp="20171026 15:19:08.516" level="INFO">Length is 1</msg>
<msg timestamp="20171026 15:19:08.516" level="INFO">${cell_list_length} = 1</msg>
<status status="PASS" endtime="20171026 15:19:08.516" starttime="20171026 15:19:08.515"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Split String</arg>
<arg>${attach_earfcn}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${earfcn_list1}</var>
</assign>
<msg timestamp="20171026 15:19:08.523" level="INFO">${earfcn_list1} = None</msg>
<status status="PASS" endtime="20171026 15:19:08.523" starttime="20171026 15:19:08.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Change_Earfcn_To_Freqency</arg>
<arg>${earfcn_list1}</arg>
</arguments>
<assign>
<var>${freqency_list1}</var>
<var>${band_list1}</var>
</assign>
<msg timestamp="20171026 15:19:08.527" level="INFO">${freqency_list1} = None</msg>
<msg timestamp="20171026 15:19:08.527" level="INFO">${band_list1} = None</msg>
<status status="PASS" endtime="20171026 15:19:08.527" starttime="20171026 15:19:08.524"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Get_Earfcn_From_Infomodel</arg>
</arguments>
<assign>
<var>${earfcn_list2}</var>
<var>${freqency_list2}</var>
<var>${band_list2}</var>
</assign>
<kw name="Get_Earfcn_From_Infomodel" library="SISO1 Resource">
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1</arg>
</arguments>
<assign>
<var>@{ret_earfcn}</var>
</assign>
<msg timestamp="20171026 15:19:08.634" level="INFO">[infomodel_control.py@328] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .</msg>
<msg timestamp="20171026 15:19:08.634" level="INFO">@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u's...</msg>
<status status="PASS" endtime="20171026 15:19:08.634" starttime="20171026 15:19:08.535"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${ret_earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.635" starttime="20171026 15:19:08.635"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${earfcn_list}</var>
</assign>
<msg timestamp="20171026 15:19:08.635" level="INFO">${earfcn_list} = []</msg>
<status status="PASS" endtime="20171026 15:19:08.635" starttime="20171026 15:19:08.635"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${freqency_list}</var>
</assign>
<msg timestamp="20171026 15:19:08.636" level="INFO">${freqency_list} = []</msg>
<status status="PASS" endtime="20171026 15:19:08.636" starttime="20171026 15:19:08.636"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${band_list}</var>
</assign>
<msg timestamp="20171026 15:19:08.637" level="INFO">${band_list} = []</msg>
<status status="PASS" endtime="20171026 15:19:08.637" starttime="20171026 15:19:08.636"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_OFFSET}</arg>
</arguments>
<assign>
<var>${offset_dict}</var>
</assign>
<msg timestamp="20171026 15:19:08.637" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.639" level="INFO">${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}</msg>
<status status="PASS" endtime="20171026 15:19:08.639" starttime="20171026 15:19:08.637"></status>
</kw>
<kw type="for" name="${index} IN [ @{ret_earfcn} ]">
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1: {u'fcnULs': [37900L], u'fcnDLs': [37900L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20171026 15:19:08.640" level="INFO">${index.earfcn} = 37900</msg>
<status status="PASS" endtime="20171026 15:19:08.640" starttime="20171026 15:19:08.640"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.641" starttime="20171026 15:19:08.640"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20171026 15:19:08.642" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.644" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20171026 15:19:08.644" starttime="20171026 15:19:08.642"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20171026 15:19:08.645" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.645" starttime="20171026 15:19:08.644"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.646" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.646" starttime="20171026 15:19:08.645"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.650" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20171026 15:19:08.650" starttime="20171026 15:19:08.647"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20171026 15:19:08.651" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:19:08.651" starttime="20171026 15:19:08.650"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.651" starttime="20171026 15:19:08.645"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.651" starttime="20171026 15:19:08.645"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.655" starttime="20171026 15:19:08.651"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20171026 15:19:08.658" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20171026 15:19:08.658" starttime="20171026 15:19:08.655"></status>
</kw>
<msg timestamp="20171026 15:19:08.659" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20171026 15:19:08.659" starttime="20171026 15:19:08.641"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20171026 15:19:08.659" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20171026 15:19:08.660" starttime="20171026 15:19:08.659"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.660" starttime="20171026 15:19:08.660"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20171026 15:19:08.661" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20171026 15:19:08.661" starttime="20171026 15:19:08.660"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20171026 15:19:08.665" level="INFO">${freq} = 25850.0</msg>
<status status="PASS" endtime="20171026 15:19:08.665" starttime="20171026 15:19:08.661"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20171026 15:19:08.666" level="INFO">${fq} = 25850</msg>
<status status="PASS" endtime="20171026 15:19:08.666" starttime="20171026 15:19:08.666"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20171026 15:19:08.667" level="INFO">${freqency} = 25850</msg>
<status status="PASS" endtime="20171026 15:19:08.667" starttime="20171026 15:19:08.666"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.667" starttime="20171026 15:19:08.667"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.667" starttime="20171026 15:19:08.639"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20171026 15:19:08.668" level="INFO">${index.earfcn} = 38100</msg>
<status status="PASS" endtime="20171026 15:19:08.668" starttime="20171026 15:19:08.668"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.669" starttime="20171026 15:19:08.669"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20171026 15:19:08.670" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.672" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20171026 15:19:08.672" starttime="20171026 15:19:08.670"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20171026 15:19:08.673" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.673" starttime="20171026 15:19:08.672"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.675" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.675" starttime="20171026 15:19:08.673"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.680" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20171026 15:19:08.680" starttime="20171026 15:19:08.676"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20171026 15:19:08.680" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:19:08.681" starttime="20171026 15:19:08.680"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.681" starttime="20171026 15:19:08.673"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.681" starttime="20171026 15:19:08.673"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.685" starttime="20171026 15:19:08.681"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20171026 15:19:08.688" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20171026 15:19:08.688" starttime="20171026 15:19:08.685"></status>
</kw>
<msg timestamp="20171026 15:19:08.689" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20171026 15:19:08.689" starttime="20171026 15:19:08.669"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20171026 15:19:08.689" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20171026 15:19:08.690" starttime="20171026 15:19:08.689"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.690" starttime="20171026 15:19:08.690"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20171026 15:19:08.691" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20171026 15:19:08.691" starttime="20171026 15:19:08.690"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20171026 15:19:08.696" level="INFO">${freq} = 26050.0</msg>
<status status="PASS" endtime="20171026 15:19:08.696" starttime="20171026 15:19:08.691"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20171026 15:19:08.697" level="INFO">${fq} = 26050</msg>
<status status="PASS" endtime="20171026 15:19:08.697" starttime="20171026 15:19:08.696"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20171026 15:19:08.697" level="INFO">${freqency} = 26050</msg>
<status status="PASS" endtime="20171026 15:19:08.697" starttime="20171026 15:19:08.697"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.698" starttime="20171026 15:19:08.698"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.698" starttime="20171026 15:19:08.668"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6512/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20171026 15:19:08.699" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20171026 15:19:08.699" starttime="20171026 15:19:08.698"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.700" starttime="20171026 15:19:08.699"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20171026 15:19:08.701" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.703" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20171026 15:19:08.703" starttime="20171026 15:19:08.701"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20171026 15:19:08.704" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.704" starttime="20171026 15:19:08.703"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.706" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.706" starttime="20171026 15:19:08.705"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.710" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.710" starttime="20171026 15:19:08.707"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.711" starttime="20171026 15:19:08.710"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.711" starttime="20171026 15:19:08.704"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.712" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.712" starttime="20171026 15:19:08.711"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.716" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.716" starttime="20171026 15:19:08.712"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.717" starttime="20171026 15:19:08.717"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.717" starttime="20171026 15:19:08.711"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.718" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.718" starttime="20171026 15:19:08.717"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.722" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.722" starttime="20171026 15:19:08.718"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.722" starttime="20171026 15:19:08.722"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.722" starttime="20171026 15:19:08.717"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.723" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.723" starttime="20171026 15:19:08.723"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.728" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.728" starttime="20171026 15:19:08.724"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.728" starttime="20171026 15:19:08.728"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.728" starttime="20171026 15:19:08.723"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.729" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.729" starttime="20171026 15:19:08.729"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.733" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20171026 15:19:08.733" starttime="20171026 15:19:08.730"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20171026 15:19:08.734" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:19:08.734" starttime="20171026 15:19:08.734"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.734" starttime="20171026 15:19:08.729"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.734" starttime="20171026 15:19:08.704"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.738" starttime="20171026 15:19:08.734"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20171026 15:19:08.742" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20171026 15:19:08.742" starttime="20171026 15:19:08.739"></status>
</kw>
<msg timestamp="20171026 15:19:08.742" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:19:08.742" starttime="20171026 15:19:08.700"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20171026 15:19:08.743" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:19:08.743" starttime="20171026 15:19:08.742"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.743" starttime="20171026 15:19:08.743"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20171026 15:19:08.744" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20171026 15:19:08.744" starttime="20171026 15:19:08.744"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20171026 15:19:08.748" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20171026 15:19:08.748" starttime="20171026 15:19:08.744"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20171026 15:19:08.749" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20171026 15:19:08.749" starttime="20171026 15:19:08.749"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20171026 15:19:08.750" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20171026 15:19:08.750" starttime="20171026 15:19:08.749"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.750" starttime="20171026 15:19:08.750"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.750" starttime="20171026 15:19:08.698"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6513/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20171026 15:19:08.751" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20171026 15:19:08.751" starttime="20171026 15:19:08.751"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.752" starttime="20171026 15:19:08.752"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20171026 15:19:08.754" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.756" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20171026 15:19:08.756" starttime="20171026 15:19:08.753"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20171026 15:19:08.756" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.756" starttime="20171026 15:19:08.756"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.757" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.757" starttime="20171026 15:19:08.757"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.761" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.761" starttime="20171026 15:19:08.758"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.762" starttime="20171026 15:19:08.762"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.762" starttime="20171026 15:19:08.757"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.763" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.763" starttime="20171026 15:19:08.762"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.767" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.767" starttime="20171026 15:19:08.763"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.768" starttime="20171026 15:19:08.768"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.768" starttime="20171026 15:19:08.762"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.769" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.769" starttime="20171026 15:19:08.768"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.773" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.773" starttime="20171026 15:19:08.769"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.774" starttime="20171026 15:19:08.773"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.774" starttime="20171026 15:19:08.768"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.775" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.775" starttime="20171026 15:19:08.774"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.779" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.779" starttime="20171026 15:19:08.775"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.779" starttime="20171026 15:19:08.779"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.779" starttime="20171026 15:19:08.774"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.780" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.780" starttime="20171026 15:19:08.780"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.784" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20171026 15:19:08.784" starttime="20171026 15:19:08.780"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20171026 15:19:08.785" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:19:08.785" starttime="20171026 15:19:08.784"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.785" starttime="20171026 15:19:08.779"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.785" starttime="20171026 15:19:08.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.789" starttime="20171026 15:19:08.785"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20171026 15:19:08.793" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20171026 15:19:08.793" starttime="20171026 15:19:08.789"></status>
</kw>
<msg timestamp="20171026 15:19:08.794" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:19:08.794" starttime="20171026 15:19:08.752"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20171026 15:19:08.794" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:19:08.794" starttime="20171026 15:19:08.794"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.795" starttime="20171026 15:19:08.795"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20171026 15:19:08.796" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20171026 15:19:08.796" starttime="20171026 15:19:08.795"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20171026 15:19:08.801" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20171026 15:19:08.801" starttime="20171026 15:19:08.796"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20171026 15:19:08.801" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20171026 15:19:08.801" starttime="20171026 15:19:08.801"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20171026 15:19:08.802" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20171026 15:19:08.802" starttime="20171026 15:19:08.802"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.803" starttime="20171026 15:19:08.802"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.803" starttime="20171026 15:19:08.750"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1: {u'fcnULs': [42490L], u'fcnDLs': [42490L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6514/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20171026 15:19:08.804" level="INFO">${index.earfcn} = 42490</msg>
<status status="PASS" endtime="20171026 15:19:08.804" starttime="20171026 15:19:08.803"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.805" starttime="20171026 15:19:08.804"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20171026 15:19:08.806" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.808" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20171026 15:19:08.808" starttime="20171026 15:19:08.806"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20171026 15:19:08.809" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.809" starttime="20171026 15:19:08.808"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.810" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.810" starttime="20171026 15:19:08.809"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.814" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.814" starttime="20171026 15:19:08.810"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.814" starttime="20171026 15:19:08.814"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.814" starttime="20171026 15:19:08.809"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.815" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.815" starttime="20171026 15:19:08.815"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.820" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.820" starttime="20171026 15:19:08.816"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.820" starttime="20171026 15:19:08.820"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.820" starttime="20171026 15:19:08.814"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.821" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.821" starttime="20171026 15:19:08.821"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.825" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.826" starttime="20171026 15:19:08.822"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.826" starttime="20171026 15:19:08.826"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.826" starttime="20171026 15:19:08.821"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.827" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.827" starttime="20171026 15:19:08.827"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.831" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.831" starttime="20171026 15:19:08.827"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.832" starttime="20171026 15:19:08.831"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.832" starttime="20171026 15:19:08.826"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.833" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.833" starttime="20171026 15:19:08.832"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.837" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20171026 15:19:08.837" starttime="20171026 15:19:08.833"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20171026 15:19:08.837" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:19:08.837" starttime="20171026 15:19:08.837"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.837" starttime="20171026 15:19:08.832"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.837" starttime="20171026 15:19:08.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.841" starttime="20171026 15:19:08.838"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20171026 15:19:08.845" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20171026 15:19:08.845" starttime="20171026 15:19:08.841"></status>
</kw>
<msg timestamp="20171026 15:19:08.845" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:19:08.845" starttime="20171026 15:19:08.805"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20171026 15:19:08.846" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:19:08.846" starttime="20171026 15:19:08.845"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.846" starttime="20171026 15:19:08.846"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20171026 15:19:08.847" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20171026 15:19:08.847" starttime="20171026 15:19:08.847"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20171026 15:19:08.851" level="INFO">${freq} = 34900.0</msg>
<status status="PASS" endtime="20171026 15:19:08.851" starttime="20171026 15:19:08.847"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20171026 15:19:08.852" level="INFO">${fq} = 34900</msg>
<status status="PASS" endtime="20171026 15:19:08.852" starttime="20171026 15:19:08.852"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20171026 15:19:08.853" level="INFO">${freqency} = 34900</msg>
<status status="PASS" endtime="20171026 15:19:08.853" starttime="20171026 15:19:08.852"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.853" starttime="20171026 15:19:08.853"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.853" starttime="20171026 15:19:08.803"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1: {u'fcnULs': [42690L], u'fcnDLs': [42690L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/LNCEL_L-6515/CARRIER_GROUP_L-1',...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20171026 15:19:08.854" level="INFO">${index.earfcn} = 42690</msg>
<status status="PASS" endtime="20171026 15:19:08.854" starttime="20171026 15:19:08.854"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.855" starttime="20171026 15:19:08.855"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20171026 15:19:08.856" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.858" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20171026 15:19:08.858" starttime="20171026 15:19:08.856"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20171026 15:19:08.859" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.859" starttime="20171026 15:19:08.858"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.860" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.860" starttime="20171026 15:19:08.859"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.864" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.864" starttime="20171026 15:19:08.860"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.864" starttime="20171026 15:19:08.864"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.864" starttime="20171026 15:19:08.859"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.865" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.865" starttime="20171026 15:19:08.865"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.870" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.870" starttime="20171026 15:19:08.866"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.870" starttime="20171026 15:19:08.870"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.871" starttime="20171026 15:19:08.865"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.871" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.871" starttime="20171026 15:19:08.871"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.875" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.875" starttime="20171026 15:19:08.872"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.876" starttime="20171026 15:19:08.876"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.876" starttime="20171026 15:19:08.871"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.877" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.877" starttime="20171026 15:19:08.876"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.881" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20171026 15:19:08.881" starttime="20171026 15:19:08.877"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.882" starttime="20171026 15:19:08.882"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.882" starttime="20171026 15:19:08.876"></status>
</kw>
<kw type="foritem" name="${index} = 42">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20171026 15:19:08.883" level="INFO">@{temp1} = [ 41590 | 43589 ]</msg>
<status status="PASS" endtime="20171026 15:19:08.883" starttime="20171026 15:19:08.882"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20171026 15:19:08.888" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20171026 15:19:08.888" starttime="20171026 15:19:08.883"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20171026 15:19:08.889" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:19:08.889" starttime="20171026 15:19:08.889"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.889" starttime="20171026 15:19:08.882"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.889" starttime="20171026 15:19:08.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.893" starttime="20171026 15:19:08.890"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20171026 15:19:08.897" level="INFO">${bts_band} = 42</msg>
<status status="PASS" endtime="20171026 15:19:08.897" starttime="20171026 15:19:08.893"></status>
</kw>
<msg timestamp="20171026 15:19:08.898" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:19:08.898" starttime="20171026 15:19:08.855"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20171026 15:19:08.899" level="INFO">${attach_band} = 42</msg>
<status status="PASS" endtime="20171026 15:19:08.899" starttime="20171026 15:19:08.899"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.900" starttime="20171026 15:19:08.900"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20171026 15:19:08.901" level="INFO">${offset} = 759</msg>
<status status="PASS" endtime="20171026 15:19:08.901" starttime="20171026 15:19:08.901"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20171026 15:19:08.905" level="INFO">${freq} = 35100.0</msg>
<status status="PASS" endtime="20171026 15:19:08.906" starttime="20171026 15:19:08.901"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20171026 15:19:08.906" level="INFO">${fq} = 35100</msg>
<status status="PASS" endtime="20171026 15:19:08.906" starttime="20171026 15:19:08.906"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20171026 15:19:08.907" level="INFO">${freqency} = 35100</msg>
<status status="PASS" endtime="20171026 15:19:08.907" starttime="20171026 15:19:08.907"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.909" starttime="20171026 15:19:08.908"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.909" starttime="20171026 15:19:08.854"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.909" starttime="20171026 15:19:08.639"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.909" starttime="20171026 15:19:08.534"></status>
</kw>
<msg timestamp="20171026 15:19:08.910" level="INFO">${earfcn_list2} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<msg timestamp="20171026 15:19:08.910" level="INFO">${freqency_list2} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<msg timestamp="20171026 15:19:08.910" level="INFO">${band_list2} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20171026 15:19:08.910" starttime="20171026 15:19:08.528"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${earfcn_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<assign>
<var>${earfcn_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.920" starttime="20171026 15:19:08.915"></status>
</kw>
<msg timestamp="20171026 15:19:08.920" level="INFO">${earfcn_list} = [u'37900', u'38100', u'42490', u'42690', u'42490', u'42690']</msg>
<status status="PASS" endtime="20171026 15:19:08.920" starttime="20171026 15:19:08.911"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${freqency_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<assign>
<var>${freqency_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.929" starttime="20171026 15:19:08.925"></status>
</kw>
<msg timestamp="20171026 15:19:08.929" level="INFO">${freqency_list} = [u'25850', u'26050', u'34900', u'35100', u'34900', u'35100']</msg>
<status status="PASS" endtime="20171026 15:19:08.929" starttime="20171026 15:19:08.920"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${band_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<assign>
<var>${band_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.937" starttime="20171026 15:19:08.933"></status>
</kw>
<msg timestamp="20171026 15:19:08.937" level="INFO">${band_list} = [u'38', u'38', u'42', u'42', u'42', u'42']</msg>
<status status="PASS" endtime="20171026 15:19:08.937" starttime="20171026 15:19:08.930"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20171026 15:19:08.937" level="INFO">${cell_index1} = 0</msg>
<status status="PASS" endtime="20171026 15:19:08.937" starttime="20171026 15:19:08.937"></status>
</kw>
<kw type="for" name="${cell_index2} IN [ @{cell_list} ]">
<kw type="foritem" name="${cell_index2} = 1">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.945" starttime="20171026 15:19:08.942"></status>
</kw>
<msg timestamp="20171026 15:19:08.946" level="INFO">${cell_index} = 0</msg>
<status status="PASS" endtime="20171026 15:19:08.946" starttime="20171026 15:19:08.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.955" starttime="20171026 15:19:08.950"></status>
</kw>
<status status="PASS" endtime="20171026 15:19:08.955" starttime="20171026 15:19:08.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:19:08.959" starttime="20171026 15:19:08.955"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="TM500_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;.</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8273 -s True</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8273 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 2704.

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[process_control.py@74] Process start successed ! process id: 2704</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8273</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '14.15' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '13.93' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '13.7' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '13.48' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '13.27' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '13.05' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '12.82' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 1 user queue.

"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@412] Get TM500 resource success!</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;.</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"
FileZilla Server Interface.exe
FileZilla Server Interface.xml
FileZilla Server.xml
FileZilla server.exe
FzGSS.dll
Uninstall.exe
legal.htm
libeay32.dll
license.txt
readme.htm
ssleay32.dll

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;.</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"'</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;.</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\TM500_log\171026_151649_session\171026_151739&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05790F30&gt;</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@591] Prev msg:</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1728] TM500 command to be sent: GSTS</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1728] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1728] TM500 command to be sent: GETR</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1728] TM500 command to be sent: STRT</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20171026 15:22:08.802" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<status status="PASS" endtime="20171026 15:22:08.817" starttime="20171026 15:19:08.964"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20171026 15:22:08.817" level="INFO">${TM500_Use_Tag} = used</msg>
<status status="PASS" endtime="20171026 15:22:08.817" starttime="20171026 15:22:08.817"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20171026 15:22:12.904" level="INFO">$TA,C,020A*</msg>
<msg timestamp="20171026 15:22:12.904" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,020A*', Receive&lt;-'$TA,C,020A*'</msg>
<msg timestamp="20171026 15:22:12.904" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,020A*'
$TA,C,060A*</msg>
<msg timestamp="20171026 15:22:12.904" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,060A*', Receive&lt;-'$TA,C,060A*'</msg>
<msg timestamp="20171026 15:22:12.904" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,060A*'</msg>
<status status="PASS" endtime="20171026 15:22:12.904" starttime="20171026 15:22:08.817"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: GVER</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@507] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20171026 15:22:15.946" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20171026 15:22:15.946" starttime="20171026 15:22:12.904"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20171026 15:22:16.586" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20171026 15:22:16.586" level="INFO">[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/171026_152131_session/171026_152223'</msg>
<msg timestamp="20171026 15:22:16.586" level="INFO">[tm500.py@1352] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/171026_152131_session/171026_152223'</msg>
<msg timestamp="20171026 15:22:16.586" level="INFO">[tm500.py@1363] C:\TM500_LOG\171026_152131_session\171026_152223</msg>
<status status="PASS" endtime="20171026 15:22:16.586" starttime="20171026 15:22:15.946"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${modify_tm500_script}</var>
</assign>
<msg timestamp="20171026 15:22:16.586" level="INFO">${modify_tm500_script} = []</msg>
<status status="PASS" endtime="20171026 15:22:16.586" starttime="20171026 15:22:16.586"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${attach_freqency}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:22:16.586" starttime="20171026 15:22:16.586"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_scripts}</arg>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20171026 15:22:28.536" level="INFO">[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 25850</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20171026 15:22:28.536" level="INFO">[tm500.py@1673] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Error :UE Id:0 (Result: Max_Preambles_Exceeded, TC-RNTI: -, TimingAdv: -, PreambleTxCount: 10)

I: CMPI MTE 0 ECM CONNECTION FAILED IND:UE Id:0
NAS: Dc Connection Establishment Failed
I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
NAS: Registraton failure - CONNNECTION FAILURE: Retrying to Attach 
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)</msg>
<msg timestamp="20171026 15:22:28.536" level="FAIL">TM500 command line does not meet "['L2 RANDOM ACCESS COMPLETE', 'ACCESS POINT NAME']"during 10.0</msg>
<status status="FAIL" endtime="20171026 15:22:28.536" starttime="20171026 15:22:16.586"></status>
</kw>
<status status="FAIL" endtime="20171026 15:22:28.536" starttime="20171026 15:19:08.963"></status>
</kw>
<status status="FAIL" endtime="20171026 15:22:28.536" starttime="20171026 15:19:08.960"></status>
</kw>
<status status="FAIL" endtime="20171026 15:22:28.536" starttime="20171026 15:19:08.938"></status>
</kw>
<status status="FAIL" endtime="20171026 15:22:28.536" starttime="20171026 15:19:08.938"></status>
</kw>
<status status="FAIL" endtime="20171026 15:22:28.536" starttime="20171026 15:19:08.511"></status>
</kw>
<status status="FAIL" endtime="20171026 15:22:28.536" starttime="20171026 15:13:48.659"></status>
</kw>
<status status="FAIL" endtime="20171026 15:22:28.536" starttime="20171026 15:13:48.659"></status>
</kw>
<status status="FAIL" endtime="20171026 15:22:28.536" starttime="20171026 15:13:48.659"></status>
</kw>
<kw type="teardown" name="Test_Tear_Down_Action" library="SISO1 Resource">
<doc>Action when case finishs</doc>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171026 15:22:28.536" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x054E0F30&gt;.</msg>
<status status="PASS" endtime="20171026 15:22:28.536" starttime="20171026 15:22:28.536"></status>
</kw>
<kw name="Kill Qtp Process" library="tdd_ev_robotws">
<doc>This keyword is used to kill the processes related to QTP application.</doc>
<msg timestamp="20171026 15:22:29.269" level="INFO">Start to kill QTP process.
Finshed to kill QTP process.</msg>
<status status="PASS" endtime="20171026 15:22:29.269" starttime="20171026 15:22:28.536"></status>
</kw>
<kw name="Stop Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<status status="PASS" endtime="20171026 15:22:29.300" starttime="20171026 15:22:29.269"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${case_execute_log_name}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:22:29.300" starttime="20171026 15:22:29.300"></status>
</kw>
<msg timestamp="20171026 15:22:29.300" level="INFO">${return} = ('PASS', None)</msg>
<status status="PASS" endtime="20171026 15:22:29.300" starttime="20171026 15:22:29.300"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Save Infomodel Log" library="tdd_ev_robotws">
<doc>Save InfoModel log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20171026 15:22:29.316" level="INFO">[infomodel_control.py@215] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\owner_debug' succeed .</msg>
<status status="PASS" endtime="20171026 15:22:29.316" starttime="20171026 15:22:29.300"></status>
</kw>
<status status="PASS" endtime="20171026 15:22:29.316" starttime="20171026 15:22:29.300"></status>
</kw>
<status status="PASS" endtime="20171026 15:22:29.316" starttime="20171026 15:22:29.300"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Stop Infomodel" library="tdd_ev_robotws">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20171026 15:22:30.174" level="INFO">[infomodel_control.py@187] stop infomodel logger succeed .</msg>
<msg timestamp="20171026 15:22:30.174" level="INFO">[infomodel_control.py@199] stop infomodel succeed .</msg>
<status status="PASS" endtime="20171026 15:22:30.174" starttime="20171026 15:22:29.316"></status>
</kw>
<status status="PASS" endtime="20171026 15:22:30.174" starttime="20171026 15:22:29.316"></status>
</kw>
<status status="PASS" endtime="20171026 15:22:30.174" starttime="20171026 15:22:29.316"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Release_TM500_And_Colse_PA_Port</arg>
</arguments>
<kw name="Release_TM500_And_Colse_PA_Port" library="SISO1 Resource">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${return}</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Variable Should Exist</arg>
<arg>${TM500_Use_Tag}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:22:30.174" starttime="20171026 15:22:30.174"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Use_Tag}'=='used'</arg>
<arg>Set Attenuators Off</arg>
<arg>${ATT_ALL_INFO}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:22:30.174" starttime="20171026 15:22:30.174"></status>
</kw>
<kw name="Set_Allcells_Attenuation_Off" library="SISO1 Resource">
<kw type="for" name="${index} IN RANGE [ 1 | 10 ]">
<kw type="foritem" name="${index} = 1">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:22:30.174" starttime="20171026 15:22:30.174"></status>
</kw>
<msg timestamp="20171026 15:22:30.174" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20171026 15:22:30.174" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20171026 15:22:30.174" starttime="20171026 15:22:30.174"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20171026 15:22:30.174" starttime="20171026 15:22:30.174"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20171026 15:22:34.245" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20171026 15:22:34.245" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20171026 15:22:34.245" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20171026 15:22:34.245" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20171026 15:22:34.245" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20171026 15:22:34.245" starttime="20171026 15:22:30.189"></status>
</kw>
<status status="PASS" endtime="20171026 15:22:34.245" starttime="20171026 15:22:30.174"></status>
</kw>
<kw type="foritem" name="${index} = 2">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:22:34.261" starttime="20171026 15:22:34.261"></status>
</kw>
<msg timestamp="20171026 15:22:34.261" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20171026 15:22:34.261" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20171026 15:22:34.261" starttime="20171026 15:22:34.245"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20171026 15:22:34.261" starttime="20171026 15:22:34.261"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20171026 15:22:38.348" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20171026 15:22:38.348" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20171026 15:22:38.348" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20171026 15:22:38.348" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20171026 15:22:38.348" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20171026 15:22:38.348" starttime="20171026 15:22:34.261"></status>
</kw>
<status status="PASS" endtime="20171026 15:22:38.348" starttime="20171026 15:22:34.245"></status>
</kw>
<kw type="foritem" name="${index} = 3">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:22:38.348" starttime="20171026 15:22:38.348"></status>
</kw>
<msg timestamp="20171026 15:22:38.348" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20171026 15:22:38.348" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20171026 15:22:38.348" starttime="20171026 15:22:38.348"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20171026 15:22:38.364" starttime="20171026 15:22:38.348"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20171026 15:22:42.420" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20171026 15:22:42.420" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20171026 15:22:42.420" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20171026 15:22:42.420" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20171026 15:22:42.420" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20171026 15:22:42.420" starttime="20171026 15:22:38.364"></status>
</kw>
<status status="PASS" endtime="20171026 15:22:42.420" starttime="20171026 15:22:38.348"></status>
</kw>
<kw type="foritem" name="${index} = 4">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20171026 15:22:42.435" level="FAIL">Variable ${CELL4_ATT_INFO} does not exist.</msg>
<status status="FAIL" endtime="20171026 15:22:42.435" starttime="20171026 15:22:42.435"></status>
</kw>
<msg timestamp="20171026 15:22:42.435" level="INFO">${ret1} = FAIL</msg>
<msg timestamp="20171026 15:22:42.435" level="INFO">${ret2} = Variable ${CELL4_ATT_INFO} does not exist.</msg>
<status status="PASS" endtime="20171026 15:22:42.435" starttime="20171026 15:22:42.435"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<msg timestamp="20171026 15:22:42.435" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171026 15:22:42.435" starttime="20171026 15:22:42.435"></status>
</kw>
<status status="PASS" endtime="20171026 15:22:42.435" starttime="20171026 15:22:42.420"></status>
</kw>
<status status="PASS" endtime="20171026 15:22:42.435" starttime="20171026 15:22:30.174"></status>
</kw>
<status status="PASS" endtime="20171026 15:22:42.435" starttime="20171026 15:22:30.174"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20171026 15:22:50.516" level="INFO">[tm500.py@591] Prev msg: I: CMPI L2 Random Access Error :UE Id:0 (Result: Max_Preambles_Exceeded, TC-RNTI: -, TimingAdv: -, PreambleTxCount: 10)

I: CMPI MTE 0 ECM CONNECTION FAILED IND:UE Id:0
NAS: Dc Connection Establishment Failed
I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
NAS: Registraton failure - CONNNECTION FAILURE: Retrying to Attach 
I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Error :UE Id:0 (Result: Max_Preambles_Exceeded, TC-RNTI: -, TimingAdv: -, PreambleTxCount: 10)

I: CMPI MTE 0 ECM CONNECTION FAILED IND:UE Id:0
NAS: Dc Connection Establishment Failed
I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
NAS: Registraton failure - CONNNECTION FAILURE: Retrying to Attach 
I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable</msg>
<msg timestamp="20171026 15:22:50.516" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20171026 15:22:50.516" level="INFO">[tm500.py@1736] TM500 command reply: I: TMAE 0x1 Warning - Logging is being stopped automatically. Please wait for logging stopped message.
I: TMAE 0x1 Warning - Logging has been stopped automatically.
C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20171026 15:22:50.516" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8273 stopping</msg>
<status status="PASS" endtime="20171026 15:22:50.516" starttime="20171026 15:22:42.435"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Test Variable</arg>
<arg>${TM500_Use_Tag}</arg>
<arg>unused</arg>
</arguments>
<status status="PASS" endtime="20171026 15:22:50.516" starttime="20171026 15:22:50.516"></status>
</kw>
<status status="PASS" endtime="20171026 15:22:50.532" starttime="20171026 15:22:30.174"></status>
</kw>
<status status="PASS" endtime="20171026 15:22:50.532" starttime="20171026 15:22:30.174"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<msg timestamp="20171026 15:22:50.532" level="FAIL">Variable ${route_add_cpe_pc} does not exist.</msg>
<status status="FAIL" endtime="20171026 15:22:50.532" starttime="20171026 15:22:50.532"></status>
</kw>
<msg timestamp="20171026 15:22:50.532" level="INFO">${return} = ('FAIL', u'Variable ${route_add_cpe_pc} does not exist.')</msg>
<status status="PASS" endtime="20171026 15:22:50.532" starttime="20171026 15:22:50.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${route_add_cpe_pc}'=='true'</arg>
<arg>Execute Shell Command</arg>
<arg>route delete ${BTS_PC_INFO.IP} mask 255.255.255.255 ${UE1_INFO.ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:22:50.532" starttime="20171026 15:22:50.532"></status>
</kw>
<kw name="Alarm Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20171026 15:23:07.211" level="ERROR">Infomodel not connected.</msg>
<msg timestamp="20171026 15:23:08.053" level="INFO">[infomodel_control.py@82] set up infomodel with following info succeed .
    details: address=192.168.255.1, port=12345, definitions_file_path=None
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}</msg>
<msg timestamp="20171026 15:23:08.053" level="INFO">[infomodel_control.py@100] stop infomodel succeed .</msg>
<status status="PASS" endtime="20171026 15:23:08.053" starttime="20171026 15:22:50.532"></status>
</kw>
<kw name="Fatal Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20171026 15:23:12.499" level="INFO">['fatal'] ['fatal']</msg>
<msg timestamp="20171026 15:23:12.499" level="INFO">[file_control.py@109] *HTML*&lt;a href = "D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\udplog_20171026150631.log"&gt;fail log&lt;/a&gt;
Find '['fatal']' in 'D:\TA\TA_logs\TestLog_20171026142953\ev_logs\FZHR_Operational_Cell_block_unblock_20171026150339\FZHR_Operational_Cell_block_unblock\udplog_20171026150631.log'
write successfully</msg>
<status status="PASS" endtime="20171026 15:23:12.499" starttime="20171026 15:23:08.053"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<assign>
<var>${return1}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<msg timestamp="20171026 15:23:12.499" level="FAIL">'FZHR_Operational_Cell_block_unblock' does not contain 'Fiber'</msg>
<status status="FAIL" endtime="20171026 15:23:12.499" starttime="20171026 15:23:12.499"></status>
</kw>
<msg timestamp="20171026 15:23:12.499" level="INFO">${return1} = ('FAIL', u"'FZHR_Operational_Cell_block_unblock' does not contain 'Fiber'")</msg>
<status status="PASS" endtime="20171026 15:23:12.499" starttime="20171026 15:23:12.499"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<assign>
<var>${all_fiber_link}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:12.499" starttime="20171026 15:23:12.499"></status>
</kw>
<msg timestamp="20171026 15:23:12.499" level="INFO">${all_fiber_link} = ('PASS', None)</msg>
<status status="PASS" endtime="20171026 15:23:12.499" starttime="20171026 15:23:12.499"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:12.515" starttime="20171026 15:23:12.499"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:12.515" starttime="20171026 15:23:12.499"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Software Reboot Bts</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:12.515" starttime="20171026 15:23:12.515"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Sleep</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:12.515" starttime="20171026 15:23:12.515"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:12.515" starttime="20171026 15:23:12.515"></status>
</kw>
<kw name="Common Test Teardown" library="common_resource">
<doc>[Caution] this keyword step:</doc>
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20171026 15:23:12.515" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20171026 15:23:12.515" starttime="20171026 15:23:12.515"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:12.515" starttime="20171026 15:23:12.515"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:12.515" starttime="20171026 15:23:12.515"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:12.515" starttime="20171026 15:23:12.515"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:12.531" starttime="20171026 15:23:12.515"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:12.531" starttime="20171026 15:23:12.515"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:12.531" starttime="20171026 15:23:12.515"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:12.531" starttime="20171026 15:23:12.531"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:12.531" starttime="20171026 15:23:12.531"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:12.531" starttime="20171026 15:23:12.531"></status>
</kw>
<kw name="Get Active Bts Sw Version" library="tdd_ev_robotws">
<doc>get active BTS SW Build Version from enb targetBD file..</doc>
<assign>
<var>${version}</var>
</assign>
<msg timestamp="20171026 15:23:33.840" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:23:33.840" level="INFO">[ssh_common.py@203] root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:23:33.840" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05786DF0&gt;</msg>
<msg timestamp="20171026 15:23:33.840" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171026 15:23:33.840" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:23:33.840" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05786DF0&gt;</msg>
<msg timestamp="20171026 15:23:33.840" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171026 15:23:33.840" level="INFO">[ssh_common.py@203] Last login: Thu Oct 26 15:23:18 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20171026 15:23:33.840" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05772DF0&gt;</msg>
<msg timestamp="20171026 15:23:33.840" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20171026 15:23:33.840" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000475_000000.xml
root@fctj-0a:/ffs/fs2 &gt;</msg>
<msg timestamp="20171026 15:23:33.840" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05772DF0&gt;</msg>
<msg timestamp="20171026 15:23:33.840" level="INFO">${version} = TL17A_ENB_0000_000475_000000</msg>
<status status="PASS" endtime="20171026 15:23:33.840" starttime="20171026 15:23:12.531"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:33.840" starttime="20171026 15:23:33.840"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:33.840" starttime="20171026 15:23:33.840"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:33.840" starttime="20171026 15:23:33.840"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<status status="PASS" endtime="20171026 15:23:33.856" starttime="20171026 15:23:33.840"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:33.856" starttime="20171026 15:23:33.840"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:33.856" starttime="20171026 15:23:33.840"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:33.856" starttime="20171026 15:23:12.515"></status>
</kw>
<status status="PASS" endtime="20171026 15:23:33.856" starttime="20171026 15:22:28.536"></status>
</kw>
<tags>
<tag>owner-shaocheng.chen@nokia.com</tag>
<tag>QC_773297</tag>
</tags>
<status status="FAIL" endtime="20171026 15:23:33.856" critical="yes" starttime="20171026 15:05:16.730">TM500 command line does not meet "['L2 RANDOM ACCESS COMPLETE', 'ACCESS POINT NAME']"during 10.0</status>
</test>
<doc>TD-LTE I&amp;V SISO1</doc>
<status status="FAIL" endtime="20171026 15:23:33.872" starttime="20171026 15:03:38.435"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">owner-shaocheng.chen@nokia.com</stat>
<stat fail="1" pass="0">QC_773297</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="FZHR Operational Cell block unblock" pass="0">FZHR Operational Cell block unblock</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20171026 15:03:39.121" level="ERROR">Loading tdd_config has failed. Please check if: 
       1. you executed pybot with --variable CONFIGURATION:$your_tl_config 
          i.e. pybot --variable CONFIGURATION:Wroclaw.test 
       2. check if there is no problem with your configuration 
       Error msg: Variable ${CONFIGURATION} does not exist.
</msg>
<msg timestamp="20171026 15:15:58.300" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.306" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.339" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.369" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.426" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.477" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:15:58.534" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.637" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.642" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.670" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.701" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.754" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.806" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:19:08.856" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20171026 15:23:07.211" level="ERROR">Infomodel not connected.</msg>
</errors>
</robot>
