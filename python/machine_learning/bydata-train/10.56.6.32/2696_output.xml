<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170808 10:56:55.202" generator="Rebot 3.0 (Python 2.7.5 on win32)">
<suite source="D:\TA\Test_Case_Svn\TL17A\SISO1\CPRI_Single_FZHR\FZHR_Operational_RF_block_unblock\FZHR_Operational_RF_block_unblock.html" id="s1" name="FZHR Operational RF block unblock">
<kw type="setup" name="Common Suite Setup" library="common_resource">
<doc>this keyword create suite name directory path as D:\TA\TA_logs\TestLog_20170808103331//logs//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20170808 10:33:35.092" level="INFO">${timestamp} = 20170808103335</msg>
<status status="PASS" endtime="20170808 10:33:35.092" starttime="20170808 10:33:35.049"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_NAME[:50]}</arg>
<arg>\\s+$</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${FILE_NAME}</var>
</assign>
<msg timestamp="20170808 10:33:35.093" level="INFO">${FILE_NAME} = FZHR Operational RF block unblock</msg>
<status status="PASS" endtime="20170808 10:33:35.093" starttime="20170808 10:33:35.092"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>ev_logs</arg>
<arg>${FILE_NAME}_${timestamp}</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20170808 10:33:35.094" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR Operational RF block unblock_20170808103335</msg>
<status status="PASS" endtime="20170808 10:33:35.094" starttime="20170808 10:33:35.093"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20170808 10:33:35.094" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335</msg>
<status status="PASS" endtime="20170808 10:33:35.094" starttime="20170808 10:33:35.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170808 10:33:35.095" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335</msg>
<status status="PASS" endtime="20170808 10:33:35.095" starttime="20170808 10:33:35.094"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170808 10:33:35.096" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335"&gt;D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170808 10:33:35.096" starttime="20170808 10:33:35.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170808 10:33:35.097" level="INFO">save log dir:D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335</msg>
<status status="PASS" endtime="20170808 10:33:35.097" starttime="20170808 10:33:35.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${snapshot_flag}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170808 10:33:35.101" level="INFO">${snapshot_flag} = 0</msg>
<status status="PASS" endtime="20170808 10:33:35.101" starttime="20170808 10:33:35.097"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<msg timestamp="20170808 10:33:35.121" level="FAIL">Variable ${TEST LOG DIR} does not exist.</msg>
<status status="FAIL" endtime="20170808 10:33:35.121" starttime="20170808 10:33:35.114"></status>
</kw>
<msg timestamp="20170808 10:33:35.121" level="INFO">${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')</msg>
<status status="PASS" endtime="20170808 10:33:35.121" starttime="20170808 10:33:35.114"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:33:35.122" starttime="20170808 10:33:35.122"></status>
</kw>
<msg timestamp="20170808 10:33:35.122" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170808 10:33:35.122" starttime="20170808 10:33:35.121"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:33:35.129" starttime="20170808 10:33:35.126"></status>
</kw>
<msg timestamp="20170808 10:33:35.129" level="INFO">${log dir} = D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335</msg>
<status status="PASS" endtime="20170808 10:33:35.129" starttime="20170808 10:33:35.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20170808 10:33:35.133" level="INFO">${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335</msg>
<status status="PASS" endtime="20170808 10:33:35.133" starttime="20170808 10:33:35.130"></status>
</kw>
<status status="PASS" endtime="20170808 10:33:35.133" starttime="20170808 10:33:35.113"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Make Sure FCT Ping Ok</arg>
</arguments>
<kw name="Make Sure FCT Ping Ok" library="common_resource">
<kw name="Ping Should Ok" library="tdd_ev_robotws">
<doc>This function is used for check whether ping host success, if yes, return 1, else return 0</doc>
<arguments>
<arg>${FCMD_IP}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20170808 10:33:35.169" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20170808 10:33:35.169" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20170808 10:33:35.169" starttime="20170808 10:33:35.134"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${FTM_IP}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:33:35.170" starttime="20170808 10:33:35.169"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Btscli Disable Bts Port Security</arg>
</arguments>
<status status="PASS" endtime="20170808 10:33:35.170" starttime="20170808 10:33:35.170"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>60</arg>
<arg>${FCMD_IP}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:33:35.171" starttime="20170808 10:33:35.170"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5min</arg>
<arg>5s</arg>
<arg>_make sure fctb connect ok</arg>
</arguments>
<status status="PASS" endtime="20170808 10:33:35.171" starttime="20170808 10:33:35.171"></status>
</kw>
<status status="PASS" endtime="20170808 10:33:35.171" starttime="20170808 10:33:35.134"></status>
</kw>
<status status="PASS" endtime="20170808 10:33:35.171" starttime="20170808 10:33:35.134"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>get_enb_infomation</arg>
</arguments>
<kw name="Get Enb Infomation" library="tdd_ev_robotws">
<doc>This keyword will print bts sw version, bbu type and RRU type.</doc>
<msg timestamp="20170808 10:34:13.829" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170808 10:34:13.864" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170808 10:34:24.966" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170808 10:34:24.996" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170808 10:34:25.507" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170808 10:34:25.546" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1502159617&amp;token=77636f2f7be4a10c6f3e570d79f5d97266f2e219a829e2fcc223cc3bf3bc1418&amp;frame=sshservice'</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;SSH Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1502159619&amp;token=08e5b951f56ad0b2957279238285ecbc5269deb7851db808960c682078c73a6e&amp;frame=RndPortsService'</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;R&amp;D Ports Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ssh_common.py@203] Last login: Tue Aug  8 10:33:06 CST 2017 from 10.69.81.142 on ssh
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05817EB8&gt;</msg>
<msg timestamp="20170808 10:34:49.396" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05817EB8&gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@203] Last login: Tue Aug  8 10:33:42 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05817FD0&gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000198_000000.xml
root@fctj-0a:/ffs/fs1 &gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05817FD0&gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[enb_resource.py@1130] 
 ****Current BTS version is 'TL17A_ENB_0000_000198_000000' *****</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[enb_resource.py@1160] activeBuildVersion=TL17A_ENB_0000_000198_000000</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@203] Last login: Tue Aug  8 10:33:52 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x058523C8&gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@258] Execute command: ls /ram/SiteConf.xml</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@314] Get Response: ls /ram/SiteConf.xml
/ram/SiteConf.xml
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x058523C8&gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[sftp_control.py@176] /ram/SiteConf.xml</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[sftp_control.py@79] sftp download from '/ram/SiteConf.xml' to 'D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\SiteConf.xml' is ok. local file size is 145k</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@203] Last login: Tue Aug  8 10:34:13 CST 2017 from 192.168.255.126 on ssh
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0586AA58&gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0586AA58&gt;</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[enb_resource.py@402] The real falsh folder is /ffs/fs1</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[sftp_control.py@176] /ffs/fs1/FileDirectory.xml</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs1/FileDirectory.xml' to 'D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FileDirectory_20170808103413.xml' is ok. local file size is 36k</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[sftp_control.py@176] /ffs/fs1/config/SCFC_107.xml</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs1/config/SCFC_107.xml' to 'D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\SCFC_107.xml' is ok. local file size is 154k</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[enb_resource.py@1130] 
 ****Current bbu type is 'ASIA' *****</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[enb_resource.py@1255] HW_BBU_TYPE=ASIA</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[enb_resource.py@1130] 
 ****Current rru type is 'FZHR' *****</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[enb_resource.py@1258] HW_RRU_TYPE=FZHR</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[enb_resource.py@1130] 
 ****Current HW type is '#2720-2CL1-T3-L-14' *****</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[enb_resource.py@1261] BTS_HW_TYPE=#2720-2CL1-T3-L-14</msg>
<msg timestamp="20170808 10:34:49.397" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.20 with 32 bytes of data:
Reply from 192.168.255.126: Destination host unreachable.

Ping statistics for 192.168.255.20:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),</msg>
<status status="PASS" endtime="20170808 10:34:49.400" starttime="20170808 10:33:35.172"></status>
</kw>
<status status="PASS" endtime="20170808 10:34:49.400" starttime="20170808 10:33:35.172"></status>
</kw>
<kw name="Set Library Search Order" library="BuiltIn">
<doc>Sets the resolution order to use when a name matches multiple keywords.</doc>
<arguments>
<arg>tdd_ev_robotws</arg>
<arg>OperatingSystem</arg>
</arguments>
<status status="PASS" endtime="20170808 10:34:49.400" starttime="20170808 10:34:49.400"></status>
</kw>
<kw name="Initial Connection With BTS PC" library="common_resource">
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20170808 10:34:49.402" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20170808 10:34:49.402" starttime="20170808 10:34:49.401"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>${TELNET_PORT}</arg>
<arg>${SSH_PORT}</arg>
</arguments>
<assign>
<var>${conn_port}</var>
</assign>
<msg timestamp="20170808 10:34:49.405" level="INFO">${conn_port} = 23</msg>
<status status="PASS" endtime="20170808 10:34:49.405" starttime="20170808 10:34:49.402"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>TELNET</arg>
<arg>SSH</arg>
</arguments>
<assign>
<var>${conn_type}</var>
</assign>
<msg timestamp="20170808 10:34:49.408" level="INFO">${conn_type} = TELNET</msg>
<status status="PASS" endtime="20170808 10:34:49.408" starttime="20170808 10:34:49.405"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>30</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${timeout}</var>
</assign>
<msg timestamp="20170808 10:34:49.411" level="INFO">${timeout} = 30</msg>
<status status="PASS" endtime="20170808 10:34:49.412" starttime="20170808 10:34:49.409"></status>
</kw>
<kw name="Connect To Host" library="tdd_ev_robotws">
<doc>Used to connect to host, either TELNET or SSH</doc>
<arguments>
<arg>${BTS_PC_INFO.IP}</arg>
<arg>port=${conn_port}</arg>
<arg>username=${BTS_PC_INFO.USERNAME}</arg>
<arg>password=${BTS_PC_INFO.PASSWORD}</arg>
<arg>conn_type=${conn_type}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${BTS_PC_CONNECTION}</var>
</assign>
<msg timestamp="20170808 10:34:50.842" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 


login:</msg>
<msg timestamp="20170808 10:34:50.842" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20170808 10:34:50.842" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester

password:</msg>
<msg timestamp="20170808 10:34:50.842" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20170808 10:34:50.842" level="INFO">[telnet_common.py@246]  

*===============================================================
Microsoft Telnet Server.
*===============================================================
C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170808 10:34:50.842" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<status status="PASS" endtime="20170808 10:34:50.843" starttime="20170808 10:34:49.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:34:50.843" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<status status="PASS" endtime="20170808 10:34:50.843" starttime="20170808 10:34:50.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>Execute Shell Command</arg>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<msg timestamp="20170808 10:34:52.052" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:34:52.052" level="INFO">[telnet_common.py@276] Execute command: tlntadmn config timeoutactive=no</msg>
<msg timestamp="20170808 10:34:52.053" level="INFO">[telnet_common.py@306] Get Response: tlntadmn config timeoutactive=no
The settings were successfully updated.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170808 10:34:52.053" starttime="20170808 10:34:50.847"></status>
</kw>
<status status="PASS" endtime="20170808 10:34:52.053" starttime="20170808 10:34:50.844"></status>
</kw>
<status status="PASS" endtime="20170808 10:34:52.053" starttime="20170808 10:34:49.401"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:34:52.057" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<status status="PASS" endtime="20170808 10:34:52.057" starttime="20170808 10:34:52.053"></status>
</kw>
<status status="PASS" endtime="20170808 10:34:52.058" starttime="20170808 10:33:35.049"></status>
</kw>
<kw type="teardown" name="Common Suite Teardown" library="common_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${REMOVE_LOGS}'=='on'</arg>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:49.680" starttime="20170808 10:56:49.680"></status>
</kw>
<kw name="Disconnect All Hosts" library="tdd_ev_robotws">
<doc>Closes all existing telnet connections to remote hosts.</doc>
<msg timestamp="20170808 10:56:49.695" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20170808 10:56:49.695" level="INFO">[telnet_common.py@189] Disconnect from 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:56:49.695" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20170808 10:56:49.695" level="INFO">[telnet_common.py@189] Disconnect from 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<status status="PASS" endtime="20170808 10:56:49.695" starttime="20170808 10:56:49.680"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<kw name="Zip File" library="tdd_ev_robotws">
<doc>This keyword can zip specific files.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<msg timestamp="20170808 10:56:49.742" level="INFO">[zip_control.py@325]</msg>
<msg timestamp="20170808 10:56:49.742" level="INFO">[zip_control.py@331] zip D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335 to D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335.zip failed!</msg>
<status status="PASS" endtime="20170808 10:56:49.742" starttime="20170808 10:56:49.695"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:49.742" starttime="20170808 10:56:49.695"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:49.742" starttime="20170808 10:56:49.695"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<msg timestamp="20170808 10:56:49.804" level="FAIL">WindowsError: [Error 32] The process cannot access the file because it is being used by another process: u'D:\\TA\\TA_logs\\TestLog_20170808103331\\ev_logs\\FZHR_Operational_RF_block_unblock_20170808103335\\FZQE_Operational_RF_Block_Unblock\\tm500_attach_log2'</msg>
<status status="FAIL" endtime="20170808 10:56:49.804" starttime="20170808 10:56:49.742"></status>
</kw>
<status status="FAIL" endtime="20170808 10:56:49.804" starttime="20170808 10:56:49.742"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:49.804" starttime="20170808 10:56:49.742"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:49.804" starttime="20170808 10:56:49.680"></status>
</kw>
<test id="s1-t1" name="FZQE_Operational_RF_Block_Unblock">
<kw type="setup" name="Common Test Setup" library="common_resource">
<doc>this keyword create case name directory path as D:\TA\TA_logs\TestLog_20170808103331//ev_logs//D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20170808 10:34:52.063" level="INFO">${timestamp} = 20170808103452</msg>
<status status="PASS" endtime="20170808 10:34:52.063" starttime="20170808 10:34:52.062"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20170808 10:34:52.064" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock</msg>
<status status="PASS" endtime="20170808 10:34:52.064" starttime="20170808 10:34:52.063"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20170808 10:34:52.064" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock</msg>
<status status="PASS" endtime="20170808 10:34:52.065" starttime="20170808 10:34:52.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170808 10:34:52.065" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock</msg>
<status status="PASS" endtime="20170808 10:34:52.065" starttime="20170808 10:34:52.065"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170808 10:34:52.066" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock"&gt;D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170808 10:34:52.066" starttime="20170808 10:34:52.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170808 10:34:52.067" level="INFO">save log dir:D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock</msg>
<status status="PASS" endtime="20170808 10:34:52.067" starttime="20170808 10:34:52.067"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${BTS PC CONNECTION.connected}</arg>
<arg>Initial Connection With BTS PC</arg>
</arguments>
<status status="PASS" endtime="20170808 10:34:52.068" starttime="20170808 10:34:52.067"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:34:52.070" starttime="20170808 10:34:52.069"></status>
</kw>
<msg timestamp="20170808 10:34:52.070" level="INFO">${case_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170808 10:34:52.070" starttime="20170808 10:34:52.069"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:34:52.071" starttime="20170808 10:34:52.071"></status>
</kw>
<msg timestamp="20170808 10:34:52.071" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170808 10:34:52.071" starttime="20170808 10:34:52.070"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<msg timestamp="20170808 10:34:52.075" level="INFO">${log dir} = D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock</msg>
<status status="PASS" endtime="20170808 10:34:52.075" starttime="20170808 10:34:52.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20170808 10:34:52.076" level="INFO">${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock</msg>
<status status="PASS" endtime="20170808 10:34:52.076" starttime="20170808 10:34:52.075"></status>
</kw>
<status status="PASS" endtime="20170808 10:34:52.076" starttime="20170808 10:34:52.068"></status>
</kw>
<status status="PASS" endtime="20170808 10:34:52.076" starttime="20170808 10:34:52.062"></status>
</kw>
<kw name="Reset_BTS_If_Not_Onair" library="SISO1 Resource">
<arguments>
<arg>${source_scf}</arg>
<arg>${parameter_list}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:34:52.084" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<status status="PASS" endtime="20170808 10:34:52.084" starttime="20170808 10:34:52.077"></status>
</kw>
<kw name="Parse Ping Result" library="tdd_ev_robotws">
<doc>This keyword test the reachability of remote system.</doc>
<arguments>
<arg>192.168.255.1</arg>
</arguments>
<assign>
<var>${package_summary}</var>
<var>${ping_delay}</var>
</assign>
<msg timestamp="20170808 10:34:56.276" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:34:56.276" level="INFO">[telnet_common.py@276] Execute command: ping  192.168.255.1</msg>
<msg timestamp="20170808 10:34:56.276" level="INFO">[telnet_common.py@306] Get Response: ping  192.168.255.1

Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms

C:\Users\tdlte-tester&gt;
Total ping delay is: [1, 1, 1, 1]
Statistic ping delay is: [1, 1, 1, 1]
Valid ping delay is: [1, 1, 1, 1]</msg>
<msg timestamp="20170808 10:34:56.276" level="INFO">${package_summary} = ('4', '4', '0')</msg>
<msg timestamp="20170808 10:34:56.276" level="INFO">${ping_delay} = [1, 1, 1.0]</msg>
<status status="PASS" endtime="20170808 10:34:56.276" starttime="20170808 10:34:52.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Restart Device With Powerbreaker</arg>
<arg>${bts_powerbreak}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:34:56.280" starttime="20170808 10:34:56.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20170808 10:34:56.283" starttime="20170808 10:34:56.280"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Check_BTS_Onair_Status</arg>
</arguments>
<assign>
<var>${result}</var>
<var>${ret}</var>
</assign>
<kw name="Check_BTS_Onair_Status" library="SISO1 Resource">
<kw name="Start Infomodel" library="tdd_ev_robotws">
<doc>Setup InfoModel library and Connect to InfoModel.</doc>
<arguments>
<arg>port=${BTS_INFOMODEL_PORT}</arg>
</arguments>
<msg timestamp="20170808 10:35:05.761" level="INFO">[infomodel_control.py@157] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None</msg>
<msg timestamp="20170808 10:35:05.761" level="INFO">[infomodel_control.py@161] start infomodel succeed .</msg>
<msg timestamp="20170808 10:35:05.761" level="INFO">[infomodel_control.py@163] start infomodel logger succeed .</msg>
<status status="PASS" endtime="20170808 10:35:05.762" starttime="20170808 10:34:56.284"></status>
</kw>
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]</arg>
<arg>timeout=5</arg>
</arguments>
<msg timestamp="20170808 10:35:06.438" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' succeed .</msg>
<status status="PASS" endtime="20170808 10:35:06.438" starttime="20170808 10:35:05.762"></status>
</kw>
<kw name="Stop Infomodel" library="tdd_ev_robotws">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20170808 10:35:07.162" level="INFO">[infomodel_control.py@186] stop infomodel logger succeed .</msg>
<msg timestamp="20170808 10:35:07.162" level="INFO">[infomodel_control.py@198] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170808 10:35:07.162" starttime="20170808 10:35:06.438"></status>
</kw>
<status status="PASS" endtime="20170808 10:35:07.163" starttime="20170808 10:34:56.284"></status>
</kw>
<msg timestamp="20170808 10:35:07.163" level="INFO">${result} = PASS</msg>
<msg timestamp="20170808 10:35:07.163" level="INFO">${ret} = None</msg>
<status status="PASS" endtime="20170808 10:35:07.163" starttime="20170808 10:34:56.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'FAIL'=='${result}'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<status status="PASS" endtime="20170808 10:35:07.166" starttime="20170808 10:35:07.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'FAIL'=='${result}'</arg>
<arg>BTS_On_Air</arg>
<arg>${source_scf}</arg>
<arg>${parameters_list}</arg>
<arg>${bts_powerbreak}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:35:07.170" starttime="20170808 10:35:07.167"></status>
</kw>
<status status="PASS" endtime="20170808 10:35:07.170" starttime="20170808 10:34:52.077"></status>
</kw>
<kw type="for" name="${num} IN RANGE [ ${total_times} ]">
<kw type="foritem" name="${num} = 0">
<kw name="_RF_Block_Unblock_and_Attach">
<doc>Operation with BTS</doc>
<arguments>
<arg>${num}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:35:07.176" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<status status="PASS" endtime="20170808 10:35:07.176" starttime="20170808 10:35:07.171"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170808 10:35:11.132" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:35:11.132" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170808 10:35:11.132" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="2244"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170808 10:35:11.132" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:35:11.132" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170808 10:35:11.132" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="4828"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170808 10:35:11.132" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:35:11.132" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170808 10:35:11.132" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.


C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170808 10:35:11.132" starttime="20170808 10:35:07.176"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20170808 10:35:11.138" starttime="20170808 10:35:11.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20170808 10:35:11.141" starttime="20170808 10:35:11.138"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170808 10:35:11.142" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170808103331\\ev_logs\\FZHR_Operational_RF_block_unblock_20170808103335\\FZQE_Operational_RF_Bloc...</msg>
<status status="PASS" endtime="20170808 10:35:11.142" starttime="20170808 10:35:11.142"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:35:11.143" starttime="20170808 10:35:11.143"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170808 10:36:13.517" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\GUILog\qtp_log20170808103511\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170808 10:36:13.518" starttime="20170808 10:35:11.143"></status>
</kw>
<status status="PASS" endtime="20170808 10:36:13.518" starttime="20170808 10:35:11.137"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>RRU</arg>
<arg>${RRU1_INFO.NODE}</arg>
<arg>Block</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170808 10:36:13.521" level="INFO">${para_list} = [u'HWType=RRU', u'HWID=1.1.1.1', u'HWAction=Block', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170808103331\\ev_logs\\FZHR_Operational_RF_block_unblock_20170808103335\\FZQE_Operational_RF_Block_Unblock\\']</msg>
<status status="PASS" endtime="20170808 10:36:13.521" starttime="20170808 10:36:13.520"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170808 10:37:06.149" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="RRU"
HWID="1.1.1.1"
HWAction="Block"
LogPath="D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\GUILog\qtp_log20170808103613\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170808 10:37:06.149" starttime="20170808 10:36:13.521"></status>
</kw>
<status status="PASS" endtime="20170808 10:37:06.150" starttime="20170808 10:36:13.519"></status>
</kw>
<kw name="GUI SM Alarm Oper" library="gui_resource">
<doc>this keyword provide check Active/History alarm in BTS SiteManager window</doc>
<arguments>
<arg>CheckAlarm_AdditionalInfo</arg>
<arg>Active</arg>
<arg>Severity=Critical;;Fault Name=Unit blocked (0048)</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>AlarmType=${AlarmType}</arg>
<arg>OperType=${OperType}</arg>
<arg>AlarmInfo=${AlarmInfo}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170808 10:37:06.152" level="INFO">${para_list} = [u'AlarmType=Active', u'OperType=CheckAlarm_AdditionalInfo', u'AlarmInfo=Severity=Critical;;Fault Name=Unit blocked (0048)', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170808103331\\ev_logs\\FZHR_Operationa...</msg>
<status status="PASS" endtime="20170808 10:37:06.152" starttime="20170808 10:37:06.151"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Alarm_Oper</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170808 10:37:14.448" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Alarm_Oper is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Alarm_Oper ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
AlarmType="Active"
OperType="CheckAlarm_AdditionalInfo"
AlarmInfo="Severity=Critical;;Fault Name=Unit blocked (0048)"
LogPath="D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\GUILog\qtp_log20170808103706\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170808 10:37:14.448" starttime="20170808 10:37:06.153"></status>
</kw>
<status status="PASS" endtime="20170808 10:37:14.448" starttime="20170808 10:37:06.151"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5 sec</arg>
</arguments>
<msg timestamp="20170808 10:37:19.449" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20170808 10:37:19.449" starttime="20170808 10:37:14.449"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>RRU</arg>
<arg>${RRU1_INFO.NODE}</arg>
<arg>Unblock</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170808 10:37:19.451" level="INFO">${para_list} = [u'HWType=RRU', u'HWID=1.1.1.1', u'HWAction=Unblock', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170808103331\\ev_logs\\FZHR_Operational_RF_block_unblock_20170808103335\\FZQE_Operational_RF_Block_Unblock\\'...</msg>
<status status="PASS" endtime="20170808 10:37:19.451" starttime="20170808 10:37:19.451"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170808 10:37:38.094" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="RRU"
HWID="1.1.1.1"
HWAction="Unblock"
LogPath="D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\GUILog\qtp_log20170808103719\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170808 10:37:38.094" starttime="20170808 10:37:19.452"></status>
</kw>
<status status="PASS" endtime="20170808 10:37:38.095" starttime="20170808 10:37:19.450"></status>
</kw>
<kw name="Check Bts Until Onair" library="tdd_ev_robotws">
<doc>check bts until all cell is onair with infomodel, and have PBCH in udp log.</doc>
<arguments>
<arg>log_name=RF_block_unblock_${num}</arg>
</arguments>
<msg timestamp="20170808 10:38:05.133" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'</msg>
<msg timestamp="20170808 10:38:05.133" level="INFO">[btslog_control.py@174] use ip is 192.168.255.126</msg>
<msg timestamp="20170808 10:38:05.133" level="INFO">[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock" already exists, no need to create it again.</msg>
<msg timestamp="20170808 10:38:05.133" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20170808 10:38:05.133" level="INFO">[infomodel_control.py@157] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None</msg>
<msg timestamp="20170808 10:38:05.133" level="INFO">[infomodel_control.py@161] start infomodel succeed .</msg>
<msg timestamp="20170808 10:38:05.133" level="INFO">[infomodel_control.py@163] start infomodel logger succeed .</msg>
<msg timestamp="20170808 10:38:05.133" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170808 10:38:05.133" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-3 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Online'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-3 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Online'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' succeed .</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[enb_resource.py@225] infomodel check every cell onair succeed !</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[enb_resource.py@253] bts log check onair msg succeed !</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[infomodel_control.py@214] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\im_20170808103804' succeed .</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[infomodel_control.py@186] stop infomodel logger succeed .</msg>
<msg timestamp="20170808 10:38:05.134" level="INFO">[infomodel_control.py@198] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170808 10:38:05.135" starttime="20170808 10:37:38.095"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170808 10:38:08.996" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:38:08.996" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170808 10:38:08.996" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="2224"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170808 10:38:08.996" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:38:08.996" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170808 10:38:08.996" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-632\ROOT\CIMV2:Win32_Process.Handle="4368"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170808 10:38:08.996" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:38:08.996" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170808 10:38:08.996" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.


C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170808 10:38:08.997" starttime="20170808 10:38:05.135"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20170808 10:38:09.002" starttime="20170808 10:38:09.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20170808 10:38:09.006" starttime="20170808 10:38:09.003"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170808 10:38:09.007" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170808103331\\ev_logs\\FZHR_Operational_RF_block_unblock_20170808103335\\FZQE_Operational_RF_Bloc...</msg>
<status status="PASS" endtime="20170808 10:38:09.007" starttime="20170808 10:38:09.006"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:38:09.007" starttime="20170808 10:38:09.007"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170808 10:39:46.222" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\GUILog\qtp_log20170808103809\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170808 10:39:46.223" starttime="20170808 10:38:09.007"></status>
</kw>
<status status="PASS" endtime="20170808 10:39:46.223" starttime="20170808 10:38:09.001"></status>
</kw>
<kw name="GUI SM Check BTS HW Status" library="gui_resource">
<doc>This keyword is used to check the status on BTS Hardware panel.</doc>
<arguments>
<arg>AllCell</arg>
<arg>Operational state=Enabled;;Working state=Working</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>CompName=${CompName}</arg>
<arg>CheckField=${CheckField}</arg>
<arg>WaitTime=${WaitTime}</arg>
<arg>CheckSameFlag=${CheckSameFlag}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170808 10:39:46.225" level="INFO">${para_list} = [u'CompName=AllCell', u'CheckField=Operational state=Enabled;;Working state=Working', u'WaitTime=0', u'CheckSameFlag=1', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170808103331\\ev_logs\\FZHR_Operational_RF...</msg>
<status status="PASS" endtime="20170808 10:39:46.225" starttime="20170808 10:39:46.225"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:39:46.226" starttime="20170808 10:39:46.226"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170808 10:40:00.933" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
CompName="AllCell"
CheckField="Operational state=Enabled;;Working state=Working"
WaitTime="0"
CheckSameFlag="1"
LogPath="D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\GUILog\qtp_log20170808103946\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170808 10:40:00.933" starttime="20170808 10:39:46.226"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:00.934" starttime="20170808 10:39:46.224"></status>
</kw>
<kw name="Start_Udp_And_Infomodel_Log" library="SISO1 Resource">
<arguments>
<arg>bts_attach_${num}</arg>
</arguments>
<kw name="Start Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword starts catching of BTS system(UDP) log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}.log</arg>
</arguments>
<msg timestamp="20170808 10:40:01.246" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'</msg>
<msg timestamp="20170808 10:40:01.246" level="INFO">[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock" already exists, no need to create it again.</msg>
<status status="PASS" endtime="20170808 10:40:01.246" starttime="20170808 10:40:00.934"></status>
</kw>
<kw name="Start Infomodel" library="tdd_ev_robotws">
<doc>Setup InfoModel library and Connect to InfoModel.</doc>
<arguments>
<arg>port=${BTS_INFOMODEL_PORT}</arg>
</arguments>
<msg timestamp="20170808 10:40:10.155" level="INFO">[infomodel_control.py@157] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None</msg>
<msg timestamp="20170808 10:40:10.155" level="INFO">[infomodel_control.py@161] start infomodel succeed .</msg>
<msg timestamp="20170808 10:40:10.155" level="INFO">[infomodel_control.py@163] start infomodel logger succeed .</msg>
<status status="PASS" endtime="20170808 10:40:10.155" starttime="20170808 10:40:01.246"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20170808 10:40:10.156" level="INFO">${case_execute_log_name} = bts_attach_0</msg>
<status status="PASS" endtime="20170808 10:40:10.156" starttime="20170808 10:40:10.156"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.156" starttime="20170808 10:40:00.934"></status>
</kw>
<kw name="UE_Attach_SISO1" library="SISO1 Resource">
<doc>Example</doc>
<arguments>
<arg>1:2</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cell_id}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{cell_list}</var>
</assign>
<msg timestamp="20170808 10:40:10.161" level="INFO">@{cell_list} = [ 1 | 2 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.161" starttime="20170808 10:40:10.161"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${cell_list}</arg>
</arguments>
<assign>
<var>${cell_list_length}</var>
</assign>
<msg timestamp="20170808 10:40:10.162" level="INFO">Length is 2</msg>
<msg timestamp="20170808 10:40:10.162" level="INFO">${cell_list_length} = 2</msg>
<status status="PASS" endtime="20170808 10:40:10.162" starttime="20170808 10:40:10.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Split String</arg>
<arg>${attach_earfcn}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${earfcn_list1}</var>
</assign>
<msg timestamp="20170808 10:40:10.166" level="INFO">${earfcn_list1} = None</msg>
<status status="PASS" endtime="20170808 10:40:10.166" starttime="20170808 10:40:10.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Change_Earfcn_To_Freqency</arg>
<arg>${earfcn_list1}</arg>
</arguments>
<assign>
<var>${freqency_list1}</var>
<var>${band_list1}</var>
</assign>
<msg timestamp="20170808 10:40:10.169" level="INFO">${freqency_list1} = None</msg>
<msg timestamp="20170808 10:40:10.169" level="INFO">${band_list1} = None</msg>
<status status="PASS" endtime="20170808 10:40:10.169" starttime="20170808 10:40:10.166"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Get_Earfcn_From_Infomodel</arg>
</arguments>
<assign>
<var>${earfcn_list2}</var>
<var>${freqency_list2}</var>
<var>${band_list2}</var>
</assign>
<kw name="Get_Earfcn_From_Infomodel" library="SISO1 Resource">
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1</arg>
</arguments>
<assign>
<var>@{ret_earfcn}</var>
</assign>
<msg timestamp="20170808 10:40:10.840" level="INFO">[infomodel_control.py@327] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .</msg>
<msg timestamp="20170808 10:40:10.841" level="INFO">@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-3/CARRIER_GROUP_L-1: {u'fcnULs': [40940L], u'fcnDLs': [40940L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-3/CARRIER_GROUP_L-1', u's...</msg>
<status status="PASS" endtime="20170808 10:40:10.841" starttime="20170808 10:40:10.173"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${ret_earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.841" starttime="20170808 10:40:10.841"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${earfcn_list}</var>
</assign>
<msg timestamp="20170808 10:40:10.842" level="INFO">${earfcn_list} = []</msg>
<status status="PASS" endtime="20170808 10:40:10.842" starttime="20170808 10:40:10.842"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${freqency_list}</var>
</assign>
<msg timestamp="20170808 10:40:10.843" level="INFO">${freqency_list} = []</msg>
<status status="PASS" endtime="20170808 10:40:10.843" starttime="20170808 10:40:10.842"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${band_list}</var>
</assign>
<msg timestamp="20170808 10:40:10.843" level="INFO">${band_list} = []</msg>
<status status="PASS" endtime="20170808 10:40:10.843" starttime="20170808 10:40:10.843"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_OFFSET}</arg>
</arguments>
<assign>
<var>${offset_dict}</var>
</assign>
<msg timestamp="20170808 10:40:10.844" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170808 10:40:10.846" level="INFO">${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}</msg>
<status status="PASS" endtime="20170808 10:40:10.846" starttime="20170808 10:40:10.843"></status>
</kw>
<kw type="for" name="${index} IN [ @{ret_earfcn} ]">
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1: {u'fcnULs': [37900L], u'fcnDLs': [37900L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170808 10:40:10.848" level="INFO">${index.earfcn} = 37900</msg>
<status status="PASS" endtime="20170808 10:40:10.848" starttime="20170808 10:40:10.847"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.849" starttime="20170808 10:40:10.848"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170808 10:40:10.850" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170808 10:40:10.852" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170808 10:40:10.852" starttime="20170808 10:40:10.850"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170808 10:40:10.853" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.853" starttime="20170808 10:40:10.852"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170808 10:40:10.854" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.854" starttime="20170808 10:40:10.853"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170808 10:40:10.858" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170808 10:40:10.858" starttime="20170808 10:40:10.854"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170808 10:40:10.858" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170808 10:40:10.859" starttime="20170808 10:40:10.858"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.859" starttime="20170808 10:40:10.853"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.859" starttime="20170808 10:40:10.853"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.862" starttime="20170808 10:40:10.859"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170808 10:40:10.866" level="INFO">${bts_band} = 38</msg>
<status status="PASS" endtime="20170808 10:40:10.866" starttime="20170808 10:40:10.863"></status>
</kw>
<msg timestamp="20170808 10:40:10.866" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170808 10:40:10.866" starttime="20170808 10:40:10.849"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170808 10:40:10.867" level="INFO">${attach_band} = 38</msg>
<status status="PASS" endtime="20170808 10:40:10.867" starttime="20170808 10:40:10.866"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.867" starttime="20170808 10:40:10.867"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170808 10:40:10.868" level="INFO">${offset} = 1205</msg>
<status status="PASS" endtime="20170808 10:40:10.868" starttime="20170808 10:40:10.868"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170808 10:40:10.872" level="INFO">${freq} = 25850.0</msg>
<status status="PASS" endtime="20170808 10:40:10.872" starttime="20170808 10:40:10.868"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170808 10:40:10.872" level="INFO">${fq} = 25850</msg>
<status status="PASS" endtime="20170808 10:40:10.873" starttime="20170808 10:40:10.872"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170808 10:40:10.873" level="INFO">${freqency} = 25850</msg>
<status status="PASS" endtime="20170808 10:40:10.873" starttime="20170808 10:40:10.873"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.874" starttime="20170808 10:40:10.873"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.874" starttime="20170808 10:40:10.847"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [40740L], u'fcnDLs': [40740L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170808 10:40:10.875" level="INFO">${index.earfcn} = 40740</msg>
<status status="PASS" endtime="20170808 10:40:10.875" starttime="20170808 10:40:10.874"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.876" starttime="20170808 10:40:10.875"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170808 10:40:10.877" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170808 10:40:10.879" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170808 10:40:10.879" starttime="20170808 10:40:10.876"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170808 10:40:10.880" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.880" starttime="20170808 10:40:10.880"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170808 10:40:10.881" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.881" starttime="20170808 10:40:10.881"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170808 10:40:10.885" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170808 10:40:10.885" starttime="20170808 10:40:10.881"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.886" starttime="20170808 10:40:10.885"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.886" starttime="20170808 10:40:10.880"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170808 10:40:10.886" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.887" starttime="20170808 10:40:10.886"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170808 10:40:10.892" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170808 10:40:10.892" starttime="20170808 10:40:10.887"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.892" starttime="20170808 10:40:10.892"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.892" starttime="20170808 10:40:10.886"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170808 10:40:10.893" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.893" starttime="20170808 10:40:10.893"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170808 10:40:10.897" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170808 10:40:10.897" starttime="20170808 10:40:10.893"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.898" starttime="20170808 10:40:10.897"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.898" starttime="20170808 10:40:10.892"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170808 10:40:10.899" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.899" starttime="20170808 10:40:10.898"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170808 10:40:10.902" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170808 10:40:10.903" starttime="20170808 10:40:10.899"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170808 10:40:10.903" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170808 10:40:10.903" starttime="20170808 10:40:10.903"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.903" starttime="20170808 10:40:10.898"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.903" starttime="20170808 10:40:10.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.908" starttime="20170808 10:40:10.904"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170808 10:40:10.912" level="INFO">${bts_band} = 41</msg>
<status status="PASS" endtime="20170808 10:40:10.912" starttime="20170808 10:40:10.908"></status>
</kw>
<msg timestamp="20170808 10:40:10.912" level="INFO">${attach_band} = 41</msg>
<status status="PASS" endtime="20170808 10:40:10.912" starttime="20170808 10:40:10.876"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170808 10:40:10.913" level="INFO">${attach_band} = 41</msg>
<status status="PASS" endtime="20170808 10:40:10.913" starttime="20170808 10:40:10.912"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.913" starttime="20170808 10:40:10.913"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170808 10:40:10.914" level="INFO">${offset} = 1469</msg>
<status status="PASS" endtime="20170808 10:40:10.914" starttime="20170808 10:40:10.914"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170808 10:40:10.918" level="INFO">${freq} = 26050.0</msg>
<status status="PASS" endtime="20170808 10:40:10.919" starttime="20170808 10:40:10.914"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170808 10:40:10.919" level="INFO">${fq} = 26050</msg>
<status status="PASS" endtime="20170808 10:40:10.919" starttime="20170808 10:40:10.919"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170808 10:40:10.920" level="INFO">${freqency} = 26050</msg>
<status status="PASS" endtime="20170808 10:40:10.920" starttime="20170808 10:40:10.920"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.921" starttime="20170808 10:40:10.920"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.921" starttime="20170808 10:40:10.874"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-3/CARRIER_GROUP_L-1: {u'fcnULs': [40940L], u'fcnDLs': [40940L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-3/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170808 10:40:10.923" level="INFO">${index.earfcn} = 40940</msg>
<status status="PASS" endtime="20170808 10:40:10.923" starttime="20170808 10:40:10.922"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.924" starttime="20170808 10:40:10.923"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170808 10:40:10.925" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170808 10:40:10.928" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170808 10:40:10.929" starttime="20170808 10:40:10.925"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170808 10:40:10.929" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.929" starttime="20170808 10:40:10.929"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170808 10:40:10.931" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.931" starttime="20170808 10:40:10.930"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170808 10:40:10.934" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170808 10:40:10.934" starttime="20170808 10:40:10.931"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.935" starttime="20170808 10:40:10.935"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.935" starttime="20170808 10:40:10.930"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170808 10:40:10.936" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.936" starttime="20170808 10:40:10.935"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170808 10:40:10.941" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170808 10:40:10.941" starttime="20170808 10:40:10.936"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.941" starttime="20170808 10:40:10.941"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.941" starttime="20170808 10:40:10.935"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170808 10:40:10.943" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.943" starttime="20170808 10:40:10.942"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170808 10:40:10.946" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170808 10:40:10.946" starttime="20170808 10:40:10.943"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.947" starttime="20170808 10:40:10.947"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.947" starttime="20170808 10:40:10.941"></status>
</kw>
<kw type="foritem" name="${index} = 41">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170808 10:40:10.949" level="INFO">@{temp1} = [ 39650 | 41589 ]</msg>
<status status="PASS" endtime="20170808 10:40:10.950" starttime="20170808 10:40:10.948"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170808 10:40:10.953" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170808 10:40:10.954" starttime="20170808 10:40:10.950"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170808 10:40:10.954" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170808 10:40:10.954" starttime="20170808 10:40:10.954"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.954" starttime="20170808 10:40:10.947"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.954" starttime="20170808 10:40:10.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.959" starttime="20170808 10:40:10.955"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170808 10:40:10.963" level="INFO">${bts_band} = 41</msg>
<status status="PASS" endtime="20170808 10:40:10.963" starttime="20170808 10:40:10.960"></status>
</kw>
<msg timestamp="20170808 10:40:10.963" level="INFO">${attach_band} = 41</msg>
<status status="PASS" endtime="20170808 10:40:10.963" starttime="20170808 10:40:10.924"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170808 10:40:10.964" level="INFO">${attach_band} = 41</msg>
<status status="PASS" endtime="20170808 10:40:10.964" starttime="20170808 10:40:10.964"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.965" starttime="20170808 10:40:10.964"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170808 10:40:10.966" level="INFO">${offset} = 1469</msg>
<status status="PASS" endtime="20170808 10:40:10.966" starttime="20170808 10:40:10.965"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170808 10:40:10.970" level="INFO">${freq} = 26250.0</msg>
<status status="PASS" endtime="20170808 10:40:10.970" starttime="20170808 10:40:10.966"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170808 10:40:10.971" level="INFO">${fq} = 26250</msg>
<status status="PASS" endtime="20170808 10:40:10.971" starttime="20170808 10:40:10.970"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170808 10:40:10.971" level="INFO">${freqency} = 26250</msg>
<status status="PASS" endtime="20170808 10:40:10.971" starttime="20170808 10:40:10.971"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.972" starttime="20170808 10:40:10.972"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.972" starttime="20170808 10:40:10.921"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.972" starttime="20170808 10:40:10.846"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:10.972" starttime="20170808 10:40:10.173"></status>
</kw>
<msg timestamp="20170808 10:40:10.972" level="INFO">${earfcn_list2} = [u'37900', u'40740', u'40940']</msg>
<msg timestamp="20170808 10:40:10.973" level="INFO">${freqency_list2} = [u'25850', u'26050', u'26250']</msg>
<msg timestamp="20170808 10:40:10.973" level="INFO">${band_list2} = [u'38', u'41', u'41']</msg>
<status status="PASS" endtime="20170808 10:40:10.973" starttime="20170808 10:40:10.170"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${earfcn_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<assign>
<var>${earfcn_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.980" starttime="20170808 10:40:10.977"></status>
</kw>
<msg timestamp="20170808 10:40:10.981" level="INFO">${earfcn_list} = [u'37900', u'40740', u'40940']</msg>
<status status="PASS" endtime="20170808 10:40:10.981" starttime="20170808 10:40:10.973"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${freqency_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<assign>
<var>${freqency_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.988" starttime="20170808 10:40:10.985"></status>
</kw>
<msg timestamp="20170808 10:40:10.989" level="INFO">${freqency_list} = [u'25850', u'26050', u'26250']</msg>
<status status="PASS" endtime="20170808 10:40:10.989" starttime="20170808 10:40:10.981"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${band_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<assign>
<var>${band_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:10.996" starttime="20170808 10:40:10.992"></status>
</kw>
<msg timestamp="20170808 10:40:10.996" level="INFO">${band_list} = [u'38', u'41', u'41']</msg>
<status status="PASS" endtime="20170808 10:40:10.996" starttime="20170808 10:40:10.989"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170808 10:40:10.997" level="INFO">${cell_index1} = 0</msg>
<status status="PASS" endtime="20170808 10:40:10.997" starttime="20170808 10:40:10.996"></status>
</kw>
<kw type="for" name="${cell_index2} IN [ @{cell_list} ]">
<kw type="foritem" name="${cell_index2} = 1">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:11.005" starttime="20170808 10:40:11.001"></status>
</kw>
<msg timestamp="20170808 10:40:11.005" level="INFO">${cell_index} = 0</msg>
<status status="PASS" endtime="20170808 10:40:11.005" starttime="20170808 10:40:10.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:11.014" starttime="20170808 10:40:11.010"></status>
</kw>
<status status="PASS" endtime="20170808 10:40:11.014" starttime="20170808 10:40:11.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:40:11.018" starttime="20170808 10:40:11.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="TM500_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20170808 10:40:12.650" level="INFO">${TM500_PC_CONNECTION} = 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.049" level="INFO">[robot_func.py@29] Can't get variable '${TM500_PC_CONNECTION}' ! details: 'Variable '${TM500_PC_CONNECTION}' not found.'</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 


login:</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester

password:</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@246]  

*===============================================================
Welcome to Microsoft Telnet Server.
*===============================================================
C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8278 -s True</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8278 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 2236.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[process_control.py@74] Process start successed ! process id: 2236</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8278</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '28.43' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '28.27' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '28.1' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '27.93' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '27.77' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '27.6' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '27.43' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '27.27' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '27.1' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '26.93' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '26.77' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '26.6' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '26.43' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '26.27' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '26.1' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '25.93' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '25.77' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '25.6' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '25.43' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '25.27' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '25.1' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '24.93' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '24.77' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '24.6' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '24.43' mins. You are No.2 in 2 user queue. Plan use time before you is 15.0 mins
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '24.27' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '24.05' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '23.82' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '23.6' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '23.38' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '23.17' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '22.93' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '22.72' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '22.5' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '22.28' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '22.05' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '21.83' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '21.62' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '21.4' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '21.17' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '20.95' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '20.73' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '20.52' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.93' max '20.28' mins. You are No.1 in 2 user queue.
"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 2 user queue.

"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@412] Get TM500 resource success!</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"
FileZilla Server Interface.exe
FileZilla Server Interface.xml
FileZilla Server.xml
FileZilla server.exe
FzGSS.dll
Uninstall.exe
legal.htm
libeay32.dll
license.txt
readme.htm
ssleay32.dll

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\FileZilla server.xml"'</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\FileZilla server.xml"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [4 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@591] Prev msg: I: TMAE 0x2 Error - Raw Script Error: Cannot find C:\Documents and Settings\bts-tester\Desktop\Attach.txt</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1728] TM500 command to be sent: GSTS</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1728] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1728] TM500 command to be sent: GETR</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1728] TM500 command to be sent: STRT</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20170808 10:50:01.065" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<status status="PASS" endtime="20170808 10:50:01.065" starttime="20170808 10:40:11.026"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20170808 10:50:01.065" level="INFO">${TM500_Use_Tag} = used</msg>
<status status="PASS" endtime="20170808 10:50:01.065" starttime="20170808 10:50:01.065"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170808 10:50:05.137" level="INFO">$TA,C,020A*</msg>
<msg timestamp="20170808 10:50:05.137" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,020A*', Receive&lt;-'$TA,C,020A*'</msg>
<msg timestamp="20170808 10:50:05.137" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,020A*'
$TA,C,060A*</msg>
<msg timestamp="20170808 10:50:05.137" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,060A*', Receive&lt;-'$TA,C,060A*'</msg>
<msg timestamp="20170808 10:50:05.137" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,060A*'</msg>
<status status="PASS" endtime="20170808 10:50:05.137" starttime="20170808 10:50:01.065"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: GVER</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@507] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20170808 10:50:08.272" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20170808 10:50:08.272" starttime="20170808 10:50:05.137"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20170808 10:50:08.927" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20170808 10:50:08.927" level="INFO">[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170808_104923_session/170808_105013'</msg>
<msg timestamp="20170808 10:50:08.927" level="INFO">[tm500.py@1352] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170808_104923_session/170808_105013'</msg>
<msg timestamp="20170808 10:50:08.927" level="INFO">[tm500.py@1363] C:\TM500_LOG\170808_104923_session\170808_105013</msg>
<status status="PASS" endtime="20170808 10:50:08.927" starttime="20170808 10:50:08.272"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${modify_tm500_script}</var>
</assign>
<msg timestamp="20170808 10:50:08.927" level="INFO">${modify_tm500_script} = []</msg>
<status status="PASS" endtime="20170808 10:50:08.927" starttime="20170808 10:50:08.927"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${attach_freqency}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:50:08.927" starttime="20170808 10:50:08.927"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_scripts}</arg>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20170808 10:50:20.097" level="INFO">[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 25850</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">[tm500.py@1673] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x9BD9, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
  Selected PLMN: 26203F
  Pdn Id: 0
  EPS Bearer Id: 5
  Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs
  IPv4 Address: 172.170.59.59
  Attach Result: EPS Only
  Mode: PS 2
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0</msg>
<msg timestamp="20170808 10:50:20.097" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20170808 10:50:20.097" starttime="20170808 10:50:08.927"></status>
</kw>
<kw name="Tm500 Start Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword connects TM500 PPPoE connections by their names.</doc>
<msg timestamp="20170808 10:50:21.641" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<msg timestamp="20170808 10:50:21.641" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:21.641" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500</msg>
<msg timestamp="20170808 10:50:21.641" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170808 10:50:21.641" level="INFO">[tm500.py@1302] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\Documents and Settings\bts-tester&gt;</msg>
<status status="PASS" endtime="20170808 10:50:21.641" starttime="20170808 10:50:20.097"></status>
</kw>
<kw name="TM500 Log Stop And Fetch" library="ue_resource">
<doc>TM500: stop logging, convert log to csv format, copy logs to local PC.</doc>
<arguments>
<arg>tm500_attach_log${cell_id}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:50:21.657" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<status status="PASS" endtime="20170808 10:50:21.657" starttime="20170808 10:50:21.657"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<msg timestamp="20170808 10:50:21.657" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\tm500_attach_log1"&gt;D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\tm500_attach_log1&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170808 10:50:21.657" starttime="20170808 10:50:21.657"></status>
</kw>
<kw name="Tm500 Stop Logging" library="tdd_ev_robotws">
<doc>This keyword stops TM500's logging.</doc>
<assign>
<var>${log_folder_path_on_tm500_pc}</var>
</assign>
<msg timestamp="20170808 10:50:22.297" level="INFO">[tm500.py@1376] Prev msg: I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0
  De Id: 8
  EPS Bearer Id: 5
  PDN IP Address String: 172.170.59.59

I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x37A8, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0</msg>
<msg timestamp="20170808 10:50:22.297" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$STOP_LOGGING</msg>
<msg timestamp="20170808 10:50:22.297" level="INFO">[tm500.py@1736] TM500 command reply: C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170808 10:50:22.297" level="INFO">[tm500.py@1387] TM500 command line response of "STOP LOGGING":
C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170808 10:50:22.297" level="INFO">[tm500.py@1391] TM500 stop logging succeeded.</msg>
<msg timestamp="20170808 10:50:22.297" level="INFO">${log_folder_path_on_tm500_pc} = C:\TM500_LOG\170808_104923_session\170808_105013</msg>
<status status="PASS" endtime="20170808 10:50:22.297" starttime="20170808 10:50:21.657"></status>
</kw>
<kw name="Tm500 Convert Log" library="tdd_ev_robotws">
<doc>This keyword converts TM500 log to csv format files.</doc>
<arguments>
<arg>timeout=${log_convertion_timeout}</arg>
</arguments>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1736] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_TO_TEXT 0</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 44%</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 100%

C: CONVERT_TO_TEXT 0x00 ok.</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\170808_104923_session\170808_105013"</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_COMMAND_LOG started</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1487] I: CONVERT_COMMAND_LOG progress= 8%
I: CONVERT_COMMAND_LOG progress= 17%
I: CONVERT_COMMAND_LOG progress= 26%
I: CONVERT_COMMAND_LOG progress= 34%
I: CONVERT_COMMAND_LOG progress= 43%
I: CONVERT_COMMAND_LOG progress= 52%
I: CONVERT_COMMAND_LOG progress= 60%
I: CONVERT_COMMAND_LOG progress= 69%
I: CONVERT_COMMAND_LOG progress= 78%
I: CONVERT_COMMAND_LOG progress= 87%
I: CONVERT_COMMAND_LOG progress= 95%
C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\170808_104923_SESSION\170808_105013\170808_104923_session_command_log.csv</msg>
<msg timestamp="20170808 10:50:34.418" level="INFO">[tm500.py@1492] TM500 convert log succeeded.</msg>
<status status="PASS" endtime="20170808 10:50:34.418" starttime="20170808 10:50:22.297"></status>
</kw>
<kw name="Tm500 Log Fetch" library="ue_resource">
<doc>TM500 Log fetching.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:50:34.434" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<status status="PASS" endtime="20170808 10:50:34.434" starttime="20170808 10:50:34.418"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170808 10:50:34.434" starttime="20170808 10:50:34.434"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cd /D "${log_folder_path_on_tm500_pc}"</arg>
</arguments>
<msg timestamp="20170808 10:50:35.744" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:35.744" level="INFO">[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\170808_104923_session\170808_105013"</msg>
<msg timestamp="20170808 10:50:35.744" level="INFO">[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\170808_104923_session\170808_105013"

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<status status="PASS" endtime="20170808 10:50:35.744" starttime="20170808 10:50:34.434"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cp ../*ommand*og*.txt session_command_log.txt</arg>
</arguments>
<msg timestamp="20170808 10:50:37.086" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:37.086" level="INFO">[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt</msg>
<msg timestamp="20170808 10:50:37.086" level="INFO">[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt
cp: cannot stat `../*ommand*og*.txt': No such file or directory

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<status status="PASS" endtime="20170808 10:50:37.086" starttime="20170808 10:50:35.744"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>chmod 777 -R *</arg>
</arguments>
<msg timestamp="20170808 10:50:38.412" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:38.412" level="INFO">[telnet_common.py@276] Execute command: chmod 777 -R *</msg>
<msg timestamp="20170808 10:50:38.412" level="INFO">[telnet_common.py@306] Get Response: chmod 777 -R *

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<status status="PASS" endtime="20170808 10:50:38.412" starttime="20170808 10:50:37.086"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zcvf tm500_log.tar *.*</arg>
</arguments>
<status status="PASS" endtime="20170808 10:50:38.412" starttime="20170808 10:50:38.412"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>:\\</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${driver_log_folder}</var>
</assign>
<msg timestamp="20170808 10:50:38.412" level="INFO">${driver_log_folder} = [u'C', u'TM500_LOG\\170808_104923_session\\170808_105013']</msg>
<status status="PASS" endtime="20170808 10:50:38.412" starttime="20170808 10:50:38.412"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${TM500_PC_INFO.IP}</arg>
<arg>21</arg>
<arg>TA_LOG</arg>
<arg>${None}</arg>
<arg>${log_folder_path_on_local_pc}</arg>
<arg>ALL</arg>
<arg>${driver_log_folder[1]}</arg>
</arguments>
<msg timestamp="20170808 10:50:38.739" level="INFO">[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.</msg>
<msg timestamp="20170808 10:50:38.739" level="INFO">[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta
220-written by Tim Kosse (Tim.Kosse@gmx.de)
220 Please visit http://sourceforge.net/projects/filezilla/</msg>
<status status="PASS" endtime="20170808 10:50:38.739" starttime="20170808 10:50:38.412"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:50:38.739" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<status status="PASS" endtime="20170808 10:50:38.739" starttime="20170808 10:50:38.739"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>cd /D "${log_folder_path_on_local_pc}"</arg>
</arguments>
<status status="PASS" endtime="20170808 10:50:38.755" starttime="20170808 10:50:38.739"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170808 10:50:38.755" starttime="20170808 10:50:38.755"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>chmod 777 -R *</arg>
</arguments>
<status status="PASS" endtime="20170808 10:50:38.755" starttime="20170808 10:50:38.755"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${unzip_result}</arg>
<arg>Run keyword and ignore error</arg>
<arg>Unzip file</arg>
<arg>tm500_log.tar</arg>
<arg>${log_folder_path_on_local_pc}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:50:38.755" starttime="20170808 10:50:38.755"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword if</arg>
<arg>'${unzip_result[0]}' == 'FAIL'</arg>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170808 10:50:38.755" starttime="20170808 10:50:38.755"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>remove file</arg>
<arg>${log_folder_path_on_local_pc}/tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170808 10:50:38.755" starttime="20170808 10:50:38.755"></status>
</kw>
<status status="PASS" endtime="20170808 10:50:38.755" starttime="20170808 10:50:34.418"></status>
</kw>
<status status="PASS" endtime="20170808 10:50:38.755" starttime="20170808 10:50:21.657"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ue_attach_ip}</arg>
<arg>${tm500_attach_result.UE0}</arg>
</arguments>
<msg timestamp="20170808 10:50:38.755" level="INFO">${ue_attach_ip} = 172.170.59.59</msg>
<status status="PASS" endtime="20170808 10:50:38.755" starttime="20170808 10:50:38.755"></status>
</kw>
<status status="PASS" endtime="20170808 10:50:38.755" starttime="20170808 10:40:11.025"></status>
</kw>
<status status="PASS" endtime="20170808 10:50:38.755" starttime="20170808 10:40:11.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:50:38.755" starttime="20170808 10:50:38.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="TM500_Detach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:50:38.770" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<status status="PASS" endtime="20170808 10:50:38.770" starttime="20170808 10:50:38.770"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170808 10:50:40.112" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:50:40.112" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170808 10:50:40.112" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170808 10:50:40.112" starttime="20170808 10:50:38.770"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:50:40.112" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<status status="PASS" endtime="20170808 10:50:40.112" starttime="20170808 10:50:40.112"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170808 10:50:41.500" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:41.500" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170808 10:50:41.500" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<status status="PASS" endtime="20170808 10:50:41.500" starttime="20170808 10:50:40.112"></status>
</kw>
<kw name="Tm500 Stop Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword disconnects TM500 PPPoE connection by PPPoE name.</doc>
<msg timestamp="20170808 10:50:42.873" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<msg timestamp="20170808 10:50:42.873" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:50:42.873" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT</msg>
<msg timestamp="20170808 10:50:42.873" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<msg timestamp="20170808 10:50:42.873" level="INFO">[tm500.py@1321] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<status status="PASS" endtime="20170808 10:50:42.873" starttime="20170808 10:50:41.500"></status>
</kw>
<kw name="Tm500 Detach" library="tdd_ev_robotws">
<doc>This keyword does UE detach operation of TM500.</doc>
<msg timestamp="20170808 10:50:42.967" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170808 10:50:42.967" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Suitable
I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0

C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170808 10:50:42.967" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte NasConfigEmmDeregister 0</msg>
<msg timestamp="20170808 10:50:42.967" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:50:42.967" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170808 10:50:42.967" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170808 10:50:42.967" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte Activate -1</msg>
<msg timestamp="20170808 10:50:42.967" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<status status="PASS" endtime="20170808 10:50:42.967" starttime="20170808 10:50:42.873"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:50:42.982" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<status status="PASS" endtime="20170808 10:50:42.982" starttime="20170808 10:50:42.967"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170808 10:50:47.070" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170808 10:50:47.070" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170808 10:50:47.070" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170808 10:50:47.070" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170808 10:50:47.070" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170808 10:50:47.070" starttime="20170808 10:50:42.982"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170808 10:51:04.417" level="INFO">[tm500.py@591] Prev msg: I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 25850)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0xD377, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0
    Detach Cause: UE Initiated 

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: -
   New Cell Info:
      Cell Id: 196 DL Freq: 25850 Cell Type: Acceptable</msg>
<msg timestamp="20170808 10:51:04.417" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170808 10:51:04.417" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170808 10:51:04.417" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8278 stopping</msg>
<status status="PASS" endtime="20170808 10:51:04.417" starttime="20170808 10:50:47.070"></status>
</kw>
<status status="PASS" endtime="20170808 10:51:04.417" starttime="20170808 10:50:38.770"></status>
</kw>
<status status="PASS" endtime="20170808 10:51:04.417" starttime="20170808 10:50:38.755"></status>
</kw>
<status status="PASS" endtime="20170808 10:51:04.417" starttime="20170808 10:50:38.755"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index1}+1</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170808 10:51:04.417" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170808 10:51:04.417" starttime="20170808 10:51:04.417"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${cell_index1}</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170808 10:51:04.417" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170808 10:51:04.417" starttime="20170808 10:51:04.417"></status>
</kw>
<status status="PASS" endtime="20170808 10:51:04.417" starttime="20170808 10:40:10.997"></status>
</kw>
<kw type="foritem" name="${cell_index2} = 2">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20170808 10:51:04.417" starttime="20170808 10:51:04.417"></status>
</kw>
<msg timestamp="20170808 10:51:04.417" level="INFO">${cell_index} = 1</msg>
<status status="PASS" endtime="20170808 10:51:04.417" starttime="20170808 10:51:04.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20170808 10:51:04.432" starttime="20170808 10:51:04.432"></status>
</kw>
<status status="PASS" endtime="20170808 10:51:04.432" starttime="20170808 10:51:04.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:51:04.432" starttime="20170808 10:51:04.432"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="TM500_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20170808 10:54:49.042" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8271 -s True</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8271 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 3952.

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[process_control.py@74] Process start successed ! process id: 3952</msg>
<msg timestamp="20170808 10:54:49.042" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8271</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '14.67' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '14.43' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '14.22' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '14.0' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '13.77' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '13.55' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '13.33' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '13.12' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '12.88' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Sorry '10.56.6.32'. Pls waiting '10.56.78.205' max '12.67' mins. You are No.1 in 1 user queue.
"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@408] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 1 user queue.

"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@412] Get TM500 resource success!</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"
FileZilla Server Interface.exe
FileZilla Server Interface.xml
FileZilla Server.xml
FileZilla server.exe
FzGSS.dll
Uninstall.exe
legal.htm
libeay32.dll
license.txt
readme.htm
ssleay32.dll

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\FileZilla server.xml"'</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\FileZilla server.xml"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@591] Prev msg: I: TMAE 0x2 Error - Raw Script Error: Cannot find C:\Documents and Settings\bts-tester\Desktop\Attach.txt</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1728] TM500 command to be sent: GSTS</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1728] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1728] TM500 command to be sent: GETR</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1728] TM500 command to be sent: STRT</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<msg timestamp="20170808 10:54:49.057" level="INFO">Traceback (most recent call last):
  File "D:\TA\trunk_soam\tdd_ev_robotws\CommonLib\connections\connection_mgr.py", line 252, in execute_shell_command
    raise e
RuntimeError: Execute failed with return code: 1</msg>
<status status="PASS" endtime="20170808 10:54:49.057" starttime="20170808 10:51:04.432"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20170808 10:54:49.057" level="INFO">${TM500_Use_Tag} = used</msg>
<status status="PASS" endtime="20170808 10:54:49.057" starttime="20170808 10:54:49.057"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170808 10:54:53.129" level="INFO">$TA,C,020A*</msg>
<msg timestamp="20170808 10:54:53.129" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,020A*', Receive&lt;-'$TA,C,020A*'</msg>
<msg timestamp="20170808 10:54:53.129" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,020A*'
$TA,C,060A*</msg>
<msg timestamp="20170808 10:54:53.129" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,060A*', Receive&lt;-'$TA,C,060A*'</msg>
<msg timestamp="20170808 10:54:53.144" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,060A*'</msg>
<status status="PASS" endtime="20170808 10:54:53.144" starttime="20170808 10:54:49.057"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: GVER</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@507] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20170808 10:54:56.966" level="INFO">[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20170808 10:54:56.966" starttime="20170808 10:54:53.144"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20170808 10:54:57.746" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20170808 10:54:57.746" level="INFO">[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170808_105410_session/170808_105502'</msg>
<msg timestamp="20170808 10:54:57.746" level="INFO">[tm500.py@1352] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170808_105410_session/170808_105502'</msg>
<msg timestamp="20170808 10:54:57.746" level="INFO">[tm500.py@1363] C:\TM500_LOG\170808_105410_session\170808_105502</msg>
<status status="PASS" endtime="20170808 10:54:57.762" starttime="20170808 10:54:56.966"></status>
</kw>
<kw name="Convert To List" library="Collections">
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${modify_tm500_script}</var>
</assign>
<msg timestamp="20170808 10:54:57.762" level="INFO">${modify_tm500_script} = []</msg>
<status status="PASS" endtime="20170808 10:54:57.762" starttime="20170808 10:54:57.762"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${modify_tm500_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${attach_freqency}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:54:57.762" starttime="20170808 10:54:57.762"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_scripts}</arg>
<arg>${modify_tm500_script}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20170808 10:55:09.072" level="INFO">[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 26050</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">[tm500.py@1673] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 197 DL Freq: 26050 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 197, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x9BD9, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
  Selected PLMN: 26203F
  Pdn Id: 0
  EPS Bearer Id: 5
  Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs
  IPv4 Address: 172.170.43.33
  Attach Result: EPS Only
  Mode: PS 2
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0</msg>
<msg timestamp="20170808 10:55:09.072" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20170808 10:55:09.072" starttime="20170808 10:54:57.762"></status>
</kw>
<kw name="Tm500 Start Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword connects TM500 PPPoE connections by their names.</doc>
<msg timestamp="20170808 10:55:10.710" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<msg timestamp="20170808 10:55:10.710" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:55:10.710" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500</msg>
<msg timestamp="20170808 10:55:10.710" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<msg timestamp="20170808 10:55:10.710" level="INFO">[tm500.py@1302] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\TM500_log\170808_104923_session\170808_105013&gt;</msg>
<status status="PASS" endtime="20170808 10:55:10.710" starttime="20170808 10:55:09.072"></status>
</kw>
<kw name="TM500 Log Stop And Fetch" library="ue_resource">
<doc>TM500: stop logging, convert log to csv format, copy logs to local PC.</doc>
<arguments>
<arg>tm500_attach_log${cell_id}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:55:10.726" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<status status="PASS" endtime="20170808 10:55:10.726" starttime="20170808 10:55:10.710"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<msg timestamp="20170808 10:55:10.726" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\tm500_attach_log2"&gt;D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\tm500_attach_log2&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170808 10:55:10.726" starttime="20170808 10:55:10.726"></status>
</kw>
<kw name="Tm500 Stop Logging" library="tdd_ev_robotws">
<doc>This keyword stops TM500's logging.</doc>
<assign>
<var>${log_folder_path_on_tm500_pc}</var>
</assign>
<msg timestamp="20170808 10:55:11.365" level="INFO">[tm500.py@1376] Prev msg: I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 197 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 197 DL Freq: 26050 Cell Type: Suitable
I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0
  De Id: 8
  EPS Bearer Id: 5
  PDN IP Address String: 172.170.43.33

I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 197, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x37A8, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0</msg>
<msg timestamp="20170808 10:55:11.365" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$STOP_LOGGING</msg>
<msg timestamp="20170808 10:55:11.365" level="INFO">[tm500.py@1736] TM500 command reply: C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170808 10:55:11.365" level="INFO">[tm500.py@1387] TM500 command line response of "STOP LOGGING":
C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170808 10:55:11.365" level="INFO">[tm500.py@1391] TM500 stop logging succeeded.</msg>
<msg timestamp="20170808 10:55:11.365" level="INFO">${log_folder_path_on_tm500_pc} = C:\TM500_LOG\170808_105410_session\170808_105502</msg>
<status status="PASS" endtime="20170808 10:55:11.365" starttime="20170808 10:55:10.726"></status>
</kw>
<kw name="Tm500 Convert Log" library="tdd_ev_robotws">
<doc>This keyword converts TM500 log to csv format files.</doc>
<arguments>
<arg>timeout=${log_convertion_timeout}</arg>
</arguments>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1736] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_TO_TEXT 0</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%

I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 44%</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 100%

C: CONVERT_TO_TEXT 0x00 ok.</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\170808_105410_session\170808_105502"</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1736] TM500 command reply: I: CONVERT_COMMAND_LOG started</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1487] I: CONVERT_COMMAND_LOG progress= 7%
I: CONVERT_COMMAND_LOG progress= 15%
I: CONVERT_COMMAND_LOG progress= 23%
I: CONVERT_COMMAND_LOG progress= 31%
I: CONVERT_COMMAND_LOG progress= 39%
I: CONVERT_COMMAND_LOG progress= 47%
I: CONVERT_COMMAND_LOG progress= 55%
I: CONVERT_COMMAND_LOG progress= 62%
I: CONVERT_COMMAND_LOG progress= 70%
I: CONVERT_COMMAND_LOG progress= 78%
I: CONVERT_COMMAND_LOG progress= 86%
I: CONVERT_COMMAND_LOG progress= 94%
C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\170808_105410_SESSION\170808_105502\170808_105410_session_command_log.csv</msg>
<msg timestamp="20170808 10:55:25.561" level="INFO">[tm500.py@1492] TM500 convert log succeeded.</msg>
<status status="PASS" endtime="20170808 10:55:25.561" starttime="20170808 10:55:11.365"></status>
</kw>
<kw name="Tm500 Log Fetch" library="ue_resource">
<doc>TM500 Log fetching.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:55:25.577" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<status status="PASS" endtime="20170808 10:55:25.577" starttime="20170808 10:55:25.561"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:25.577" starttime="20170808 10:55:25.577"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cd /D "${log_folder_path_on_tm500_pc}"</arg>
</arguments>
<msg timestamp="20170808 10:55:26.887" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:55:26.887" level="INFO">[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\170808_105410_session\170808_105502"</msg>
<msg timestamp="20170808 10:55:26.887" level="INFO">[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\170808_105410_session\170808_105502"

C:\TM500_log\170808_105410_session\170808_105502&gt;</msg>
<status status="PASS" endtime="20170808 10:55:26.887" starttime="20170808 10:55:25.577"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cp ../*ommand*og*.txt session_command_log.txt</arg>
</arguments>
<msg timestamp="20170808 10:55:28.213" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:55:28.213" level="INFO">[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt</msg>
<msg timestamp="20170808 10:55:28.213" level="INFO">[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt
cp: cannot stat `../*ommand*og*.txt': No such file or directory

C:\TM500_log\170808_105410_session\170808_105502&gt;</msg>
<status status="PASS" endtime="20170808 10:55:28.213" starttime="20170808 10:55:26.887"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>chmod 777 -R *</arg>
</arguments>
<msg timestamp="20170808 10:55:29.539" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:55:29.539" level="INFO">[telnet_common.py@276] Execute command: chmod 777 -R *</msg>
<msg timestamp="20170808 10:55:29.539" level="INFO">[telnet_common.py@306] Get Response: chmod 777 -R *

C:\TM500_log\170808_105410_session\170808_105502&gt;</msg>
<status status="PASS" endtime="20170808 10:55:29.539" starttime="20170808 10:55:28.213"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zcvf tm500_log.tar *.*</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:29.539" starttime="20170808 10:55:29.539"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>:\\</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${driver_log_folder}</var>
</assign>
<msg timestamp="20170808 10:55:29.539" level="INFO">${driver_log_folder} = [u'C', u'TM500_LOG\\170808_105410_session\\170808_105502']</msg>
<status status="PASS" endtime="20170808 10:55:29.539" starttime="20170808 10:55:29.539"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${TM500_PC_INFO.IP}</arg>
<arg>21</arg>
<arg>TA_LOG</arg>
<arg>${None}</arg>
<arg>${log_folder_path_on_local_pc}</arg>
<arg>ALL</arg>
<arg>${driver_log_folder[1]}</arg>
</arguments>
<msg timestamp="20170808 10:55:29.929" level="INFO">[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.</msg>
<msg timestamp="20170808 10:55:29.929" level="INFO">[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta
220-written by Tim Kosse (Tim.Kosse@gmx.de)
220 Please visit http://sourceforge.net/projects/filezilla/</msg>
<status status="PASS" endtime="20170808 10:55:29.929" starttime="20170808 10:55:29.539"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:55:29.929" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<status status="PASS" endtime="20170808 10:55:29.929" starttime="20170808 10:55:29.929"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>cd /D "${log_folder_path_on_local_pc}"</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:29.929" starttime="20170808 10:55:29.929"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:29.929" starttime="20170808 10:55:29.929"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>chmod 777 -R *</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:29.929" starttime="20170808 10:55:29.929"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${unzip_result}</arg>
<arg>Run keyword and ignore error</arg>
<arg>Unzip file</arg>
<arg>tm500_log.tar</arg>
<arg>${log_folder_path_on_local_pc}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:29.929" starttime="20170808 10:55:29.929"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword if</arg>
<arg>'${unzip_result[0]}' == 'FAIL'</arg>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:29.929" starttime="20170808 10:55:29.929"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>remove file</arg>
<arg>${log_folder_path_on_local_pc}/tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:29.929" starttime="20170808 10:55:29.929"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:29.929" starttime="20170808 10:55:25.561"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:29.929" starttime="20170808 10:55:10.710"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ue_attach_ip}</arg>
<arg>${tm500_attach_result.UE0}</arg>
</arguments>
<msg timestamp="20170808 10:55:29.945" level="INFO">${ue_attach_ip} = 172.170.43.33</msg>
<status status="PASS" endtime="20170808 10:55:29.945" starttime="20170808 10:55:29.929"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:29.945" starttime="20170808 10:51:04.432"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:29.945" starttime="20170808 10:51:04.432"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:29.945" starttime="20170808 10:55:29.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="TM500_Detach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:55:29.960" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<status status="PASS" endtime="20170808 10:55:29.960" starttime="20170808 10:55:29.945"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170808 10:55:31.302" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;</msg>
<msg timestamp="20170808 10:55:31.302" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170808 10:55:31.302" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170808 10:55:31.302" starttime="20170808 10:55:29.960"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:55:31.302" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<status status="PASS" endtime="20170808 10:55:31.302" starttime="20170808 10:55:31.302"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170808 10:55:32.706" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:55:32.706" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170808 10:55:32.706" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\TM500_log\170808_105410_session\170808_105502&gt;</msg>
<status status="PASS" endtime="20170808 10:55:32.706" starttime="20170808 10:55:31.302"></status>
</kw>
<kw name="Tm500 Stop Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword disconnects TM500 PPPoE connection by PPPoE name.</doc>
<msg timestamp="20170808 10:55:34.094" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;.</msg>
<msg timestamp="20170808 10:55:34.094" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x04A991E8&gt;</msg>
<msg timestamp="20170808 10:55:34.094" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT</msg>
<msg timestamp="20170808 10:55:34.094" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170808_105410_session\170808_105502&gt;</msg>
<msg timestamp="20170808 10:55:34.094" level="INFO">[tm500.py@1321] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170808_105410_session\170808_105502&gt;</msg>
<status status="PASS" endtime="20170808 10:55:34.094" starttime="20170808 10:55:32.706"></status>
</kw>
<kw name="Tm500 Detach" library="tdd_ev_robotws">
<doc>This keyword does UE detach operation of TM500.</doc>
<msg timestamp="20170808 10:55:34.235" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170808 10:55:34.235" level="INFO">[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 197 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 197 DL Freq: 26050 Cell Type: Suitable
I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0

C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170808 10:55:34.235" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte NasConfigEmmDeregister 0</msg>
<msg timestamp="20170808 10:55:34.235" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170808 10:55:34.235" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170808 10:55:34.235" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170808 10:55:34.235" level="INFO">[tm500.py@1728] TM500 command to be sent: forw mte Activate -1</msg>
<msg timestamp="20170808 10:55:34.235" level="INFO">[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<status status="PASS" endtime="20170808 10:55:34.235" starttime="20170808 10:55:34.094"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:55:34.235" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<status status="PASS" endtime="20170808 10:55:34.235" starttime="20170808 10:55:34.235"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170808 10:55:38.322" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170808 10:55:38.322" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170808 10:55:38.322" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170808 10:55:38.322" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170808 10:55:38.322" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170808 10:55:38.322" starttime="20170808 10:55:34.235"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170808 10:55:55.747" level="INFO">[tm500.py@591] Prev msg: I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 197, Dl Freq 26050)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0xD377, TimingAdv: 1, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0
    Detach Cause: UE Initiated 

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 197 DL Freq: 26050 Cell Type: -
   New Cell Info:
      Cell Id: 197 DL Freq: 26050 Cell Type: Acceptable</msg>
<msg timestamp="20170808 10:55:55.747" level="INFO">[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170808 10:55:55.747" level="INFO">[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170808 10:55:55.747" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8271 stopping</msg>
<status status="PASS" endtime="20170808 10:55:55.747" starttime="20170808 10:55:38.322"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:55.747" starttime="20170808 10:55:29.945"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:55.747" starttime="20170808 10:55:29.945"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:55.747" starttime="20170808 10:55:29.945"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index1}+1</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170808 10:55:55.747" level="INFO">${cell_index1} = 2</msg>
<status status="PASS" endtime="20170808 10:55:55.747" starttime="20170808 10:55:55.747"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${cell_index1}</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170808 10:55:55.747" level="INFO">${cell_index1} = 2</msg>
<status status="PASS" endtime="20170808 10:55:55.747" starttime="20170808 10:55:55.747"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:55.747" starttime="20170808 10:51:04.417"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:55.747" starttime="20170808 10:40:10.997"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:55.747" starttime="20170808 10:40:10.160"></status>
</kw>
<kw name="Stop Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<status status="PASS" endtime="20170808 10:55:55.763" starttime="20170808 10:55:55.747"></status>
</kw>
<kw name="Save Infomodel Log" library="tdd_ev_robotws">
<doc>Save InfoModel log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\im_attach_${num}</arg>
</arguments>
<msg timestamp="20170808 10:55:55.763" level="INFO">[infomodel_control.py@214] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20170808103331\ev_logs\FZHR_Operational_RF_block_unblock_20170808103335\FZQE_Operational_RF_Block_Unblock\im_attach_0' succeed .</msg>
<status status="PASS" endtime="20170808 10:55:55.778" starttime="20170808 10:55:55.763"></status>
</kw>
<kw name="Stop Infomodel" library="tdd_ev_robotws">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20170808 10:55:56.480" level="INFO">[infomodel_control.py@186] stop infomodel logger succeed .</msg>
<msg timestamp="20170808 10:55:56.480" level="INFO">[infomodel_control.py@198] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170808 10:55:56.480" starttime="20170808 10:55:55.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${num}</arg>
</arguments>
<msg timestamp="20170808 10:55:56.480" level="INFO">0</msg>
<status status="PASS" endtime="20170808 10:55:56.480" starttime="20170808 10:55:56.480"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:56.480" starttime="20170808 10:35:07.171"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:56.480" starttime="20170808 10:35:07.171"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:56.480" starttime="20170808 10:35:07.170"></status>
</kw>
<kw type="teardown" name="Test_Tear_Down_Action" library="SISO1 Resource">
<doc>Action when case finishs</doc>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170808 10:55:56.480" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x058E6CD8&gt;.</msg>
<status status="PASS" endtime="20170808 10:55:56.480" starttime="20170808 10:55:56.480"></status>
</kw>
<kw name="Kill Qtp Process" library="tdd_ev_robotws">
<doc>This keyword is used to kill the processes related to QTP application.</doc>
<msg timestamp="20170808 10:55:57.011" level="INFO">Start to kill QTP process.
Finshed to kill QTP process.</msg>
<status status="PASS" endtime="20170808 10:55:57.011" starttime="20170808 10:55:56.480"></status>
</kw>
<kw name="Stop Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<msg timestamp="20170808 10:55:57.011" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'</msg>
<status status="PASS" endtime="20170808 10:55:57.011" starttime="20170808 10:55:57.011"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${case_execute_log_name}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:57.011" starttime="20170808 10:55:57.011"></status>
</kw>
<msg timestamp="20170808 10:55:57.011" level="INFO">${return} = ('PASS', None)</msg>
<status status="PASS" endtime="20170808 10:55:57.011" starttime="20170808 10:55:57.011"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Save Infomodel Log" library="tdd_ev_robotws">
<doc>Save InfoModel log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20170808 10:55:57.026" level="FAIL">AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<status status="FAIL" endtime="20170808 10:55:57.026" starttime="20170808 10:55:57.011"></status>
</kw>
<status status="FAIL" endtime="20170808 10:55:57.026" starttime="20170808 10:55:57.011"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:57.026" starttime="20170808 10:55:57.011"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Stop Infomodel" library="tdd_ev_robotws">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20170808 10:55:57.479" level="INFO">[infomodel_control.py@188] stop infomodel logger failed, details: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<msg timestamp="20170808 10:55:57.479" level="INFO">[infomodel_control.py@192] disconnect from infomodel failed, details: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<msg timestamp="20170808 10:55:57.479" level="INFO">[infomodel_control.py@198] stop infomodel succeed .</msg>
<msg timestamp="20170808 10:55:57.479" level="FAIL">AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<status status="FAIL" endtime="20170808 10:55:57.479" starttime="20170808 10:55:57.026"></status>
</kw>
<status status="FAIL" endtime="20170808 10:55:57.479" starttime="20170808 10:55:57.026"></status>
</kw>
<status status="PASS" endtime="20170808 10:55:57.479" starttime="20170808 10:55:57.026"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Release_TM500_And_Colse_PA_Port</arg>
</arguments>
<kw name="Release_TM500_And_Colse_PA_Port" library="SISO1 Resource">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${return}</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Variable Should Exist</arg>
<arg>${TM500_Use_Tag}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:57.479" starttime="20170808 10:55:57.479"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Use_Tag}'=='used'</arg>
<arg>Set Attenuators Off</arg>
<arg>${ATT_ALL_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:57.479" starttime="20170808 10:55:57.479"></status>
</kw>
<kw name="Set_Allcells_Attenuation_Off" library="SISO1 Resource">
<kw type="for" name="${index} IN RANGE [ 1 | 10 ]">
<kw type="foritem" name="${index} = 1">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:57.479" starttime="20170808 10:55:57.479"></status>
</kw>
<msg timestamp="20170808 10:55:57.479" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170808 10:55:57.479" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170808 10:55:57.479" starttime="20170808 10:55:57.479"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170808 10:55:57.494" starttime="20170808 10:55:57.479"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170808 10:56:01.550" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170808 10:56:01.550" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170808 10:56:01.550" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170808 10:56:01.550" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170808 10:56:01.550" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170808 10:56:01.550" starttime="20170808 10:55:57.494"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:01.550" starttime="20170808 10:55:57.479"></status>
</kw>
<kw type="foritem" name="${index} = 2">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:01.566" starttime="20170808 10:56:01.550"></status>
</kw>
<msg timestamp="20170808 10:56:01.566" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170808 10:56:01.566" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170808 10:56:01.566" starttime="20170808 10:56:01.550"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:01.566" starttime="20170808 10:56:01.566"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170808 10:56:05.622" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170808 10:56:05.622" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170808 10:56:05.622" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170808 10:56:05.622" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170808 10:56:05.622" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170808 10:56:05.622" starttime="20170808 10:56:01.566"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:05.622" starttime="20170808 10:56:01.550"></status>
</kw>
<kw type="foritem" name="${index} = 3">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:05.638" starttime="20170808 10:56:05.638"></status>
</kw>
<msg timestamp="20170808 10:56:05.638" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170808 10:56:05.638" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170808 10:56:05.638" starttime="20170808 10:56:05.622"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:05.638" starttime="20170808 10:56:05.638"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170808 10:56:09.694" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170808 10:56:09.694" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170808 10:56:09.694" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170808 10:56:09.694" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170808 10:56:09.694" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170808 10:56:09.694" starttime="20170808 10:56:05.638"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:09.694" starttime="20170808 10:56:05.622"></status>
</kw>
<kw type="foritem" name="${index} = 4">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170808 10:56:09.709" level="FAIL">Variable ${CELL4_ATT_INFO} does not exist.</msg>
<status status="FAIL" endtime="20170808 10:56:09.709" starttime="20170808 10:56:09.694"></status>
</kw>
<msg timestamp="20170808 10:56:09.709" level="INFO">${ret1} = FAIL</msg>
<msg timestamp="20170808 10:56:09.709" level="INFO">${ret2} = Variable ${CELL4_ATT_INFO} does not exist.</msg>
<status status="PASS" endtime="20170808 10:56:09.709" starttime="20170808 10:56:09.694"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<msg timestamp="20170808 10:56:09.709" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170808 10:56:09.709" starttime="20170808 10:56:09.709"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:09.709" starttime="20170808 10:56:09.694"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:09.709" starttime="20170808 10:55:57.479"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:09.709" starttime="20170808 10:55:57.479"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170808 10:56:14.717" level="INFO">[tm500.py@437] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "10.56.6.32"</msg>
<status status="PASS" endtime="20170808 10:56:14.717" starttime="20170808 10:56:09.709"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Test Variable</arg>
<arg>${TM500_Use_Tag}</arg>
<arg>unused</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:14.717" starttime="20170808 10:56:14.717"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:14.717" starttime="20170808 10:55:57.479"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:14.717" starttime="20170808 10:55:57.479"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<msg timestamp="20170808 10:56:14.717" level="FAIL">Variable ${route_add_cpe_pc} does not exist.</msg>
<status status="FAIL" endtime="20170808 10:56:14.717" starttime="20170808 10:56:14.717"></status>
</kw>
<msg timestamp="20170808 10:56:14.717" level="INFO">${return} = ('FAIL', u'Variable ${route_add_cpe_pc} does not exist.')</msg>
<status status="PASS" endtime="20170808 10:56:14.717" starttime="20170808 10:56:14.717"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${route_add_cpe_pc}'=='true'</arg>
<arg>Execute Shell Command</arg>
<arg>route delete ${BTS_PC_INFO.IP} mask 255.255.255.255 ${UE1_INFO.ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:14.733" starttime="20170808 10:56:14.717"></status>
</kw>
<kw name="Alarm Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20170808 10:56:25.936" level="ERROR">Infomodel not connected.</msg>
<msg timestamp="20170808 10:56:26.638" level="INFO">[infomodel_control.py@82] set up infomodel with following info succeed .
    details: address=192.168.255.1, port=12345, definitions_file_path=None
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}</msg>
<msg timestamp="20170808 10:56:26.638" level="INFO">[infomodel_control.py@100] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170808 10:56:26.638" starttime="20170808 10:56:14.733"></status>
</kw>
<kw name="Fatal Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20170808 10:56:28.417" level="INFO">['fatal'] ['fatal']
['fatal'] ['fatal']</msg>
<status status="PASS" endtime="20170808 10:56:28.417" starttime="20170808 10:56:26.638"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<assign>
<var>${return1}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<msg timestamp="20170808 10:56:28.417" level="FAIL">'FZQE_Operational_RF_Block_Unblock' does not contain 'Fiber'</msg>
<status status="FAIL" endtime="20170808 10:56:28.417" starttime="20170808 10:56:28.417"></status>
</kw>
<msg timestamp="20170808 10:56:28.417" level="INFO">${return1} = ('FAIL', u"'FZQE_Operational_RF_Block_Unblock' does not contain 'Fiber'")</msg>
<status status="PASS" endtime="20170808 10:56:28.417" starttime="20170808 10:56:28.417"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<assign>
<var>${all_fiber_link}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:28.417" starttime="20170808 10:56:28.417"></status>
</kw>
<msg timestamp="20170808 10:56:28.417" level="INFO">${all_fiber_link} = ('PASS', None)</msg>
<status status="PASS" endtime="20170808 10:56:28.417" starttime="20170808 10:56:28.417"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:28.432" starttime="20170808 10:56:28.417"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:28.432" starttime="20170808 10:56:28.417"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Software Reboot Bts</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:28.432" starttime="20170808 10:56:28.432"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Sleep</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:28.432" starttime="20170808 10:56:28.432"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:28.432" starttime="20170808 10:56:28.432"></status>
</kw>
<kw name="Common Test Teardown" library="common_resource">
<doc>[Caution] this keyword step:</doc>
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20170808 10:56:28.432" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20170808 10:56:28.432" starttime="20170808 10:56:28.432"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:28.432" starttime="20170808 10:56:28.432"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:28.432" starttime="20170808 10:56:28.432"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:28.432" starttime="20170808 10:56:28.432"></status>
</kw>
<kw name="Get Active Bts Sw Version" library="tdd_ev_robotws">
<doc>get active BTS SW Build Version from enb targetBD file..</doc>
<assign>
<var>${version}</var>
</assign>
<msg timestamp="20170808 10:56:49.680" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170808 10:56:49.680" level="INFO">[ssh_common.py@203] Last login: Tue Aug  8 10:35:44 CST 2017 from 10.69.80.114 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170808 10:56:49.680" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A15800&gt;</msg>
<msg timestamp="20170808 10:56:49.680" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170808 10:56:49.680" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170808 10:56:49.680" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A15800&gt;</msg>
<msg timestamp="20170808 10:56:49.680" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170808 10:56:49.680" level="INFO">[ssh_common.py@203] Last login: Tue Aug  8 10:56:29 CST 2017 from 192.168.255.126 on pts/0
root@fctj-0a:~ &gt;</msg>
<msg timestamp="20170808 10:56:49.680" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A15800&gt;</msg>
<msg timestamp="20170808 10:56:49.680" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20170808 10:56:49.680" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL17A_ENB_0000_000198_000000.xml
root@fctj-0a:/ffs/fs1 &gt;</msg>
<msg timestamp="20170808 10:56:49.680" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A15800&gt;</msg>
<msg timestamp="20170808 10:56:49.680" level="INFO">${version} = TL17A_ENB_0000_000198_000000</msg>
<status status="PASS" endtime="20170808 10:56:49.680" starttime="20170808 10:56:28.432"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:49.680" starttime="20170808 10:56:49.680"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<status status="PASS" endtime="20170808 10:56:49.680" starttime="20170808 10:56:49.680"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:49.680" starttime="20170808 10:56:28.432"></status>
</kw>
<status status="PASS" endtime="20170808 10:56:49.680" starttime="20170808 10:55:56.480"></status>
</kw>
<tags>
<tag>owner-chen.feng@nokia.com</tag>
<tag>QC_773298</tag>
</tags>
<status status="PASS" endtime="20170808 10:56:49.680" critical="yes" starttime="20170808 10:34:52.058"></status>
</test>
<doc>TD-LTE I&amp;V SISO1</doc>
<status status="PASS" endtime="20170808 10:56:49.804" starttime="20170808 10:33:33.468"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">owner-chen.feng@nokia.com</stat>
<stat fail="0" pass="1">QC_773298</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="FZHR Operational RF block unblock" pass="1">FZHR Operational RF block unblock</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170808 10:33:34.228" level="ERROR">Loading tdd_config has failed. Please check if: 
       1. you executed pybot with --variable CONFIGURATION:$your_tl_config 
          i.e. pybot --variable CONFIGURATION:Wroclaw.test 
       2. check if there is no problem with your configuration 
       Error msg: Variable ${CONFIGURATION} does not exist.
</msg>
<msg timestamp="20170808 10:40:10.844" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170808 10:40:10.850" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170808 10:40:10.877" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170808 10:40:10.925" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170808 10:56:25.936" level="ERROR">Infomodel not connected.</msg>
</errors>
</robot>
