<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170731 17:07:24.617" generator="Rebot 3.0 (Python 2.7.5 on win32)">
<suite source="D:\TA\Test_Case_Svn\Trunk_CRT\SISO1\CIT\CPRI_Single_FZFI\FZFI_Operational_Cell_block_unblock\FZFI_Operational_Cell_block_unblock.html" id="s1" name="FZFI Operational Cell block unblock">
<kw type="setup" name="Common Suite Setup" library="common_resource">
<doc>this keyword create suite name directory path as D:\TA_logs\TestLog_20170731170149//logs//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20170731 17:01:52.191" level="INFO">${timestamp} = 20170731170152</msg>
<status status="PASS" endtime="20170731 17:01:52.191" starttime="20170731 17:01:52.149"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_NAME[:50]}</arg>
<arg>\\s+$</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${FILE_NAME}</var>
</assign>
<msg timestamp="20170731 17:01:52.192" level="INFO">${FILE_NAME} = FZFI Operational Cell block unblock</msg>
<status status="PASS" endtime="20170731 17:01:52.192" starttime="20170731 17:01:52.191"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>ev_logs</arg>
<arg>${FILE_NAME}_${timestamp}</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20170731 17:01:52.193" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI Operational Cell block unblock_20170731170152</msg>
<status status="PASS" endtime="20170731 17:01:52.193" starttime="20170731 17:01:52.192"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20170731 17:01:52.194" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152</msg>
<status status="PASS" endtime="20170731 17:01:52.194" starttime="20170731 17:01:52.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170731 17:01:52.195" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152</msg>
<status status="PASS" endtime="20170731 17:01:52.195" starttime="20170731 17:01:52.194"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170731 17:01:52.196" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152"&gt;D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 17:01:52.196" starttime="20170731 17:01:52.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170731 17:01:52.196" level="INFO">save log dir:D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152</msg>
<status status="PASS" endtime="20170731 17:01:52.196" starttime="20170731 17:01:52.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${snapshot_flag}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170731 17:01:52.200" level="INFO">${snapshot_flag} = 0</msg>
<status status="PASS" endtime="20170731 17:01:52.200" starttime="20170731 17:01:52.197"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<msg timestamp="20170731 17:01:52.221" level="FAIL">Variable ${TEST LOG DIR} does not exist.</msg>
<status status="FAIL" endtime="20170731 17:01:52.221" starttime="20170731 17:01:52.215"></status>
</kw>
<msg timestamp="20170731 17:01:52.221" level="INFO">${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')</msg>
<status status="PASS" endtime="20170731 17:01:52.221" starttime="20170731 17:01:52.214"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:01:52.223" starttime="20170731 17:01:52.222"></status>
</kw>
<msg timestamp="20170731 17:01:52.223" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170731 17:01:52.223" starttime="20170731 17:01:52.222"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:01:52.230" starttime="20170731 17:01:52.226"></status>
</kw>
<msg timestamp="20170731 17:01:52.230" level="INFO">${log dir} = D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152</msg>
<status status="PASS" endtime="20170731 17:01:52.230" starttime="20170731 17:01:52.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20170731 17:01:52.234" level="INFO">${SAVE LOG DIRECTORY} = D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152</msg>
<status status="PASS" endtime="20170731 17:01:52.234" starttime="20170731 17:01:52.231"></status>
</kw>
<status status="PASS" endtime="20170731 17:01:52.235" starttime="20170731 17:01:52.213"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Make Sure FCT Ping Ok</arg>
</arguments>
<kw name="Make Sure FCT Ping Ok" library="common_resource">
<kw name="Ping Should Ok" library="tdd_ev_robotws">
<doc>This function is used for check whether ping host success, if yes, return 1, else return 0</doc>
<arguments>
<arg>${FCMD_IP}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20170731 17:01:52.263" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20170731 17:01:52.263" starttime="20170731 17:01:52.236"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${FTM_IP}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:01:52.264" starttime="20170731 17:01:52.264"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Btscli Disable Bts Port Security</arg>
</arguments>
<status status="PASS" endtime="20170731 17:01:52.264" starttime="20170731 17:01:52.264"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>60</arg>
<arg>${FCMD_IP}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:01:52.265" starttime="20170731 17:01:52.265"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5min</arg>
<arg>5s</arg>
<arg>_make sure fctb connect ok</arg>
</arguments>
<status status="PASS" endtime="20170731 17:01:52.265" starttime="20170731 17:01:52.265"></status>
</kw>
<status status="PASS" endtime="20170731 17:01:52.266" starttime="20170731 17:01:52.235"></status>
</kw>
<status status="PASS" endtime="20170731 17:01:52.266" starttime="20170731 17:01:52.235"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>get_enb_infomation</arg>
</arguments>
<kw name="Get Enb Infomation" library="tdd_ev_robotws">
<doc>This keyword will print bts sw version, bbu type and RRU type.</doc>
<msg timestamp="20170731 17:02:37.361" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170731 17:02:37.445" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170731 17:02:48.607" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170731 17:02:48.646" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170731 17:02:49.201" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170731 17:02:49.242" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1501491744&amp;token=147f97b2739c0f91b1e316376130cf5d855e7d9b0b02a1adc259525ee2441384&amp;frame=sshservice'</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;SSH Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1501491749&amp;token=5c2a21c7ebdc5afc48343e6398dab6c6bb3df726f47a0798f6ea00cc178c3415&amp;frame=RndPortsService'</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;R&amp;D Ports Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ssh_common.py@203] Last login: Mon Jul 31 17:01:40 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0537B490&gt;</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
-bash-4.4#</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0537B490&gt;</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170731 17:03:12.902" level="INFO">[ssh_common.py@203] Last login: Mon Jul 31 17:02:33 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05381080&gt;</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_170731_065137.xml
-bash-4.4#</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05381080&gt;</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[enb_resource.py@1086] 
 ****Current BTS version is 'TL18_ENB_9999_170731_065137' *****</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[enb_resource.py@1113] activeBuildVersion=TL18_ENB_9999_170731_065137</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[ssh_common.py@203] Last login: Mon Jul 31 17:02:44 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053C9F80&gt;</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[ssh_common.py@258] Execute command: ls /ram/SiteConf.xml</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[ssh_common.py@314] Get Response: ls /ram/SiteConf.xml
/ram/SiteConf.xml
-bash-4.4#</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053C9F80&gt;</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[sftp_control.py@176] /ram/SiteConf.xml</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[sftp_control.py@79] sftp download from '/ram/SiteConf.xml' to 'D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\SiteConf.xml' is ok. local file size is 231k</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[ssh_common.py@203] Last login: Mon Jul 31 17:03:05 CST 2017 from 192.168.255.126 on ssh
-bash-4.4#</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0537B5F8&gt;</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170731 17:03:12.903" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
-bash-4.4#</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0537B5F8&gt;</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[enb_resource.py@375] The real falsh folder is /ffs/fs2</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[sftp_control.py@176] /ffs/fs2/FileDirectory.xml</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs2/FileDirectory.xml' to 'D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FileDirectory_20170731170237.xml' is ok. local file size is 37k</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[sftp_control.py@176] /ffs/fs2/config/SCFC_78.xml</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs2/config/SCFC_78.xml' to 'D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\SCFC_78.xml' is ok. local file size is 146k</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[enb_resource.py@1086] 
 ****Current bbu type is 'FSIH' *****</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[enb_resource.py@1208] HW_BBU_TYPE=FSIH</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[enb_resource.py@1086] 
 ****Current rru type is 'FZFI-d:FZFI-f' *****</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[enb_resource.py@1211] HW_RRU_TYPE=FZFI-d:FZFI-f</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[enb_resource.py@1086] 
 ****Current HW type is 'null' *****</msg>
<msg timestamp="20170731 17:03:12.904" level="INFO">[enb_resource.py@1214] BTS_HW_TYPE=null</msg>
<status status="PASS" endtime="20170731 17:03:12.908" starttime="20170731 17:01:52.266"></status>
</kw>
<status status="PASS" endtime="20170731 17:03:12.908" starttime="20170731 17:01:52.266"></status>
</kw>
<kw name="Set Library Search Order" library="BuiltIn">
<doc>Sets the resolution order to use when a name matches multiple keywords.</doc>
<arguments>
<arg>tdd_ev_robotws</arg>
<arg>OperatingSystem</arg>
</arguments>
<status status="PASS" endtime="20170731 17:03:12.910" starttime="20170731 17:03:12.909"></status>
</kw>
<kw name="Initial Connection With BTS PC" library="common_resource">
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20170731 17:03:12.912" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20170731 17:03:12.912" starttime="20170731 17:03:12.911"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>${TELNET_PORT}</arg>
<arg>${SSH_PORT}</arg>
</arguments>
<assign>
<var>${conn_port}</var>
</assign>
<msg timestamp="20170731 17:03:12.919" level="INFO">${conn_port} = 23</msg>
<status status="PASS" endtime="20170731 17:03:12.919" starttime="20170731 17:03:12.913"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>TELNET</arg>
<arg>SSH</arg>
</arguments>
<assign>
<var>${conn_type}</var>
</assign>
<msg timestamp="20170731 17:03:12.926" level="INFO">${conn_type} = TELNET</msg>
<status status="PASS" endtime="20170731 17:03:12.926" starttime="20170731 17:03:12.920"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>30</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${timeout}</var>
</assign>
<msg timestamp="20170731 17:03:12.933" level="INFO">${timeout} = 30</msg>
<status status="PASS" endtime="20170731 17:03:12.933" starttime="20170731 17:03:12.927"></status>
</kw>
<kw name="Connect To Host" library="tdd_ev_robotws">
<doc>Used to connect to host, either TELNET or SSH</doc>
<arguments>
<arg>${BTS_PC_INFO.IP}</arg>
<arg>port=${conn_port}</arg>
<arg>username=${BTS_PC_INFO.USERNAME}</arg>
<arg>password=${BTS_PC_INFO.PASSWORD}</arg>
<arg>conn_type=${conn_type}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${BTS_PC_CONNECTION}</var>
</assign>
<msg timestamp="20170731 17:03:14.361" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 


login:</msg>
<msg timestamp="20170731 17:03:14.361" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20170731 17:03:14.361" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester

password:</msg>
<msg timestamp="20170731 17:03:14.361" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20170731 17:03:14.361" level="INFO">[telnet_common.py@246]  

*===============================================================
Microsoft Telnet Server.
*===============================================================
C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170731 17:03:14.362" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;</msg>
<status status="PASS" endtime="20170731 17:03:14.362" starttime="20170731 17:03:12.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170731 17:03:14.363" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;</msg>
<status status="PASS" endtime="20170731 17:03:14.363" starttime="20170731 17:03:14.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>Execute Shell Command</arg>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<msg timestamp="20170731 17:03:15.566" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;</msg>
<msg timestamp="20170731 17:03:15.566" level="INFO">[telnet_common.py@276] Execute command: tlntadmn config timeoutactive=no</msg>
<msg timestamp="20170731 17:03:15.566" level="INFO">[telnet_common.py@306] Get Response: tlntadmn config timeoutactive=no
The settings were successfully updated.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170731 17:03:15.566" starttime="20170731 17:03:14.368"></status>
</kw>
<status status="PASS" endtime="20170731 17:03:15.567" starttime="20170731 17:03:14.363"></status>
</kw>
<status status="PASS" endtime="20170731 17:03:15.567" starttime="20170731 17:03:12.910"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170731 17:03:15.572" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;.</msg>
<status status="PASS" endtime="20170731 17:03:15.572" starttime="20170731 17:03:15.567"></status>
</kw>
<status status="PASS" endtime="20170731 17:03:15.572" starttime="20170731 17:01:52.148"></status>
</kw>
<kw type="teardown" name="Common Suite Teardown" library="common_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${REMOVE_LOGS}'=='on'</arg>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:21.420" starttime="20170731 17:07:21.417"></status>
</kw>
<kw name="Disconnect All Hosts" library="tdd_ev_robotws">
<doc>Closes all existing telnet connections to remote hosts.</doc>
<msg timestamp="20170731 17:07:21.438" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20170731 17:07:21.438" level="INFO">[telnet_common.py@189] Disconnect from 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;</msg>
<msg timestamp="20170731 17:07:21.438" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20170731 17:07:21.438" level="INFO">[telnet_common.py@189] Disconnect from 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<status status="PASS" endtime="20170731 17:07:21.438" starttime="20170731 17:07:21.420"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:21.440" starttime="20170731 17:07:21.439"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:21.440" starttime="20170731 17:07:21.439"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:21.441" starttime="20170731 17:07:21.440"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:21.441" starttime="20170731 17:07:21.440"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:21.441" starttime="20170731 17:07:21.416"></status>
</kw>
<test id="s1-t1" name="FZFI_Operational_Cell_block_unblock">
<kw type="setup" name="Common Test Setup" library="common_resource">
<doc>this keyword create case name directory path as D:\TA_logs\TestLog_20170731170149//ev_logs//D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20170731 17:03:15.580" level="INFO">${timestamp} = 20170731170315</msg>
<status status="PASS" endtime="20170731 17:03:15.580" starttime="20170731 17:03:15.579"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20170731 17:03:15.581" level="INFO">${TEST_LOG_DIR} = D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170731 17:03:15.581" starttime="20170731 17:03:15.580"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20170731 17:03:15.582" level="INFO">${TEST_LOG_DIR} = D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170731 17:03:15.582" starttime="20170731 17:03:15.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170731 17:03:15.582" level="INFO">${TEST_LOG_DIR} = D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170731 17:03:15.582" starttime="20170731 17:03:15.582"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170731 17:03:15.584" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock"&gt;D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 17:03:15.584" starttime="20170731 17:03:15.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170731 17:03:15.585" level="INFO">save log dir:D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170731 17:03:15.585" starttime="20170731 17:03:15.585"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${BTS PC CONNECTION.connected}</arg>
<arg>Initial Connection With BTS PC</arg>
</arguments>
<status status="PASS" endtime="20170731 17:03:15.586" starttime="20170731 17:03:15.585"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:03:15.589" starttime="20170731 17:03:15.589"></status>
</kw>
<msg timestamp="20170731 17:03:15.590" level="INFO">${case_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170731 17:03:15.590" starttime="20170731 17:03:15.588"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:03:15.592" starttime="20170731 17:03:15.591"></status>
</kw>
<msg timestamp="20170731 17:03:15.592" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170731 17:03:15.592" starttime="20170731 17:03:15.590"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<msg timestamp="20170731 17:03:15.597" level="INFO">${log dir} = D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170731 17:03:15.597" starttime="20170731 17:03:15.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20170731 17:03:15.598" level="INFO">${SAVE LOG DIRECTORY} = D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170731 17:03:15.598" starttime="20170731 17:03:15.597"></status>
</kw>
<status status="PASS" endtime="20170731 17:03:15.598" starttime="20170731 17:03:15.587"></status>
</kw>
<status status="PASS" endtime="20170731 17:03:15.598" starttime="20170731 17:03:15.579"></status>
</kw>
<kw name="Start_Udp_And_Infomodel_Log" library="SISO1 Resource">
<kw name="Start Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword starts catching of BTS system(UDP) log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}.log</arg>
</arguments>
<msg timestamp="20170731 17:03:15.908" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'</msg>
<msg timestamp="20170731 17:03:15.908" level="INFO">[btslog_control.py@174] use ip is 192.168.255.126</msg>
<msg timestamp="20170731 17:03:15.908" level="INFO">[file_common.py@209] Directory "D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock" already exists, no need to create it again.</msg>
<status status="PASS" endtime="20170731 17:03:15.909" starttime="20170731 17:03:15.599"></status>
</kw>
<kw name="Start Infomodel" library="tdd_ev_robotws">
<doc>Setup InfoModel library and Connect to InfoModel.</doc>
<arguments>
<arg>port=${BTS_INFOMODEL_PORT}</arg>
</arguments>
<msg timestamp="20170731 17:03:25.241" level="INFO">[infomodel_control.py@157] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None</msg>
<msg timestamp="20170731 17:03:25.241" level="INFO">[infomodel_control.py@161] start infomodel succeed .</msg>
<msg timestamp="20170731 17:03:25.241" level="INFO">[infomodel_control.py@163] start infomodel logger succeed .</msg>
<status status="PASS" endtime="20170731 17:03:25.241" starttime="20170731 17:03:15.909"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20170731 17:03:25.242" level="INFO">${case_execute_log_name} = owner_debug</msg>
<status status="PASS" endtime="20170731 17:03:25.242" starttime="20170731 17:03:25.241"></status>
</kw>
<status status="PASS" endtime="20170731 17:03:25.242" starttime="20170731 17:03:15.598"></status>
</kw>
<kw type="for" name="${num} IN RANGE [ ${total_times} ]">
<kw type="foritem" name="${num} = 0">
<kw name="_Cell_Block_Unblock_and_Attach">
<doc>Operation with BTS</doc>
<arguments>
<arg>${cell_index_1}</arg>
<arg>${frequency_b}</arg>
<arg>${frequency_a}</arg>
</arguments>
<kw name="TM500_Attach_And_Start_PPPOE_Withlog" library="SISO1 Resource">
<arguments>
<arg>${attach_script}</arg>
<arg>forw mte RrcAptConfigCellSelection: ${frequency_1}</arg>
</arguments>
<kw name="Tm500 Setup" library="tdd_ev_robotws">
<doc>tm500 setup.</doc>
<msg timestamp="20170731 17:03:26.866" level="INFO">${TM500_PC_CONNECTION} = 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.331" level="INFO">[robot_func.py@29] Can't get variable '${TM500_PC_CONNECTION}' ! details: 'Variable '${TM500_PC_CONNECTION}' not found.'</msg>
<msg timestamp="20170731 17:04:52.332" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 


login:</msg>
<msg timestamp="20170731 17:04:52.332" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20170731 17:04:52.332" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester

password:</msg>
<msg timestamp="20170731 17:04:52.332" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20170731 17:04:52.332" level="INFO">[telnet_common.py@246]  

*===============================================================
Welcome to Microsoft Telnet Server.
*===============================================================
C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170731 17:04:52.332" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;.</msg>
<msg timestamp="20170731 17:04:52.332" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"
*SEP* 1.0.1

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8274 -s True</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8274 -s True

PsExec v1.98 - Execute processes remotely
Copyright (C) 2001-2010 Mark Russinovich
Sysinternals - www.sysinternals.com

python started with process ID 652.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[process_control.py@74] Process start successed ! process id: 652</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[remote_lib_control.py@62] start remote server succeed !</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[tm500.py@107] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8274</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[tm500.py@407] Request TM500 Resource:
sent -&gt; "request:15:1"
received &lt;- "Welcome! Please use it, You are No.1 in 1 user queue.

"</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[tm500.py@411] Get TM500 resource success!</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;.</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@276] Execute command: python -c "import platform;print platform.platform()"</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@306] Get Response: python -c "import platform;print platform.platform()"
Windows-XP-5.1.2600-SP3

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;.</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock\FileZilla server.xml"'</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:10 minutes &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock\FileZilla server.xml"</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock\FileZilla server.xml"

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%
ERRORCODE is: 0

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[file_common.py@168] Copy file "D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock\FileZilla server.xml" to "D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock\FileZilla server.xml.change_bak" succeeded.</msg>
<msg timestamp="20170731 17:04:52.333" level="INFO">[filezilla_control.py@188] Filezilla configed right, no need to change TM500 version.</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;.</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$CLOSE</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1735] TM500 command reply: C: CLOSE 0x00 ok.</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe
ERROR: The process "TmaApplication.exe" not found.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"
*SEP* D:\TA\trunk_soam\tdd_ev_robotws

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TmaApplication.exe" /u \"Default User\" /c y /p 5003 /a n</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[telnet_common.py@276] Execute command: Ctrl-C</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'
Keep Alive Message from Server Received [3 bytes]: '(be 0 3)' 
^C
C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@590] Prev msg: I: TMAE 0x2 Error - Raw Script Error: Cannot find C:\Documents and Settings\bts-tester\Desktop\Attach.txt</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1735] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$CONNECT</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1735] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1727] TM500 command to be sent: GSTS</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1735] TM500 command reply: C: GSTS 0x00 Ok Reset</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1727] TM500 command to be sent: ABOT 0 0 1</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1735] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1727] TM500 command to be sent: SELR 0 0 RC2 COMBINED</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1735] TM500 command reply: C: SELR 0x00 Ok</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1727] TM500 command to be sent: EREF 0 0 0</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1735] TM500 command reply: C: EREF 0x00 Ok</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1727] TM500 command to be sent: GETR</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1735] TM500 command reply: C: GETR 0x00 Ok 
Radio cards
==============
   Card   : Umbra2 LTE (20MHz)
   Slot   : RC1
   Chassis: 0
   Context: -
   RF     : type 7
   A:  DL : 2110.0 - 2170.0 MHz
       UL : 1920.0 - 1980.0 MHz
   B:  DL : 2300.0 - 2400.0 MHz
       UL : 2300.0 - 2400.0 MHz
==============
*  Card   : Umbra2 LTE (20MHz)
   Slot   : RC2
   Chassis: 0
   Context: 0
   RF     : type 200
   A:  DL : 400.0 - 4000.0 MHz
       UL : 400.0 - 4000.0 MHz
   B:  DL : 0.0 - 0.0 MHz
       UL : 0.0 - 0.0 MHz</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1727] TM500 command to be sent: SCFG NAS_MODE</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1735] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1727] TM500 command to be sent: STRT</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1735] TM500 command reply: C: STRT 0x00 Ok</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1735] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0</msg>
<msg timestamp="20170731 17:04:52.334" level="INFO">[tm500.py@1735] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.</msg>
<status status="PASS" endtime="20170731 17:04:52.337" starttime="20170731 17:03:25.244"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Test Variable</arg>
<arg>${TM500_Use_Tag}</arg>
<arg>used</arg>
</arguments>
<status status="PASS" endtime="20170731 17:04:52.338" starttime="20170731 17:04:52.338"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELLx_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170731 17:04:56.362" level="INFO">$TA,C,0314*</msg>
<msg timestamp="20170731 17:04:56.362" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,0314*', Receive&lt;-'$TA,C,0314*'</msg>
<msg timestamp="20170731 17:04:56.362" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,03*', Receive&lt;-'$TA,C,0314*'
$TA,C,0414*</msg>
<msg timestamp="20170731 17:04:56.362" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,0414*', Receive&lt;-'$TA,C,0414*'</msg>
<msg timestamp="20170731 17:04:56.362" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,04*', Receive&lt;-'$TA,C,0414*'</msg>
<status status="PASS" endtime="20170731 17:04:56.362" starttime="20170731 17:04:52.338"></status>
</kw>
<kw name="Tm500 Configure Logging" library="tdd_ev_robotws">
<doc>This keyword selects TM500's logging items.</doc>
<arguments>
<arg>${ue_log_types}</arg>
</arguments>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1727] TM500 command to be sent: GVER</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1735] TM500 command reply: C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@506] TM500 command line response of "GVER":
C: GVER 0x00 Ok 
 PPC-0:
    BSP: 2.0/n/R13
    APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4
 DSP-0: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-1: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-2: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-3: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-4: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x0062
 DSP-5: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-6: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-7: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-8: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x101C
 DSP-9: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-10: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-11: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-12: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
    PCB: 0
   VHDL: 0x208A
 DSP-13: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-14: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 DSP-15: 
    APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4
 Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55
 UMBRA-0
    API: 13.3.1  Product: 3
    APP: 1.0.149  Built: Sep 25 2014 17:17:27
    CON: 3.5.0  Build: 0
    SIG: 2.1.1  Build: 46
    MMC: 1.7
    Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568
    MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285
    MOD RX: 0.0.31  Build: 34  PCB: 3.0</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_CLEAR_ALL</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.645" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_CAT 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL</msg>
<msg timestamp="20170731 17:04:59.646" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.647" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0</msg>
<msg timestamp="20170731 17:04:59.647" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_GRP 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.647" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic</msg>
<msg timestamp="20170731 17:04:59.647" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_ITM 0x00 ok.</msg>
<msg timestamp="20170731 17:04:59.647" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$LC_END</msg>
<msg timestamp="20170731 17:04:59.647" level="INFO">[tm500.py@1735] TM500 command reply: C: LC_END 0x00 ok.</msg>
<status status="PASS" endtime="20170731 17:04:59.650" starttime="20170731 17:04:56.363"></status>
</kw>
<kw name="Tm500 Start Logging" library="tdd_ev_robotws">
<doc>This keyword starts TM500's logging.</doc>
<msg timestamp="20170731 17:05:00.308" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$START_LOGGING</msg>
<msg timestamp="20170731 17:05:00.308" level="INFO">[tm500.py@1735] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170731_170442_session/170731_170532'</msg>
<msg timestamp="20170731 17:05:00.309" level="INFO">[tm500.py@1351] TM500 command line response of "START LOGGING":
C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170731_170442_session/170731_170532'</msg>
<msg timestamp="20170731 17:05:00.309" level="INFO">[tm500.py@1362] C:\TM500_LOG\170731_170442_session\170731_170532</msg>
<status status="PASS" endtime="20170731 17:05:00.310" starttime="20170731 17:04:59.650"></status>
</kw>
<kw name="Tm500 Attach" library="tdd_ev_robotws">
<doc>This keyword does UE attach operation of TM500.</doc>
<arguments>
<arg>${attach_script}</arg>
<arg>${cmd_to_modify_list}</arg>
</arguments>
<assign>
<var>${tm500_attach_result}</var>
</assign>
<msg timestamp="20170731 17:05:10.189" level="INFO">[file_common.py@125] Write file "D:\TA\BTS1779\modified_attach_MIMO.txt" succeeded</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1727] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 4{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] [],40 [1 23000 38650 1000 23000 38650 1000] [],39 [1 18800 38250 400 18800 38250 400] []}</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1727] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1727] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1735] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1727] TM500 command to be sent: FORW MTE PHYSETTDDCFG 2 7</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1727] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1735] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1727] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1727] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020000525 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1727] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 25950</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1727] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170731 17:05:10.189" level="INFO">[tm500.py@1727] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])</msg>
<msg timestamp="20170731 17:05:10.190" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170731 17:05:10.190" level="INFO">[tm500.py@1727] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203</msg>
<msg timestamp="20170731 17:05:10.190" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170731 17:05:10.190" level="INFO">[tm500.py@1727] TM500 command to be sent: FORW MTE ACTIVATE -1</msg>
<msg timestamp="20170731 17:05:10.190" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170731 17:05:10.190" level="INFO">[tm500.py@1631] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<msg timestamp="20170731 17:05:10.190" level="INFO">[tm500.py@1672] TM500 command line received data:
I: CMPI RRC Cell Selection: UE Id: 0
   Cell Info:
      Cell Id: 346 DL Freq: 25950 Cell Type: Suitable
I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 346, Dl Freq 25950)

I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x9BD9, TimingAdv: 0, PreambleTxCount: 1)

I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0
  Selected PLMN: 26203F
  Pdn Id: 0
  EPS Bearer Id: 5
  Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs
  IPv4 Address: 172.170.27.145
  Attach Result: EPS Only
  Mode: PS 2
I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0</msg>
<msg timestamp="20170731 17:05:10.192" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20170731 17:05:10.193" starttime="20170731 17:05:00.311"></status>
</kw>
<kw name="Tm500 Start Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword connects TM500 PPPoE connections by their names.</doc>
<msg timestamp="20170731 17:05:11.787" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;.</msg>
<msg timestamp="20170731 17:05:11.787" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:05:11.788" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500</msg>
<msg timestamp="20170731 17:05:11.788" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\Documents and Settings\bts-tester&gt;</msg>
<msg timestamp="20170731 17:05:11.788" level="INFO">[tm500.py@1301] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500
Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...
Verifying username and password...
Registering your computer on the network...
Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.
Command completed successfully.

C:\Documents and Settings\bts-tester&gt;</msg>
<status status="PASS" endtime="20170731 17:05:11.788" starttime="20170731 17:05:10.193"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Pppoe_Tag}</arg>
<arg>used</arg>
</arguments>
<msg timestamp="20170731 17:05:11.796" level="INFO">${TM500_Pppoe_Tag} = used</msg>
<status status="PASS" endtime="20170731 17:05:11.796" starttime="20170731 17:05:11.789"></status>
</kw>
<kw name="TM500 Log Stop And Fetch" library="ue_resource">
<doc>TM500: stop logging, convert log to csv format, copy logs to local PC.</doc>
<arguments>
<arg>tm500_attach_log</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170731 17:05:11.810" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;.</msg>
<status status="PASS" endtime="20170731 17:05:11.810" starttime="20170731 17:05:11.805"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<msg timestamp="20170731 17:05:11.811" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock\tm500_attach_log"&gt;D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock\tm500_attach_log&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170731 17:05:11.812" starttime="20170731 17:05:11.811"></status>
</kw>
<kw name="Tm500 Stop Logging" library="tdd_ev_robotws">
<doc>This keyword stops TM500's logging.</doc>
<assign>
<var>${log_folder_path_on_tm500_pc}</var>
</assign>
<msg timestamp="20170731 17:05:24.436" level="INFO">[tm500.py@1375] Prev msg: I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0
  De Id: 8
  EPS Bearer Id: 5
  PDN IP Address String: 172.170.27.145</msg>
<msg timestamp="20170731 17:05:24.436" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$STOP_LOGGING</msg>
<msg timestamp="20170731 17:05:24.436" level="INFO">[tm500.py@1735] TM500 command reply: C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170731 17:05:24.436" level="INFO">[tm500.py@1386] TM500 command line response of "STOP LOGGING":
C: STOP_LOGGING 0x00 OK</msg>
<msg timestamp="20170731 17:05:24.436" level="INFO">[tm500.py@1390] TM500 stop logging succeeded.</msg>
<msg timestamp="20170731 17:05:24.436" level="INFO">${log_folder_path_on_tm500_pc} = C:\TM500_LOG\170731_170442_session\170731_170532</msg>
<status status="PASS" endtime="20170731 17:05:24.436" starttime="20170731 17:05:11.812"></status>
</kw>
<kw name="Tm500 Convert Log" library="tdd_ev_robotws">
<doc>This keyword converts TM500 log to csv format files.</doc>
<arguments>
<arg>timeout=${log_convertion_timeout}</arg>
</arguments>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1735] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$CONVERT_TO_TEXT 0</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1735] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 0%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 1%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 2%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 3%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170731 17:05:43.212" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 4%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 5%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 6%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 7%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 8%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 9%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 10%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 11%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 12%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 13%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 14%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 15%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 16%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 17%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 18%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 19%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%</msg>
<msg timestamp="20170731 17:05:43.213" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 20%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 21%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 22%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 23%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 24%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 25%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 26%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 27%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 28%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 29%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 30%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 31%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 32%

I: CONVERT_TO_TEXT Completed = 32%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 33%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 44%</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1467] I: CONVERT_TO_TEXT Completed = 100%

C: CONVERT_TO_TEXT 0x00 ok.</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\170731_170442_session\170731_170532"</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1735] TM500 command reply: I: CONVERT_COMMAND_LOG started</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1486] I: CONVERT_COMMAND_LOG progress= 5%
I: CONVERT_COMMAND_LOG progress= 10%
I: CONVERT_COMMAND_LOG progress= 15%
I: CONVERT_COMMAND_LOG progress= 20%
I: CONVERT_COMMAND_LOG progress= 25%
I: CONVERT_COMMAND_LOG progress= 31%
I: CONVERT_COMMAND_LOG progress= 36%
I: CONVERT_COMMAND_LOG progress= 41%
I: CONVERT_COMMAND_LOG progress= 46%
I: CONVERT_COMMAND_LOG progress= 51%
I: CONVERT_COMMAND_LOG progress= 56%
I: CONVERT_COMMAND_LOG progress= 62%
I: CONVERT_COMMAND_LOG progress= 67%
I: CONVERT_COMMAND_LOG progress= 72%
I: CONVERT_COMMAND_LOG progress= 77%
I: CONVERT_COMMAND_LOG progress= 82%
I: CONVERT_COMMAND_LOG progress= 88%
I: CONVERT_COMMAND_LOG progress= 93%
I: CONVERT_COMMAND_LOG progress= 98%
C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\170731_170442_SESSION\170731_170532\170731_170442_session_command_log.csv</msg>
<msg timestamp="20170731 17:05:43.214" level="INFO">[tm500.py@1491] TM500 convert log succeeded.</msg>
<status status="PASS" endtime="20170731 17:05:43.220" starttime="20170731 17:05:24.437"></status>
</kw>
<kw name="Tm500 Log Fetch" library="ue_resource">
<doc>TM500 Log fetching.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170731 17:05:43.234" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;.</msg>
<status status="PASS" endtime="20170731 17:05:43.234" starttime="20170731 17:05:43.225"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:43.235" starttime="20170731 17:05:43.235"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cd /D "${log_folder_path_on_tm500_pc}"</arg>
</arguments>
<msg timestamp="20170731 17:05:44.534" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:05:44.534" level="INFO">[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\170731_170442_session\170731_170532"</msg>
<msg timestamp="20170731 17:05:44.534" level="INFO">[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\170731_170442_session\170731_170532"

C:\TM500_log\170731_170442_session\170731_170532&gt;</msg>
<status status="PASS" endtime="20170731 17:05:44.535" starttime="20170731 17:05:43.235"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>cp ../*ommand*og*.txt session_command_log.txt</arg>
</arguments>
<msg timestamp="20170731 17:05:45.843" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:05:45.843" level="INFO">[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt</msg>
<msg timestamp="20170731 17:05:45.843" level="INFO">[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt
cp: cannot stat `../*ommand*og*.txt': No such file or directory

C:\TM500_log\170731_170442_session\170731_170532&gt;</msg>
<status status="PASS" endtime="20170731 17:05:45.843" starttime="20170731 17:05:44.536"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>chmod 777 -R *</arg>
</arguments>
<msg timestamp="20170731 17:05:47.149" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:05:47.149" level="INFO">[telnet_common.py@276] Execute command: chmod 777 -R *</msg>
<msg timestamp="20170731 17:05:47.149" level="INFO">[telnet_common.py@306] Get Response: chmod 777 -R *

C:\TM500_log\170731_170442_session\170731_170532&gt;</msg>
<status status="PASS" endtime="20170731 17:05:47.149" starttime="20170731 17:05:45.844"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zcvf tm500_log.tar *.*</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:47.150" starttime="20170731 17:05:47.149"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${log_folder_path_on_tm500_pc}</arg>
<arg>:\\</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${driver_log_folder}</var>
</assign>
<msg timestamp="20170731 17:05:47.150" level="INFO">${driver_log_folder} = [u'C', u'TM500_LOG\\170731_170442_session\\170731_170532']</msg>
<status status="PASS" endtime="20170731 17:05:47.150" starttime="20170731 17:05:47.150"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${TM500_PC_INFO.IP}</arg>
<arg>21</arg>
<arg>TA_LOG</arg>
<arg>${None}</arg>
<arg>${log_folder_path_on_local_pc}</arg>
<arg>ALL</arg>
<arg>${driver_log_folder[1]}</arg>
</arguments>
<msg timestamp="20170731 17:05:47.468" level="INFO">[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.</msg>
<msg timestamp="20170731 17:05:47.468" level="INFO">[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta
220-written by Tim Kosse (Tim.Kosse@gmx.de)
220 Please visit http://sourceforge.net/projects/filezilla/</msg>
<status status="PASS" endtime="20170731 17:05:47.469" starttime="20170731 17:05:47.151"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170731 17:05:47.475" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;.</msg>
<status status="PASS" endtime="20170731 17:05:47.475" starttime="20170731 17:05:47.469"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>cd /D "${log_folder_path_on_local_pc}"</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:47.476" starttime="20170731 17:05:47.476"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:47.476" starttime="20170731 17:05:47.476"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>Execute Shell Command</arg>
<arg>chmod 777 -R *</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:47.477" starttime="20170731 17:05:47.477"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${unzip_result}</arg>
<arg>Run keyword and ignore error</arg>
<arg>Unzip file</arg>
<arg>tm500_log.tar</arg>
<arg>${log_folder_path_on_local_pc}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:47.477" starttime="20170731 17:05:47.477"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword if</arg>
<arg>'${unzip_result[0]}' == 'FAIL'</arg>
<arg>Execute Shell Command</arg>
<arg>tar -zxvf tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:47.478" starttime="20170731 17:05:47.477"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>remove file</arg>
<arg>${log_folder_path_on_local_pc}/tm500_log.tar</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:47.478" starttime="20170731 17:05:47.478"></status>
</kw>
<status status="PASS" endtime="20170731 17:05:47.478" starttime="20170731 17:05:43.221"></status>
</kw>
<status status="PASS" endtime="20170731 17:05:47.478" starttime="20170731 17:05:11.804"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${tm500_attach_result}</arg>
</arguments>
<msg timestamp="20170731 17:05:47.480" level="INFO">${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...</msg>
<status status="PASS" endtime="20170731 17:05:47.481" starttime="20170731 17:05:47.479"></status>
</kw>
<status status="PASS" endtime="20170731 17:05:47.481" starttime="20170731 17:03:25.243"></status>
</kw>
<kw name="Deattach_And_Stop_PPPOE" library="SISO1 Resource">
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170731 17:05:47.486" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;.</msg>
<status status="PASS" endtime="20170731 17:05:47.486" starttime="20170731 17:05:47.482"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170731 17:05:48.757" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;</msg>
<msg timestamp="20170731 17:05:48.757" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170731 17:05:48.757" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170731 17:05:48.757" starttime="20170731 17:05:47.486"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170731 17:05:48.762" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;.</msg>
<status status="PASS" endtime="20170731 17:05:48.762" starttime="20170731 17:05:48.758"></status>
</kw>
<kw name="Stop Process" library="tdd_ev_robotws">
<doc>used to kill processes, both in linux and windows environement.</doc>
<arguments>
<arg>iperf.exe</arg>
</arguments>
<msg timestamp="20170731 17:05:50.103" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:05:50.103" level="INFO">[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe</msg>
<msg timestamp="20170731 17:05:50.103" level="INFO">[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe
ERROR: The process "iperf.exe" not found.

C:\TM500_log\170731_170442_session\170731_170532&gt;</msg>
<status status="PASS" endtime="20170731 17:05:50.103" starttime="20170731 17:05:48.763"></status>
</kw>
<kw name="Tm500 Stop Pppoe Connection" library="tdd_ev_robotws">
<doc>This keyword disconnects TM500 PPPoE connection by PPPoE name.</doc>
<msg timestamp="20170731 17:05:51.420" level="INFO">[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;.</msg>
<msg timestamp="20170731 17:05:51.420" level="INFO">[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05574558&gt;</msg>
<msg timestamp="20170731 17:05:51.420" level="INFO">[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT</msg>
<msg timestamp="20170731 17:05:51.420" level="INFO">[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170731_170442_session\170731_170532&gt;</msg>
<msg timestamp="20170731 17:05:51.420" level="INFO">[tm500.py@1320] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:
 rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT
Command completed successfully.

C:\TM500_log\170731_170442_session\170731_170532&gt;</msg>
<status status="PASS" endtime="20170731 17:05:51.421" starttime="20170731 17:05:50.104"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Pppoe_Tag}</arg>
<arg>unused</arg>
</arguments>
<msg timestamp="20170731 17:05:51.422" level="INFO">${TM500_Pppoe_Tag} = unused</msg>
<status status="PASS" endtime="20170731 17:05:51.422" starttime="20170731 17:05:51.421"></status>
</kw>
<kw name="Tm500 Detach" library="tdd_ev_robotws">
<doc>This keyword does UE detach operation of TM500.</doc>
<msg timestamp="20170731 17:05:51.498" level="INFO">[tm500.py@1727] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170731 17:05:51.498" level="INFO">[tm500.py@1735] TM500 command reply: I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0

C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170731 17:05:51.498" level="INFO">[tm500.py@1727] TM500 command to be sent: forw mte NasConfigEmmDeregister 0</msg>
<msg timestamp="20170731 17:05:51.498" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED</msg>
<msg timestamp="20170731 17:05:51.498" level="INFO">[tm500.py@1727] TM500 command to be sent: forw mte SetUEContext 0</msg>
<msg timestamp="20170731 17:05:51.498" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]</msg>
<msg timestamp="20170731 17:05:51.498" level="INFO">[tm500.py@1727] TM500 command to be sent: forw mte Activate -1</msg>
<msg timestamp="20170731 17:05:51.498" level="INFO">[tm500.py@1735] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0</msg>
<status status="PASS" endtime="20170731 17:05:51.499" starttime="20170731 17:05:51.422"></status>
</kw>
<kw name="Release_TM500_And_Colse_PA_Port" library="SISO1 Resource">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${return}</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Variable Should Exist</arg>
<arg>${TM500_Use_Tag}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:51.500" starttime="20170731 17:05:51.500"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Use_Tag}'=='used'</arg>
<arg>Set Attenuators Off</arg>
<arg>${ATT_ALL_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:51.501" starttime="20170731 17:05:51.500"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${TM500_Pppoe_Tag}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TM500_Pppoe_Tag}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:51.502" starttime="20170731 17:05:51.501"></status>
</kw>
<msg timestamp="20170731 17:05:51.502" level="INFO">${return} = ('PASS', None)</msg>
<status status="PASS" endtime="20170731 17:05:51.502" starttime="20170731 17:05:51.501"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Pppoe_Tag}'=='used'</arg>
<arg>Switch Host Connection</arg>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${TM500_Pppoe_Tag}'=='used'</arg>
<arg>Switch Host Connection</arg>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:51.512" starttime="20170731 17:05:51.508"></status>
</kw>
<status status="PASS" endtime="20170731 17:05:51.512" starttime="20170731 17:05:51.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Pppoe_Tag}'=='used'</arg>
<arg>Tm500 Stop Pppoe Connection</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${TM500_Pppoe_Tag}'=='used'</arg>
<arg>Tm500 Stop Pppoe Connection</arg>
</arguments>
<status status="PASS" endtime="20170731 17:05:51.521" starttime="20170731 17:05:51.517"></status>
</kw>
<status status="PASS" endtime="20170731 17:05:51.521" starttime="20170731 17:05:51.512"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170731 17:06:19.090" level="INFO">[tm500.py@590] Prev msg: I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0

I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0
    Detach Cause: UE Initiated 

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

I: CMPI RRC Leave Connected Cell Selection: UE Id: 0
   Old Cell Info:
      Cell Id: 346 DL Freq: 25950 Cell Type: -
   New Cell Info:
      Cell Id: 346 DL Freq: 25950 Cell Type: Acceptable</msg>
<msg timestamp="20170731 17:06:19.090" level="INFO">[tm500.py@1727] TM500 command to be sent: #$$DISCONNECT</msg>
<msg timestamp="20170731 17:06:19.090" level="INFO">[tm500.py@1735] TM500 command reply: C: DISCONNECT 0x00 OK</msg>
<msg timestamp="20170731 17:06:19.090" level="INFO">[tm500.py@436] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "Bye!"
Robot Framework remote server at 0.0.0.0:8274 stopping</msg>
<status status="PASS" endtime="20170731 17:06:19.091" starttime="20170731 17:05:51.521"></status>
</kw>
<kw name="Set_Allcells_Attenuation_Off" library="SISO1 Resource">
<kw type="for" name="${index} IN RANGE [ 1 | 10 ]">
<kw type="foritem" name="${index} = 1">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:19.095" starttime="20170731 17:06:19.093"></status>
</kw>
<msg timestamp="20170731 17:06:19.096" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170731 17:06:19.096" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170731 17:06:19.096" starttime="20170731 17:06:19.092"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:19.101" starttime="20170731 17:06:19.097"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170731 17:06:23.138" level="INFO">$TA,C,03F0*</msg>
<msg timestamp="20170731 17:06:23.138" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,03F0*', Receive&lt;-'$TA,C,03F0*'</msg>
<msg timestamp="20170731 17:06:23.138" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,03*', Receive&lt;-'$TA,C,03F0*'
$TA,C,04F0*</msg>
<msg timestamp="20170731 17:06:23.138" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,04F0*', Receive&lt;-'$TA,C,04F0*'</msg>
<msg timestamp="20170731 17:06:23.138" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,04*', Receive&lt;-'$TA,C,04F0*'</msg>
<status status="PASS" endtime="20170731 17:06:23.139" starttime="20170731 17:06:19.101"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:23.139" starttime="20170731 17:06:19.091"></status>
</kw>
<kw type="foritem" name="${index} = 2">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:23.141" starttime="20170731 17:06:23.140"></status>
</kw>
<msg timestamp="20170731 17:06:23.141" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170731 17:06:23.141" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170731 17:06:23.141" starttime="20170731 17:06:23.140"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:23.146" starttime="20170731 17:06:23.142"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170731 17:06:27.183" level="INFO">$TA,C,03F0*</msg>
<msg timestamp="20170731 17:06:27.183" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,03F0*', Receive&lt;-'$TA,C,03F0*'</msg>
<msg timestamp="20170731 17:06:27.183" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,03*', Receive&lt;-'$TA,C,03F0*'
$TA,C,04F0*</msg>
<msg timestamp="20170731 17:06:27.183" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,04F0*', Receive&lt;-'$TA,C,04F0*'</msg>
<msg timestamp="20170731 17:06:27.183" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,04*', Receive&lt;-'$TA,C,04F0*'</msg>
<status status="PASS" endtime="20170731 17:06:27.183" starttime="20170731 17:06:23.147"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:27.183" starttime="20170731 17:06:23.139"></status>
</kw>
<kw type="foritem" name="${index} = 3">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170731 17:06:27.194" level="FAIL">Variable ${CELL3_ATT_INFO} does not exist.</msg>
<status status="FAIL" endtime="20170731 17:06:27.194" starttime="20170731 17:06:27.184"></status>
</kw>
<msg timestamp="20170731 17:06:27.194" level="INFO">${ret1} = FAIL</msg>
<msg timestamp="20170731 17:06:27.194" level="INFO">${ret2} = Variable ${CELL3_ATT_INFO} does not exist.</msg>
<status status="PASS" endtime="20170731 17:06:27.194" starttime="20170731 17:06:27.184"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<msg timestamp="20170731 17:06:27.198" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170731 17:06:27.199" starttime="20170731 17:06:27.194"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:27.199" starttime="20170731 17:06:27.183"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:27.199" starttime="20170731 17:06:19.091"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:27.199" starttime="20170731 17:06:19.091"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Test Variable</arg>
<arg>${TM500_Use_Tag}</arg>
<arg>unused</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:27.200" starttime="20170731 17:06:27.199"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Pppoe_Tag}</arg>
<arg>unused</arg>
</arguments>
<msg timestamp="20170731 17:06:27.200" level="INFO">${TM500_Pppoe_Tag} = unused</msg>
<status status="PASS" endtime="20170731 17:06:27.200" starttime="20170731 17:06:27.200"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:27.200" starttime="20170731 17:05:51.499"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:27.201" starttime="20170731 17:05:47.481"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170731 17:06:27.205" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;.</msg>
<status status="PASS" endtime="20170731 17:06:27.205" starttime="20170731 17:06:27.201"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${cell_index}</arg>
<arg>Unblock</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170731 17:06:27.208" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=1', u'HWAction=Unblock', u'LogPath=D:\\TA_logs\\TestLog_20170731170149\\ev_logs\\FZFI_Operational_Cell_block_unblock_20170731170152\\FZFI_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170731 17:06:27.208" starttime="20170731 17:06:27.207"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170731 17:06:34.034" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="1"
HWAction="Unblock"
LogPath="D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock\GUILog\qtp_log20170731170627\Report
&lt;QTP&gt; Start to run script...

GetInto_MainView  BTS Site Manager is not launched. Please check it manually.
Test Fail. SaveImage  to D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock\2017-07-31_17-06-32.png
&lt;QTP&gt; run Failed.
Start to kill QTP process.
Finshed to kill QTP process.</msg>
<msg timestamp="20170731 17:06:34.041" level="FAIL">AttributeError: QuickTest.Application.Quit</msg>
<status status="FAIL" endtime="20170731 17:06:34.041" starttime="20170731 17:06:27.208"></status>
</kw>
<status status="FAIL" endtime="20170731 17:06:34.042" starttime="20170731 17:06:27.206"></status>
</kw>
<status status="FAIL" endtime="20170731 17:06:34.043" starttime="20170731 17:03:25.243"></status>
</kw>
<status status="FAIL" endtime="20170731 17:06:34.043" starttime="20170731 17:03:25.242"></status>
</kw>
<status status="FAIL" endtime="20170731 17:06:34.043" starttime="20170731 17:03:25.242"></status>
</kw>
<kw type="teardown" name="Test_Tear_Down_Action" library="SISO1 Resource">
<doc>Action when case finishs</doc>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170731 17:06:34.049" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05423D28&gt;.</msg>
<status status="PASS" endtime="20170731 17:06:34.049" starttime="20170731 17:06:34.045"></status>
</kw>
<kw name="Kill Qtp Process" library="tdd_ev_robotws">
<doc>This keyword is used to kill the processes related to QTP application.</doc>
<msg timestamp="20170731 17:06:34.497" level="INFO">Start to kill QTP process.
Finshed to kill QTP process.</msg>
<status status="PASS" endtime="20170731 17:06:34.498" starttime="20170731 17:06:34.050"></status>
</kw>
<kw name="Stop Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<status status="PASS" endtime="20170731 17:06:34.505" starttime="20170731 17:06:34.498"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${case_execute_log_name}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:34.506" starttime="20170731 17:06:34.506"></status>
</kw>
<msg timestamp="20170731 17:06:34.506" level="INFO">${return} = ('PASS', None)</msg>
<status status="PASS" endtime="20170731 17:06:34.506" starttime="20170731 17:06:34.505"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Save Infomodel Log" library="tdd_ev_robotws">
<doc>Save InfoModel log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20170731 17:06:34.526" level="INFO">[infomodel_control.py@214] save infomodel log to file: 'D:\TA_logs\TestLog_20170731170149\ev_logs\FZFI_Operational_Cell_block_unblock_20170731170152\FZFI_Operational_Cell_block_unblock\owner_debug' succeed .</msg>
<status status="PASS" endtime="20170731 17:06:34.526" starttime="20170731 17:06:34.511"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:34.526" starttime="20170731 17:06:34.507"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:34.526" starttime="20170731 17:06:34.507"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Stop Infomodel" library="tdd_ev_robotws">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20170731 17:06:35.153" level="INFO">[infomodel_control.py@186] stop infomodel logger succeed .</msg>
<msg timestamp="20170731 17:06:35.153" level="INFO">[infomodel_control.py@198] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170731 17:06:35.154" starttime="20170731 17:06:34.531"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:35.154" starttime="20170731 17:06:34.527"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:35.154" starttime="20170731 17:06:34.527"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Release_TM500_And_Colse_PA_Port</arg>
</arguments>
<kw name="Release_TM500_And_Colse_PA_Port" library="SISO1 Resource">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${return}</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Variable Should Exist</arg>
<arg>${TM500_Use_Tag}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:35.156" starttime="20170731 17:06:35.155"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Use_Tag}'=='used'</arg>
<arg>Set Attenuators Off</arg>
<arg>${ATT_ALL_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:35.156" starttime="20170731 17:06:35.156"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${TM500_Pppoe_Tag}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TM500_Pppoe_Tag}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:35.158" starttime="20170731 17:06:35.157"></status>
</kw>
<msg timestamp="20170731 17:06:35.158" level="INFO">${return} = ('PASS', None)</msg>
<status status="PASS" endtime="20170731 17:06:35.158" starttime="20170731 17:06:35.157"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Pppoe_Tag}'=='used'</arg>
<arg>Switch Host Connection</arg>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${TM500_Pppoe_Tag}'=='used'</arg>
<arg>Switch Host Connection</arg>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:35.168" starttime="20170731 17:06:35.163"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:35.169" starttime="20170731 17:06:35.158"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Pppoe_Tag}'=='used'</arg>
<arg>Tm500 Stop Pppoe Connection</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${TM500_Pppoe_Tag}'=='used'</arg>
<arg>Tm500 Stop Pppoe Connection</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:35.178" starttime="20170731 17:06:35.175"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:35.178" starttime="20170731 17:06:35.169"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170731 17:06:40.186" level="INFO">[tm500.py@436] Release TM500 Resource:
sent -&gt; "release"
received &lt;- "10.56.6.31"</msg>
<status status="PASS" endtime="20170731 17:06:40.187" starttime="20170731 17:06:35.179"></status>
</kw>
<kw name="Set_Allcells_Attenuation_Off" library="SISO1 Resource">
<kw type="for" name="${index} IN RANGE [ 1 | 10 ]">
<kw type="foritem" name="${index} = 1">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:40.191" starttime="20170731 17:06:40.190"></status>
</kw>
<msg timestamp="20170731 17:06:40.191" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170731 17:06:40.191" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170731 17:06:40.191" starttime="20170731 17:06:40.189"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:40.195" starttime="20170731 17:06:40.191"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170731 17:06:44.227" level="INFO">$TA,C,03F0*</msg>
<msg timestamp="20170731 17:06:44.227" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,03F0*', Receive&lt;-'$TA,C,03F0*'</msg>
<msg timestamp="20170731 17:06:44.227" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,03*', Receive&lt;-'$TA,C,03F0*'
$TA,C,04F0*</msg>
<msg timestamp="20170731 17:06:44.227" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,04F0*', Receive&lt;-'$TA,C,04F0*'</msg>
<msg timestamp="20170731 17:06:44.227" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,04*', Receive&lt;-'$TA,C,04F0*'</msg>
<status status="PASS" endtime="20170731 17:06:44.227" starttime="20170731 17:06:40.195"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:44.227" starttime="20170731 17:06:40.189"></status>
</kw>
<kw type="foritem" name="${index} = 2">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:44.229" starttime="20170731 17:06:44.229"></status>
</kw>
<msg timestamp="20170731 17:06:44.229" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170731 17:06:44.229" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170731 17:06:44.229" starttime="20170731 17:06:44.228"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:44.233" starttime="20170731 17:06:44.230"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170731 17:06:48.264" level="INFO">$TA,C,03F0*</msg>
<msg timestamp="20170731 17:06:48.265" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,03F0*', Receive&lt;-'$TA,C,03F0*'</msg>
<msg timestamp="20170731 17:06:48.265" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,03*', Receive&lt;-'$TA,C,03F0*'
$TA,C,04F0*</msg>
<msg timestamp="20170731 17:06:48.265" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,04F0*', Receive&lt;-'$TA,C,04F0*'</msg>
<msg timestamp="20170731 17:06:48.265" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,04*', Receive&lt;-'$TA,C,04F0*'</msg>
<status status="PASS" endtime="20170731 17:06:48.265" starttime="20170731 17:06:44.234"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:48.265" starttime="20170731 17:06:44.227"></status>
</kw>
<kw type="foritem" name="${index} = 3">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170731 17:06:48.275" level="FAIL">Variable ${CELL3_ATT_INFO} does not exist.</msg>
<status status="FAIL" endtime="20170731 17:06:48.275" starttime="20170731 17:06:48.266"></status>
</kw>
<msg timestamp="20170731 17:06:48.275" level="INFO">${ret1} = FAIL</msg>
<msg timestamp="20170731 17:06:48.275" level="INFO">${ret2} = Variable ${CELL3_ATT_INFO} does not exist.</msg>
<status status="PASS" endtime="20170731 17:06:48.275" starttime="20170731 17:06:48.266"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<msg timestamp="20170731 17:06:48.280" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170731 17:06:48.280" starttime="20170731 17:06:48.276"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:48.280" starttime="20170731 17:06:48.265"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:48.280" starttime="20170731 17:06:40.187"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:48.280" starttime="20170731 17:06:40.187"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Test Variable</arg>
<arg>${TM500_Use_Tag}</arg>
<arg>unused</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:48.281" starttime="20170731 17:06:48.280"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Pppoe_Tag}</arg>
<arg>unused</arg>
</arguments>
<msg timestamp="20170731 17:06:48.281" level="INFO">${TM500_Pppoe_Tag} = unused</msg>
<status status="PASS" endtime="20170731 17:06:48.282" starttime="20170731 17:06:48.281"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:48.282" starttime="20170731 17:06:35.155"></status>
</kw>
<status status="PASS" endtime="20170731 17:06:48.282" starttime="20170731 17:06:35.154"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<msg timestamp="20170731 17:06:48.289" level="FAIL">Variable ${route_add_cpe_pc} does not exist.</msg>
<status status="FAIL" endtime="20170731 17:06:48.289" starttime="20170731 17:06:48.283"></status>
</kw>
<msg timestamp="20170731 17:06:48.290" level="INFO">${return} = ('FAIL', u'Variable ${route_add_cpe_pc} does not exist.')</msg>
<status status="PASS" endtime="20170731 17:06:48.290" starttime="20170731 17:06:48.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${route_add_cpe_pc}'=='true'</arg>
<arg>Execute Shell Command</arg>
<arg>route delete ${BTS_PC_INFO.IP} mask 255.255.255.255 ${UE1_INFO.ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:06:48.293" starttime="20170731 17:06:48.290"></status>
</kw>
<kw name="Alarm Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20170731 17:06:58.840" level="ERROR">Infomodel not connected.</msg>
<msg timestamp="20170731 17:06:59.437" level="INFO">[infomodel_control.py@82] set up infomodel with following info succeed .
    details: address=192.168.255.1, port=12345, definitions_file_path=None
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}</msg>
<msg timestamp="20170731 17:06:59.437" level="INFO">[infomodel_control.py@100] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170731 17:06:59.437" starttime="20170731 17:06:48.294"></status>
</kw>
<kw name="Fatal Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20170731 17:07:00.152" level="INFO">['fatal'] ['fatal']</msg>
<status status="PASS" endtime="20170731 17:07:00.152" starttime="20170731 17:06:59.437"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<assign>
<var>${return1}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<msg timestamp="20170731 17:07:00.154" level="FAIL">'FZFI_Operational_Cell_block_unblock' does not contain 'Fiber'</msg>
<status status="FAIL" endtime="20170731 17:07:00.154" starttime="20170731 17:07:00.154"></status>
</kw>
<msg timestamp="20170731 17:07:00.154" level="INFO">${return1} = ('FAIL', u"'FZFI_Operational_Cell_block_unblock' does not contain 'Fiber'")</msg>
<status status="PASS" endtime="20170731 17:07:00.154" starttime="20170731 17:07:00.153"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<assign>
<var>${all_fiber_link}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:00.159" starttime="20170731 17:07:00.155"></status>
</kw>
<msg timestamp="20170731 17:07:00.159" level="INFO">${all_fiber_link} = ('PASS', None)</msg>
<status status="PASS" endtime="20170731 17:07:00.159" starttime="20170731 17:07:00.155"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:00.163" starttime="20170731 17:07:00.160"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:00.163" starttime="20170731 17:07:00.159"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Software Reboot Bts</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:00.164" starttime="20170731 17:07:00.164"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Sleep</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:00.164" starttime="20170731 17:07:00.164"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:00.165" starttime="20170731 17:07:00.165"></status>
</kw>
<kw name="Common Test Teardown" library="common_resource">
<doc>[Caution] this keyword step:</doc>
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20170731 17:07:00.166" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20170731 17:07:00.166" starttime="20170731 17:07:00.166"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:00.171" starttime="20170731 17:07:00.168"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:00.172" starttime="20170731 17:07:00.167"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:00.172" starttime="20170731 17:07:00.166"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:00.177" starttime="20170731 17:07:00.173"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:00.178" starttime="20170731 17:07:00.172"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:00.178" starttime="20170731 17:07:00.172"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:00.184" starttime="20170731 17:07:00.179"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:00.184" starttime="20170731 17:07:00.179"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:00.185" starttime="20170731 17:07:00.178"></status>
</kw>
<kw name="Get Active Bts Sw Version" library="tdd_ev_robotws">
<doc>get active BTS SW Build Version from enb targetBD file..</doc>
<assign>
<var>${version}</var>
</assign>
<msg timestamp="20170731 17:07:21.403" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170731 17:07:21.403" level="INFO">[ssh_common.py@203] Last login: Mon Jul 31 17:05:20 CST 2017 from 10.69.80.114 on ssh
-bash-4.4#</msg>
<msg timestamp="20170731 17:07:21.403" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x054150D0&gt;</msg>
<msg timestamp="20170731 17:07:21.403" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170731 17:07:21.403" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
-bash-4.4#</msg>
<msg timestamp="20170731 17:07:21.403" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x054150D0&gt;</msg>
<msg timestamp="20170731 17:07:21.403" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170731 17:07:21.403" level="INFO">[ssh_common.py@203] Last login: Mon Jul 31 17:07:29 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20170731 17:07:21.404" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04C9A238&gt;</msg>
<msg timestamp="20170731 17:07:21.404" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20170731 17:07:21.404" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_170731_065137.xml
-bash-4.4#</msg>
<msg timestamp="20170731 17:07:21.404" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04C9A238&gt;</msg>
<msg timestamp="20170731 17:07:21.404" level="INFO">${version} = TL18_ENB_9999_170731_065137</msg>
<status status="PASS" endtime="20170731 17:07:21.404" starttime="20170731 17:07:00.185"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:21.410" starttime="20170731 17:07:21.406"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:21.410" starttime="20170731 17:07:21.405"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:21.410" starttime="20170731 17:07:21.405"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<status status="PASS" endtime="20170731 17:07:21.414" starttime="20170731 17:07:21.411"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:21.415" starttime="20170731 17:07:21.410"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:21.415" starttime="20170731 17:07:21.410"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:21.415" starttime="20170731 17:07:00.165"></status>
</kw>
<status status="PASS" endtime="20170731 17:07:21.415" starttime="20170731 17:06:34.043"></status>
</kw>
<tags>
<tag>owner-jiaqi.jin@nokia.com</tag>
<tag>QC_464834</tag>
</tags>
<status status="FAIL" endtime="20170731 17:07:21.415" critical="yes" starttime="20170731 17:03:15.572">AttributeError: QuickTest.Application.Quit</status>
</test>
<doc>TD-LTE I&amp;V SISO1</doc>
<status status="FAIL" endtime="20170731 17:07:21.441" starttime="20170731 17:01:50.527"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">owner-jiaqi.jin@nokia.com</stat>
<stat fail="1" pass="0">QC_464834</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="FZFI Operational Cell block unblock" pass="0">FZFI Operational Cell block unblock</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170731 17:01:51.424" level="ERROR">Loading tdd_config has failed. Please check if: 
       1. you executed pybot with --variable CONFIGURATION:$your_tl_config 
          i.e. pybot --variable CONFIGURATION:Wroclaw.test 
       2. check if there is no problem with your configuration 
       Error msg: Variable ${CONFIGURATION} does not exist.
</msg>
<msg timestamp="20170731 17:06:58.840" level="ERROR">Infomodel not connected.</msg>
</errors>
</robot>
