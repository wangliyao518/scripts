<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170807 16:25:35.907" generator="Robot 3.0 (Python 2.7.5 on win32)">
<suite source="D:\TA\Test_Case_Svn\Trunk_CRT\SISO1\CRT\CPRI_Single_FZFI\FZFI_Addtional_SWDL_SW_upgrade\FZFI_Addtional_SWDL_SW_upgrade.html" id="s1" name="FZFI Addtional SWDL SW upgrade">
<kw type="setup" name="Common Suite Setup" library="common_resource">
<doc>this keyword create suite name directory path as D:\TA_logs//logs//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20170807 16:25:38.728" level="INFO">${timestamp} = 20170807162538</msg>
<status status="PASS" endtime="20170807 16:25:38.729" starttime="20170807 16:25:38.683"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_NAME[:50]}</arg>
<arg>\\s+$</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${FILE_NAME}</var>
</assign>
<msg timestamp="20170807 16:25:38.730" level="INFO">${FILE_NAME} = FZFI Addtional SWDL SW upgrade</msg>
<status status="PASS" endtime="20170807 16:25:38.730" starttime="20170807 16:25:38.729"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>ev_logs</arg>
<arg>${FILE_NAME}_${timestamp}</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20170807 16:25:38.730" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA_logs\ev_logs\FZFI Addtional SWDL SW upgrade_20170807162538</msg>
<status status="PASS" endtime="20170807 16:25:38.730" starttime="20170807 16:25:38.730"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20170807 16:25:38.731" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538</msg>
<status status="PASS" endtime="20170807 16:25:38.731" starttime="20170807 16:25:38.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170807 16:25:38.732" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538</msg>
<status status="PASS" endtime="20170807 16:25:38.732" starttime="20170807 16:25:38.731"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170807 16:25:38.737" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538"&gt;D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170807 16:25:38.737" starttime="20170807 16:25:38.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170807 16:25:38.738" level="INFO">save log dir:D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538</msg>
<status status="PASS" endtime="20170807 16:25:38.738" starttime="20170807 16:25:38.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${snapshot_flag}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 16:25:38.741" level="INFO">${snapshot_flag} = 0</msg>
<status status="PASS" endtime="20170807 16:25:38.741" starttime="20170807 16:25:38.738"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<msg timestamp="20170807 16:25:38.767" level="FAIL">Variable ${TEST LOG DIR} does not exist.</msg>
<status status="FAIL" endtime="20170807 16:25:38.767" starttime="20170807 16:25:38.755"></status>
</kw>
<msg timestamp="20170807 16:25:38.767" level="INFO">${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')</msg>
<status status="PASS" endtime="20170807 16:25:38.767" starttime="20170807 16:25:38.755"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:25:38.769" starttime="20170807 16:25:38.769"></status>
</kw>
<msg timestamp="20170807 16:25:38.769" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170807 16:25:38.769" starttime="20170807 16:25:38.768"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:25:38.777" starttime="20170807 16:25:38.773"></status>
</kw>
<msg timestamp="20170807 16:25:38.777" level="INFO">${log dir} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538</msg>
<status status="PASS" endtime="20170807 16:25:38.777" starttime="20170807 16:25:38.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20170807 16:25:38.783" level="INFO">${SAVE LOG DIRECTORY} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538</msg>
<status status="PASS" endtime="20170807 16:25:38.783" starttime="20170807 16:25:38.777"></status>
</kw>
<status status="PASS" endtime="20170807 16:25:38.783" starttime="20170807 16:25:38.754"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Make Sure FCT Ping Ok</arg>
</arguments>
<kw name="Make Sure FCT Ping Ok" library="common_resource">
<kw name="Ping Should Ok" library="tdd_ev_robotws">
<doc>This function is used for check whether ping host success, if yes, return 1, else return 0</doc>
<arguments>
<arg>${FCMD_IP}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20170807 16:25:38.820" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20170807 16:25:38.820" starttime="20170807 16:25:38.785"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${FTM_IP}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:25:38.821" starttime="20170807 16:25:38.820"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Btscli Disable Bts Port Security</arg>
</arguments>
<status status="PASS" endtime="20170807 16:25:38.821" starttime="20170807 16:25:38.821"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>60</arg>
<arg>${FCMD_IP}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:25:38.822" starttime="20170807 16:25:38.822"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5min</arg>
<arg>5s</arg>
<arg>_make sure fctb connect ok</arg>
</arguments>
<status status="PASS" endtime="20170807 16:25:38.822" starttime="20170807 16:25:38.822"></status>
</kw>
<status status="PASS" endtime="20170807 16:25:38.823" starttime="20170807 16:25:38.784"></status>
</kw>
<status status="PASS" endtime="20170807 16:25:38.823" starttime="20170807 16:25:38.784"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>get_enb_infomation</arg>
</arguments>
<kw name="Get Enb Infomation" library="tdd_ev_robotws">
<doc>This keyword will print bts sw version, bbu type and RRU type.</doc>
<msg timestamp="20170807 16:26:23.998" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170807 16:26:24.090" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170807 16:26:35.307" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170807 16:26:35.337" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170807 16:26:35.891" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170807 16:26:35.931" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1502094345&amp;token=2bf2df1178bb0859984d4e5d59781e1876bfeb8a1b4e7f2c598b58f338d60a9c&amp;frame=sshservice'</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;SSH Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1502094350&amp;token=2f9ed797f5cf641f204136469dd899c93f5261894f6258a5df9fd5d843b93045&amp;frame=RndPortsService'</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;R&amp;D Ports Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@203] Last login: Mon Aug  7 16:05:13 CST 2017 from 10.69.80.114 on ssh
-bash-4.4#</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x056178A0&gt;</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
-bash-4.4#</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x056178A0&gt;</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@203] Last login: Mon Aug  7 16:25:54 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05620B48&gt;</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_170806_065459.xml
-bash-4.4#</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05620B48&gt;</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[enb_resource.py@1086] 
 ****Current BTS version is 'TL18_ENB_9999_170806_065459' *****</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[enb_resource.py@1113] activeBuildVersion=TL18_ENB_9999_170806_065459</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@203] Last login: Mon Aug  7 16:26:05 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x047C43F0&gt;</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@258] Execute command: ls /ram/SiteConf.xml</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@314] Get Response: ls /ram/SiteConf.xml
/ram/SiteConf.xml
-bash-4.4#</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x047C43F0&gt;</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[sftp_control.py@176] /ram/SiteConf.xml</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[sftp_control.py@79] sftp download from '/ram/SiteConf.xml' to 'D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\SiteConf.xml' is ok. local file size is 226k</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[ssh_common.py@203] Last login: Mon Aug  7 16:26:26 CST 2017 from 192.168.255.126 on ssh
-bash-4.4#</msg>
<msg timestamp="20170807 16:26:59.599" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0569B800&gt;</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
-bash-4.4#</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0569B800&gt;</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[enb_resource.py@375] The real falsh folder is /ffs/fs2</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[sftp_control.py@176] /ffs/fs2/FileDirectory.xml</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs2/FileDirectory.xml' to 'D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FileDirectory_20170807162624.xml' is ok. local file size is 37k</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[sftp_control.py@176] /ffs/fs2/config/SCFC_86.xml</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs2/config/SCFC_86.xml' to 'D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\SCFC_86.xml' is ok. local file size is 115k</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[enb_resource.py@1086] 
 ****Current bbu type is 'FSIH' *****</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[enb_resource.py@1208] HW_BBU_TYPE=FSIH</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[enb_resource.py@1086] 
 ****Current rru type is 'FZFI-d:FZFI-f' *****</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[enb_resource.py@1211] HW_RRU_TYPE=FZFI-d:FZFI-f</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[enb_resource.py@1086] 
 ****Current HW type is 'null' *****</msg>
<msg timestamp="20170807 16:26:59.600" level="INFO">[enb_resource.py@1214] BTS_HW_TYPE=null</msg>
<status status="PASS" endtime="20170807 16:26:59.602" starttime="20170807 16:25:38.823"></status>
</kw>
<status status="PASS" endtime="20170807 16:26:59.602" starttime="20170807 16:25:38.823"></status>
</kw>
<kw name="Set Library Search Order" library="BuiltIn">
<doc>Sets the resolution order to use when a name matches multiple keywords.</doc>
<arguments>
<arg>tdd_ev_robotws</arg>
<arg>OperatingSystem</arg>
</arguments>
<status status="PASS" endtime="20170807 16:26:59.603" starttime="20170807 16:26:59.602"></status>
</kw>
<kw name="Initial Connection With BTS PC" library="common_resource">
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20170807 16:26:59.604" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20170807 16:26:59.604" starttime="20170807 16:26:59.603"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>${TELNET_PORT}</arg>
<arg>${SSH_PORT}</arg>
</arguments>
<assign>
<var>${conn_port}</var>
</assign>
<msg timestamp="20170807 16:26:59.608" level="INFO">${conn_port} = 23</msg>
<status status="PASS" endtime="20170807 16:26:59.608" starttime="20170807 16:26:59.605"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>TELNET</arg>
<arg>SSH</arg>
</arguments>
<assign>
<var>${conn_type}</var>
</assign>
<msg timestamp="20170807 16:26:59.612" level="INFO">${conn_type} = TELNET</msg>
<status status="PASS" endtime="20170807 16:26:59.612" starttime="20170807 16:26:59.608"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>30</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${timeout}</var>
</assign>
<msg timestamp="20170807 16:26:59.615" level="INFO">${timeout} = 30</msg>
<status status="PASS" endtime="20170807 16:26:59.615" starttime="20170807 16:26:59.612"></status>
</kw>
<kw name="Connect To Host" library="tdd_ev_robotws">
<doc>Used to connect to host, either TELNET or SSH</doc>
<arguments>
<arg>${BTS_PC_INFO.IP}</arg>
<arg>port=${conn_port}</arg>
<arg>username=${BTS_PC_INFO.USERNAME}</arg>
<arg>password=${BTS_PC_INFO.PASSWORD}</arg>
<arg>conn_type=${conn_type}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${BTS_PC_CONNECTION}</var>
</assign>
<msg timestamp="20170807 16:27:01.070" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 

login:</msg>
<msg timestamp="20170807 16:27:01.070" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20170807 16:27:01.070" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester
password:</msg>
<msg timestamp="20170807 16:27:01.070" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20170807 16:27:01.070" level="INFO">[telnet_common.py@246]  

*===============================================================
Microsoft Telnet Server.
*===============================================================
C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170807 16:27:01.071" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<status status="PASS" endtime="20170807 16:27:01.071" starttime="20170807 16:26:59.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170807 16:27:01.072" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<status status="PASS" endtime="20170807 16:27:01.072" starttime="20170807 16:27:01.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>Execute Shell Command</arg>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<msg timestamp="20170807 16:27:02.275" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:27:02.275" level="INFO">[telnet_common.py@276] Execute command: tlntadmn config timeoutactive=no</msg>
<msg timestamp="20170807 16:27:02.276" level="INFO">[telnet_common.py@306] Get Response: tlntadmn config timeoutactive=no
The settings were successfully updated.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170807 16:27:02.276" starttime="20170807 16:27:01.076"></status>
</kw>
<status status="PASS" endtime="20170807 16:27:02.276" starttime="20170807 16:27:01.072"></status>
</kw>
<status status="PASS" endtime="20170807 16:27:02.276" starttime="20170807 16:26:59.603"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170807 16:27:02.280" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;.</msg>
<status status="PASS" endtime="20170807 16:27:02.280" starttime="20170807 16:27:02.277"></status>
</kw>
<status status="PASS" endtime="20170807 16:27:02.280" starttime="20170807 16:25:38.682"></status>
</kw>
<test id="s1-t1" name="FZFI_Addtional_SWDL_SW_upgrade">
<kw type="setup" name="Common Test Setup" library="common_resource">
<doc>this keyword create case name directory path as D:\TA_logs//ev_logs//D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20170807 16:27:02.286" level="INFO">${timestamp} = 20170807162702</msg>
<status status="PASS" endtime="20170807 16:27:02.286" starttime="20170807 16:27:02.285"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20170807 16:27:02.287" level="INFO">${TEST_LOG_DIR} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade</msg>
<status status="PASS" endtime="20170807 16:27:02.287" starttime="20170807 16:27:02.286"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20170807 16:27:02.287" level="INFO">${TEST_LOG_DIR} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade</msg>
<status status="PASS" endtime="20170807 16:27:02.287" starttime="20170807 16:27:02.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170807 16:27:02.288" level="INFO">${TEST_LOG_DIR} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade</msg>
<status status="PASS" endtime="20170807 16:27:02.288" starttime="20170807 16:27:02.288"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170807 16:27:02.291" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade"&gt;D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170807 16:27:02.292" starttime="20170807 16:27:02.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170807 16:27:02.292" level="INFO">save log dir:D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade</msg>
<status status="PASS" endtime="20170807 16:27:02.292" starttime="20170807 16:27:02.292"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${BTS PC CONNECTION.connected}</arg>
<arg>Initial Connection With BTS PC</arg>
</arguments>
<status status="PASS" endtime="20170807 16:27:02.293" starttime="20170807 16:27:02.292"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:27:02.295" starttime="20170807 16:27:02.295"></status>
</kw>
<msg timestamp="20170807 16:27:02.295" level="INFO">${case_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170807 16:27:02.296" starttime="20170807 16:27:02.294"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:27:02.297" starttime="20170807 16:27:02.296"></status>
</kw>
<msg timestamp="20170807 16:27:02.297" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170807 16:27:02.297" starttime="20170807 16:27:02.296"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<msg timestamp="20170807 16:27:02.300" level="INFO">${log dir} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade</msg>
<status status="PASS" endtime="20170807 16:27:02.300" starttime="20170807 16:27:02.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20170807 16:27:02.301" level="INFO">${SAVE LOG DIRECTORY} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade</msg>
<status status="PASS" endtime="20170807 16:27:02.301" starttime="20170807 16:27:02.301"></status>
</kw>
<status status="PASS" endtime="20170807 16:27:02.302" starttime="20170807 16:27:02.294"></status>
</kw>
<status status="PASS" endtime="20170807 16:27:02.302" starttime="20170807 16:27:02.285"></status>
</kw>
<kw name="Reset_BTS_If_Not_Onair" library="SISO1 Resource">
<arguments>
<arg>${source_scf}</arg>
<arg>${parameter_list}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170807 16:27:02.310" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;.</msg>
<status status="PASS" endtime="20170807 16:27:02.310" starttime="20170807 16:27:02.303"></status>
</kw>
<kw name="Parse Ping Result" library="tdd_ev_robotws">
<doc>This keyword test the reachability of remote system.</doc>
<arguments>
<arg>192.168.255.1</arg>
</arguments>
<assign>
<var>${package_summary}</var>
<var>${ping_delay}</var>
</assign>
<msg timestamp="20170807 16:27:06.518" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:27:06.518" level="INFO">[telnet_common.py@276] Execute command: ping  192.168.255.1</msg>
<msg timestamp="20170807 16:27:06.518" level="INFO">[telnet_common.py@306] Get Response: ping  192.168.255.1

Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms

C:\Users\tdlte-tester&gt;
Total ping delay is: [1, 1, 1, 1]
Statistic ping delay is: [1, 1, 1, 1]
Valid ping delay is: [1, 1, 1, 1]</msg>
<msg timestamp="20170807 16:27:06.518" level="INFO">${package_summary} = ('4', '4', '0')</msg>
<msg timestamp="20170807 16:27:06.518" level="INFO">${ping_delay} = [1, 1, 1.0]</msg>
<status status="PASS" endtime="20170807 16:27:06.518" starttime="20170807 16:27:02.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Restart Device With Powerbreaker</arg>
<arg>${bts_powerbreak}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:27:06.522" starttime="20170807 16:27:06.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20170807 16:27:06.525" starttime="20170807 16:27:06.522"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Check_BTS_Onair_Status</arg>
</arguments>
<assign>
<var>${result}</var>
<var>${ret}</var>
</assign>
<kw name="Check_BTS_Onair_Status" library="SISO1 Resource">
<kw name="Start Infomodel" library="tdd_ev_robotws">
<doc>Setup InfoModel library and Connect to InfoModel.</doc>
<arguments>
<arg>port=${BTS_INFOMODEL_PORT}</arg>
</arguments>
<msg timestamp="20170807 16:27:17.936" level="INFO">[infomodel_control.py@157] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None</msg>
<msg timestamp="20170807 16:27:17.936" level="INFO">[infomodel_control.py@161] start infomodel succeed .</msg>
<msg timestamp="20170807 16:27:17.936" level="INFO">[infomodel_control.py@163] start infomodel logger succeed .</msg>
<status status="PASS" endtime="20170807 16:27:17.936" starttime="20170807 16:27:06.526"></status>
</kw>
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]</arg>
<arg>timeout=5</arg>
</arguments>
<msg timestamp="20170807 16:27:18.942" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' succeed .</msg>
<status status="PASS" endtime="20170807 16:27:18.942" starttime="20170807 16:27:17.937"></status>
</kw>
<kw name="Stop Infomodel" library="tdd_ev_robotws">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20170807 16:27:19.638" level="INFO">[infomodel_control.py@186] stop infomodel logger succeed .</msg>
<msg timestamp="20170807 16:27:19.638" level="INFO">[infomodel_control.py@198] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170807 16:27:19.639" starttime="20170807 16:27:18.942"></status>
</kw>
<status status="PASS" endtime="20170807 16:27:19.639" starttime="20170807 16:27:06.526"></status>
</kw>
<msg timestamp="20170807 16:27:19.639" level="INFO">${result} = PASS</msg>
<msg timestamp="20170807 16:27:19.639" level="INFO">${ret} = None</msg>
<status status="PASS" endtime="20170807 16:27:19.640" starttime="20170807 16:27:06.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'FAIL'=='${result}'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<status status="PASS" endtime="20170807 16:27:19.644" starttime="20170807 16:27:19.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'FAIL'=='${result}'</arg>
<arg>BTS_On_Air</arg>
<arg>${source_scf}</arg>
<arg>${parameters_list}</arg>
<arg>${bts_powerbreak}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:27:19.648" starttime="20170807 16:27:19.644"></status>
</kw>
<status status="PASS" endtime="20170807 16:27:19.648" starttime="20170807 16:27:02.302"></status>
</kw>
<kw name="_Update_SW_to_BTS_Site">
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170807 16:27:23.582" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:27:23.582" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170807 16:27:23.582" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\WIN7-631\ROOT\CIMV2:Win32_Process.Handle="5484"
Instance deletion successful.

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170807 16:27:23.582" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:27:23.582" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170807 16:27:23.582" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\WIN7-631\ROOT\CIMV2:Win32_Process.Handle="3856"
Instance deletion successful.

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170807 16:27:23.582" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:27:23.582" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170807 16:27:23.582" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170807 16:27:23.583" starttime="20170807 16:27:19.649"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20170807 16:27:23.594" starttime="20170807 16:27:23.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20170807 16:27:23.600" starttime="20170807 16:27:23.594"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170807 16:27:23.602" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA_logs\\ev_logs\\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\\FZFI_Addtional_SWDL_SW_upgrade\\', u'CheckExist=1']</msg>
<status status="PASS" endtime="20170807 16:27:23.602" starttime="20170807 16:27:23.600"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:27:23.603" starttime="20170807 16:27:23.602"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170807 16:28:25.990" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\GUILog\qtp_log20170807162723\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170807 16:28:25.991" starttime="20170807 16:27:23.603"></status>
</kw>
<status status="PASS" endtime="20170807 16:28:25.991" starttime="20170807 16:27:23.592"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>30 sec</arg>
</arguments>
<msg timestamp="20170807 16:28:55.992" level="INFO">Slept 30 seconds</msg>
<status status="PASS" endtime="20170807 16:28:55.992" starttime="20170807 16:28:25.991"></status>
</kw>
<kw name="GUI SM MenuOperation" library="gui_resource">
<doc>This keyword is provid menu operation in BTS Site Manager</doc>
<arguments>
<arg>Software//Update SW to BTS Site...</arg>
<arg>UpdateSWToBTS</arg>
<arg>${bts_sw_dir}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>MenuName=${MenuName}</arg>
<arg>OperationName=${OperationName}</arg>
<arg>JEditValue=${JEditValue}</arg>
<arg>JEditName=${JEditName}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170807 16:28:56.002" level="INFO">${para_list} = [u'MenuName=Software//Update SW to BTS Site...', u'OperationName=UpdateSWToBTS', u'JEditValue=', u'JEditName=D:\\BTS_SW_trunk\\TL00_ENB_9999_170807_065465\\TL00_ENB_9999_170807_065465_release_BTSSM_do...</msg>
<status status="PASS" endtime="20170807 16:28:56.002" starttime="20170807 16:28:56.001"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}SiteMan_MenuOperation</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170807 16:41:38.933" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\SiteMan_MenuOperation is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\SiteMan_MenuOperation ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
MenuName="Software//Update SW to BTS Site..."
OperationName="UpdateSWToBTS"
JEditValue=""
JEditName="D:\BTS_SW_trunk\TL00_ENB_9999_170807_065465\TL00_ENB_9999_170807_065465_release_BTSSM_downloadable.zip"
LogPath="D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\"
&lt;QTP&gt; Save log to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\GUILog\qtp_log20170807162856\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170807 16:41:38.934" starttime="20170807 16:28:56.003"></status>
</kw>
<status status="PASS" endtime="20170807 16:41:38.935" starttime="20170807 16:28:56.001"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Check Bts Until Onair</arg>
<arg>log_name=SW_upgrade</arg>
</arguments>
<kw name="Check Bts Until Onair" library="tdd_ev_robotws">
<doc>check bts until all cell is onair with infomodel, and have PBCH in udp log.</doc>
<arguments>
<arg>log_name=SW_upgrade</arg>
</arguments>
<msg timestamp="20170807 16:51:55.596" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'</msg>
<msg timestamp="20170807 16:51:55.596" level="INFO">[btslog_control.py@174] use ip is 192.168.255.126</msg>
<msg timestamp="20170807 16:51:55.596" level="INFO">[file_common.py@209] Directory "D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade" already exists, no need to create it again.</msg>
<msg timestamp="20170807 16:51:55.596" level="INFO">[infomodel_control.py@157] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None</msg>
<msg timestamp="20170807 16:51:55.596" level="INFO">[infomodel_control.py@161] start infomodel succeed .</msg>
<msg timestamp="20170807 16:51:55.596" level="INFO">[infomodel_control.py@163] start infomodel logger succeed .</msg>
<msg timestamp="20170807 16:51:55.596" level="INFO">[enb_resource.py@180] check onair failed 1st way, InfoModel objects not found.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.596" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, InfoModel objects not found.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.596" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.597" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.598" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'NotCalculated', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'/MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001/RU_L-1 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/HWTOP_L-1/CABLNK_L-1001 has incorrect state info: operationalState = Disabled; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-2; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-7; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-5; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-16; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-11; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-10; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-12; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-4; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-8; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-6; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-1; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-9; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-13; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-3; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-15; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-14; ', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': ['NotEnoughRadioHardware'], u'proceduralState': 'Initializing', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Failed'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'NotCalculated', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'/MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001/RU_L-1 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/HWTOP_L-1/CABLNK_L-1001 has incorrect state info: operationalState = Disabled; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-2; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-7; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-5; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-16; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-11; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-10; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-12; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-4; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-8; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-6; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-1; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-9; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-13; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-3; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-15; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-14; ', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': ['NotEnoughRadioHardware'], u'proceduralState': 'Initializing', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Failed'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'NotCalculated', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'/MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001/RU_L-1 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/HWTOP_L-1/CABLNK_L-1001 has incorrect state info: operationalState = Disabled; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-2; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-7; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-5; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-16; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-11; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-10; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-12; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-4; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-8; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-6; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-1; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-9; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-13; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-3; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-15; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-14; ', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': ['NotEnoughRadioHardware'], u'proceduralState': 'Initializing', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Failed'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'NotCalculated', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'/MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001/RU_L-1 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/HWTOP_L-1/CABLNK_L-1001 has incorrect state info: operationalState = Disabled; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-2; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-7; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-5; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-16; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-11; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-10; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-12; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-4; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-8; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-6; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-1; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-9; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-13; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-3; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-15; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-14; ', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': ['NotEnoughRadioHardware'], u'proceduralState': 'Initializing', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Failed'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'NotCalculated', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'/MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001/RU_L-1 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/HWTOP_L-1/CABLNK_L-1001 has incorrect state info: operationalState = Disabled; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-2; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-7; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-5; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-16; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-11; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-10; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-12; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-4; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-8; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-6; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-1; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-9; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-13; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-3; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-15; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-14; ', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': ['NotEnoughRadioHardware'], u'proceduralState': 'Initializing', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Failed'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'NotCalculated', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'/MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001/RU_L-1 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/HWTOP_L-1/CABLNK_L-1001 has incorrect state info: operationalState = Disabled; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-2; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-7; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-5; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-16; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-11; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-10; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-12; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-4; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-8; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-6; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-1; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-9; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-13; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-3; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-15; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-14; ', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': ['NotEnoughRadioHardware'], u'proceduralState': 'Initializing', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Failed'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'NotCalculated', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'/MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001/RU_L-1 has incorrect state info: operationalState = Disabled; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-2; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-7; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-5; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-16; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-11; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-10; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-12; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-4; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-8; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-6; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-1; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-9; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-13; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-3; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-15; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-14; ', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': ['NotEnoughRadioHardware'], u'proceduralState': 'Initializing', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Failed'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'NotCalculated', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'/MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001 has incorrect state info: operationalState = Disabled; /MRBTS-1/RAT-1/BTS_L-1/EQM_L-1/RMOD_L-1001/RU_L-1 has incorrect state info: operationalState = Disabled; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-2; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-7; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-5; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-16; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-11; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-10; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-12; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-4; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-8; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-6; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-1; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-9; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-13; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-3; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-15; Hardware not ready for: /MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1/CHANNEL_GROUP_M-1/CHANNEL_M-14; ', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': ['NotEnoughRadioHardware'], u'proceduralState': 'Initializing', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Failed'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.599" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'NotRoutable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'Uninitialized', u'testingState': 'Disabled', u'delayCalculationState': 'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@180] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@197] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@209] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@220] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': 'Routable', u'bbCalcState': 'CalculationDone', u'rat': 'LTE', u'gainCalcState': 'NotCalculated', u'setupAllowed': True, u'carriersState': 'UpdatedTiming', u'testingState': 'Disabled', u'delayCalculationState': 'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': 'Unblocked', u'powerBreakLockingState': 'Unlocked', u'blockingState': 'Unblocked', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'proceduralState': 'Validated', u'recoveryLockingState': 'Unlocked', u'operationalState': 'Disabled', u'availabilityStatus': 'Offline'}, u'deploymentCalcState': 'CalculationDone', u'timeDomainState': 'HardwareFullyConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20170807 16:51:55.600" level="WARN">[enb_resource.py@225] infomodel check every cell onair failed</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[enb_resource.py@249] check bts onair failed with error: check msg '['PBCH']' failed in D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\SW_upgrade_20170807164138.log</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@214] save infomodel log to file: 'D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\im_20170807165154' succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@186] stop infomodel logger succeed .</msg>
<msg timestamp="20170807 16:51:55.600" level="INFO">[infomodel_control.py@198] stop infomodel succeed .</msg>
<msg timestamp="20170807 16:51:55.613" level="FAIL">check bts onair failed!</msg>
<status status="FAIL" endtime="20170807 16:51:55.613" starttime="20170807 16:41:38.936"></status>
</kw>
<status status="PASS" endtime="20170807 16:51:55.613" starttime="20170807 16:41:38.935"></status>
</kw>
<kw name="Operate Ssh And Rdport" library="tdd_ev_robotws">
<doc>this keyword operate ssh and rdports.</doc>
<arguments>
<arg>enable</arg>
<arg>both</arg>
</arguments>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1502095920&amp;token=457385bf00320a3222fd6daf4528f8baa99f4932bb707319a1b0115f287f5e05&amp;frame=sshservice'</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;SSH Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1502095925&amp;token=cec0c53e5daa240f45e435207b13ac1fac15640e3532be36845eea4b1d531957&amp;frame=RndPortsService'</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170807 16:52:07.234" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;R&amp;D Ports Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" endtime="20170807 16:52:07.235" starttime="20170807 16:51:55.614"></status>
</kw>
<kw name="Get Active Bts Sw Version" library="tdd_ev_robotws">
<doc>get active BTS SW Build Version from enb targetBD file..</doc>
<assign>
<var>${return1}</var>
</assign>
<msg timestamp="20170807 16:52:28.547" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170807 16:52:28.547" level="INFO">[ssh_common.py@203] Last login: Mon Aug  7 16:34:34 CST 2017 from 10.69.80.114 on ssh
-bash-4.4#</msg>
<msg timestamp="20170807 16:52:28.547" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x058C0B20&gt;</msg>
<msg timestamp="20170807 16:52:28.547" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170807 16:52:28.547" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
-bash-4.4#</msg>
<msg timestamp="20170807 16:52:28.547" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x058C0B20&gt;</msg>
<msg timestamp="20170807 16:52:28.547" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170807 16:52:28.547" level="INFO">[ssh_common.py@203] Last login: Mon Aug  7 16:52:10 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20170807 16:52:28.547" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x058C0C10&gt;</msg>
<msg timestamp="20170807 16:52:28.547" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20170807 16:52:28.547" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_170807_065465.xml
-bash-4.4#</msg>
<msg timestamp="20170807 16:52:28.547" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x058C0C10&gt;</msg>
<msg timestamp="20170807 16:52:28.549" level="INFO">${return1} = TL18_ENB_9999_170807_065465</msg>
<status status="PASS" endtime="20170807 16:52:28.549" starttime="20170807 16:52:07.236"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${return1[5:]}</arg>
<arg>${TARGET_BTS_VERSION_DIFFERENT[5:]}</arg>
</arguments>
<msg timestamp="20170807 16:52:28.550" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 16:52:28.550" starttime="20170807 16:52:28.549"></status>
</kw>
<status status="PASS" endtime="20170807 16:52:28.550" starttime="20170807 16:27:19.648"></status>
</kw>
<kw name="_Install_BTSSM">
<arguments>
<arg>${TARGET_BTS_VERSION_DIR}</arg>
</arguments>
<kw name="Get Latest File" library="tdd_ev_robotws">
<doc>This keyword gets latest modified file in given directory,</doc>
<arguments>
<arg>${sm_sw_folder}</arg>
<arg>exe</arg>
</arguments>
<assign>
<var>${return2}</var>
</assign>
<msg timestamp="20170807 16:52:28.560" level="INFO">[file_control.py@186] The Latest file is 'D:\BTS_SW_trunk\BTSSiteEM-TL00-0000_000324_000000.exe'</msg>
<msg timestamp="20170807 16:52:28.560" level="INFO">${return2} = D:\BTS_SW_trunk\BTSSiteEM-TL00-0000_000324_000000.exe</msg>
<status status="PASS" endtime="20170807 16:52:28.560" starttime="20170807 16:52:28.551"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>GUI SM InstallSMApplication</arg>
<arg>${return2}</arg>
<arg>Normal</arg>
</arguments>
<assign>
<var>${status1}</var>
<var>${errorinfo1}</var>
</assign>
<kw name="GUI SM InstallSMApplication" library="gui_resource">
<doc>the keyword is used for BTS Site Manager application installing.</doc>
<arguments>
<arg>${return2}</arg>
<arg>Normal</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>ApplicationPath=${ApplicationPath}</arg>
<arg>InstallMode=${InstallMode}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>InstallOption=${InstallOption}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170807 16:52:28.563" level="INFO">${para_list} = [u'ApplicationPath=D:\\BTS_SW_trunk\\BTSSiteEM-TL00-0000_000324_000000.exe', u'InstallMode=Normal', u'LogPath=D:\\TA_logs\\ev_logs\\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\\FZFI_Addtional_SWDL_S...</msg>
<status status="PASS" endtime="20170807 16:52:28.563" starttime="20170807 16:52:28.562"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}InstallSeMApplication</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170807 16:54:07.821" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\InstallSeMApplication is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\InstallSeMApplication ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
ApplicationPath="D:\BTS_SW_trunk\BTSSiteEM-TL00-0000_000324_000000.exe"
InstallMode="Normal"
LogPath="D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\"
InstallOption=""
&lt;QTP&gt; Save log to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\GUILog\qtp_log20170807165228\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170807 16:54:07.821" starttime="20170807 16:52:28.563"></status>
</kw>
<status status="PASS" endtime="20170807 16:54:07.822" starttime="20170807 16:52:28.561"></status>
</kw>
<msg timestamp="20170807 16:54:07.822" level="INFO">${status1} = PASS</msg>
<msg timestamp="20170807 16:54:07.822" level="INFO">${errorinfo1} = None</msg>
<status status="PASS" endtime="20170807 16:54:07.822" starttime="20170807 16:52:28.561"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword if</arg>
<arg>'${status1}'=='FAIL'</arg>
<arg>GUI SM InstallSMApplication</arg>
<arg>${return2}</arg>
<arg>Normal</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status1}'=='FAIL'</arg>
<arg>GUI SM InstallSMApplication</arg>
<arg>${return2}</arg>
<arg>Normal</arg>
</arguments>
<status status="PASS" endtime="20170807 16:54:07.826" starttime="20170807 16:54:07.823"></status>
</kw>
<status status="PASS" endtime="20170807 16:54:07.826" starttime="20170807 16:54:07.822"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${return2}</arg>
</arguments>
<msg timestamp="20170807 16:54:07.827" level="INFO">${return2} = D:\BTS_SW_trunk\BTSSiteEM-TL00-0000_000324_000000.exe</msg>
<status status="PASS" endtime="20170807 16:54:07.827" starttime="20170807 16:54:07.826"></status>
</kw>
<status status="PASS" endtime="20170807 16:54:07.827" starttime="20170807 16:52:28.551"></status>
</kw>
<kw name="_Get_SM_Version">
<assign>
<var>${sm_version}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${return2}</arg>
<arg>\\</arg>
</arguments>
<assign>
<var>${return3}</var>
</assign>
<msg timestamp="20170807 16:54:07.828" level="INFO">${return3} = [u'D:', u'BTS_SW_trunk', u'BTSSiteEM-TL00-0000_000324_000000.exe']</msg>
<status status="PASS" endtime="20170807 16:54:07.828" starttime="20170807 16:54:07.828"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${return3[-1]}</arg>
<arg>.</arg>
</arguments>
<assign>
<var>${return4}</var>
</assign>
<msg timestamp="20170807 16:54:07.829" level="INFO">${return4} = [u'BTSSiteEM-TL00-0000_000324_000000', u'exe']</msg>
<status status="PASS" endtime="20170807 16:54:07.829" starttime="20170807 16:54:07.828"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${return4[0]}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>${return5}</var>
</assign>
<msg timestamp="20170807 16:54:07.830" level="INFO">${return5} = [u'BTSSiteEM', u'TL00', u'0000_000324_000000']</msg>
<status status="PASS" endtime="20170807 16:54:07.830" starttime="20170807 16:54:07.829"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=:</arg>
<arg>${return5[1]}</arg>
<arg>${return5[2]}</arg>
</arguments>
<assign>
<var>${return6}</var>
</assign>
<msg timestamp="20170807 16:54:07.831" level="INFO">${return6} = TL00:0000_000324_000000</msg>
<status status="PASS" endtime="20170807 16:54:07.831" starttime="20170807 16:54:07.830"></status>
</kw>
<msg timestamp="20170807 16:54:07.831" level="INFO">${sm_version} = TL00:0000_000324_000000</msg>
<status status="PASS" endtime="20170807 16:54:07.831" starttime="20170807 16:54:07.827"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>glob.glob('${SCFC_DIR}\\${BTS_INFO.NAME}\\*\\SCFC_1.xml')</arg>
<arg>glob</arg>
</arguments>
<assign>
<var>@{scfc_dir}</var>
</assign>
<msg timestamp="20170807 16:54:07.837" level="INFO">@{scfc_dir} = [ D:\TA\BTS1779\20M_D1F1_TM3\SCFC_1.xml | D:\TA\BTS1779\20M_D1F1_TM8\SCFC_1.xml ]</msg>
<status status="PASS" endtime="20170807 16:54:07.837" starttime="20170807 16:54:07.832"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170807 16:54:11.720" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:54:11.720" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170807 16:54:11.720" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170807 16:54:11.720" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:54:11.720" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170807 16:54:11.720" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170807 16:54:11.720" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:54:11.720" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170807 16:54:11.720" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170807 16:54:11.721" starttime="20170807 16:54:07.837"></status>
</kw>
<kw type="for" name="${dir} IN [ @{scfc_dir} ]">
<kw type="foritem" name="${dir} = D:\TA\BTS1779\20M_D1F1_TM3\SCFC_1.xml">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>_Back_Up_the_SCFC</arg>
<arg>${sm_version}</arg>
<arg>${dir}</arg>
</arguments>
<kw name="_Back_Up_the_SCFC">
<arguments>
<arg>${sm_version}</arg>
<arg>${dir}</arg>
</arguments>
<kw name="GUI SM Login CreateFile" library="gui_resource">
<doc>This keyword is used to open Site Manager application by clicking Create File button.</doc>
<arguments>
<arg>${sm_version}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>Package_Version=${Package_Version}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170807 16:54:11.724" level="INFO">${para_list} = [u'Package_Version=TL00:0000_000324_000000', u'LogPath=D:\\TA_logs\\ev_logs\\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\\FZFI_Addtional_SWDL_SW_upgrade\\']</msg>
<status status="PASS" endtime="20170807 16:54:11.724" starttime="20170807 16:54:11.724"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login_CreateFile</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:54:11.725" starttime="20170807 16:54:11.724"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login_CreateFile</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170807 16:54:41.896" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login_CreateFile is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login_CreateFile ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
Package_Version="TL00:0000_000324_000000"
LogPath="D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\"
&lt;QTP&gt; Save log to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\GUILog\qtp_log20170807165411\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170807 16:54:41.896" starttime="20170807 16:54:11.725"></status>
</kw>
<status status="PASS" endtime="20170807 16:54:41.896" starttime="20170807 16:54:11.723"></status>
</kw>
<kw name="GUI SM Create Commissioning File" library="gui_resource">
<doc>This keyword is used to select BTS site and the existing commissioning file from which a new commissioning will be created.</doc>
<arguments>
<arg>${scfcpath}</arg>
<arg>BTS</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>Commissioning_File=${Commissioning_File}</arg>
<arg>BTS_Site=${BTS_Site}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170807 16:54:41.899" level="INFO">${para_list} = [u'Commissioning_File=D:\\TA\\BTS1779\\20M_D1F1_TM3\\SCFC_1.xml', u'BTS_Site=BTS', u'LogPath=D:\\TA_logs\\ev_logs\\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\\FZFI_Addtional_SWDL_SW_upgrade\\']</msg>
<status status="PASS" endtime="20170807 16:54:41.899" starttime="20170807 16:54:41.898"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Create_Commissioning_File</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:54:41.900" starttime="20170807 16:54:41.899"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Create_Commissioning_File</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170807 16:55:00.269" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Create_Commissioning_File is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Create_Commissioning_File ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
Commissioning_File="D:\TA\BTS1779\20M_D1F1_TM3\SCFC_1.xml"
BTS_Site="BTS"
LogPath="D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\"
&lt;QTP&gt; Save log to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\GUILog\qtp_log20170807165441\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170807 16:55:00.269" starttime="20170807 16:54:41.900"></status>
</kw>
<status status="PASS" endtime="20170807 16:55:00.270" starttime="20170807 16:54:41.897"></status>
</kw>
<kw name="GUI SM Save Created Commissioning File" library="gui_resource">
<doc>This keyword is used to save the created commissioning file. It will click Finish button on Summary page and then save the file.</doc>
<arguments>
<arg>${scfcpath}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>Commissioning_File=${Commissioning_File}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170807 16:55:00.271" level="INFO">${para_list} = [u'Commissioning_File=D:\\TA\\BTS1779\\20M_D1F1_TM3\\SCFC_1.xml', u'LogPath=D:\\TA_logs\\ev_logs\\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\\FZFI_Addtional_SWDL_SW_upgrade\\']</msg>
<status status="PASS" endtime="20170807 16:55:00.272" starttime="20170807 16:55:00.271"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Save_Created_Commissioning_File</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:55:00.272" starttime="20170807 16:55:00.272"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Save_Created_Commissioning_File</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170807 16:55:17.946" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Save_Created_Commissioning_File is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Save_Created_Commissioning_File ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
Commissioning_File="D:\TA\BTS1779\20M_D1F1_TM3\SCFC_1.xml"
LogPath="D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\"
&lt;QTP&gt; Save log to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\GUILog\qtp_log20170807165500\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170807 16:55:17.946" starttime="20170807 16:55:00.272"></status>
</kw>
<status status="PASS" endtime="20170807 16:55:17.946" starttime="20170807 16:55:00.270"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170807 16:55:21.945" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:55:21.945" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170807 16:55:21.945" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\WIN7-631\ROOT\CIMV2:Win32_Process.Handle="3620"
Instance deletion successful.

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170807 16:55:21.945" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:55:21.945" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170807 16:55:21.945" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\WIN7-631\ROOT\CIMV2:Win32_Process.Handle="2936"
Instance deletion successful.

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170807 16:55:21.945" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:55:21.945" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170807 16:55:21.945" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170807 16:55:21.946" starttime="20170807 16:55:17.947"></status>
</kw>
<status status="PASS" endtime="20170807 16:55:21.946" starttime="20170807 16:54:11.722"></status>
</kw>
<status status="PASS" endtime="20170807 16:55:21.946" starttime="20170807 16:54:11.722"></status>
</kw>
<status status="PASS" endtime="20170807 16:55:21.946" starttime="20170807 16:54:11.721"></status>
</kw>
<kw type="foritem" name="${dir} = D:\TA\BTS1779\20M_D1F1_TM8\SCFC_1.xml">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>_Back_Up_the_SCFC</arg>
<arg>${sm_version}</arg>
<arg>${dir}</arg>
</arguments>
<kw name="_Back_Up_the_SCFC">
<arguments>
<arg>${sm_version}</arg>
<arg>${dir}</arg>
</arguments>
<kw name="GUI SM Login CreateFile" library="gui_resource">
<doc>This keyword is used to open Site Manager application by clicking Create File button.</doc>
<arguments>
<arg>${sm_version}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>Package_Version=${Package_Version}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170807 16:55:21.949" level="INFO">${para_list} = [u'Package_Version=TL00:0000_000324_000000', u'LogPath=D:\\TA_logs\\ev_logs\\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\\FZFI_Addtional_SWDL_SW_upgrade\\']</msg>
<status status="PASS" endtime="20170807 16:55:21.949" starttime="20170807 16:55:21.949"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login_CreateFile</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:55:21.950" starttime="20170807 16:55:21.950"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login_CreateFile</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170807 16:55:52.260" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login_CreateFile is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login_CreateFile ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
Package_Version="TL00:0000_000324_000000"
LogPath="D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\"
&lt;QTP&gt; Save log to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\GUILog\qtp_log20170807165521\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170807 16:55:52.260" starttime="20170807 16:55:21.950"></status>
</kw>
<status status="PASS" endtime="20170807 16:55:52.260" starttime="20170807 16:55:21.948"></status>
</kw>
<kw name="GUI SM Create Commissioning File" library="gui_resource">
<doc>This keyword is used to select BTS site and the existing commissioning file from which a new commissioning will be created.</doc>
<arguments>
<arg>${scfcpath}</arg>
<arg>BTS</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>Commissioning_File=${Commissioning_File}</arg>
<arg>BTS_Site=${BTS_Site}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170807 16:55:52.263" level="INFO">${para_list} = [u'Commissioning_File=D:\\TA\\BTS1779\\20M_D1F1_TM8\\SCFC_1.xml', u'BTS_Site=BTS', u'LogPath=D:\\TA_logs\\ev_logs\\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\\FZFI_Addtional_SWDL_SW_upgrade\\']</msg>
<status status="PASS" endtime="20170807 16:55:52.263" starttime="20170807 16:55:52.262"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Create_Commissioning_File</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:55:52.264" starttime="20170807 16:55:52.264"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Create_Commissioning_File</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170807 16:56:11.315" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Create_Commissioning_File is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Create_Commissioning_File ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
Commissioning_File="D:\TA\BTS1779\20M_D1F1_TM8\SCFC_1.xml"
BTS_Site="BTS"
LogPath="D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\"
&lt;QTP&gt; Save log to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\GUILog\qtp_log20170807165552\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170807 16:56:11.315" starttime="20170807 16:55:52.265"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:11.315" starttime="20170807 16:55:52.261"></status>
</kw>
<kw name="GUI SM Save Created Commissioning File" library="gui_resource">
<doc>This keyword is used to save the created commissioning file. It will click Finish button on Summary page and then save the file.</doc>
<arguments>
<arg>${scfcpath}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>Commissioning_File=${Commissioning_File}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170807 16:56:11.317" level="INFO">${para_list} = [u'Commissioning_File=D:\\TA\\BTS1779\\20M_D1F1_TM8\\SCFC_1.xml', u'LogPath=D:\\TA_logs\\ev_logs\\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\\FZFI_Addtional_SWDL_SW_upgrade\\']</msg>
<status status="PASS" endtime="20170807 16:56:11.317" starttime="20170807 16:56:11.317"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Save_Created_Commissioning_File</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:11.318" starttime="20170807 16:56:11.317"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Save_Created_Commissioning_File</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170807 16:56:26.270" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Save_Created_Commissioning_File is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Save_Created_Commissioning_File ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
Commissioning_File="D:\TA\BTS1779\20M_D1F1_TM8\SCFC_1.xml"
LogPath="D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\"
&lt;QTP&gt; Save log to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538\FZFI_Addtional_SWDL_SW_upgrade\GUILog\qtp_log20170807165611\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170807 16:56:26.270" starttime="20170807 16:56:11.318"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:26.270" starttime="20170807 16:56:11.316"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170807 16:56:30.111" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:56:30.111" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170807 16:56:30.111" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\WIN7-631\ROOT\CIMV2:Win32_Process.Handle="2868"
Instance deletion successful.

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170807 16:56:30.111" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:56:30.111" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170807 16:56:30.111" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\WIN7-631\ROOT\CIMV2:Win32_Process.Handle="5064"
Instance deletion successful.

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170807 16:56:30.111" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<msg timestamp="20170807 16:56:30.111" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170807 16:56:30.111" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170807 16:56:30.112" starttime="20170807 16:56:26.271"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:30.112" starttime="20170807 16:55:21.947"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:30.112" starttime="20170807 16:55:21.947"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:30.112" starttime="20170807 16:55:21.946"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:30.112" starttime="20170807 16:54:11.721"></status>
</kw>
<kw type="teardown" name="Test_Tear_Down_Action" library="SISO1 Resource">
<doc>Action when case finishs</doc>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170807 16:56:30.117" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;.</msg>
<status status="PASS" endtime="20170807 16:56:30.117" starttime="20170807 16:56:30.113"></status>
</kw>
<kw name="Kill Qtp Process" library="tdd_ev_robotws">
<doc>This keyword is used to kill the processes related to QTP application.</doc>
<msg timestamp="20170807 16:56:30.555" level="INFO">Start to kill QTP process.
Finshed to kill QTP process.</msg>
<status status="PASS" endtime="20170807 16:56:30.555" starttime="20170807 16:56:30.117"></status>
</kw>
<kw name="Stop Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<msg timestamp="20170807 16:56:30.559" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'</msg>
<status status="PASS" endtime="20170807 16:56:30.559" starttime="20170807 16:56:30.555"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${case_execute_log_name}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20170807 16:56:30.566" level="FAIL">Variable ${case_execute_log_name} does not exist.</msg>
<status status="FAIL" endtime="20170807 16:56:30.566" starttime="20170807 16:56:30.560"></status>
</kw>
<msg timestamp="20170807 16:56:30.566" level="INFO">${return} = ('FAIL', u'Variable ${case_execute_log_name} does not exist.')</msg>
<status status="PASS" endtime="20170807 16:56:30.566" starttime="20170807 16:56:30.559"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:30.570" starttime="20170807 16:56:30.567"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:30.570" starttime="20170807 16:56:30.566"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:30.573" starttime="20170807 16:56:30.570"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:30.573" starttime="20170807 16:56:30.570"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Release_TM500_And_Colse_PA_Port</arg>
</arguments>
<kw name="Release_TM500_And_Colse_PA_Port" library="SISO1 Resource">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${return}</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Variable Should Exist</arg>
<arg>${TM500_Use_Tag}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:30.575" starttime="20170807 16:56:30.574"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Use_Tag}'=='used'</arg>
<arg>Set Attenuators Off</arg>
<arg>${ATT_ALL_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:30.575" starttime="20170807 16:56:30.575"></status>
</kw>
<kw name="Set_Allcells_Attenuation_Off" library="SISO1 Resource">
<kw type="for" name="${index} IN RANGE [ 1 | 10 ]">
<kw type="foritem" name="${index} = 1">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:30.578" starttime="20170807 16:56:30.578"></status>
</kw>
<msg timestamp="20170807 16:56:30.578" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170807 16:56:30.578" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170807 16:56:30.579" starttime="20170807 16:56:30.577"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:30.582" starttime="20170807 16:56:30.579"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170807 16:56:34.615" level="INFO">$TA,C,03F0*</msg>
<msg timestamp="20170807 16:56:34.615" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,03F0*', Receive&lt;-'$TA,C,03F0*'</msg>
<msg timestamp="20170807 16:56:34.615" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,03*', Receive&lt;-'$TA,C,03F0*'
$TA,C,04F0*</msg>
<msg timestamp="20170807 16:56:34.615" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,04F0*', Receive&lt;-'$TA,C,04F0*'</msg>
<msg timestamp="20170807 16:56:34.615" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,04*', Receive&lt;-'$TA,C,04F0*'</msg>
<status status="PASS" endtime="20170807 16:56:34.615" starttime="20170807 16:56:30.582"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:34.615" starttime="20170807 16:56:30.577"></status>
</kw>
<kw type="foritem" name="${index} = 2">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:34.617" starttime="20170807 16:56:34.617"></status>
</kw>
<msg timestamp="20170807 16:56:34.617" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170807 16:56:34.617" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170807 16:56:34.617" starttime="20170807 16:56:34.616"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:34.621" starttime="20170807 16:56:34.618"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170807 16:56:38.648" level="INFO">$TA,C,03F0*</msg>
<msg timestamp="20170807 16:56:38.649" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,03F0*', Receive&lt;-'$TA,C,03F0*'</msg>
<msg timestamp="20170807 16:56:38.649" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,03*', Receive&lt;-'$TA,C,03F0*'
$TA,C,04F0*</msg>
<msg timestamp="20170807 16:56:38.649" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,04F0*', Receive&lt;-'$TA,C,04F0*'</msg>
<msg timestamp="20170807 16:56:38.649" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,04*', Receive&lt;-'$TA,C,04F0*'</msg>
<status status="PASS" endtime="20170807 16:56:38.649" starttime="20170807 16:56:34.622"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:38.649" starttime="20170807 16:56:34.616"></status>
</kw>
<kw type="foritem" name="${index} = 3">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170807 16:56:38.657" level="FAIL">Variable ${CELL3_ATT_INFO} does not exist.</msg>
<status status="FAIL" endtime="20170807 16:56:38.657" starttime="20170807 16:56:38.650"></status>
</kw>
<msg timestamp="20170807 16:56:38.657" level="INFO">${ret1} = FAIL</msg>
<msg timestamp="20170807 16:56:38.657" level="INFO">${ret2} = Variable ${CELL3_ATT_INFO} does not exist.</msg>
<status status="PASS" endtime="20170807 16:56:38.657" starttime="20170807 16:56:38.650"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<msg timestamp="20170807 16:56:38.661" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170807 16:56:38.661" starttime="20170807 16:56:38.658"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:38.661" starttime="20170807 16:56:38.649"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:38.661" starttime="20170807 16:56:30.576"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:38.661" starttime="20170807 16:56:30.575"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170807 16:56:38.666" level="FAIL">AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<status status="FAIL" endtime="20170807 16:56:38.666" starttime="20170807 16:56:38.661"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Test Variable</arg>
<arg>${TM500_Use_Tag}</arg>
<arg>unused</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:38.666" starttime="20170807 16:56:38.666"></status>
</kw>
<status status="FAIL" endtime="20170807 16:56:38.667" starttime="20170807 16:56:30.574"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:38.667" starttime="20170807 16:56:30.574"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<msg timestamp="20170807 16:56:38.673" level="FAIL">Variable ${route_add_cpe_pc} does not exist.</msg>
<status status="FAIL" endtime="20170807 16:56:38.674" starttime="20170807 16:56:38.667"></status>
</kw>
<msg timestamp="20170807 16:56:38.674" level="INFO">${return} = ('FAIL', u'Variable ${route_add_cpe_pc} does not exist.')</msg>
<status status="PASS" endtime="20170807 16:56:38.674" starttime="20170807 16:56:38.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${route_add_cpe_pc}'=='true'</arg>
<arg>Execute Shell Command</arg>
<arg>route delete ${BTS_PC_INFO.IP} mask 255.255.255.255 ${UE1_INFO.ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:38.677" starttime="20170807 16:56:38.674"></status>
</kw>
<kw name="Alarm Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20170807 16:56:53.593" level="ERROR">Infomodel not connected.</msg>
<msg timestamp="20170807 16:56:54.203" level="INFO">[infomodel_control.py@82] set up infomodel with following info succeed .
    details: address=192.168.255.1, port=12345, definitions_file_path=None
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}</msg>
<msg timestamp="20170807 16:56:54.203" level="INFO">[infomodel_control.py@100] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170807 16:56:54.203" starttime="20170807 16:56:38.677"></status>
</kw>
<kw name="Fatal Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20170807 16:56:57.301" level="INFO">['fatal'] ['fatal']</msg>
<status status="PASS" endtime="20170807 16:56:57.301" starttime="20170807 16:56:54.204"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<assign>
<var>${return1}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<msg timestamp="20170807 16:56:57.303" level="FAIL">'FZFI_Addtional_SWDL_SW_upgrade' does not contain 'Fiber'</msg>
<status status="FAIL" endtime="20170807 16:56:57.303" starttime="20170807 16:56:57.303"></status>
</kw>
<msg timestamp="20170807 16:56:57.303" level="INFO">${return1} = ('FAIL', u"'FZFI_Addtional_SWDL_SW_upgrade' does not contain 'Fiber'")</msg>
<status status="PASS" endtime="20170807 16:56:57.303" starttime="20170807 16:56:57.302"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<assign>
<var>${all_fiber_link}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:57.308" starttime="20170807 16:56:57.304"></status>
</kw>
<msg timestamp="20170807 16:56:57.308" level="INFO">${all_fiber_link} = ('PASS', None)</msg>
<status status="PASS" endtime="20170807 16:56:57.308" starttime="20170807 16:56:57.304"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:57.311" starttime="20170807 16:56:57.308"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:57.312" starttime="20170807 16:56:57.308"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Software Reboot Bts</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Software Reboot Bts</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:57.315" starttime="20170807 16:56:57.312"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:57.315" starttime="20170807 16:56:57.312"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Sleep</arg>
<arg>60</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Sleep</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:57.319" starttime="20170807 16:56:57.316"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:57.319" starttime="20170807 16:56:57.316"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:57.323" starttime="20170807 16:56:57.320"></status>
</kw>
<status status="PASS" endtime="20170807 16:56:57.323" starttime="20170807 16:56:57.320"></status>
</kw>
<kw name="Common Test Teardown" library="common_resource">
<doc>[Caution] this keyword step:</doc>
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20170807 16:56:57.325" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20170807 16:56:57.325" starttime="20170807 16:56:57.324"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:57.325" starttime="20170807 16:56:57.325"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:57.326" starttime="20170807 16:56:57.326"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170807 16:56:57.326" starttime="20170807 16:56:57.326"></status>
</kw>
<kw name="Get Active Bts Sw Version" library="tdd_ev_robotws">
<doc>get active BTS SW Build Version from enb targetBD file..</doc>
<assign>
<var>${version}</var>
</assign>
<msg timestamp="20170807 16:57:18.574" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170807 16:57:18.574" level="INFO">[ssh_common.py@203] Last login: Mon Aug  7 16:52:21 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20170807 16:57:18.574" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x058C0B70&gt;</msg>
<msg timestamp="20170807 16:57:18.574" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170807 16:57:18.574" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
-bash-4.4#</msg>
<msg timestamp="20170807 16:57:18.574" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x058C0B70&gt;</msg>
<msg timestamp="20170807 16:57:18.574" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20170807 16:57:18.574" level="INFO">[ssh_common.py@203] Last login: Mon Aug  7 16:57:00 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20170807 16:57:18.574" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05730A30&gt;</msg>
<msg timestamp="20170807 16:57:18.574" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20170807 16:57:18.574" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_170807_065465.xml
-bash-4.4#</msg>
<msg timestamp="20170807 16:57:18.574" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05730A30&gt;</msg>
<msg timestamp="20170807 16:57:18.575" level="INFO">${version} = TL18_ENB_9999_170807_065465</msg>
<status status="PASS" endtime="20170807 16:57:18.575" starttime="20170807 16:56:57.327"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<status status="PASS" endtime="20170807 16:57:18.576" starttime="20170807 16:57:18.575"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<status status="PASS" endtime="20170807 16:57:18.577" starttime="20170807 16:57:18.577"></status>
</kw>
<status status="PASS" endtime="20170807 16:57:18.577" starttime="20170807 16:56:57.324"></status>
</kw>
<status status="PASS" endtime="20170807 16:57:18.577" starttime="20170807 16:56:30.113"></status>
</kw>
<tags>
<tag>owner-jiaqi.jin@nokia.com</tag>
<tag>QC_612238</tag>
</tags>
<status status="PASS" endtime="20170807 16:57:18.577" critical="yes" starttime="20170807 16:27:02.281"></status>
</test>
<kw type="teardown" name="Common Suite Teardown" library="common_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${REMOVE_LOGS}'=='on'</arg>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20170807 16:57:18.582" starttime="20170807 16:57:18.579"></status>
</kw>
<kw name="Disconnect All Hosts" library="tdd_ev_robotws">
<doc>Closes all existing telnet connections to remote hosts.</doc>
<msg timestamp="20170807 16:57:18.589" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20170807 16:57:18.589" level="INFO">[telnet_common.py@189] Disconnect from 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05724B20&gt;</msg>
<status status="PASS" endtime="20170807 16:57:18.589" starttime="20170807 16:57:18.582"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<kw name="Zip File" library="tdd_ev_robotws">
<doc>This keyword can zip specific files.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<msg timestamp="20170807 16:57:18.622" level="INFO">[zip_control.py@316]</msg>
<msg timestamp="20170807 16:57:18.622" level="WARN">[zip_control.py@322] zip D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538 to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538.zip failed!</msg>
<status status="PASS" endtime="20170807 16:57:18.623" starttime="20170807 16:57:18.591"></status>
</kw>
<status status="PASS" endtime="20170807 16:57:18.623" starttime="20170807 16:57:18.590"></status>
</kw>
<status status="PASS" endtime="20170807 16:57:18.623" starttime="20170807 16:57:18.589"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<msg timestamp="20170807 16:57:18.720" html="yes" level="INFO">Removed directory '&lt;a href="file://D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538"&gt;D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170807 16:57:18.720" starttime="20170807 16:57:18.625"></status>
</kw>
<status status="PASS" endtime="20170807 16:57:18.720" starttime="20170807 16:57:18.624"></status>
</kw>
<status status="PASS" endtime="20170807 16:57:18.720" starttime="20170807 16:57:18.623"></status>
</kw>
<status status="PASS" endtime="20170807 16:57:18.720" starttime="20170807 16:57:18.578"></status>
</kw>
<doc>TD-LTE I&amp;V SISO1</doc>
<status status="PASS" endtime="20170807 16:57:18.720" starttime="20170807 16:25:36.988"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">owner-jiaqi.jin@nokia.com</stat>
<stat fail="0" pass="1">QC_612238</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="FZFI Addtional SWDL SW upgrade" pass="1">FZFI Addtional SWDL SW upgrade</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170807 16:25:37.684" level="ERROR">Loading tdd_config has failed. Please check if: 
       1. you executed pybot with --variable CONFIGURATION:$your_tl_config 
          i.e. pybot --variable CONFIGURATION:Wroclaw.test 
       2. check if there is no problem with your configuration 
       Error msg: Variable ${CONFIGURATION} does not exist.
</msg>
<msg timestamp="20170807 16:51:55.600" level="WARN">[enb_resource.py@225] infomodel check every cell onair failed</msg>
<msg timestamp="20170807 16:56:53.593" level="ERROR">Infomodel not connected.</msg>
<msg timestamp="20170807 16:57:18.622" level="WARN">[zip_control.py@322] zip D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538 to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_20170807162538.zip failed!</msg>
</errors>
</robot>
