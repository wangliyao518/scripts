<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20171019 16:26:59.157" generator="Robot 3.0 (Python 2.7.5 on win32)">
<suite source="D:\TA\Test_Case_Svn\Trunk_CRT\SISO1\CRT\CPRI_Single_FZFI\FZFI_Addtional_SWDL_SW_upgrade_both\FZFI_Addtional_SWDL_SW_upgrade_both.html" id="s1" name="FZFI Addtional SWDL SW upgrade both">
<kw type="setup" name="Common Suite Setup" library="common_resource">
<doc>this keyword create suite name directory path as D:\TA_logs//logs//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20171019 16:27:01.290" level="INFO">${timestamp} = 20171019162701</msg>
<status status="PASS" endtime="20171019 16:27:01.290" starttime="20171019 16:27:01.243"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_NAME[:50]}</arg>
<arg>\\s+$</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${FILE_NAME}</var>
</assign>
<msg timestamp="20171019 16:27:01.291" level="INFO">${FILE_NAME} = FZFI Addtional SWDL SW upgrade both</msg>
<status status="PASS" endtime="20171019 16:27:01.291" starttime="20171019 16:27:01.290"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>ev_logs</arg>
<arg>${FILE_NAME}_${timestamp}</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20171019 16:27:01.292" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA_logs\ev_logs\FZFI Addtional SWDL SW upgrade both_20171019162701</msg>
<status status="PASS" endtime="20171019 16:27:01.292" starttime="20171019 16:27:01.292"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20171019 16:27:01.293" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701</msg>
<status status="PASS" endtime="20171019 16:27:01.293" starttime="20171019 16:27:01.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20171019 16:27:01.294" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701</msg>
<status status="PASS" endtime="20171019 16:27:01.294" starttime="20171019 16:27:01.293"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20171019 16:27:01.295" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701"&gt;D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20171019 16:27:01.295" starttime="20171019 16:27:01.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20171019 16:27:01.295" level="INFO">save log dir:D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701</msg>
<status status="PASS" endtime="20171019 16:27:01.295" starttime="20171019 16:27:01.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${snapshot_flag}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20171019 16:27:01.299" level="INFO">${snapshot_flag} = 0</msg>
<status status="PASS" endtime="20171019 16:27:01.299" starttime="20171019 16:27:01.296"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<msg timestamp="20171019 16:27:01.318" level="FAIL">Variable ${TEST LOG DIR} does not exist.</msg>
<status status="FAIL" endtime="20171019 16:27:01.318" starttime="20171019 16:27:01.312"></status>
</kw>
<msg timestamp="20171019 16:27:01.319" level="INFO">${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')</msg>
<status status="PASS" endtime="20171019 16:27:01.319" starttime="20171019 16:27:01.312"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:27:01.320" starttime="20171019 16:27:01.319"></status>
</kw>
<msg timestamp="20171019 16:27:01.320" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20171019 16:27:01.320" starttime="20171019 16:27:01.319"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:27:01.328" starttime="20171019 16:27:01.324"></status>
</kw>
<msg timestamp="20171019 16:27:01.328" level="INFO">${log dir} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701</msg>
<status status="PASS" endtime="20171019 16:27:01.328" starttime="20171019 16:27:01.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20171019 16:27:01.332" level="INFO">${SAVE LOG DIRECTORY} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701</msg>
<status status="PASS" endtime="20171019 16:27:01.333" starttime="20171019 16:27:01.328"></status>
</kw>
<status status="PASS" endtime="20171019 16:27:01.333" starttime="20171019 16:27:01.311"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Make Sure FCT Ping Ok</arg>
</arguments>
<kw name="Make Sure FCT Ping Ok" library="common_resource">
<kw name="Ping Should Ok" library="tdd_ev_robotws">
<doc>This function is used for check whether ping host success, if yes, return 1, else return 0</doc>
<arguments>
<arg>${FCMD_IP}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20171019 16:27:01.359" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20171019 16:27:01.359" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20171019 16:27:01.359" starttime="20171019 16:27:01.334"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${FTM_IP}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:27:01.360" starttime="20171019 16:27:01.360"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Btscli Disable Bts Port Security</arg>
</arguments>
<status status="PASS" endtime="20171019 16:27:01.361" starttime="20171019 16:27:01.360"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>60</arg>
<arg>${FCMD_IP}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:27:01.361" starttime="20171019 16:27:01.361"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5min</arg>
<arg>5s</arg>
<arg>_make sure fctb connect ok</arg>
</arguments>
<status status="PASS" endtime="20171019 16:27:01.362" starttime="20171019 16:27:01.361"></status>
</kw>
<status status="PASS" endtime="20171019 16:27:01.362" starttime="20171019 16:27:01.334"></status>
</kw>
<status status="PASS" endtime="20171019 16:27:01.362" starttime="20171019 16:27:01.333"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>get_enb_infomation</arg>
</arguments>
<kw name="Get Enb Infomation" library="tdd_ev_robotws">
<doc>This keyword will print bts sw version, bbu type and RRU type.</doc>
<msg timestamp="20171019 16:28:07.902" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171019 16:28:07.949" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171019 16:28:19.054" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171019 16:28:19.212" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171019 16:28:19.766" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171019 16:28:19.811" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ssh_common.py@203] Last login: Thu Oct 19 16:22:23 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x055EAFA8&gt;</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
-bash-4.4#</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x055EAFA8&gt;</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ssh_common.py@203] Last login: Thu Oct 19 16:27:17 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0563D350&gt;</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_170809_065605.xml
-bash-4.4#</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0563D350&gt;</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1508401661&amp;token=4c79f29fdbbc1009f349b2ba62695165c15df1dea457b8b6039db66f35901619&amp;frame=sshservice'</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;SSH Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20171019 16:28:47.625" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1508401666&amp;token=8cab0edd674c92a25faf3444945d9fdc2f8924f4898ac4e21237b57903ba291f&amp;frame=RndPortsService'</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;R&amp;D Ports Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@203] Last login: Thu Oct 19 16:27:27 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05697760&gt;</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
-bash-4.4#</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05697760&gt;</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@203] Last login: Thu Oct 19 16:27:51 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05697C38&gt;</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_170809_065605.xml
-bash-4.4#</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05697C38&gt;</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_resource.py@1238] 
 ****Current BTS version is 'TL18_ENB_9999_170809_065605' *****</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_resource.py@1268] activeBuildVersion=TL18_ENB_9999_170809_065605</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@203] Last login: Thu Oct 19 16:28:01 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05697A08&gt;</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@258] Execute command: ls /ram/SiteConf.xml</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@314] Get Response: ls /ram/SiteConf.xml
/ram/SiteConf.xml
-bash-4.4#</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05697A08&gt;</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[sftp_control.py@176] /ram/SiteConf.xml</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[sftp_control.py@79] sftp download from '/ram/SiteConf.xml' to 'D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\SiteConf.xml' is ok. local file size is 205k</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@203] Last login: Thu Oct 19 16:28:22 CST 2017 from 192.168.255.126 on ssh
-bash-4.4#</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04E5AA80&gt;</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs2
-bash-4.4#</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04E5AA80&gt;</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_resource.py@500] The real falsh folder is /ffs/fs2</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[sftp_control.py@176] /ffs/fs2/FileDirectory.xml</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs2/FileDirectory.xml' to 'D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FileDirectory_20171019162807.xml' is ok. local file size is 38k</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[sftp_control.py@176] /ffs/fs2/config/SCFC_204.xml</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs2/config/SCFC_204.xml' to 'D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\SCFC_204.xml' is ok. local file size is 115k</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_resource.py@1238] 
 ****Current bbu type is 'FSIH' *****</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_resource.py@1363] HW_BBU_TYPE=FSIH</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_resource.py@1238] 
 ****Current rru type is 'FZFI-f:FZFI-d' *****</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_resource.py@1366] HW_RRU_TYPE=FZFI-f:FZFI-d</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_resource.py@1238] 
 ****Current HW type is 'null' *****</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[enb_resource.py@1369] BTS_HW_TYPE=null</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ping_control.py@189] 
Pinging 192.168.200.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.200.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20171019 16:28:47.626" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.20 with 32 bytes of data:
Reply from 192.168.255.126: Destination host unreachable.

Ping statistics for 192.168.255.20:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),</msg>
<status status="PASS" endtime="20171019 16:28:47.629" starttime="20171019 16:27:01.363"></status>
</kw>
<status status="PASS" endtime="20171019 16:28:47.629" starttime="20171019 16:27:01.362"></status>
</kw>
<kw name="Set Library Search Order" library="BuiltIn">
<doc>Sets the resolution order to use when a name matches multiple keywords.</doc>
<arguments>
<arg>tdd_ev_robotws</arg>
<arg>OperatingSystem</arg>
</arguments>
<status status="PASS" endtime="20171019 16:28:47.630" starttime="20171019 16:28:47.629"></status>
</kw>
<kw name="Initial Connection With BTS PC" library="common_resource">
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20171019 16:28:47.631" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20171019 16:28:47.631" starttime="20171019 16:28:47.630"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>${TELNET_PORT}</arg>
<arg>${SSH_PORT}</arg>
</arguments>
<assign>
<var>${conn_port}</var>
</assign>
<msg timestamp="20171019 16:28:47.634" level="INFO">${conn_port} = 23</msg>
<status status="PASS" endtime="20171019 16:28:47.634" starttime="20171019 16:28:47.631"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>TELNET</arg>
<arg>SSH</arg>
</arguments>
<assign>
<var>${conn_type}</var>
</assign>
<msg timestamp="20171019 16:28:47.638" level="INFO">${conn_type} = TELNET</msg>
<status status="PASS" endtime="20171019 16:28:47.638" starttime="20171019 16:28:47.635"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>30</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${timeout}</var>
</assign>
<msg timestamp="20171019 16:28:47.641" level="INFO">${timeout} = 30</msg>
<status status="PASS" endtime="20171019 16:28:47.641" starttime="20171019 16:28:47.638"></status>
</kw>
<kw name="Connect To Host" library="tdd_ev_robotws">
<doc>Used to connect to host, either TELNET or SSH</doc>
<arguments>
<arg>${BTS_PC_INFO.IP}</arg>
<arg>port=${conn_port}</arg>
<arg>username=${BTS_PC_INFO.USERNAME}</arg>
<arg>password=${BTS_PC_INFO.PASSWORD}</arg>
<arg>conn_type=${conn_type}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${BTS_PC_CONNECTION}</var>
</assign>
<msg timestamp="20171019 16:28:49.051" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 

login:</msg>
<msg timestamp="20171019 16:28:49.051" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20171019 16:28:49.051" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester
password:</msg>
<msg timestamp="20171019 16:28:49.051" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20171019 16:28:49.051" level="INFO">[telnet_common.py@246]  

*===============================================================
Microsoft Telnet Server.
*===============================================================
C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20171019 16:28:49.051" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056AB2D8&gt;</msg>
<status status="PASS" endtime="20171019 16:28:49.051" starttime="20171019 16:28:47.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171019 16:28:49.052" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056AB2D8&gt;</msg>
<status status="PASS" endtime="20171019 16:28:49.052" starttime="20171019 16:28:49.052"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>Execute Shell Command</arg>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<msg timestamp="20171019 16:28:50.252" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056AB2D8&gt;</msg>
<msg timestamp="20171019 16:28:50.252" level="INFO">[telnet_common.py@276] Execute command: tlntadmn config timeoutactive=no</msg>
<msg timestamp="20171019 16:28:50.252" level="INFO">[telnet_common.py@306] Get Response: tlntadmn config timeoutactive=no
The settings were successfully updated.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20171019 16:28:50.252" starttime="20171019 16:28:49.056"></status>
</kw>
<status status="PASS" endtime="20171019 16:28:50.252" starttime="20171019 16:28:49.053"></status>
</kw>
<status status="PASS" endtime="20171019 16:28:50.252" starttime="20171019 16:28:47.630"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171019 16:28:50.256" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056AB2D8&gt;.</msg>
<status status="PASS" endtime="20171019 16:28:50.256" starttime="20171019 16:28:50.253"></status>
</kw>
<status status="PASS" endtime="20171019 16:28:50.256" starttime="20171019 16:27:01.243"></status>
</kw>
<test id="s1-t1" name="FZFI_Addtional_SWDL_SW_upgrade_both">
<kw type="setup" name="Common Test Setup" library="common_resource">
<doc>this keyword create case name directory path as D:\TA_logs//ev_logs//D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20171019 16:28:50.262" level="INFO">${timestamp} = 20171019162850</msg>
<status status="PASS" endtime="20171019 16:28:50.262" starttime="20171019 16:28:50.261"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20171019 16:28:50.263" level="INFO">${TEST_LOG_DIR} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both</msg>
<status status="PASS" endtime="20171019 16:28:50.263" starttime="20171019 16:28:50.262"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20171019 16:28:50.263" level="INFO">${TEST_LOG_DIR} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both</msg>
<status status="PASS" endtime="20171019 16:28:50.263" starttime="20171019 16:28:50.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20171019 16:28:50.264" level="INFO">${TEST_LOG_DIR} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both</msg>
<status status="PASS" endtime="20171019 16:28:50.264" starttime="20171019 16:28:50.264"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20171019 16:28:50.265" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both"&gt;D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20171019 16:28:50.265" starttime="20171019 16:28:50.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20171019 16:28:50.266" level="INFO">save log dir:D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both</msg>
<status status="PASS" endtime="20171019 16:28:50.266" starttime="20171019 16:28:50.265"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${BTS PC CONNECTION.connected}</arg>
<arg>Initial Connection With BTS PC</arg>
</arguments>
<status status="PASS" endtime="20171019 16:28:50.267" starttime="20171019 16:28:50.266"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:28:50.269" starttime="20171019 16:28:50.268"></status>
</kw>
<msg timestamp="20171019 16:28:50.269" level="INFO">${case_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20171019 16:28:50.269" starttime="20171019 16:28:50.268"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:28:50.270" starttime="20171019 16:28:50.270"></status>
</kw>
<msg timestamp="20171019 16:28:50.270" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20171019 16:28:50.270" starttime="20171019 16:28:50.269"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<msg timestamp="20171019 16:28:50.274" level="INFO">${log dir} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both</msg>
<status status="PASS" endtime="20171019 16:28:50.274" starttime="20171019 16:28:50.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20171019 16:28:50.275" level="INFO">${SAVE LOG DIRECTORY} = D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both</msg>
<status status="PASS" endtime="20171019 16:28:50.275" starttime="20171019 16:28:50.274"></status>
</kw>
<status status="PASS" endtime="20171019 16:28:50.275" starttime="20171019 16:28:50.267"></status>
</kw>
<status status="PASS" endtime="20171019 16:28:50.275" starttime="20171019 16:28:50.260"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Reset_BTS_If_Not_Onair</arg>
<arg>${source_scf}</arg>
<arg>${parameter_list}</arg>
</arguments>
<kw name="Reset_BTS_If_Not_Onair" library="SISO1 Resource">
<arguments>
<arg>${source_scf}</arg>
<arg>${parameter_list}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171019 16:28:50.281" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056AB2D8&gt;.</msg>
<status status="PASS" endtime="20171019 16:28:50.281" starttime="20171019 16:28:50.277"></status>
</kw>
<kw name="Parse Ping Result" library="tdd_ev_robotws">
<doc>This keyword test the reachability of remote system.</doc>
<arguments>
<arg>192.168.255.1</arg>
</arguments>
<assign>
<var>${package_summary}</var>
<var>${ping_delay}</var>
</assign>
<msg timestamp="20171019 16:28:54.470" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056AB2D8&gt;</msg>
<msg timestamp="20171019 16:28:54.470" level="INFO">[telnet_common.py@276] Execute command: ping  192.168.255.1</msg>
<msg timestamp="20171019 16:28:54.470" level="INFO">[telnet_common.py@306] Get Response: ping  192.168.255.1

Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms

C:\Users\tdlte-tester&gt;
Total ping delay is: [1, 1, 1, 1]
Statistic ping delay is: [1, 1, 1, 1]
Valid ping delay is: [1, 1, 1, 1]</msg>
<msg timestamp="20171019 16:28:54.470" level="INFO">${package_summary} = ('4', '4', '0')</msg>
<msg timestamp="20171019 16:28:54.470" level="INFO">${ping_delay} = [1, 1, 1.0]</msg>
<status status="PASS" endtime="20171019 16:28:54.471" starttime="20171019 16:28:50.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Restart Device With Powerbreaker</arg>
<arg>${bts_powerbreak}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:28:54.474" starttime="20171019 16:28:54.471"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20171019 16:28:54.478" starttime="20171019 16:28:54.474"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Check_BTS_Onair_Status</arg>
</arguments>
<assign>
<var>${result}</var>
<var>${ret}</var>
</assign>
<kw name="Check_BTS_Onair_Status" library="SISO1 Resource">
<kw name="Start Infomodel" library="tdd_ev_robotws">
<doc>Setup InfoModel library and Connect to InfoModel.</doc>
<arguments>
<arg>port=${BTS_INFOMODEL_PORT}</arg>
</arguments>
<msg timestamp="20171019 16:29:03.451" level="INFO">[infomodel_control.py@156] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None
             ftp_username=toor4nsn,ftp_password=oZPS0POrRieRtu</msg>
<msg timestamp="20171019 16:29:03.451" level="INFO">[infomodel_control.py@160] start infomodel succeed .</msg>
<msg timestamp="20171019 16:29:03.451" level="INFO">[infomodel_control.py@162] start infomodel logger succeed .</msg>
<status status="PASS" endtime="20171019 16:29:03.451" starttime="20171019 16:28:54.479"></status>
</kw>
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]</arg>
<arg>timeout=5</arg>
</arguments>
<msg timestamp="20171019 16:29:04.777" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' succeed .</msg>
<status status="PASS" endtime="20171019 16:29:04.777" starttime="20171019 16:29:03.452"></status>
</kw>
<kw name="Stop Infomodel" library="tdd_ev_robotws">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20171019 16:29:05.075" level="INFO">[infomodel_control.py@185] stop infomodel logger succeed .</msg>
<msg timestamp="20171019 16:29:05.075" level="INFO">[infomodel_control.py@197] stop infomodel succeed .</msg>
<status status="PASS" endtime="20171019 16:29:05.075" starttime="20171019 16:29:04.777"></status>
</kw>
<status status="PASS" endtime="20171019 16:29:05.075" starttime="20171019 16:28:54.478"></status>
</kw>
<msg timestamp="20171019 16:29:05.075" level="INFO">${result} = PASS</msg>
<msg timestamp="20171019 16:29:05.076" level="INFO">${ret} = None</msg>
<status status="PASS" endtime="20171019 16:29:05.076" starttime="20171019 16:28:54.478"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'FAIL'=='${result}'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<status status="PASS" endtime="20171019 16:29:05.082" starttime="20171019 16:29:05.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'FAIL'=='${result}'</arg>
<arg>BTS_On_Air</arg>
<arg>${source_scf}</arg>
<arg>${parameters_list}</arg>
<arg>${bts_powerbreak}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:29:05.087" starttime="20171019 16:29:05.082"></status>
</kw>
<status status="PASS" endtime="20171019 16:29:05.088" starttime="20171019 16:28:50.276"></status>
</kw>
<status status="PASS" endtime="20171019 16:29:05.088" starttime="20171019 16:28:50.275"></status>
</kw>
<kw name="_Update_SW_to_BTS_Site">
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20171019 16:29:09.044" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056AB2D8&gt;</msg>
<msg timestamp="20171019 16:29:09.044" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171019 16:29:09.044" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\WIN7-631\ROOT\CIMV2:Win32_Process.Handle="4500"
Instance deletion successful.

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20171019 16:29:09.044" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056AB2D8&gt;</msg>
<msg timestamp="20171019 16:29:09.044" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171019 16:29:09.044" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\WIN7-631\ROOT\CIMV2:Win32_Process.Handle="3824"
Instance deletion successful.

C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20171019 16:29:09.044" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056AB2D8&gt;</msg>
<msg timestamp="20171019 16:29:09.044" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171019 16:29:09.044" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20171019 16:29:09.045" starttime="20171019 16:29:05.089"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20171019 16:29:09.051" starttime="20171019 16:29:09.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20171019 16:29:09.056" starttime="20171019 16:29:09.052"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171019 16:29:09.057" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA_logs\\ev_logs\\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\\FZFI_Addtional_SWDL_SW_upgrade_both\\', u'CheckExi...</msg>
<status status="PASS" endtime="20171019 16:29:09.057" starttime="20171019 16:29:09.056"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:29:09.057" starttime="20171019 16:29:09.057"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171019 16:30:01.935" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20171019 16:30:01.935" starttime="20171019 16:29:09.057"></status>
</kw>
<status status="PASS" endtime="20171019 16:30:01.935" starttime="20171019 16:29:09.050"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>30 sec</arg>
</arguments>
<msg timestamp="20171019 16:30:31.936" level="INFO">Slept 30 seconds</msg>
<status status="PASS" endtime="20171019 16:30:31.936" starttime="20171019 16:30:01.935"></status>
</kw>
<kw name="GUI SM MenuOperation" library="gui_resource">
<doc>This keyword is provid menu operation in BTS Site Manager</doc>
<arguments>
<arg>Software//Update SW to BTS Site...</arg>
<arg>UpdateSWToBTS</arg>
<arg>${bts_sw_dir}</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>MenuName=${MenuName}</arg>
<arg>OperationName=${OperationName}</arg>
<arg>JEditValue=${JEditValue}</arg>
<arg>JEditName=${JEditName}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171019 16:30:31.946" level="INFO">${para_list} = [u'MenuName=Software//Update SW to BTS Site...', u'OperationName=UpdateSWToBTS', u'JEditValue=', u'JEditName=D:\\BTS_SW_trunk\\TL00_ENB_9999_171019_069064\\TL00_ENB_9999_171019_069064_release_BTSSM_do...</msg>
<status status="PASS" endtime="20171019 16:30:31.946" starttime="20171019 16:30:31.945"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}SiteMan_MenuOperation</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171019 16:43:37.915" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\SiteMan_MenuOperation is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\SiteMan_MenuOperation ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
MenuName="Software//Update SW to BTS Site..."
OperationName="UpdateSWToBTS"
JEditValue=""
JEditName="D:\BTS_SW_trunk\TL00_ENB_9999_171019_069064\TL00_ENB_9999_171019_069064_release_BTSSM_downloadable.zip"
LogPath="D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\"
&lt;QTP&gt; Save log to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20171019 16:43:37.915" starttime="20171019 16:30:31.946"></status>
</kw>
<status status="PASS" endtime="20171019 16:43:37.916" starttime="20171019 16:30:31.944"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Check Bts Until Onair</arg>
<arg>log_name=SW_upgrade</arg>
</arguments>
<kw name="Check Bts Until Onair" library="tdd_ev_robotws">
<doc>check bts until all cell is onair with infomodel, and have PBCH in udp log.</doc>
<arguments>
<arg>log_name=SW_upgrade</arg>
</arguments>
<msg timestamp="20171019 16:48:10.021" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'</msg>
<msg timestamp="20171019 16:48:10.021" level="INFO">[btslog_control.py@174] use ip is 192.168.255.126</msg>
<msg timestamp="20171019 16:48:10.021" level="INFO">[file_common.py@209] Directory "D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both" already exists, no need to create it again.</msg>
<msg timestamp="20171019 16:48:10.021" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20171019 16:48:10.021" level="INFO">[infomodel_control.py@156] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None
             ftp_username=toor4nsn,ftp_password=oZPS0POrRieRtu</msg>
<msg timestamp="20171019 16:48:10.021" level="INFO">[infomodel_control.py@160] start infomodel succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@162] start infomodel logger succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1779L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'NotRoutable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'Uninitialized', u'testingState': u'Disabled', u'delayCalculationState': u'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'NotRoutable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'Uninitialized', u'testingState': u'Disabled', u'delayCalculationState': u'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'NotRoutable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'Uninitialized', u'testingState': u'Disabled', u'delayCalculationState': u'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'NotRoutable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'Uninitialized', u'testingState': u'Disabled', u'delayCalculationState': u'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'NotRoutable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'Uninitialized', u'testingState': u'Disabled', u'delayCalculationState': u'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'NotRoutable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'Uninitialized', u'testingState': u'Disabled', u'delayCalculationState': u'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'NotRoutable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'Uninitialized', u'testingState': u'Disabled', u'delayCalculationState': u'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'NotRoutable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'Uninitialized', u'testingState': u'Disabled', u'delayCalculationState': u'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'NotRoutable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'Uninitialized', u'testingState': u'Disabled', u'delayCalculationState': u'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'NotRoutable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'Uninitialized', u'testingState': u'Disabled', u'delayCalculationState': u'NotCalculated', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'Routable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'UpdatedTiming', u'testingState': u'Disabled', u'delayCalculationState': u'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'Routable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'UpdatedTiming', u'testingState': u'Disabled', u'delayCalculationState': u'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.022" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'Routable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'UpdatedTiming', u'testingState': u'Disabled', u'delayCalculationState': u'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'Routable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'UpdatedTiming', u'testingState': u'Disabled', u'delayCalculationState': u'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'Routable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'UpdatedTiming', u'testingState': u'Disabled', u'delayCalculationState': u'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.operationalState=Enabled]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/MCTRL-1/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-1 : {u'routingState': u'Routable', u'bbCalcState': u'CalculationDone', u'rat': u'LTE', u'gainCalcState': u'NotCalculated', u'setupAllowed': True, u'carriersState': u'UpdatedTiming', u'testingState': u'Disabled', u'delayCalculationState': u'CalculationDone', u'feedback': u'', u'stateInfo': {u'automaticBlockState': u'Unblocked', u'powerBreakLockingState': u'Unlocked', u'blockingState': u'Unblocked', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'proceduralState': u'Validated', u'recoveryLockingState': u'Unlocked', u'operationalState': u'Disabled', u'availabilityStatus': u'Offline'}, u'deploymentCalcState': u'CalculationDone', u'timeDomainState': u'NotEnoughHardwareConfigured'}
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' succeed .</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[enb_resource.py@228] infomodel check every cell onair succeed !</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[enb_resource.py@350] bts log check onair msg succeed !</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[infomodel_control.py@213] save infomodel log to file: 'D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\im_20171019164809' succeed .</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[infomodel_control.py@185] stop infomodel logger succeed .</msg>
<msg timestamp="20171019 16:48:10.023" level="INFO">[infomodel_control.py@197] stop infomodel succeed .</msg>
<status status="PASS" endtime="20171019 16:48:10.030" starttime="20171019 16:43:37.919"></status>
</kw>
<status status="PASS" endtime="20171019 16:48:10.030" starttime="20171019 16:43:37.919"></status>
</kw>
<kw name="Operate Ssh And Rdport" library="tdd_ev_robotws">
<doc>this keyword operate ssh and rdports.</doc>
<arguments>
<arg>enable</arg>
<arg>both</arg>
</arguments>
<msg timestamp="20171019 16:48:43.033" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ssh_common.py@203] Last login: Thu Oct 19 16:28:34 CST 2017 from 192.168.255.126 on ssh
-bash-4.4#</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x056ABBC0&gt;</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
-bash-4.4#</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x056ABBC0&gt;</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ssh_common.py@203] Last login: Thu Oct 19 16:48:25 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x056ABFA8&gt;</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_171019_069064.xml
-bash-4.4#</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x056ABFA8&gt;</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1508402929&amp;token=01a3b8e27c73a377a6c27019b819f92c58268063ac39068d2a7719a22917282e&amp;frame=sshservice'</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;SSH Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1508402934&amp;token=686cc09559d0b1aa445a5abd6e29cc5e2d1010ff429284fe6502f91570717c10&amp;frame=RndPortsService'</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20171019 16:48:43.033" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;R&amp;D Ports Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" endtime="20171019 16:48:43.034" starttime="20171019 16:48:10.030"></status>
</kw>
<kw name="Get Active Bts Sw Version" library="tdd_ev_robotws">
<doc>get active BTS SW Build Version from enb targetBD file..</doc>
<assign>
<var>${return1}</var>
</assign>
<msg timestamp="20171019 16:49:04.176" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171019 16:49:04.176" level="INFO">[ssh_common.py@203] Last login: Thu Oct 19 16:48:36 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20171019 16:49:04.176" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05857148&gt;</msg>
<msg timestamp="20171019 16:49:04.176" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171019 16:49:04.176" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
-bash-4.4#</msg>
<msg timestamp="20171019 16:49:04.176" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05857148&gt;</msg>
<msg timestamp="20171019 16:49:04.176" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171019 16:49:04.176" level="INFO">[ssh_common.py@203] Last login: Thu Oct 19 16:48:58 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20171019 16:49:04.176" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05846F08&gt;</msg>
<msg timestamp="20171019 16:49:04.176" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20171019 16:49:04.176" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_171019_069064.xml
-bash-4.4#</msg>
<msg timestamp="20171019 16:49:04.176" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05846F08&gt;</msg>
<msg timestamp="20171019 16:49:04.177" level="INFO">${return1} = TL18_ENB_9999_171019_069064</msg>
<status status="PASS" endtime="20171019 16:49:04.177" starttime="20171019 16:48:43.034"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${return1[-22:]}</arg>
<arg>${TARGET_BTS_VERSION_DIFFERENT[-22:]}</arg>
</arguments>
<msg timestamp="20171019 16:49:04.178" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171019 16:49:04.178" starttime="20171019 16:49:04.177"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:04.178" starttime="20171019 16:29:05.088"></status>
</kw>
<kw type="teardown" name="Test_Tear_Down_Action" library="SISO1 Resource">
<doc>Action when case finishs</doc>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171019 16:49:04.182" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056AB2D8&gt;.</msg>
<status status="PASS" endtime="20171019 16:49:04.183" starttime="20171019 16:49:04.179"></status>
</kw>
<kw name="Kill Qtp Process" library="tdd_ev_robotws">
<doc>This keyword is used to kill the processes related to QTP application.</doc>
<msg timestamp="20171019 16:49:04.662" level="INFO">Start to kill QTP process.
Finshed to kill QTP process.</msg>
<status status="PASS" endtime="20171019 16:49:04.662" starttime="20171019 16:49:04.183"></status>
</kw>
<kw name="Stop Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<msg timestamp="20171019 16:49:04.666" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'</msg>
<status status="PASS" endtime="20171019 16:49:04.666" starttime="20171019 16:49:04.662"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${case_execute_log_name}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20171019 16:49:04.672" level="FAIL">Variable ${case_execute_log_name} does not exist.</msg>
<status status="FAIL" endtime="20171019 16:49:04.673" starttime="20171019 16:49:04.667"></status>
</kw>
<msg timestamp="20171019 16:49:04.673" level="INFO">${return} = ('FAIL', u'Variable ${case_execute_log_name} does not exist.')</msg>
<status status="PASS" endtime="20171019 16:49:04.673" starttime="20171019 16:49:04.666"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:04.676" starttime="20171019 16:49:04.673"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:04.677" starttime="20171019 16:49:04.673"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:04.680" starttime="20171019 16:49:04.677"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:04.680" starttime="20171019 16:49:04.677"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Release_TM500_And_Colse_PA_Port</arg>
</arguments>
<kw name="Release_TM500_And_Colse_PA_Port" library="SISO1 Resource">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${return}</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Variable Should Exist</arg>
<arg>${TM500_Use_Tag}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:04.682" starttime="20171019 16:49:04.681"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Use_Tag}'=='used'</arg>
<arg>Set Attenuators Off</arg>
<arg>${ATT_ALL_INFO}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:04.682" starttime="20171019 16:49:04.682"></status>
</kw>
<kw name="Set_Allcells_Attenuation_Off" library="SISO1 Resource">
<kw type="for" name="${index} IN RANGE [ 1 | 10 ]">
<kw type="foritem" name="${index} = 1">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:04.685" starttime="20171019 16:49:04.683"></status>
</kw>
<msg timestamp="20171019 16:49:04.685" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20171019 16:49:04.685" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20171019 16:49:04.685" starttime="20171019 16:49:04.683"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:04.688" starttime="20171019 16:49:04.685"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20171019 16:49:08.715" level="INFO">$TA,C,03F0*</msg>
<msg timestamp="20171019 16:49:08.715" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,03F0*', Receive&lt;-'$TA,C,03F0*'</msg>
<msg timestamp="20171019 16:49:08.715" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,03*', Receive&lt;-'$TA,C,03F0*'
$TA,C,04F0*</msg>
<msg timestamp="20171019 16:49:08.715" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,04F0*', Receive&lt;-'$TA,C,04F0*'</msg>
<msg timestamp="20171019 16:49:08.715" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,04*', Receive&lt;-'$TA,C,04F0*'</msg>
<status status="PASS" endtime="20171019 16:49:08.716" starttime="20171019 16:49:04.688"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:08.716" starttime="20171019 16:49:04.683"></status>
</kw>
<kw type="foritem" name="${index} = 2">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:08.717" starttime="20171019 16:49:08.717"></status>
</kw>
<msg timestamp="20171019 16:49:08.717" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20171019 16:49:08.717" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20171019 16:49:08.717" starttime="20171019 16:49:08.716"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:08.721" starttime="20171019 16:49:08.718"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20171019 16:49:12.747" level="INFO">$TA,C,03F0*</msg>
<msg timestamp="20171019 16:49:12.747" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,03F0*', Receive&lt;-'$TA,C,03F0*'</msg>
<msg timestamp="20171019 16:49:12.747" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,03*', Receive&lt;-'$TA,C,03F0*'
$TA,C,04F0*</msg>
<msg timestamp="20171019 16:49:12.747" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,04F0*', Receive&lt;-'$TA,C,04F0*'</msg>
<msg timestamp="20171019 16:49:12.747" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,04*', Receive&lt;-'$TA,C,04F0*'</msg>
<status status="PASS" endtime="20171019 16:49:12.748" starttime="20171019 16:49:08.721"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:12.748" starttime="20171019 16:49:08.716"></status>
</kw>
<kw type="foritem" name="${index} = 3">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20171019 16:49:12.757" level="FAIL">Variable ${CELL3_ATT_INFO} does not exist.</msg>
<status status="FAIL" endtime="20171019 16:49:12.757" starttime="20171019 16:49:12.749"></status>
</kw>
<msg timestamp="20171019 16:49:12.757" level="INFO">${ret1} = FAIL</msg>
<msg timestamp="20171019 16:49:12.757" level="INFO">${ret2} = Variable ${CELL3_ATT_INFO} does not exist.</msg>
<status status="PASS" endtime="20171019 16:49:12.757" starttime="20171019 16:49:12.749"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<msg timestamp="20171019 16:49:12.761" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20171019 16:49:12.761" starttime="20171019 16:49:12.757"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:12.761" starttime="20171019 16:49:12.748"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:12.761" starttime="20171019 16:49:04.683"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:12.761" starttime="20171019 16:49:04.682"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20171019 16:49:12.764" level="FAIL">AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<status status="FAIL" endtime="20171019 16:49:12.764" starttime="20171019 16:49:12.761"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Test Variable</arg>
<arg>${TM500_Use_Tag}</arg>
<arg>unused</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:12.765" starttime="20171019 16:49:12.765"></status>
</kw>
<status status="FAIL" endtime="20171019 16:49:12.766" starttime="20171019 16:49:04.681"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:12.766" starttime="20171019 16:49:04.681"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<msg timestamp="20171019 16:49:12.773" level="FAIL">Variable ${route_add_cpe_pc} does not exist.</msg>
<status status="FAIL" endtime="20171019 16:49:12.773" starttime="20171019 16:49:12.766"></status>
</kw>
<msg timestamp="20171019 16:49:12.773" level="INFO">${return} = ('FAIL', u'Variable ${route_add_cpe_pc} does not exist.')</msg>
<status status="PASS" endtime="20171019 16:49:12.773" starttime="20171019 16:49:12.766"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${route_add_cpe_pc}'=='true'</arg>
<arg>Execute Shell Command</arg>
<arg>route delete ${BTS_PC_INFO.IP} mask 255.255.255.255 ${UE1_INFO.ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:12.776" starttime="20171019 16:49:12.773"></status>
</kw>
<kw name="Alarm Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20171019 16:49:23.508" level="ERROR">Infomodel not connected.</msg>
<msg timestamp="20171019 16:49:24.058" level="INFO">[infomodel_control.py@82] set up infomodel with following info succeed .
    details: address=192.168.255.1, port=12345, definitions_file_path=None
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}</msg>
<msg timestamp="20171019 16:49:24.058" level="INFO">[infomodel_control.py@100] stop infomodel succeed .</msg>
<status status="PASS" endtime="20171019 16:49:24.059" starttime="20171019 16:49:12.777"></status>
</kw>
<kw name="Fatal Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20171019 16:49:25.185" level="INFO">['fatal'] ['fatal']</msg>
<status status="PASS" endtime="20171019 16:49:25.185" starttime="20171019 16:49:24.059"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<assign>
<var>${return1}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<msg timestamp="20171019 16:49:25.187" level="FAIL">'FZFI_Addtional_SWDL_SW_upgrade_both' does not contain 'Fiber'</msg>
<status status="FAIL" endtime="20171019 16:49:25.187" starttime="20171019 16:49:25.186"></status>
</kw>
<msg timestamp="20171019 16:49:25.187" level="INFO">${return1} = ('FAIL', u"'FZFI_Addtional_SWDL_SW_upgrade_both' does not contain 'Fiber'")</msg>
<status status="PASS" endtime="20171019 16:49:25.187" starttime="20171019 16:49:25.185"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<assign>
<var>${all_fiber_link}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:25.191" starttime="20171019 16:49:25.188"></status>
</kw>
<msg timestamp="20171019 16:49:25.191" level="INFO">${all_fiber_link} = ('PASS', None)</msg>
<status status="PASS" endtime="20171019 16:49:25.191" starttime="20171019 16:49:25.187"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:25.194" starttime="20171019 16:49:25.191"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:25.195" starttime="20171019 16:49:25.191"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Software Reboot Bts</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Software Reboot Bts</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:25.198" starttime="20171019 16:49:25.195"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:25.198" starttime="20171019 16:49:25.195"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Sleep</arg>
<arg>60</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Sleep</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:25.202" starttime="20171019 16:49:25.199"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:25.202" starttime="20171019 16:49:25.199"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:25.206" starttime="20171019 16:49:25.203"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:25.206" starttime="20171019 16:49:25.202"></status>
</kw>
<kw name="Common Test Teardown" library="common_resource">
<doc>[Caution] this keyword step:</doc>
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20171019 16:49:25.207" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20171019 16:49:25.207" starttime="20171019 16:49:25.207"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:25.208" starttime="20171019 16:49:25.208"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:25.208" starttime="20171019 16:49:25.208"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:25.209" starttime="20171019 16:49:25.209"></status>
</kw>
<kw name="Get Active Bts Sw Version" library="tdd_ev_robotws">
<doc>get active BTS SW Build Version from enb targetBD file..</doc>
<assign>
<var>${version}</var>
</assign>
<msg timestamp="20171019 16:49:46.391" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171019 16:49:46.391" level="INFO">[ssh_common.py@203] Last login: Thu Oct 19 16:49:09 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20171019 16:49:46.392" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x058575F8&gt;</msg>
<msg timestamp="20171019 16:49:46.392" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171019 16:49:46.392" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
-bash-4.4#</msg>
<msg timestamp="20171019 16:49:46.392" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x058575F8&gt;</msg>
<msg timestamp="20171019 16:49:46.392" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171019 16:49:46.392" level="INFO">[ssh_common.py@203] Last login: Thu Oct 19 16:49:40 CST 2017 from 192.168.255.126 on pts/0
-bash-4.4#</msg>
<msg timestamp="20171019 16:49:46.392" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x056975A8&gt;</msg>
<msg timestamp="20171019 16:49:46.392" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20171019 16:49:46.392" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_171019_069064.xml
-bash-4.4#</msg>
<msg timestamp="20171019 16:49:46.392" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x056975A8&gt;</msg>
<msg timestamp="20171019 16:49:46.392" level="INFO">${version} = TL18_ENB_9999_171019_069064</msg>
<status status="PASS" endtime="20171019 16:49:46.392" starttime="20171019 16:49:25.209"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:46.393" starttime="20171019 16:49:46.393"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:46.394" starttime="20171019 16:49:46.393"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:46.394" starttime="20171019 16:49:25.206"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:46.394" starttime="20171019 16:49:04.179"></status>
</kw>
<tags>
<tag>owner-xingqiang.wu@nokia.com</tag>
<tag>QC_612238</tag>
</tags>
<status status="PASS" endtime="20171019 16:49:46.394" critical="yes" starttime="20171019 16:28:50.257"></status>
</test>
<kw type="teardown" name="Common Suite Teardown" library="common_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${REMOVE_LOGS}'=='on'</arg>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20171019 16:49:46.398" starttime="20171019 16:49:46.395"></status>
</kw>
<kw name="Disconnect All Hosts" library="tdd_ev_robotws">
<doc>Closes all existing telnet connections to remote hosts.</doc>
<msg timestamp="20171019 16:49:46.405" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20171019 16:49:46.405" level="INFO">[telnet_common.py@189] Disconnect from 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056AB2D8&gt;</msg>
<status status="PASS" endtime="20171019 16:49:46.405" starttime="20171019 16:49:46.398"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${zip_pass_log}</arg>
</arguments>
<assign>
<var>${para_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${zip_pass_log}</arg>
</arguments>
<msg timestamp="20171019 16:49:46.413" level="FAIL">Variable ${zip_pass_log} does not exist.</msg>
<status status="FAIL" endtime="20171019 16:49:46.413" starttime="20171019 16:49:46.405"></status>
</kw>
<msg timestamp="20171019 16:49:46.413" level="INFO">${para_exist} = ('FAIL', u'Variable ${zip_pass_log} does not exist.')</msg>
<status status="PASS" endtime="20171019 16:49:46.413" starttime="20171019 16:49:46.405"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS' == '${para_exist[0]}'</arg>
<arg>${zip_pass_log}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${zip_log}</var>
</assign>
<msg timestamp="20171019 16:49:46.417" level="INFO">${zip_log} = True</msg>
<status status="PASS" endtime="20171019 16:49:46.417" starttime="20171019 16:49:46.414"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Run Keyword If</arg>
<arg>${zip_log} == ${True}</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${value}</var>
</assign>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>${zip_log} == ${True}</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${zip_log} == ${True}</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<kw name="Zip File" library="tdd_ev_robotws">
<doc>This keyword can zip specific files.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<msg timestamp="20171019 16:49:54.963" level="INFO">[zip_control.py@325] 
7-Zip [64] 9.38 beta  Copyright (c) 1999-2014 Igor Pavlov  2015-01-03
Scanning

Creating archive D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701.zip

Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FileDirectory_20171019162807.xml
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Mediainfo.ini
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\CountersMonitorResults.txt
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Default.xls
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\GeneralInfo.ini
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\1.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\10.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\11.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\12.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\13.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\2.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\3.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\4.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\5.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\6.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\7.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\8.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Icons\9.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\InstallNewReport.html
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Results.qtp
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019162909\Report\Results.xml
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Mediainfo.ini
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\CountersMonitorResults.txt
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Default.xls
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\GeneralInfo.ini
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\1.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\10.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\11.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\12.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\13.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\14.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\2.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\3.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\4.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\5.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\6.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\7.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\8.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Icons\9.ico
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\InstallNewReport.html
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Results.qtp
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\GUILog\qtp_log20171019163031\Report\Results.xml
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\im_20171019164809.ims2
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\FZFI_Addtional_SWDL_SW_upgrade_both\SW_upgrade_20171019164337.log
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\SCFC_204.xml
Compressing  FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701\SiteConf.xml

Everything is Ok

Kernel  Time =     0.093 =    1%
User    Time =     8.673 =  101%
Process Time =     8.767 =  103%    Virtual  Memory =    146 MB
Global  Time =     8.509 =  100%    Physical Memory =     23 MB</msg>
<msg timestamp="20171019 16:49:54.963" level="INFO">[zip_control.py@329] zip D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701 to D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701.zip successful!</msg>
<status status="PASS" endtime="20171019 16:49:54.963" starttime="20171019 16:49:46.421"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:54.963" starttime="20171019 16:49:46.418"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:54.963" starttime="20171019 16:49:46.418"></status>
</kw>
<msg timestamp="20171019 16:49:54.963" level="INFO">${status} = PASS</msg>
<msg timestamp="20171019 16:49:54.963" level="INFO">${value} = None</msg>
<status status="PASS" endtime="20171019 16:49:54.963" starttime="20171019 16:49:46.417"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Run Keyword If</arg>
<arg>'${status}' == 'PASS' and ${zip_log} == ${True}</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${status}' == 'PASS' and ${zip_log} == ${True}</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == 'PASS' and ${zip_log} == ${True}</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Remove Directory" library="OperatingSystem">
<doc>Removes the directory pointed to by the given ``path``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<msg timestamp="20171019 16:49:54.991" html="yes" level="INFO">Removed directory '&lt;a href="file://D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701"&gt;D:\TA_logs\ev_logs\FZFI_Addtional_SWDL_SW_upgrade_both_20171019162701&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20171019 16:49:54.991" starttime="20171019 16:49:54.968"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:54.992" starttime="20171019 16:49:54.965"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:54.992" starttime="20171019 16:49:54.964"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:54.992" starttime="20171019 16:49:54.964"></status>
</kw>
<status status="PASS" endtime="20171019 16:49:54.992" starttime="20171019 16:49:46.395"></status>
</kw>
<doc>TD-LTE I&amp;V SISO1</doc>
<status status="PASS" endtime="20171019 16:49:54.992" starttime="20171019 16:26:59.656"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">owner-xingqiang.wu@nokia.com</stat>
<stat fail="0" pass="1">QC_612238</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="FZFI Addtional SWDL SW upgrade both" pass="1">FZFI Addtional SWDL SW upgrade both</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20171019 16:27:00.423" level="ERROR">Loading tdd_config has failed. Please check if: 
       1. you executed pybot with --variable CONFIGURATION:$your_tl_config 
          i.e. pybot --variable CONFIGURATION:Wroclaw.test 
       2. check if there is no problem with your configuration 
       Error msg: Variable ${CONFIGURATION} does not exist.
</msg>
<msg timestamp="20171019 16:49:23.508" level="ERROR">Infomodel not connected.</msg>
</errors>
</robot>
