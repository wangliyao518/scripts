<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170704 19:58:44.364" generator="Rebot 3.0 (Python 2.7.5 on win32)">
<suite source="D:\TA\Test_Case_Svn\Trunk_CRT\CIT\CPRI_Single_FZNE\FZNE_Operational_Cell_block_unblock\FZNE_Operational_Cell_block_unblock.html" id="s1" name="FZNE Operational Cell block unblock">
<kw type="setup" name="Common Suite Setup" library="common_resource">
<doc>this keyword create suite name directory path as D:\TA\TA_logs\TestLog_20170704172422//logs//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20170704 19:36:05.084" level="INFO">${timestamp} = 20170704193605</msg>
<status status="PASS" endtime="20170704 19:36:05.084" starttime="20170704 19:36:05.042"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_NAME[:50]}</arg>
<arg>\\s+$</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${FILE_NAME}</var>
</assign>
<msg timestamp="20170704 19:36:05.085" level="INFO">${FILE_NAME} = FZNE Operational Cell block unblock</msg>
<status status="PASS" endtime="20170704 19:36:05.085" starttime="20170704 19:36:05.084"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>ev_logs</arg>
<arg>${FILE_NAME}_${timestamp}</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20170704 19:36:05.086" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE Operational Cell block unblock_20170704193605</msg>
<status status="PASS" endtime="20170704 19:36:05.086" starttime="20170704 19:36:05.085"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20170704 19:36:05.087" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605</msg>
<status status="PASS" endtime="20170704 19:36:05.087" starttime="20170704 19:36:05.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170704 19:36:05.087" level="INFO">${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605</msg>
<status status="PASS" endtime="20170704 19:36:05.088" starttime="20170704 19:36:05.087"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170704 19:36:05.089" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605"&gt;D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170704 19:36:05.089" starttime="20170704 19:36:05.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20170704 19:36:05.089" level="INFO">save log dir:D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605</msg>
<status status="PASS" endtime="20170704 19:36:05.089" starttime="20170704 19:36:05.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${snapshot_flag}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170704 19:36:05.093" level="INFO">${snapshot_flag} = 0</msg>
<status status="PASS" endtime="20170704 19:36:05.093" starttime="20170704 19:36:05.090"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<msg timestamp="20170704 19:36:05.114" level="FAIL">Variable ${TEST LOG DIR} does not exist.</msg>
<status status="FAIL" endtime="20170704 19:36:05.114" starttime="20170704 19:36:05.107"></status>
</kw>
<msg timestamp="20170704 19:36:05.114" level="INFO">${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')</msg>
<status status="PASS" endtime="20170704 19:36:05.114" starttime="20170704 19:36:05.107"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:36:05.115" starttime="20170704 19:36:05.115"></status>
</kw>
<msg timestamp="20170704 19:36:05.115" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170704 19:36:05.115" starttime="20170704 19:36:05.114"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:36:05.123" starttime="20170704 19:36:05.119"></status>
</kw>
<msg timestamp="20170704 19:36:05.123" level="INFO">${log dir} = D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605</msg>
<status status="PASS" endtime="20170704 19:36:05.123" starttime="20170704 19:36:05.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20170704 19:36:05.127" level="INFO">${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605</msg>
<status status="PASS" endtime="20170704 19:36:05.127" starttime="20170704 19:36:05.123"></status>
</kw>
<status status="PASS" endtime="20170704 19:36:05.128" starttime="20170704 19:36:05.106"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Make Sure FCT Ping Ok</arg>
</arguments>
<kw name="Make Sure FCT Ping Ok" library="common_resource">
<kw name="Ping Should Ok" library="tdd_ev_robotws">
<doc>This function is used for check whether ping host success, if yes, return 1, else return 0</doc>
<arguments>
<arg>${FCMD_IP}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20170704 19:36:05.158" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20170704 19:36:05.159" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20170704 19:36:05.159" starttime="20170704 19:36:05.129"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${FTM_IP}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:36:05.159" starttime="20170704 19:36:05.159"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Btscli Disable Bts Port Security</arg>
</arguments>
<status status="PASS" endtime="20170704 19:36:05.160" starttime="20170704 19:36:05.160"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>60</arg>
<arg>${FCMD_IP}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:36:05.161" starttime="20170704 19:36:05.161"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5min</arg>
<arg>5s</arg>
<arg>_make sure fctb connect ok</arg>
</arguments>
<status status="PASS" endtime="20170704 19:36:05.162" starttime="20170704 19:36:05.162"></status>
</kw>
<status status="PASS" endtime="20170704 19:36:05.162" starttime="20170704 19:36:05.129"></status>
</kw>
<status status="PASS" endtime="20170704 19:36:05.162" starttime="20170704 19:36:05.128"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>get_enb_infomation</arg>
</arguments>
<kw name="Get Enb Infomation" library="tdd_ev_robotws">
<doc>This keyword will print bts sw version, bbu type and RRU type.</doc>
<msg timestamp="20170704 19:37:10.232" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170704 19:37:10.264" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170704 19:37:21.387" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170704 19:37:21.425" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170704 19:37:21.937" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170704 19:37:21.978" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:36:29 -11 2017 from 192.168.255.126 on pts/0
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05966C10&gt;</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05966C10&gt;</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:36:49 -11 2017 from 192.168.255.126 on pts/0
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x059A1828&gt;</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_170704_063766.xml
root@FCTF:/ffs/fs1 &gt;</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x059A1828&gt;</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1499168233&amp;token=232ea90c3e125bb870931afb5284537e99396e177c83341b6a3e82e374a82c30&amp;frame=sshservice'</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;SSH Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1499168237&amp;token=f64b40d9b3abce5bfab631d6f46ec0d99b5ad9ed99a1c989d3b0acc37de8f327&amp;frame=RndPortsService'</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;R&amp;D Ports Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:36:59 -11 2017 from 192.168.255.126 on pts/0
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A14288&gt;</msg>
<msg timestamp="20170704 19:37:45.934" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A14288&gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:37:21 -11 2017 from 192.168.255.126 on pts/0
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A14738&gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_170704_063766.xml
root@FCTF:/ffs/fs1 &gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A14738&gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[enb_resource.py@1139] 
 ****Current BTS version is 'TL18_ENB_9999_170704_063766' *****</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[enb_resource.py@1169] activeBuildVersion=TL18_ENB_9999_170704_063766</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:37:32 -11 2017 from 192.168.255.126 on pts/0
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A14CB0&gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@258] Execute command: ls /ram/SiteConf.xml</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@314] Get Response: ls /ram/SiteConf.xml
/ram/SiteConf.xml
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A14CB0&gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[sftp_control.py@176] /ram/SiteConf.xml</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[sftp_control.py@79] sftp download from '/ram/SiteConf.xml' to 'D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\SiteConf.xml' is ok. local file size is 27k</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:37:53 -11 2017 from 192.168.255.126 on ssh
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x059638C8&gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x059638C8&gt;</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[enb_resource.py@402] The real falsh folder is /ffs/fs1</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[sftp_control.py@176] /ffs/fs1/FileDirectory.xml</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs1/FileDirectory.xml' to 'D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FileDirectory_20170704193710.xml' is ok. local file size is 35k</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[sftp_control.py@176] /ffs/fs1/config/SCFC_166.xml</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs1/config/SCFC_166.xml' to 'D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\SCFC_166.xml' is ok. local file size is 101k</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[enb_resource.py@1139] 
 ****Current bbu type is 'FSIH' *****</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[enb_resource.py@1264] HW_BBU_TYPE=FSIH</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[enb_resource.py@1139] 
 ****Current rru type is '' *****</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[enb_resource.py@1267] HW_RRU_TYPE=</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[enb_resource.py@1139] 
 ****Current HW type is 'null' *****</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[enb_resource.py@1270] BTS_HW_TYPE=null</msg>
<msg timestamp="20170704 19:37:45.935" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.20 with 32 bytes of data:
Reply from 192.168.255.126: Destination host unreachable.

Ping statistics for 192.168.255.20:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),</msg>
<status status="PASS" endtime="20170704 19:37:45.938" starttime="20170704 19:36:05.163"></status>
</kw>
<status status="PASS" endtime="20170704 19:37:45.938" starttime="20170704 19:36:05.162"></status>
</kw>
<kw name="Set Library Search Order" library="BuiltIn">
<doc>Sets the resolution order to use when a name matches multiple keywords.</doc>
<arguments>
<arg>tdd_ev_robotws</arg>
<arg>OperatingSystem</arg>
</arguments>
<status status="PASS" endtime="20170704 19:37:45.938" starttime="20170704 19:37:45.938"></status>
</kw>
<kw name="Initial Connection With BTS PC" library="common_resource">
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20170704 19:37:45.940" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20170704 19:37:45.940" starttime="20170704 19:37:45.939"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>${TELNET_PORT}</arg>
<arg>${SSH_PORT}</arg>
</arguments>
<assign>
<var>${conn_port}</var>
</assign>
<msg timestamp="20170704 19:37:45.943" level="INFO">${conn_port} = 23</msg>
<status status="PASS" endtime="20170704 19:37:45.943" starttime="20170704 19:37:45.940"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>TELNET</arg>
<arg>SSH</arg>
</arguments>
<assign>
<var>${conn_type}</var>
</assign>
<msg timestamp="20170704 19:37:45.946" level="INFO">${conn_type} = TELNET</msg>
<status status="PASS" endtime="20170704 19:37:45.946" starttime="20170704 19:37:45.943"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>30</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${timeout}</var>
</assign>
<msg timestamp="20170704 19:37:45.949" level="INFO">${timeout} = 30</msg>
<status status="PASS" endtime="20170704 19:37:45.949" starttime="20170704 19:37:45.946"></status>
</kw>
<kw name="Connect To Host" library="tdd_ev_robotws">
<doc>Used to connect to host, either TELNET or SSH</doc>
<arguments>
<arg>${BTS_PC_INFO.IP}</arg>
<arg>port=${conn_port}</arg>
<arg>username=${BTS_PC_INFO.USERNAME}</arg>
<arg>password=${BTS_PC_INFO.PASSWORD}</arg>
<arg>conn_type=${conn_type}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${BTS_PC_CONNECTION}</var>
</assign>
<msg timestamp="20170704 19:37:47.392" level="INFO">[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service 


login:</msg>
<msg timestamp="20170704 19:37:47.392" level="INFO">[telnet_common.py@276] Execute command: tdlte-tester</msg>
<msg timestamp="20170704 19:37:47.392" level="INFO">[telnet_common.py@306] Get Response:  tdlte-tester

password:</msg>
<msg timestamp="20170704 19:37:47.392" level="INFO">[telnet_common.py@276] Execute command: btstest</msg>
<msg timestamp="20170704 19:37:47.392" level="INFO">[telnet_common.py@246]  

*===============================================================
Microsoft Telnet Server.
*===============================================================
C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170704 19:37:47.392" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<status status="PASS" endtime="20170704 19:37:47.392" starttime="20170704 19:37:45.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170704 19:37:47.393" level="INFO">${BTS_PC_CONNECTION} = 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<status status="PASS" endtime="20170704 19:37:47.393" starttime="20170704 19:37:47.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>Execute Shell Command</arg>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<msg timestamp="20170704 19:37:48.602" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<msg timestamp="20170704 19:37:48.602" level="INFO">[telnet_common.py@276] Execute command: tlntadmn config timeoutactive=no</msg>
<msg timestamp="20170704 19:37:48.602" level="INFO">[telnet_common.py@306] Get Response: tlntadmn config timeoutactive=no
The settings were successfully updated.

C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170704 19:37:48.602" starttime="20170704 19:37:47.398"></status>
</kw>
<status status="PASS" endtime="20170704 19:37:48.602" starttime="20170704 19:37:47.394"></status>
</kw>
<status status="PASS" endtime="20170704 19:37:48.603" starttime="20170704 19:37:45.939"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170704 19:37:48.608" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;.</msg>
<status status="PASS" endtime="20170704 19:37:48.608" starttime="20170704 19:37:48.603"></status>
</kw>
<status status="PASS" endtime="20170704 19:37:48.608" starttime="20170704 19:36:05.042"></status>
</kw>
<kw type="teardown" name="Common Suite Teardown" library="common_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${REMOVE_LOGS}'=='on'</arg>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:58:40.499" starttime="20170704 19:58:40.496"></status>
</kw>
<kw name="Disconnect All Hosts" library="tdd_ev_robotws">
<doc>Closes all existing telnet connections to remote hosts.</doc>
<msg timestamp="20170704 19:58:40.507" level="INFO">[telnet_common.py@188]</msg>
<msg timestamp="20170704 19:58:40.507" level="INFO">[telnet_common.py@189] Disconnect from 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<status status="PASS" endtime="20170704 19:58:40.507" starttime="20170704 19:58:40.499"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<status status="PASS" endtime="20170704 19:58:40.509" starttime="20170704 19:58:40.509"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:40.509" starttime="20170704 19:58:40.508"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:58:40.510" starttime="20170704 19:58:40.510"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:40.510" starttime="20170704 19:58:40.509"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:40.510" starttime="20170704 19:58:40.495"></status>
</kw>
<test id="s1-t1" name="FZNE_Operational_Cell_block_unblock">
<kw type="setup" name="Common Test Setup" library="common_resource">
<doc>this keyword create case name directory path as D:\TA\TA_logs\TestLog_20170704172422//ev_logs//D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605//</doc>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20170704 19:37:48.614" level="INFO">${timestamp} = 20170704193748</msg>
<status status="PASS" endtime="20170704 19:37:48.614" starttime="20170704 19:37:48.614"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20170704 19:37:48.615" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170704 19:37:48.615" starttime="20170704 19:37:48.614"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20170704 19:37:48.616" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170704 19:37:48.616" starttime="20170704 19:37:48.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170704 19:37:48.616" level="INFO">${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170704 19:37:48.616" starttime="20170704 19:37:48.616"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170704 19:37:48.618" html="yes" level="INFO">Created directory '&lt;a href="file://D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock"&gt;D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock&lt;/a&gt;'.</msg>
<status status="PASS" endtime="20170704 19:37:48.618" starttime="20170704 19:37:48.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20170704 19:37:48.618" level="INFO">save log dir:D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170704 19:37:48.618" starttime="20170704 19:37:48.618"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${BTS PC CONNECTION.connected}</arg>
<arg>Initial Connection With BTS PC</arg>
</arguments>
<status status="PASS" endtime="20170704 19:37:48.619" starttime="20170704 19:37:48.619"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:37:48.622" starttime="20170704 19:37:48.622"></status>
</kw>
<msg timestamp="20170704 19:37:48.622" level="INFO">${case_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170704 19:37:48.622" starttime="20170704 19:37:48.621"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:37:48.623" starttime="20170704 19:37:48.623"></status>
</kw>
<msg timestamp="20170704 19:37:48.623" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20170704 19:37:48.623" starttime="20170704 19:37:48.622"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<msg timestamp="20170704 19:37:48.627" level="INFO">${log dir} = D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170704 19:37:48.627" starttime="20170704 19:37:48.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20170704 19:37:48.627" level="INFO">${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock</msg>
<status status="PASS" endtime="20170704 19:37:48.628" starttime="20170704 19:37:48.627"></status>
</kw>
<status status="PASS" endtime="20170704 19:37:48.628" starttime="20170704 19:37:48.620"></status>
</kw>
<status status="PASS" endtime="20170704 19:37:48.628" starttime="20170704 19:37:48.613"></status>
</kw>
<kw name="BTS_On_Air" library="SISO1 Resource">
<arguments>
<arg>${source_scf}</arg>
<arg>${parameter_list}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170704 19:37:48.635" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;.</msg>
<status status="PASS" endtime="20170704 19:37:48.635" starttime="20170704 19:37:48.629"></status>
</kw>
<kw name="Parse Ping Result" library="tdd_ev_robotws">
<doc>This keyword test the reachability of remote system.</doc>
<arguments>
<arg>192.168.255.1</arg>
</arguments>
<assign>
<var>${package_summary}</var>
<var>${ping_delay}</var>
</assign>
<msg timestamp="20170704 19:37:52.829" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<msg timestamp="20170704 19:37:52.829" level="INFO">[telnet_common.py@276] Execute command: ping  192.168.255.1</msg>
<msg timestamp="20170704 19:37:52.829" level="INFO">[telnet_common.py@306] Get Response: ping  192.168.255.1

Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms

C:\Users\tdlte-tester&gt;
Total ping delay is: [1, 1, 1, 1]
Statistic ping delay is: [1, 1, 1, 1]
Valid ping delay is: [1, 1, 1, 1]</msg>
<msg timestamp="20170704 19:37:52.829" level="INFO">${package_summary} = ('4', '4', '0')</msg>
<msg timestamp="20170704 19:37:52.829" level="INFO">${ping_delay} = [1, 1, 1.0]</msg>
<status status="PASS" endtime="20170704 19:37:52.829" starttime="20170704 19:37:48.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Restart Device With Powerbreaker</arg>
<arg>${bts_powerbreak}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:37:52.833" starttime="20170704 19:37:52.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${package_summary[2]}&gt;2</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20170704 19:37:52.837" starttime="20170704 19:37:52.833"></status>
</kw>
<kw name="Modify And Upload Scf File" library="tdd_ev_robotws">
<doc>modify source_scf according parameter list and then upload to enb.</doc>
<arguments>
<arg>${source_scf}</arg>
<arg>${parameters_list}</arg>
</arguments>
<msg timestamp="20170704 19:38:56.740" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170704 19:38:56.768" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170704 19:39:07.950" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20170704 19:39:08.081" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:38:05 -11 2017 from 192.168.255.126 on ssh
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A237D8&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A237D8&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:38:36 -11 2017 from 192.168.255.126 on pts/0
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A237D8&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_170704_063766.xml
root@FCTF:/ffs/fs1 &gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A237D8&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1499168339&amp;token=0f557e4dcf6c3cb14003756ec1053f403df80861a35489b48f2dd8918cce8ce7&amp;frame=sshservice'</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;SSH Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@210] login succeed !</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@94] try: 1/1, http return code: 200</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1499168344&amp;token=80259e908f6a44a389a6bab62cfc6c52b4683389449fe269ada327b54a6f7d1b&amp;frame=RndPortsService'</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@94] try: 1/3, http return code: 200</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ftm_control.py@266] &lt;!doctype html public "-//w3c//dtd html 4.0 transitional//en"&gt;
&lt;html&gt;
    &lt;head&gt;
    &lt;meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"&gt;
    &lt;meta http-equiv="expires" content="0"&gt;
    &lt;meta http-equiv="cache-control" content="public,no-cache"&gt;
    &lt;meta http-equiv="pragma" content="no-cache"&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E7E7E7"&gt;

    &lt;bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"&gt;

    &lt;h3&gt;&lt;FONT face="Arial, Helvetica, sans-serif"&gt;
&lt;p&gt;&lt;h3&gt;R&amp;D Ports Service Enabled Successfully&lt;/h3&gt;
&lt;/p&gt;&lt;/body&gt;
&lt;/html&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:38:47 -11 2017 from 192.168.255.126 on pts/0
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A30E68&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A30E68&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:39:08 -11 2017 from 192.168.255.126 on pts/0
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A30918&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_170704_063766.xml
root@FCTF:/ffs/fs1 &gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A30918&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:39:19 -11 2017 from 192.168.255.126 on pts/0
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A30918&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A30918&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[enb_resource.py@402] The real falsh folder is /ffs/fs1</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[sftp_control.py@176] /ffs/fs1/FileDirectory.xml</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs1/FileDirectory.xml' to 'D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\FileDirectory_20170704193845.xml' is ok. local file size is 35k</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.129</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:39:39 -11 2017 from 192.168.255.126 on ssh
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A30A08&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@258] Execute command: rm -rf /ffs/fs1/config/hwf.bin.gz</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@314] Get Response: rm -rf /ffs/fs1/config/hwf.bin.gz
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A30A08&gt;</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[sftp_control.py@61] sftp upload from 'D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\scf_modified.xml' to '/ffs/fs1/config/SCFC_166.xml' is ok.</msg>
<msg timestamp="20170704 19:39:08.088" level="INFO">[sftp_control.py@176] /ffs/fs1/config/SCFC_166.xml</msg>
<status status="PASS" endtime="20170704 19:39:08.090" starttime="20170704 19:37:52.837"></status>
</kw>
<kw name="Restart Bts Until Onair" library="tdd_ev_robotws">
<doc>restart bts with powerbreaker and then wait until it is onair.</doc>
<arguments>
<arg>bts_powerbreak_port=${bts_powerbreak}</arg>
</arguments>
<msg timestamp="20170704 19:49:46.906" level="INFO">[tools_resource.py@34] start power off ..</msg>
<msg timestamp="20170704 19:49:46.906" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170704 19:49:46.906" level="INFO">[base.py@48] trial power off for 0 times</msg>
<msg timestamp="20170704 19:49:46.906" level="INFO">[facom.py@60] Power off port 6 succeed!</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[base.py@48] trial power off for 0 times</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[facom.py@60] Power off port 5 succeed!</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[base.py@48] trial power off for 0 times</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[facom.py@60] Power off port 3 succeed!</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[tools_resource.py@37] start power on ..</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[base.py@36] trial power on for 0 times</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[facom.py@83] Power on port 6 succeed!</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[base.py@36] trial power on for 0 times</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[facom.py@83] Power on port 5 succeed!</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[facom.py@121] Connect to Facom succeed !</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[base.py@36] trial power on for 0 times</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[facom.py@83] Power on port 3 succeed!</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[tools_resource.py@39] restart port '['FACOM:10.69.66.102:6', 'FACOM:10.69.66.104:5', 'FACOM:10.69.66.104:3']' with powerbreak succeed !</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[btslog_control.py@174] use ip is 192.168.255.126</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock" already exists, no need to create it again.</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Request timed out.

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),</msg>
<msg timestamp="20170704 19:49:46.907" level="INFO">[ping_control.py@189] 
Pinging 192.168.255.1 with 32 bytes of data:
Reply from 192.168.255.1: bytes=32 time&lt;1ms TTL=255

Ping statistics for 192.168.255.1:
    Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),
Approximate round trip times in milli-seconds:
    Minimum = 0ms, Maximum = 0ms, Average = 0ms</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[infomodel_control.py@158] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None
             ftp_username=toor4nsn,ftp_password=oZPS0POrRieRtu</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[infomodel_control.py@162] start infomodel succeed .</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[infomodel_control.py@164] start infomodel logger succeed .</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.908" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'commissioned', u'operationalState': 'Enabled', u'availabilityStatus': 'Online'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@211] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@222] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': 'PowerOn', u'btsId': 1405L, u'actInterEnbDLCAggr': False, u'planHandlingState': 'Idle', u'stateInfo': {u'blockingState': 'Unblocked', u'testingState': 'Disabled', u'usageState': 'Active', u'administrativeState': 'Unlocked', u'reasoningStatus': [], u'softwareState': 'Deployed', u'proceduralState': 'integrated__Space__to__Space__RAN', u'operationalState': 'Enabled', u'availabilityStatus': 'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[infomodel_control.py@328] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[infomodel_control.py@328] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[infomodel_control.py@328] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[infomodel_control.py@328] query infomodel: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' succeed .</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@225] infomodel check every cell onair succeed !</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[enb_resource.py@253] bts log check onair msg succeed !</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[infomodel_control.py@215] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\im_20170704194946' succeed .</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[infomodel_control.py@187] stop infomodel logger succeed .</msg>
<msg timestamp="20170704 19:49:46.909" level="INFO">[infomodel_control.py@199] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170704 19:49:46.917" starttime="20170704 19:39:08.091"></status>
</kw>
<status status="PASS" endtime="20170704 19:49:46.917" starttime="20170704 19:37:48.629"></status>
</kw>
<kw type="for" name="${num} IN RANGE [ ${total_times} ]">
<kw type="foritem" name="${num} = 0">
<kw name="_Cell_Block_Unblock_and_Attach">
<doc>Operation with BTS</doc>
<arguments>
<arg>${num}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170704 19:49:46.923" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;.</msg>
<status status="PASS" endtime="20170704 19:49:46.923" starttime="20170704 19:49:46.919"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170704 19:49:50.817" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<msg timestamp="20170704 19:49:50.817" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170704 19:49:50.817" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-635\ROOT\CIMV2:Win32_Process.Handle="4396"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170704 19:49:50.817" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<msg timestamp="20170704 19:49:50.817" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170704 19:49:50.817" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-635\ROOT\CIMV2:Win32_Process.Handle="7012"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170704 19:49:50.817" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<msg timestamp="20170704 19:49:50.817" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170704 19:49:50.817" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.


C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170704 19:49:50.817" starttime="20170704 19:49:46.924"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20170704 19:49:50.823" starttime="20170704 19:49:50.823"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20170704 19:49:50.827" starttime="20170704 19:49:50.824"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170704 19:49:50.827" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170704172422\\ev_logs\\FZNE_Operational_Cell_block_unblock_20170704193605\\FZNE_Operational_Cell_...</msg>
<status status="PASS" endtime="20170704 19:49:50.828" starttime="20170704 19:49:50.827"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:49:50.828" starttime="20170704 19:49:50.828"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170704 19:50:42.237" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; java addin isn't active
&lt;QTP&gt; start to set addins to active
&lt;QTP&gt; set addins to active successfully
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\GUILog\qtp_log20170704194950\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170704 19:50:42.238" starttime="20170704 19:49:50.828"></status>
</kw>
<status status="PASS" endtime="20170704 19:50:42.238" starttime="20170704 19:49:50.822"></status>
</kw>
<kw name="Start_Udp_And_Infomodel_Log" library="SISO1 Resource">
<kw name="Start Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword starts catching of BTS system(UDP) log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}.log</arg>
</arguments>
<msg timestamp="20170704 19:50:42.578" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'</msg>
<msg timestamp="20170704 19:50:42.578" level="INFO">[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock" already exists, no need to create it again.</msg>
<status status="PASS" endtime="20170704 19:50:42.578" starttime="20170704 19:50:42.239"></status>
</kw>
<kw name="Start Infomodel" library="tdd_ev_robotws">
<doc>Setup InfoModel library and Connect to InfoModel.</doc>
<arguments>
<arg>port=${BTS_INFOMODEL_PORT}</arg>
</arguments>
<msg timestamp="20170704 19:50:51.851" level="INFO">[infomodel_control.py@158] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None
             ftp_username=toor4nsn,ftp_password=oZPS0POrRieRtu</msg>
<msg timestamp="20170704 19:50:51.851" level="INFO">[infomodel_control.py@162] start infomodel succeed .</msg>
<msg timestamp="20170704 19:50:51.851" level="INFO">[infomodel_control.py@164] start infomodel logger succeed .</msg>
<status status="PASS" endtime="20170704 19:50:51.851" starttime="20170704 19:50:42.578"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20170704 19:50:51.852" level="INFO">${case_execute_log_name} = owner_debug</msg>
<status status="PASS" endtime="20170704 19:50:51.852" starttime="20170704 19:50:51.852"></status>
</kw>
<status status="PASS" endtime="20170704 19:50:51.852" starttime="20170704 19:50:42.238"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${${num}+1}</arg>
<arg>Block</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170704 19:50:51.855" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=1', u'HWAction=Block', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170704172422\\ev_logs\\FZNE_Operational_Cell_block_unblock_20170704193605\\FZNE_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170704 19:50:51.855" starttime="20170704 19:50:51.854"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170704 19:51:14.304" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; java addin isn't active
&lt;QTP&gt; start to set addins to active
&lt;QTP&gt; set addins to active successfully
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="1"
HWAction="Block"
LogPath="D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\GUILog\qtp_log20170704195051\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170704 19:51:14.304" starttime="20170704 19:50:51.855"></status>
</kw>
<status status="PASS" endtime="20170704 19:51:14.304" starttime="20170704 19:50:51.853"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>20 sec</arg>
</arguments>
<msg timestamp="20170704 19:51:34.305" level="INFO">Slept 20 seconds</msg>
<status status="PASS" endtime="20170704 19:51:34.305" starttime="20170704 19:51:14.304"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${${num}+1}</arg>
<arg>Unblock</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170704 19:51:34.309" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=1', u'HWAction=Unblock', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170704172422\\ev_logs\\FZNE_Operational_Cell_block_unblock_20170704193605\\FZNE_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170704 19:51:34.309" starttime="20170704 19:51:34.307"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170704 19:51:53.181" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; java addin isn't active
&lt;QTP&gt; start to set addins to active
&lt;QTP&gt; set addins to active successfully
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="1"
HWAction="Unblock"
LogPath="D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\GUILog\qtp_log20170704195134\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170704 19:51:53.182" starttime="20170704 19:51:34.309"></status>
</kw>
<status status="PASS" endtime="20170704 19:51:53.182" starttime="20170704 19:51:34.306"></status>
</kw>
<kw name="GUI SM Check BTS HW Status" library="gui_resource">
<doc>This keyword is used to check the status on BTS Hardware panel.</doc>
<arguments>
<arg>AllCell</arg>
<arg>Operational state=Enabled;;Working state=Working</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>CompName=${CompName}</arg>
<arg>CheckField=${CheckField}</arg>
<arg>WaitTime=${WaitTime}</arg>
<arg>CheckSameFlag=${CheckSameFlag}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170704 19:51:53.184" level="INFO">${para_list} = [u'CompName=AllCell', u'CheckField=Operational state=Enabled;;Working state=Working', u'WaitTime=0', u'CheckSameFlag=1', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170704172422\\ev_logs\\FZNE_Operational_Ce...</msg>
<status status="PASS" endtime="20170704 19:51:53.184" starttime="20170704 19:51:53.183"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:51:53.185" starttime="20170704 19:51:53.184"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170704 19:52:05.832" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; java addin isn't active
&lt;QTP&gt; start to set addins to active
&lt;QTP&gt; set addins to active successfully
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
CompName="AllCell"
CheckField="Operational state=Enabled;;Working state=Working"
WaitTime="0"
CheckSameFlag="1"
LogPath="D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\GUILog\qtp_log20170704195153\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170704 19:52:05.833" starttime="20170704 19:51:53.185"></status>
</kw>
<status status="PASS" endtime="20170704 19:52:05.833" starttime="20170704 19:51:53.183"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170704 19:52:09.822" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<msg timestamp="20170704 19:52:09.822" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170704 19:52:09.823" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-635\ROOT\CIMV2:Win32_Process.Handle="460"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170704 19:52:09.823" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<msg timestamp="20170704 19:52:09.823" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170704 19:52:09.823" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-635\ROOT\CIMV2:Win32_Process.Handle="1936"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170704 19:52:09.823" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<msg timestamp="20170704 19:52:09.823" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170704 19:52:09.823" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.


C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170704 19:52:09.824" starttime="20170704 19:52:05.833"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20170704 19:52:09.830" starttime="20170704 19:52:09.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20170704 19:52:09.836" starttime="20170704 19:52:09.830"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170704 19:52:09.837" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170704172422\\ev_logs\\FZNE_Operational_Cell_block_unblock_20170704193605\\FZNE_Operational_Cell_...</msg>
<status status="PASS" endtime="20170704 19:52:09.837" starttime="20170704 19:52:09.836"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:52:09.837" starttime="20170704 19:52:09.837"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170704 19:53:01.091" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; java addin isn't active
&lt;QTP&gt; start to set addins to active
&lt;QTP&gt; set addins to active successfully
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\GUILog\qtp_log20170704195209\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170704 19:53:01.091" starttime="20170704 19:52:09.837"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.091" starttime="20170704 19:52:09.829"></status>
</kw>
<kw name="UE_Attach_SISO1" library="SISO1 Resource">
<doc>Example</doc>
<arguments>
<arg>1</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${cell_id}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{cell_list}</var>
</assign>
<msg timestamp="20170704 19:53:01.096" level="INFO">@{cell_list} = [ 1 ]</msg>
<status status="PASS" endtime="20170704 19:53:01.096" starttime="20170704 19:53:01.095"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${cell_list}</arg>
</arguments>
<assign>
<var>${cell_list_length}</var>
</assign>
<msg timestamp="20170704 19:53:01.097" level="INFO">Length is 1</msg>
<msg timestamp="20170704 19:53:01.097" level="INFO">${cell_list_length} = 1</msg>
<status status="PASS" endtime="20170704 19:53:01.097" starttime="20170704 19:53:01.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Split String</arg>
<arg>${attach_earfcn}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>${earfcn_list1}</var>
</assign>
<msg timestamp="20170704 19:53:01.101" level="INFO">${earfcn_list1} = None</msg>
<status status="PASS" endtime="20170704 19:53:01.101" starttime="20170704 19:53:01.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Change_Earfcn_To_Freqency</arg>
<arg>${earfcn_list1}</arg>
</arguments>
<assign>
<var>${freqency_list1}</var>
<var>${band_list1}</var>
</assign>
<msg timestamp="20170704 19:53:01.104" level="INFO">${freqency_list1} = None</msg>
<msg timestamp="20170704 19:53:01.104" level="INFO">${band_list1} = None</msg>
<status status="PASS" endtime="20170704 19:53:01.104" starttime="20170704 19:53:01.101"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Get_Earfcn_From_Infomodel</arg>
</arguments>
<assign>
<var>${earfcn_list2}</var>
<var>${freqency_list2}</var>
<var>${band_list2}</var>
</assign>
<kw name="Get_Earfcn_From_Infomodel" library="SISO1 Resource">
<kw name="Query Infomodel" library="tdd_ev_robotws">
<doc>Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.</doc>
<arguments>
<arg>get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1</arg>
</arguments>
<assign>
<var>@{ret_earfcn}</var>
</assign>
<msg timestamp="20170704 19:53:01.218" level="INFO">[infomodel_control.py@328] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .</msg>
<msg timestamp="20170704 19:53:01.218" level="INFO">@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [39100L], u'fcnDLs': [39100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u's...</msg>
<status status="PASS" endtime="20170704 19:53:01.219" starttime="20170704 19:53:01.108"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${ret_earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.219" starttime="20170704 19:53:01.219"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${earfcn_list}</var>
</assign>
<msg timestamp="20170704 19:53:01.220" level="INFO">${earfcn_list} = []</msg>
<status status="PASS" endtime="20170704 19:53:01.220" starttime="20170704 19:53:01.219"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${freqency_list}</var>
</assign>
<msg timestamp="20170704 19:53:01.220" level="INFO">${freqency_list} = []</msg>
<status status="PASS" endtime="20170704 19:53:01.220" starttime="20170704 19:53:01.220"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${band_list}</var>
</assign>
<msg timestamp="20170704 19:53:01.221" level="INFO">${band_list} = []</msg>
<status status="PASS" endtime="20170704 19:53:01.221" starttime="20170704 19:53:01.221"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_OFFSET}</arg>
</arguments>
<assign>
<var>${offset_dict}</var>
</assign>
<msg timestamp="20170704 19:53:01.221" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170704 19:53:01.223" level="INFO">${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}</msg>
<status status="PASS" endtime="20170704 19:53:01.224" starttime="20170704 19:53:01.221"></status>
</kw>
<kw type="for" name="${index} IN [ @{ret_earfcn} ]">
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1: {u'fcnULs': [39100L], u'fcnDLs': [39100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-1/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170704 19:53:01.225" level="INFO">${index.earfcn} = 39100</msg>
<status status="PASS" endtime="20170704 19:53:01.225" starttime="20170704 19:53:01.224"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.226" starttime="20170704 19:53:01.225"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170704 19:53:01.227" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170704 19:53:01.229" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170704 19:53:01.229" starttime="20170704 19:53:01.227"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170704 19:53:01.229" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170704 19:53:01.230" starttime="20170704 19:53:01.229"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170704 19:53:01.231" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170704 19:53:01.231" starttime="20170704 19:53:01.230"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170704 19:53:01.234" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170704 19:53:01.234" starttime="20170704 19:53:01.231"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.235" starttime="20170704 19:53:01.235"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.235" starttime="20170704 19:53:01.230"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170704 19:53:01.238" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170704 19:53:01.238" starttime="20170704 19:53:01.235"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170704 19:53:01.242" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170704 19:53:01.242" starttime="20170704 19:53:01.239"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.243" starttime="20170704 19:53:01.242"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.243" starttime="20170704 19:53:01.235"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170704 19:53:01.244" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170704 19:53:01.244" starttime="20170704 19:53:01.243"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170704 19:53:01.248" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170704 19:53:01.248" starttime="20170704 19:53:01.244"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170704 19:53:01.248" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170704 19:53:01.249" starttime="20170704 19:53:01.248"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.249" starttime="20170704 19:53:01.243"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.249" starttime="20170704 19:53:01.230"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.253" starttime="20170704 19:53:01.249"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170704 19:53:01.256" level="INFO">${bts_band} = 40</msg>
<status status="PASS" endtime="20170704 19:53:01.256" starttime="20170704 19:53:01.253"></status>
</kw>
<msg timestamp="20170704 19:53:01.256" level="INFO">${attach_band} = 40</msg>
<status status="PASS" endtime="20170704 19:53:01.256" starttime="20170704 19:53:01.226"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170704 19:53:01.257" level="INFO">${attach_band} = 40</msg>
<status status="PASS" endtime="20170704 19:53:01.257" starttime="20170704 19:53:01.257"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.258" starttime="20170704 19:53:01.257"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170704 19:53:01.258" level="INFO">${offset} = 1565</msg>
<status status="PASS" endtime="20170704 19:53:01.258" starttime="20170704 19:53:01.258"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170704 19:53:01.262" level="INFO">${freq} = 23450.0</msg>
<status status="PASS" endtime="20170704 19:53:01.262" starttime="20170704 19:53:01.258"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170704 19:53:01.262" level="INFO">${fq} = 23450</msg>
<status status="PASS" endtime="20170704 19:53:01.262" starttime="20170704 19:53:01.262"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170704 19:53:01.263" level="INFO">${freqency} = 23450</msg>
<status status="PASS" endtime="20170704 19:53:01.263" starttime="20170704 19:53:01.263"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.264" starttime="20170704 19:53:01.263"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.264" starttime="20170704 19:53:01.224"></status>
</kw>
<kw type="foritem" name="${index} = InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1: {u'fcnULs': [39100L], u'fcnDLs': [39100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-2/CARRIER_GROUP_L-1', u'sta...">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index.fcnDLs[0]}</arg>
</arguments>
<assign>
<var>${index.earfcn}</var>
</assign>
<msg timestamp="20170704 19:53:01.265" level="INFO">${index.earfcn} = 39100</msg>
<status status="PASS" endtime="20170704 19:53:01.265" starttime="20170704 19:53:01.264"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${earfcn_list}</arg>
<arg>${index.earfcn}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.265" starttime="20170704 19:53:01.265"></status>
</kw>
<kw name="Get_Band_From_earfcn" library="SISO1 Resource">
<arguments>
<arg>${index.earfcn}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>@{BAND_RANGE}</arg>
</arguments>
<assign>
<var>${band_dict}</var>
</assign>
<msg timestamp="20170704 19:53:01.266" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170704 19:53:01.268" level="INFO">${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}</msg>
<status status="PASS" endtime="20170704 19:53:01.268" starttime="20170704 19:53:01.266"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${band_dict}</arg>
</arguments>
<assign>
<var>@{keys}</var>
</assign>
<msg timestamp="20170704 19:53:01.269" level="INFO">@{keys} = [ 38 | 39 | 40 | 41 | 42 ]</msg>
<status status="PASS" endtime="20170704 19:53:01.269" starttime="20170704 19:53:01.269"></status>
</kw>
<kw type="for" name="${index} IN [ @{keys} ]">
<kw type="foritem" name="${index} = 38">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170704 19:53:01.270" level="INFO">@{temp1} = [ 37750 | 38249 ]</msg>
<status status="PASS" endtime="20170704 19:53:01.270" starttime="20170704 19:53:01.270"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170704 19:53:01.274" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170704 19:53:01.274" starttime="20170704 19:53:01.270"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.275" starttime="20170704 19:53:01.274"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.275" starttime="20170704 19:53:01.269"></status>
</kw>
<kw type="foritem" name="${index} = 39">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170704 19:53:01.276" level="INFO">@{temp1} = [ 38250 | 38649 ]</msg>
<status status="PASS" endtime="20170704 19:53:01.276" starttime="20170704 19:53:01.275"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170704 19:53:01.281" level="INFO">${result} = False</msg>
<status status="PASS" endtime="20170704 19:53:01.281" starttime="20170704 19:53:01.276"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.281" starttime="20170704 19:53:01.281"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.281" starttime="20170704 19:53:01.275"></status>
</kw>
<kw type="foritem" name="${index} = 40">
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${band_dict['${index}']}</arg>
<arg>-</arg>
</arguments>
<assign>
<var>@{temp1}</var>
</assign>
<msg timestamp="20170704 19:53:01.283" level="INFO">@{temp1} = [ 38650 | 39649 ]</msg>
<status status="PASS" endtime="20170704 19:53:01.283" starttime="20170704 19:53:01.282"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${temp1[1]} &gt;=${earfcn}&gt;=${temp1[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20170704 19:53:01.287" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20170704 19:53:01.287" starttime="20170704 19:53:01.283"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20170704 19:53:01.288" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170704 19:53:01.288" starttime="20170704 19:53:01.287"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.288" starttime="20170704 19:53:01.281"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.288" starttime="20170704 19:53:01.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${result}'=='False'</arg>
<arg>Fail</arg>
<arg>no corresponding bts band find</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.292" starttime="20170704 19:53:01.288"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index}</arg>
</arguments>
<assign>
<var>${bts_band}</var>
</assign>
<msg timestamp="20170704 19:53:01.295" level="INFO">${bts_band} = 40</msg>
<status status="PASS" endtime="20170704 19:53:01.295" starttime="20170704 19:53:01.292"></status>
</kw>
<msg timestamp="20170704 19:53:01.295" level="INFO">${attach_band} = 40</msg>
<status status="PASS" endtime="20170704 19:53:01.295" starttime="20170704 19:53:01.266"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${attach_band}</var>
</assign>
<msg timestamp="20170704 19:53:01.296" level="INFO">${attach_band} = 40</msg>
<status status="PASS" endtime="20170704 19:53:01.296" starttime="20170704 19:53:01.295"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${band_list}</arg>
<arg>${attach_band}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.297" starttime="20170704 19:53:01.296"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${offset_dict}</arg>
<arg>${attach_band}</arg>
</arguments>
<assign>
<var>${offset}</var>
</assign>
<msg timestamp="20170704 19:53:01.297" level="INFO">${offset} = 1565</msg>
<status status="PASS" endtime="20170704 19:53:01.297" starttime="20170704 19:53:01.297"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(${index.earfcn}*0.1-${offset})*10</arg>
</arguments>
<assign>
<var>${freq}</var>
</assign>
<msg timestamp="20170704 19:53:01.301" level="INFO">${freq} = 23450.0</msg>
<status status="PASS" endtime="20170704 19:53:01.301" starttime="20170704 19:53:01.298"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${freq}</arg>
</arguments>
<assign>
<var>${fq}</var>
</assign>
<msg timestamp="20170704 19:53:01.302" level="INFO">${fq} = 23450</msg>
<status status="PASS" endtime="20170704 19:53:01.302" starttime="20170704 19:53:01.302"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${fq}</arg>
</arguments>
<assign>
<var>${freqency}</var>
</assign>
<msg timestamp="20170704 19:53:01.303" level="INFO">${freqency} = 23450</msg>
<status status="PASS" endtime="20170704 19:53:01.303" starttime="20170704 19:53:01.302"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${freqency_list}</arg>
<arg>${freqency}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.303" starttime="20170704 19:53:01.303"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.303" starttime="20170704 19:53:01.264"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.303" starttime="20170704 19:53:01.224"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:01.304" starttime="20170704 19:53:01.108"></status>
</kw>
<msg timestamp="20170704 19:53:01.304" level="INFO">${earfcn_list2} = [u'39100', u'39100']</msg>
<msg timestamp="20170704 19:53:01.304" level="INFO">${freqency_list2} = [u'23450', u'23450']</msg>
<msg timestamp="20170704 19:53:01.304" level="INFO">${band_list2} = [u'40', u'40']</msg>
<status status="PASS" endtime="20170704 19:53:01.304" starttime="20170704 19:53:01.105"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${earfcn_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<assign>
<var>${earfcn_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${earfcn_list2}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.311" starttime="20170704 19:53:01.307"></status>
</kw>
<msg timestamp="20170704 19:53:01.311" level="INFO">${earfcn_list} = [u'39100', u'39100']</msg>
<status status="PASS" endtime="20170704 19:53:01.311" starttime="20170704 19:53:01.304"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${freqency_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<assign>
<var>${freqency_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${freqency_list2}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.319" starttime="20170704 19:53:01.315"></status>
</kw>
<msg timestamp="20170704 19:53:01.319" level="INFO">${freqency_list} = [u'23450', u'23450']</msg>
<status status="PASS" endtime="20170704 19:53:01.319" starttime="20170704 19:53:01.311"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>${band_list1}</arg>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<assign>
<var>${band_list}</var>
</assign>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${attach_earfcn}'==''</arg>
<arg>${band_list2}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.326" starttime="20170704 19:53:01.323"></status>
</kw>
<msg timestamp="20170704 19:53:01.326" level="INFO">${band_list} = [u'40', u'40']</msg>
<status status="PASS" endtime="20170704 19:53:01.326" starttime="20170704 19:53:01.319"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170704 19:53:01.327" level="INFO">${cell_index1} = 0</msg>
<status status="PASS" endtime="20170704 19:53:01.327" starttime="20170704 19:53:01.326"></status>
</kw>
<kw type="for" name="${cell_index2} IN [ @{cell_list} ]">
<kw type="foritem" name="${cell_index2} = 1">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${attach_earfcn}'!=''</arg>
<arg>Evaluate</arg>
<arg>${cell_index1}</arg>
<arg>ELSE</arg>
<arg>Evaluate</arg>
<arg>${cell_index2}-1</arg>
</arguments>
<assign>
<var>${cell_index}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index2}-1</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.335" starttime="20170704 19:53:01.332"></status>
</kw>
<msg timestamp="20170704 19:53:01.335" level="INFO">${cell_index} = 0</msg>
<status status="PASS" endtime="20170704 19:53:01.335" starttime="20170704 19:53:01.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'!='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${UE_TYPE}'!='TM500'</arg>
<arg>Fail</arg>
<arg>The keyword doesn't yet support this type of UE</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:01.339" starttime="20170704 19:53:01.336"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>CPE_Attach_SISO1_src</arg>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<kw name="CPE_Attach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${earfcn_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${band_list[${cell_index}]}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ATT_ALL_INFO.ATT1}'!=''</arg>
<arg>Set Attenuation For One Cell</arg>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170704 19:53:05.402" level="INFO">$TA,C,0314*</msg>
<msg timestamp="20170704 19:53:05.402" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,0314*', Receive&lt;-'$TA,C,0314*'</msg>
<msg timestamp="20170704 19:53:05.402" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,03*', Receive&lt;-'$TA,C,0314*'
$TA,C,070A*</msg>
<msg timestamp="20170704 19:53:05.402" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,070A*', Receive&lt;-'$TA,C,070A*'</msg>
<msg timestamp="20170704 19:53:05.402" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,07*', Receive&lt;-'$TA,C,070A*'</msg>
<status status="PASS" endtime="20170704 19:53:05.403" starttime="20170704 19:53:01.349"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:05.403" starttime="20170704 19:53:01.345"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Ue Attach</arg>
<arg>${UE1 INFO}</arg>
<arg>frequency=${attach_earfcn}</arg>
<arg>band=${attach_band}</arg>
</arguments>
<kw name="Ue Attach" library="tdd_ev_robotws">
<doc>send AT command to perform ue attach step.</doc>
<arguments>
<arg>${UE1 INFO}</arg>
<arg>frequency=${attach_earfcn}</arg>
<arg>band=${attach_band}</arg>
</arguments>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@60] connect to ue '192.168.0.1' succeed !</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@83] execute command(0s): 'ATBEGIN=1'</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@86] response(0s): OK(11)</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@83] execute command(0s): 'AT%SETCFG="BAND","40"'</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@86] response(0s): 

OK</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@83] execute command(0s): 'ATBEGIN=1'</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@86] response(0s): OK(11)</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@83] execute command(0s): 'at+cfun=0'</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@86] response(0s): 

OK</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@83] execute command(0s): 'ATBEGIN=1'</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@86] response(0s): OK(11)</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@83] execute command(0s): 'AT%EARFCN=39100'</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@86] response(0s): 

OK</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@83] execute command(0s): 'ATBEGIN=1'</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@86] response(0s): OK(11)</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@83] execute command(0s): 'AT+CFUN=1'</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@86] response(0s): 

OK</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@83] execute command(0s): 'ATBEGIN=1'</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@86] response(0s): OK(11)</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@83] execute command(0s): 'AT+CGATT=1'</msg>
<msg timestamp="20170704 19:53:21.073" level="INFO">[deming_cpe.py@86] response(0s): ERROR</msg>
<status status="PASS" endtime="20170704 19:53:21.074" starttime="20170704 19:53:05.404"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:21.074" starttime="20170704 19:53:05.403"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>10 sec</arg>
<arg>ue_get_btscell_id</arg>
<arg>${UE1 INFO}</arg>
</arguments>
<assign>
<var>${btsid}</var>
<var>${cellsid}</var>
</assign>
<kw name="Ue Get Btscell Id" library="tdd_ev_robotws">
<doc>get ue acquired bts cellid infomation.</doc>
<arguments>
<arg>${UE1 INFO}</arg>
</arguments>
<msg timestamp="20170704 19:53:22.698" level="INFO">[deming_cpe.py@60] connect to ue '192.168.0.1' succeed !</msg>
<msg timestamp="20170704 19:53:22.698" level="INFO">[deming_cpe.py@83] execute command(0s): 'ATBEGIN=1'</msg>
<msg timestamp="20170704 19:53:22.698" level="INFO">[deming_cpe.py@86] response(0s): OK(11)</msg>
<msg timestamp="20170704 19:53:22.698" level="INFO">[deming_cpe.py@83] execute command(0s): 'AT%PCONI'</msg>
<msg timestamp="20170704 19:53:22.698" level="INFO">[deming_cpe.py@86] response(0s): 

ERROR</msg>
<msg timestamp="20170704 19:53:22.698" level="INFO">[deming_cpe.py@83] execute command(1s): 'AT%PCONI'</msg>
<msg timestamp="20170704 19:53:22.698" level="INFO">[deming_cpe.py@86] response(1s): 

ERROR</msg>
<msg timestamp="20170704 19:53:22.699" level="FAIL">ue '192.168.0.1' get bts cell id failed ! details: 'execute at cmd 'AT%PCONI' failed'</msg>
<status status="FAIL" endtime="20170704 19:53:22.699" starttime="20170704 19:53:21.075"></status>
</kw>
<kw name="Ue Get Btscell Id" library="tdd_ev_robotws">
<doc>get ue acquired bts cellid infomation.</doc>
<arguments>
<arg>${UE1 INFO}</arg>
</arguments>
<msg timestamp="20170704 19:53:33.814" level="INFO">[deming_cpe.py@60] connect to ue '192.168.0.1' succeed !</msg>
<msg timestamp="20170704 19:53:33.814" level="INFO">[deming_cpe.py@83] execute command(0s): 'ATBEGIN=1'</msg>
<msg timestamp="20170704 19:53:33.814" level="INFO">[deming_cpe.py@86] response(0s): OK(11)</msg>
<msg timestamp="20170704 19:53:33.814" level="INFO">[deming_cpe.py@83] execute command(0s): 'AT%PCONI'</msg>
<msg timestamp="20170704 19:53:33.814" level="INFO">[deming_cpe.py@86] response(0s): duplexing mode: TDD

Transmission mode: Open loop MIMO

Bandwidth: 5

EARFCN: 39100

Global Cell ID: 00057D01

Physical Cell ID: 221

OK</msg>
<msg timestamp="20170704 19:53:33.814" level="INFO">[altair_series.py@102] ue '192.168.0.1' get btscell id succeed !</msg>
<status status="PASS" endtime="20170704 19:53:33.814" starttime="20170704 19:53:32.699"></status>
</kw>
<msg timestamp="20170704 19:53:33.814" level="INFO">${btsid} = 1405</msg>
<msg timestamp="20170704 19:53:33.815" level="INFO">${cellsid} = 1</msg>
<status status="PASS" endtime="20170704 19:53:33.815" starttime="20170704 19:53:21.074"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${btsid}==${BTS_INFO.ID}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:33.818" starttime="20170704 19:53:33.815"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${cellsid}==${cell_id}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:33.821" starttime="20170704 19:53:33.818"></status>
</kw>
<kw name="Ue Get Attach Ip" library="tdd_ev_robotws">
<doc>send AT command to get ue attached ip address.</doc>
<arguments>
<arg>${UE1 INFO}</arg>
</arguments>
<assign>
<var>${attach_ip}</var>
</assign>
<msg timestamp="20170704 19:53:34.963" level="INFO">[deming_cpe.py@60] connect to ue '192.168.0.1' succeed !</msg>
<msg timestamp="20170704 19:53:34.963" level="INFO">[deming_cpe.py@83] execute command(0s): 'ATBEGIN=1'</msg>
<msg timestamp="20170704 19:53:34.963" level="INFO">[deming_cpe.py@86] response(0s): OK(11)</msg>
<msg timestamp="20170704 19:53:34.963" level="INFO">[deming_cpe.py@83] execute command(0s): 'AT+CGPADDR'</msg>
<msg timestamp="20170704 19:53:34.963" level="INFO">[deming_cpe.py@86] response(0s): 

+CGPADDR: 1,"172.170.12.79"



OK</msg>
<msg timestamp="20170704 19:53:34.963" level="INFO">[altair_series.py@128] ue '192.168.0.1' get ip succeed !</msg>
<msg timestamp="20170704 19:53:34.964" level="INFO">${attach_ip} = 172.170.12.79</msg>
<status status="PASS" endtime="20170704 19:53:34.964" starttime="20170704 19:53:33.822"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${ue_attach_ip}</arg>
<arg>${attach_ip}</arg>
</arguments>
<msg timestamp="20170704 19:53:34.968" level="INFO">${ue_attach_ip} = 172.170.12.79</msg>
<status status="PASS" endtime="20170704 19:53:34.968" starttime="20170704 19:53:34.964"></status>
</kw>
<kw name="Ue Get Status" library="tdd_ev_robotws">
<doc>send AT command to get ue attached or detached status.</doc>
<arguments>
<arg>${UE1 INFO}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20170704 19:53:36.110" level="INFO">[deming_cpe.py@60] connect to ue '192.168.0.1' succeed !</msg>
<msg timestamp="20170704 19:53:36.110" level="INFO">[deming_cpe.py@83] execute command(0s): 'ATBEGIN=1'</msg>
<msg timestamp="20170704 19:53:36.110" level="INFO">[deming_cpe.py@86] response(0s): OK(11)</msg>
<msg timestamp="20170704 19:53:36.110" level="INFO">[deming_cpe.py@83] execute command(0s): 'AT+CGATT?'</msg>
<msg timestamp="20170704 19:53:36.110" level="INFO">[deming_cpe.py@86] response(0s): 

+CGATT: 1

OK</msg>
<msg timestamp="20170704 19:53:36.110" level="INFO">[altair_series.py@84] ue '192.168.0.1' get attach status succeed !</msg>
<msg timestamp="20170704 19:53:36.110" level="INFO">${status} = Attached</msg>
<status status="PASS" endtime="20170704 19:53:36.110" starttime="20170704 19:53:34.968"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status}</arg>
<arg>Attached</arg>
</arguments>
<msg timestamp="20170704 19:53:36.111" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170704 19:53:36.111" starttime="20170704 19:53:36.111"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:36.111" starttime="20170704 19:53:01.344"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:36.111" starttime="20170704 19:53:01.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>TM500_Attach_SISO1_src</arg>
<arg>${freqency_list[${cell_index}]}</arg>
<arg>${cell_index2}</arg>
<arg>${modify_tm500_script}</arg>
<arg>${attach_scripts}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:36.115" starttime="20170704 19:53:36.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='CPE'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${detach_ue}'=='YES'</arg>
<arg>CPE_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<kw name="CPE_Detach_SISO1_src" library="SISO1 Resource">
<arguments>
<arg>${cell_index2}</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Ue Detach</arg>
<arg>${UE1 INFO}</arg>
</arguments>
<kw name="Ue Detach" library="tdd_ev_robotws">
<doc>send AT command to perform ue detach step.</doc>
<arguments>
<arg>${UE1 INFO}</arg>
</arguments>
<msg timestamp="20170704 19:53:37.274" level="INFO">[deming_cpe.py@60] connect to ue '192.168.0.1' succeed !</msg>
<msg timestamp="20170704 19:53:37.274" level="INFO">[deming_cpe.py@83] execute command(0s): 'ATBEGIN=1'</msg>
<msg timestamp="20170704 19:53:37.274" level="INFO">[deming_cpe.py@86] response(0s): OK(11)</msg>
<msg timestamp="20170704 19:53:37.274" level="INFO">[deming_cpe.py@83] execute command(0s): 'AT+CGATT=0'</msg>
<msg timestamp="20170704 19:53:37.274" level="INFO">[deming_cpe.py@86] response(0s): 

OK</msg>
<msg timestamp="20170704 19:53:37.274" level="INFO">[deming_cpe.py@216] ue '192.168.0.1' detach succeed !</msg>
<status status="PASS" endtime="20170704 19:53:37.274" starttime="20170704 19:53:36.124"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:37.274" starttime="20170704 19:53:36.123"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<msg timestamp="20170704 19:53:37.282" level="FAIL">Variable ${route_add_cpe_pc} does not exist.</msg>
<status status="FAIL" endtime="20170704 19:53:37.283" starttime="20170704 19:53:37.276"></status>
</kw>
<msg timestamp="20170704 19:53:37.283" level="INFO">${return} = ('FAIL', u'Variable ${route_add_cpe_pc} does not exist.')</msg>
<status status="PASS" endtime="20170704 19:53:37.283" starttime="20170704 19:53:37.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${route_add_cpe_pc}'=='true'</arg>
<arg>Execute Shell Command</arg>
<arg>route add ${BTS_PC_INFO.IP} mask 255.255.255.255 ${UE1_INFO.ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:37.287" starttime="20170704 19:53:37.283"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CPE_USE_PA}'=='YES'</arg>
<arg>Set Attenuation For One Cell</arg>
<arg>${CELL${cell_id}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:37.291" starttime="20170704 19:53:37.287"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:37.291" starttime="20170704 19:53:36.122"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:37.291" starttime="20170704 19:53:36.119"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:37.291" starttime="20170704 19:53:36.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${UE_TYPE}'=='TM500'</arg>
<arg>Run Keyword If</arg>
<arg>'${detach_ue}'=='YES'</arg>
<arg>TM500_Detach_SISO1_src</arg>
<arg>${cell_index2}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:37.294" starttime="20170704 19:53:37.291"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${cell_index1}+1</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170704 19:53:37.299" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170704 19:53:37.299" starttime="20170704 19:53:37.295"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${cell_index1}</arg>
</arguments>
<assign>
<var>${cell_index1}</var>
</assign>
<msg timestamp="20170704 19:53:37.299" level="INFO">${cell_index1} = 1</msg>
<status status="PASS" endtime="20170704 19:53:37.300" starttime="20170704 19:53:37.299"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:37.300" starttime="20170704 19:53:01.327"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:37.300" starttime="20170704 19:53:01.327"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:37.300" starttime="20170704 19:53:01.095"></status>
</kw>
<kw name="Stop Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<status status="PASS" endtime="20170704 19:53:37.316" starttime="20170704 19:53:37.300"></status>
</kw>
<kw name="Save Infomodel Log" library="tdd_ev_robotws">
<doc>Save InfoModel log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\im_attach_${num}</arg>
</arguments>
<msg timestamp="20170704 19:53:37.327" level="INFO">[infomodel_control.py@215] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\im_attach_0' succeed .</msg>
<status status="PASS" endtime="20170704 19:53:37.327" starttime="20170704 19:53:37.316"></status>
</kw>
<kw name="Stop Infomodel" library="tdd_ev_robotws">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20170704 19:53:38.053" level="INFO">[infomodel_control.py@187] stop infomodel logger succeed .</msg>
<msg timestamp="20170704 19:53:38.053" level="INFO">[infomodel_control.py@199] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170704 19:53:38.053" starttime="20170704 19:53:37.327"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:38.053" starttime="20170704 19:49:46.918"></status>
</kw>
<status status="PASS" endtime="20170704 19:53:38.053" starttime="20170704 19:49:46.918"></status>
</kw>
<kw type="foritem" name="${num} = 1">
<kw name="_Cell_Block_Unblock_and_Attach">
<doc>Operation with BTS</doc>
<arguments>
<arg>${num}</arg>
</arguments>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170704 19:53:38.059" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;.</msg>
<status status="PASS" endtime="20170704 19:53:38.059" starttime="20170704 19:53:38.054"></status>
</kw>
<kw name="Kill Sitemanager Process" library="tdd_ev_robotws">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20170704 19:53:41.943" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<msg timestamp="20170704 19:53:41.944" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170704 19:53:41.944" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-635\ROOT\CIMV2:Win32_Process.Handle="5492"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170704 19:53:41.944" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<msg timestamp="20170704 19:53:41.944" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170704 19:53:41.944" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\SISO1-635\ROOT\CIMV2:Win32_Process.Handle="4712"

Instance deletion successful.


C:\Users\tdlte-tester&gt;</msg>
<msg timestamp="20170704 19:53:41.944" level="INFO">[connection_mgr.py@208] Current connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;</msg>
<msg timestamp="20170704 19:53:41.944" level="INFO">[telnet_common.py@276] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20170704 19:53:41.944" level="INFO">[telnet_common.py@306] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.


C:\Users\tdlte-tester&gt;</msg>
<status status="PASS" endtime="20170704 19:53:41.944" starttime="20170704 19:53:38.059"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:41.949" starttime="20170704 19:53:41.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:41.953" starttime="20170704 19:53:41.950"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170704 19:53:41.954" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170704172422\\ev_logs\\FZNE_Operational_Cell_block_unblock_20170704193605\\FZNE_Operational_Cell_...</msg>
<status status="PASS" endtime="20170704 19:53:41.954" starttime="20170704 19:53:41.953"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:53:41.954" starttime="20170704 19:53:41.954"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170704 19:54:36.651" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; java addin isn't active
&lt;QTP&gt; start to set addins to active
&lt;QTP&gt; set addins to active successfully
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\GUILog\qtp_log20170704195341\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170704 19:54:36.652" starttime="20170704 19:53:41.955"></status>
</kw>
<status status="PASS" endtime="20170704 19:54:36.652" starttime="20170704 19:53:41.949"></status>
</kw>
<kw name="Start_Udp_And_Infomodel_Log" library="SISO1 Resource">
<kw name="Start Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword starts catching of BTS system(UDP) log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}.log</arg>
</arguments>
<msg timestamp="20170704 19:54:36.995" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'</msg>
<msg timestamp="20170704 19:54:36.995" level="INFO">[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock" already exists, no need to create it again.</msg>
<status status="PASS" endtime="20170704 19:54:36.995" starttime="20170704 19:54:36.653"></status>
</kw>
<kw name="Start Infomodel" library="tdd_ev_robotws">
<doc>Setup InfoModel library and Connect to InfoModel.</doc>
<arguments>
<arg>port=${BTS_INFOMODEL_PORT}</arg>
</arguments>
<msg timestamp="20170704 19:54:45.611" level="INFO">[infomodel_control.py@158] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None
             ftp_username=toor4nsn,ftp_password=oZPS0POrRieRtu</msg>
<msg timestamp="20170704 19:54:45.611" level="INFO">[infomodel_control.py@162] start infomodel succeed .</msg>
<msg timestamp="20170704 19:54:45.611" level="INFO">[infomodel_control.py@164] start infomodel logger succeed .</msg>
<status status="PASS" endtime="20170704 19:54:45.611" starttime="20170704 19:54:36.996"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20170704 19:54:45.613" level="INFO">${case_execute_log_name} = owner_debug</msg>
<status status="PASS" endtime="20170704 19:54:45.613" starttime="20170704 19:54:45.612"></status>
</kw>
<status status="PASS" endtime="20170704 19:54:45.613" starttime="20170704 19:54:36.652"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${${num}+1}</arg>
<arg>Block</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170704 19:54:45.617" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=2', u'HWAction=Block', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170704172422\\ev_logs\\FZNE_Operational_Cell_block_unblock_20170704193605\\FZNE_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170704 19:54:45.617" starttime="20170704 19:54:45.615"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170704 19:55:09.542" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; java addin isn't active
&lt;QTP&gt; start to set addins to active
&lt;QTP&gt; set addins to active successfully
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="2"
HWAction="Block"
LogPath="D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\GUILog\qtp_log20170704195445\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170704 19:55:09.542" starttime="20170704 19:54:45.617"></status>
</kw>
<status status="PASS" endtime="20170704 19:55:09.543" starttime="20170704 19:54:45.614"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>20 sec</arg>
</arguments>
<msg timestamp="20170704 19:55:29.545" level="INFO">Slept 20 seconds</msg>
<status status="PASS" endtime="20170704 19:55:29.545" starttime="20170704 19:55:09.544"></status>
</kw>
<kw name="GUI SM HW Action" library="gui_resource">
<doc>this keyword is used for most HW operation,such as block,unblock,reset</doc>
<arguments>
<arg>CELL</arg>
<arg>${${num}+1}</arg>
<arg>Unblock</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>HWType=${HWType}</arg>
<arg>HWID=${HWID}</arg>
<arg>HWAction=${HWAction}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170704 19:55:29.548" level="INFO">${para_list} = [u'HWType=CELL', u'HWID=2', u'HWAction=Unblock', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170704172422\\ev_logs\\FZNE_Operational_Cell_block_unblock_20170704193605\\FZNE_Operational_Cell_block_unblock\\']</msg>
<status status="PASS" endtime="20170704 19:55:29.548" starttime="20170704 19:55:29.547"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}HW_Action</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170704 19:55:48.191" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; java addin isn't active
&lt;QTP&gt; start to set addins to active
&lt;QTP&gt; set addins to active successfully
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\HW_Action ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
HWType="CELL"
HWID="2"
HWAction="Unblock"
LogPath="D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\GUILog\qtp_log20170704195529\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170704 19:55:48.191" starttime="20170704 19:55:29.548"></status>
</kw>
<status status="PASS" endtime="20170704 19:55:48.191" starttime="20170704 19:55:29.546"></status>
</kw>
<kw name="GUI SM Check BTS HW Status" library="gui_resource">
<doc>This keyword is used to check the status on BTS Hardware panel.</doc>
<arguments>
<arg>AllCell</arg>
<arg>Operational state=Enabled;;Working state=Working</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>CompName=${CompName}</arg>
<arg>CheckField=${CheckField}</arg>
<arg>WaitTime=${WaitTime}</arg>
<arg>CheckSameFlag=${CheckSameFlag}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170704 19:55:48.194" level="INFO">${para_list} = [u'CompName=AllCell', u'CheckField=Operational state=Enabled;;Working state=Working', u'WaitTime=0', u'CheckSameFlag=1', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170704172422\\ev_logs\\FZNE_Operational_Ce...</msg>
<status status="PASS" endtime="20170704 19:55:48.194" starttime="20170704 19:55:48.193"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:55:48.195" starttime="20170704 19:55:48.195"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Check_BTS_HW_Status</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170704 19:56:02.708" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; java addin isn't active
&lt;QTP&gt; start to set addins to active
&lt;QTP&gt; set addins to active successfully
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Check_BTS_HW_Status ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
CompName="AllCell"
CheckField="Operational state=Enabled;;Working state=Working"
WaitTime="0"
CheckSameFlag="1"
LogPath="D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\GUILog\qtp_log20170704195548\Report
&lt;QTP&gt; Start to run script...

Check_HW_Parameters for LocalCell1Failed. Check Operational state failed within 0 seconds. The current value is Disabled, Not the input value  EnabledCheck Working state failed within 0 seconds. The current value is Faulty, Not the input value  Working
Test Fail. SaveImage  to D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\2017-07-04_19-56-01.png
&lt;QTP&gt; run Failed.
Start to kill QTP process.
Finshed to kill QTP process.</msg>
<msg timestamp="20170704 19:56:02.709" level="FAIL">com_error: (-2147023174, 'The RPC server is unavailable.', None, None)</msg>
<status status="FAIL" endtime="20170704 19:56:02.709" starttime="20170704 19:55:48.195"></status>
</kw>
<status status="FAIL" endtime="20170704 19:56:02.711" starttime="20170704 19:55:48.192"></status>
</kw>
<status status="FAIL" endtime="20170704 19:56:02.711" starttime="20170704 19:53:38.054"></status>
</kw>
<status status="FAIL" endtime="20170704 19:56:02.711" starttime="20170704 19:53:38.053"></status>
</kw>
<status status="FAIL" endtime="20170704 19:56:02.711" starttime="20170704 19:49:46.917"></status>
</kw>
<kw type="teardown" name="Test_Tear_Down_Action" library="SISO1 Resource">
<doc>Action when case finishs</doc>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20170704 19:56:02.717" level="INFO">[connection_mgr.py@147] Switch to connection: 10.56.6.35:23 DeviceType:Windows Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05A1BC60&gt;.</msg>
<status status="PASS" endtime="20170704 19:56:02.717" starttime="20170704 19:56:02.713"></status>
</kw>
<kw name="Kill Qtp Process" library="tdd_ev_robotws">
<doc>This keyword is used to kill the processes related to QTP application.</doc>
<msg timestamp="20170704 19:56:03.293" level="INFO">Start to kill QTP process.
Finshed to kill QTP process.</msg>
<status status="PASS" endtime="20170704 19:56:03.293" starttime="20170704 19:56:02.718"></status>
</kw>
<kw name="Stop Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<status status="PASS" endtime="20170704 19:56:03.298" starttime="20170704 19:56:03.293"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${case_execute_log_name}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${case_execute_log_name}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:03.299" starttime="20170704 19:56:03.298"></status>
</kw>
<msg timestamp="20170704 19:56:03.299" level="INFO">${return} = ('PASS', None)</msg>
<status status="PASS" endtime="20170704 19:56:03.299" starttime="20170704 19:56:03.298"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Save Infomodel Log</arg>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<kw name="Save Infomodel Log" library="tdd_ev_robotws">
<doc>Save InfoModel log.</doc>
<arguments>
<arg>${TEST_LOG_DIR}\\${case_execute_log_name}</arg>
</arguments>
<msg timestamp="20170704 19:56:03.316" level="INFO">[infomodel_control.py@215] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\owner_debug' succeed .</msg>
<status status="PASS" endtime="20170704 19:56:03.316" starttime="20170704 19:56:03.303"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:03.317" starttime="20170704 19:56:03.300"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:03.317" starttime="20170704 19:56:03.299"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Stop Infomodel</arg>
</arguments>
<kw name="Stop Infomodel" library="tdd_ev_robotws">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20170704 19:56:04.050" level="INFO">[infomodel_control.py@187] stop infomodel logger succeed .</msg>
<msg timestamp="20170704 19:56:04.050" level="INFO">[infomodel_control.py@199] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170704 19:56:04.051" starttime="20170704 19:56:03.321"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:04.051" starttime="20170704 19:56:03.317"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:04.051" starttime="20170704 19:56:03.317"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Release_TM500_And_Colse_PA_Port</arg>
</arguments>
<kw name="Release_TM500_And_Colse_PA_Port" library="SISO1 Resource">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${return}</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Variable Should Exist</arg>
<arg>${TM500_Use_Tag}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:04.052" starttime="20170704 19:56:04.052"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Use_Tag}'=='used'</arg>
<arg>Set Attenuators Off</arg>
<arg>${ATT_ALL_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:04.053" starttime="20170704 19:56:04.053"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${TM500_Pppoe_Tag}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TM500_Pppoe_Tag}</arg>
</arguments>
<msg timestamp="20170704 19:56:04.060" level="FAIL">Variable ${TM500_Pppoe_Tag} does not exist.</msg>
<status status="FAIL" endtime="20170704 19:56:04.060" starttime="20170704 19:56:04.054"></status>
</kw>
<msg timestamp="20170704 19:56:04.060" level="INFO">${return} = ('FAIL', u'Variable ${TM500_Pppoe_Tag} does not exist.')</msg>
<status status="PASS" endtime="20170704 19:56:04.060" starttime="20170704 19:56:04.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Pppoe_Tag}'=='used'</arg>
<arg>Switch Host Connection</arg>
<arg>${TM500_PC_CONNECTION}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:04.064" starttime="20170704 19:56:04.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${TM500_Pppoe_Tag}'=='used'</arg>
<arg>Tm500 Stop Pppoe Connection</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:04.067" starttime="20170704 19:56:04.064"></status>
</kw>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20170704 19:56:04.068" level="FAIL">AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<status status="FAIL" endtime="20170704 19:56:04.068" starttime="20170704 19:56:04.067"></status>
</kw>
<kw name="Set_Allcells_Attenuation_Off" library="SISO1 Resource">
<kw type="for" name="${index} IN RANGE [ 1 | 10 ]">
<kw type="foritem" name="${index} = 1">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:04.070" starttime="20170704 19:56:04.070"></status>
</kw>
<msg timestamp="20170704 19:56:04.070" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170704 19:56:04.070" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170704 19:56:04.071" starttime="20170704 19:56:04.069"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:04.074" starttime="20170704 19:56:04.071"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170704 19:56:08.105" level="INFO">$TA,C,03F0*</msg>
<msg timestamp="20170704 19:56:08.106" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,03F0*', Receive&lt;-'$TA,C,03F0*'</msg>
<msg timestamp="20170704 19:56:08.106" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,03*', Receive&lt;-'$TA,C,03F0*'
$TA,C,07F0*</msg>
<msg timestamp="20170704 19:56:08.106" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,07F0*', Receive&lt;-'$TA,C,07F0*'</msg>
<msg timestamp="20170704 19:56:08.106" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,07*', Receive&lt;-'$TA,C,07F0*'</msg>
<status status="PASS" endtime="20170704 19:56:08.106" starttime="20170704 19:56:04.074"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:08.106" starttime="20170704 19:56:04.069"></status>
</kw>
<kw type="foritem" name="${index} = 2">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:08.107" starttime="20170704 19:56:08.107"></status>
</kw>
<msg timestamp="20170704 19:56:08.107" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170704 19:56:08.108" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170704 19:56:08.108" starttime="20170704 19:56:08.106"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:08.111" starttime="20170704 19:56:08.108"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170704 19:56:12.141" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170704 19:56:12.141" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170704 19:56:12.141" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170704 19:56:12.141" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170704 19:56:12.141" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170704 19:56:12.141" starttime="20170704 19:56:08.111"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:12.141" starttime="20170704 19:56:08.106"></status>
</kw>
<kw type="foritem" name="${index} = 3">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:12.143" starttime="20170704 19:56:12.142"></status>
</kw>
<msg timestamp="20170704 19:56:12.143" level="INFO">${ret1} = PASS</msg>
<msg timestamp="20170704 19:56:12.143" level="INFO">${ret2} = None</msg>
<status status="PASS" endtime="20170704 19:56:12.143" starttime="20170704 19:56:12.142"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:12.147" starttime="20170704 19:56:12.143"></status>
</kw>
<kw name="Set Attenuation For One Cell" library="tdd_ev_robotws">
<doc>This keyword set attenuation value for one eNB cell.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
<arg>120</arg>
<arg>120</arg>
</arguments>
<msg timestamp="20170704 19:56:16.175" level="INFO">$TA,C,02F0*</msg>
<msg timestamp="20170704 19:56:16.175" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,02F0*', Receive&lt;-'$TA,C,02F0*'</msg>
<msg timestamp="20170704 19:56:16.175" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,02*', Receive&lt;-'$TA,C,02F0*'
$TA,C,06F0*</msg>
<msg timestamp="20170704 19:56:16.175" level="INFO">[attenuator_control.py@445] send-&gt;'$TA,C,06F0*', Receive&lt;-'$TA,C,06F0*'</msg>
<msg timestamp="20170704 19:56:16.175" level="INFO">[attenuator_control.py@450] send-&gt;'$TA,H,06*', Receive&lt;-'$TA,C,06F0*'</msg>
<status status="PASS" endtime="20170704 19:56:16.176" starttime="20170704 19:56:12.147"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:16.176" starttime="20170704 19:56:12.142"></status>
</kw>
<kw type="foritem" name="${index} = 4">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<assign>
<var>${ret1}</var>
<var>${ret2}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${CELL${index}_ATT_INFO}</arg>
</arguments>
<msg timestamp="20170704 19:56:16.184" level="FAIL">Variable ${CELL4_ATT_INFO} does not exist.</msg>
<status status="FAIL" endtime="20170704 19:56:16.184" starttime="20170704 19:56:16.177"></status>
</kw>
<msg timestamp="20170704 19:56:16.184" level="INFO">${ret1} = FAIL</msg>
<msg timestamp="20170704 19:56:16.184" level="INFO">${ret2} = Variable ${CELL4_ATT_INFO} does not exist.</msg>
<status status="PASS" endtime="20170704 19:56:16.184" starttime="20170704 19:56:16.176"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${ret1}'=='FAIL'</arg>
</arguments>
<msg timestamp="20170704 19:56:16.187" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20170704 19:56:16.187" starttime="20170704 19:56:16.184"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:16.187" starttime="20170704 19:56:16.176"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:16.188" starttime="20170704 19:56:04.069"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:16.188" starttime="20170704 19:56:04.069"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Test Variable</arg>
<arg>${TM500_Use_Tag}</arg>
<arg>unused</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:16.188" starttime="20170704 19:56:16.188"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TM500_Pppoe_Tag}</arg>
<arg>unused</arg>
</arguments>
<msg timestamp="20170704 19:56:16.192" level="INFO">${TM500_Pppoe_Tag} = unused</msg>
<status status="PASS" endtime="20170704 19:56:16.192" starttime="20170704 19:56:16.188"></status>
</kw>
<status status="FAIL" endtime="20170704 19:56:16.192" starttime="20170704 19:56:04.051"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:16.192" starttime="20170704 19:56:04.051"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<assign>
<var>${return}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${route_add_cpe_pc}</arg>
</arguments>
<msg timestamp="20170704 19:56:16.199" level="FAIL">Variable ${route_add_cpe_pc} does not exist.</msg>
<status status="FAIL" endtime="20170704 19:56:16.200" starttime="20170704 19:56:16.193"></status>
</kw>
<msg timestamp="20170704 19:56:16.200" level="INFO">${return} = ('FAIL', u'Variable ${route_add_cpe_pc} does not exist.')</msg>
<status status="PASS" endtime="20170704 19:56:16.200" starttime="20170704 19:56:16.193"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return[0]}'=='PASS'</arg>
<arg>Run Keyword If</arg>
<arg>'${route_add_cpe_pc}'=='true'</arg>
<arg>Execute Shell Command</arg>
<arg>route delete ${BTS_PC_INFO.IP} mask 255.255.255.255 ${UE1_INFO.ADDRESS}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:16.203" starttime="20170704 19:56:16.200"></status>
</kw>
<kw name="Alarm Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20170704 19:56:29.224" level="ERROR">Infomodel not connected.</msg>
<msg timestamp="20170704 19:56:29.922" level="INFO">[infomodel_control.py@82] set up infomodel with following info succeed .
    details: address=192.168.255.1, port=12345, definitions_file_path=None
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}
++++++++++++++++++++++++++++++++++++++++++
{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}</msg>
<msg timestamp="20170704 19:56:29.922" level="INFO">[infomodel_control.py@100] stop infomodel succeed .</msg>
<status status="PASS" endtime="20170704 19:56:29.922" starttime="20170704 19:56:16.203"></status>
</kw>
<kw name="Fatal Monitor" library="AlarmMonitor">
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>alarm_monitor.csv</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<msg timestamp="20170704 19:56:30.538" level="INFO">['fatal'] ['fatal']</msg>
<msg timestamp="20170704 19:56:30.538" level="INFO">[file_control.py@109] *HTML*&lt;a href = "D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\udplog_20170704193915.log"&gt;fail log&lt;/a&gt;
Find '['fatal']' in 'D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\udplog_20170704193915.log'
write successfully</msg>
<status status="PASS" endtime="20170704 19:56:30.538" starttime="20170704 19:56:29.922"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<assign>
<var>${return1}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${TEST_NAME[:50]}</arg>
<arg>Fiber</arg>
</arguments>
<msg timestamp="20170704 19:56:30.539" level="FAIL">'FZNE_Operational_Cell_block_unblock' does not contain 'Fiber'</msg>
<status status="FAIL" endtime="20170704 19:56:30.540" starttime="20170704 19:56:30.539"></status>
</kw>
<msg timestamp="20170704 19:56:30.540" level="INFO">${return1} = ('FAIL', u"'FZNE_Operational_Cell_block_unblock' does not contain 'Fiber'")</msg>
<status status="PASS" endtime="20170704 19:56:30.540" starttime="20170704 19:56:30.538"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<assign>
<var>${all_fiber_link}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Get_All_Fiber_Link</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:30.544" starttime="20170704 19:56:30.540"></status>
</kw>
<msg timestamp="20170704 19:56:30.544" level="INFO">${all_fiber_link} = ('PASS', None)</msg>
<status status="PASS" endtime="20170704 19:56:30.544" starttime="20170704 19:56:30.540"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Connect_Fiber_Link</arg>
<arg>${all_fiber_link[1]}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:30.548" starttime="20170704 19:56:30.545"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:30.548" starttime="20170704 19:56:30.544"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Software Reboot Bts</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:30.548" starttime="20170704 19:56:30.548"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Sleep</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:30.549" starttime="20170704 19:56:30.549"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${return1[0]}'=='PASS'</arg>
<arg>Wait Until Units Startup</arg>
<arg>600</arg>
<arg>192.168.255.1</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:30.549" starttime="20170704 19:56:30.549"></status>
</kw>
<kw name="Common Test Teardown" library="common_resource">
<doc>[Caution] this keyword step:</doc>
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20170704 19:56:30.550" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20170704 19:56:30.550" starttime="20170704 19:56:30.550"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'</arg>
<arg>One Key Capture Bts Logs</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}capture_logs</arg>
<arg>${one_key_capture_logs_option}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:30.555" starttime="20170704 19:56:30.552"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:30.555" starttime="20170704 19:56:30.551"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:30.555" starttime="20170704 19:56:30.551"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Login</arg>
</arguments>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:30.565" starttime="20170704 19:56:30.565"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:30.568" starttime="20170704 19:56:30.565"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170704 19:56:30.569" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170704172422\\ev_logs\\FZNE_Operational_Cell_block_unblock_20170704193605\\FZNE_Operational_Cell_...</msg>
<status status="PASS" endtime="20170704 19:56:30.569" starttime="20170704 19:56:30.569"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:30.570" starttime="20170704 19:56:30.570"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170704 19:56:51.317" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; java addin isn't active
&lt;QTP&gt; start to set addins to active
&lt;QTP&gt; set addins to active successfully
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\"
CheckExist="1"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\GUILog\qtp_log20170704195630\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170704 19:56:51.318" starttime="20170704 19:56:30.570"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:51.318" starttime="20170704 19:56:30.564"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:51.318" starttime="20170704 19:56:30.557"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:51.318" starttime="20170704 19:56:30.556"></status>
</kw>
<status status="PASS" endtime="20170704 19:56:51.318" starttime="20170704 19:56:30.556"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"</arg>
<arg>GUI SM Save Snapshot</arg>
<arg>3</arg>
</arguments>
<kw name="GUI SM Save Snapshot" library="gui_resource">
<doc>this keyword is use to save snapshot in Site Manager</doc>
<arguments>
<arg>3</arg>
</arguments>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>DetailLevel=${DetailLevel}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>PathFile=${PathFile}</arg>
<arg>SaveParitialExist=${SaveParitialExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20170704 19:56:51.325" level="INFO">${para_list} = [u'DetailLevel=3', u'LogPath=D:\\TA\\TA_logs\\TestLog_20170704172422\\ev_logs\\FZNE_Operational_Cell_block_unblock_20170704193605\\FZNE_Operational_Cell_block_unblock\\', u'PathFile=N', u'SaveParitial...</msg>
<status status="PASS" endtime="20170704 19:56:51.325" starttime="20170704 19:56:51.324"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}SaveSnapshot</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<status status="PASS" endtime="20170704 19:56:51.325" starttime="20170704 19:56:51.325"></status>
</kw>
<kw name="Run Qtp" library="tdd_ev_robotws">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}SaveSnapshot</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20170704 19:58:19.324" level="INFO">&lt;QTP&gt; Test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\SaveSnapshot is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; java addin isn't active
&lt;QTP&gt; start to set addins to active
&lt;QTP&gt; set addins to active successfully
&lt;QTP&gt; start to open test D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65\SiteMan\SaveSnapshot ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TA\trunk_soam\tdd_ev_others\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
DetailLevel="3"
LogPath="D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\"
PathFile="N"
SaveParitialExist="N"
&lt;QTP&gt; Save log to D:\TA\TA_logs\TestLog_20170704172422\ev_logs\FZNE_Operational_Cell_block_unblock_20170704193605\FZNE_Operational_Cell_block_unblock\GUILog\qtp_log20170704195651\Report
&lt;QTP&gt; Start to run script...</msg>
<status status="PASS" endtime="20170704 19:58:19.325" starttime="20170704 19:56:51.325"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:19.325" starttime="20170704 19:56:51.323"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:19.325" starttime="20170704 19:56:51.319"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:19.325" starttime="20170704 19:56:51.319"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:19.325" starttime="20170704 19:56:51.318"></status>
</kw>
<kw name="Get Active Bts Sw Version" library="tdd_ev_robotws">
<doc>get active BTS SW Build Version from enb targetBD file..</doc>
<assign>
<var>${version}</var>
</assign>
<msg timestamp="20170704 19:58:40.481" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:58:40.481" level="INFO">[ssh_common.py@203] root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:58:40.481" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05BBBF80&gt;</msg>
<msg timestamp="20170704 19:58:40.481" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20170704 19:58:40.481" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:58:40.481" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05BBBF80&gt;</msg>
<msg timestamp="20170704 19:58:40.481" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20170704 19:58:40.481" level="INFO">[ssh_common.py@203] Last login: Tue Jul  4 00:59:03 -11 2017 from 192.168.255.126 on pts/0
root@FCTF:~ &gt;</msg>
<msg timestamp="20170704 19:58:40.481" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A07F80&gt;</msg>
<msg timestamp="20170704 19:58:40.481" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20170704 19:58:40.481" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_TL18_ENB_9999_170704_063766.xml
root@FCTF:/ffs/fs1 &gt;</msg>
<msg timestamp="20170704 19:58:40.481" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05A07F80&gt;</msg>
<msg timestamp="20170704 19:58:40.482" level="INFO">${version} = TL18_ENB_9999_170704_063766</msg>
<status status="PASS" endtime="20170704 19:58:40.482" starttime="20170704 19:58:19.326"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"</arg>
<arg>semcli save snapshot</arg>
</arguments>
<status status="PASS" endtime="20170704 19:58:40.487" starttime="20170704 19:58:40.484"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:40.487" starttime="20170704 19:58:40.483"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:40.487" starttime="20170704 19:58:40.483"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"</arg>
<arg>_soam_snapshot</arg>
</arguments>
<status status="PASS" endtime="20170704 19:58:40.492" starttime="20170704 19:58:40.489"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:40.492" starttime="20170704 19:58:40.488"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:40.492" starttime="20170704 19:58:40.488"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:40.492" starttime="20170704 19:56:30.549"></status>
</kw>
<status status="PASS" endtime="20170704 19:58:40.492" starttime="20170704 19:56:02.712"></status>
</kw>
<tags>
<tag>owner-xiongwen.shi@nokia.com</tag>
<tag>QC_370114</tag>
<tag>QC_ID_370114</tag>
</tags>
<status status="FAIL" endtime="20170704 19:58:40.493" critical="yes" starttime="20170704 19:37:48.608">com_error: (-2147023174, 'The RPC server is unavailable.', None, None)</status>
</test>
<doc>TD-LTE I&amp;V SISO1</doc>
<status status="FAIL" endtime="20170704 19:58:40.510" starttime="20170704 19:36:03.834"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">owner-xiongwen.shi@nokia.com</stat>
<stat fail="1" pass="0">QC_370114</stat>
<stat fail="1" pass="0">QC_ID_370114</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="FZNE Operational Cell block unblock" pass="0">FZNE Operational Cell block unblock</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170704 19:36:04.358" level="ERROR">Loading tdd_config has failed. Please check if: 
       1. you executed pybot with --variable CONFIGURATION:$your_tl_config 
          i.e. pybot --variable CONFIGURATION:Wroclaw.test 
       2. check if there is no problem with your configuration 
       Error msg: Variable ${CONFIGURATION} does not exist.
</msg>
<msg timestamp="20170704 19:53:01.221" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170704 19:53:01.227" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170704 19:53:01.266" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20170704 19:56:29.224" level="ERROR">Infomodel not connected.</msg>
</errors>
</robot>
