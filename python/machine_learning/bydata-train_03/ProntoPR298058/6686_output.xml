<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20171212 16:38:48.213" generator="Robot 3.0 (Python 2.7.11 on win32)">
<suite source="D:\TestCase\Trunk_CRT\CRT\Common + Common\FM\LTE2313-T-u_01_02 Fault_6706_EFaultId_DspPlatformFatalErrAl\LTE2313-T-u_01_02 Fault_6706_EFaultId_DspPlatformFatalErrAl.html" id="s1" name="LTE2313-T-u 01 02 Fault 6706 EFaultId DspPlatformFatalErrAl">
<kw type="setup" name="Common Suite Setup" library="common_resource">
<doc>this keyword create suite name directory path as d:\test\log//logs//</doc>
<msg timestamp="20171212 16:38:49.392" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Timestamp" library="RobotWS">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20171212 16:38:49.392" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:38:49.428" level="TRACE">Return: b'20171212163849'</msg>
<msg timestamp="20171212 16:38:49.429" level="INFO">${timestamp} = 20171212163849</msg>
<status status="PASS" endtime="20171212 16:38:49.429" starttime="20171212 16:38:49.392"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_NAME[:50]}</arg>
<arg>\\s+$</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${FILE_NAME}</var>
</assign>
<msg timestamp="20171212 16:38:49.430" level="TRACE">Arguments: [ 'LTE2313-T-u 01 02 Fault 6706 EFaultId DspPlatformF' | '\\s+$' | b'' ]</msg>
<msg timestamp="20171212 16:38:49.430" level="TRACE">Return: 'LTE2313-T-u 01 02 Fault 6706 EFaultId DspPlatformF'</msg>
<msg timestamp="20171212 16:38:49.430" level="INFO">${FILE_NAME} = LTE2313-T-u 01 02 Fault 6706 EFaultId DspPlatformF</msg>
<status status="PASS" endtime="20171212 16:38:49.431" starttime="20171212 16:38:49.429"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>ev_logs</arg>
<arg>${FILE_NAME}_${timestamp}</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20171212 16:38:49.432" level="TRACE">Arguments: [ 'SEPARATOR=\\' | 'd:\\test\\log' | 'ev_logs' | 'LTE2313-T-u 01 02 Fault 6706 EFaultId DspPlatformF_20171212163849' ]</msg>
<msg timestamp="20171212 16:38:49.432" level="TRACE">Return: 'd:\\test\\log\\ev_logs\\LTE2313-T-u 01 02 Fault 6706 EFaultId DspPlatformF_20171212163849'</msg>
<msg timestamp="20171212 16:38:49.432" level="INFO">${SUITE_LOG_DIRECTORY} = d:\test\log\ev_logs\LTE2313-T-u 01 02 Fault 6706 EFaultId DspPlatformF_20171212163849</msg>
<status status="PASS" endtime="20171212 16:38:49.432" starttime="20171212 16:38:49.431"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20171212 16:38:49.433" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u 01 02 Fault 6706 EFaultId DspPlatformF_20171212163849' | b' ' | '_' ]</msg>
<msg timestamp="20171212 16:38:49.433" level="TRACE">Return: 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849'</msg>
<msg timestamp="20171212 16:38:49.433" level="INFO">${SUITE_LOG_DIRECTORY} = d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849</msg>
<status status="PASS" endtime="20171212 16:38:49.434" starttime="20171212 16:38:49.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20171212 16:38:49.434" level="TRACE">Arguments: [ '${SUITE_LOG_DIRECTORY}' ]</msg>
<msg timestamp="20171212 16:38:49.435" level="INFO">${SUITE_LOG_DIRECTORY} = d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849</msg>
<msg timestamp="20171212 16:38:49.437" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:38:49.437" starttime="20171212 16:38:49.434"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20171212 16:38:49.438" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849' ]</msg>
<msg timestamp="20171212 16:38:49.438" html="yes" level="INFO">Created directory '&lt;a href="file://d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849"&gt;d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849&lt;/a&gt;'.</msg>
<msg timestamp="20171212 16:38:49.439" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:38:49.439" starttime="20171212 16:38:49.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20171212 16:38:49.440" level="TRACE">Arguments: [ 'save log dir:d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849' ]</msg>
<msg timestamp="20171212 16:38:49.441" level="INFO">save log dir:d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849</msg>
<msg timestamp="20171212 16:38:49.441" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:38:49.441" starttime="20171212 16:38:49.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${snapshot_flag}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20171212 16:38:49.442" level="TRACE">Arguments: [ '${snapshot_flag}' | '0' ]</msg>
<msg timestamp="20171212 16:38:49.444" level="INFO">${snapshot_flag} = 0</msg>
<msg timestamp="20171212 16:38:49.444" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:38:49.444" starttime="20171212 16:38:49.441"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<msg timestamp="20171212 16:38:49.454" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<msg timestamp="20171212 16:38:49.455" level="TRACE">Arguments: [ 'variable should exist' | '${TEST LOG DIR}' ]</msg>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<msg timestamp="20171212 16:38:49.456" level="TRACE">Arguments: [ '${TEST LOG DIR}' ]</msg>
<msg timestamp="20171212 16:38:49.460" level="FAIL">Variable ${TEST LOG DIR} does not exist.</msg>
<msg timestamp="20171212 16:38:49.461" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20171212 16:38:49.461" starttime="20171212 16:38:49.455"></status>
</kw>
<msg timestamp="20171212 16:38:49.461" level="TRACE">Return: (b'FAIL', 'Variable ${TEST LOG DIR} does not exist.')</msg>
<msg timestamp="20171212 16:38:49.461" level="INFO">${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')</msg>
<status status="PASS" endtime="20171212 16:38:49.461" starttime="20171212 16:38:49.455"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<msg timestamp="20171212 16:38:49.462" level="TRACE">Arguments: [ 'variable should exist' | '${SUITE LOG DIRECTORY}' ]</msg>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<msg timestamp="20171212 16:38:49.463" level="TRACE">Arguments: [ '${SUITE LOG DIRECTORY}' ]</msg>
<msg timestamp="20171212 16:38:49.463" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:38:49.463" starttime="20171212 16:38:49.463"></status>
</kw>
<msg timestamp="20171212 16:38:49.463" level="TRACE">Return: (b'PASS', None)</msg>
<msg timestamp="20171212 16:38:49.464" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20171212 16:38:49.464" starttime="20171212 16:38:49.462"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<msg timestamp="20171212 16:38:49.465" level="TRACE">Arguments: [ "'PASS'=='FAIL'" | '${TEST LOG DIR}' | "'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'" | '${SUITE LOG DIRECTORY}' | "'FAIL'=='${suite_dir_exist[0]}'" | '${OUTPUT_DIR}' ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<msg timestamp="20171212 16:38:49.467" level="TRACE">Arguments: [ "'FAIL'=='FAIL' and 'PASS'=='PASS'" | '${SUITE LOG DIRECTORY}' | "'FAIL'=='${suite_dir_exist[0]}'" | '${OUTPUT_DIR}' ]</msg>
<msg timestamp="20171212 16:38:49.470" level="TRACE">Return: 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849'</msg>
<status status="PASS" endtime="20171212 16:38:49.470" starttime="20171212 16:38:49.467"></status>
</kw>
<msg timestamp="20171212 16:38:49.470" level="TRACE">Return: 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849'</msg>
<msg timestamp="20171212 16:38:49.470" level="INFO">${log dir} = d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849</msg>
<status status="PASS" endtime="20171212 16:38:49.470" starttime="20171212 16:38:49.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20171212 16:38:49.471" level="TRACE">Arguments: [ '${SAVE LOG DIRECTORY}' | '${log dir}' ]</msg>
<msg timestamp="20171212 16:38:49.473" level="INFO">${SAVE LOG DIRECTORY} = d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849</msg>
<msg timestamp="20171212 16:38:49.473" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:38:49.474" starttime="20171212 16:38:49.471"></status>
</kw>
<msg timestamp="20171212 16:38:49.474" level="TRACE">Return: 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849'</msg>
<status status="PASS" endtime="20171212 16:38:49.474" starttime="20171212 16:38:49.454"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Make Sure FCT Ping Ok</arg>
</arguments>
<msg timestamp="20171212 16:38:49.475" level="TRACE">Arguments: [ 'Make Sure FCT Ping Ok' ]</msg>
<kw name="Make Sure FCT Ping Ok" library="common_resource">
<msg timestamp="20171212 16:38:49.475" level="TRACE">Arguments: [  ]</msg>
<kw name="Ping Should Ok" library="RobotWS">
<doc>This function is used for check whether ping host success, if yes, return 1, else return 0</doc>
<arguments>
<arg>${FCMD_IP}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20171212 16:38:49.476" level="TRACE">Arguments: [ b'192.168.255.1' ]</msg>
<msg timestamp="20171212 16:38:52.502" level="TRACE">Return: True</msg>
<msg timestamp="20171212 16:38:52.502" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20171212 16:38:52.502" starttime="20171212 16:38:49.475"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${FTM_IP}</arg>
</arguments>
<msg timestamp="20171212 16:38:52.503" level="TRACE">Arguments: [ True | 'Wait Until Units Startup' | '300' | '${FTM_IP}' ]</msg>
<msg timestamp="20171212 16:38:52.503" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:38:52.503" starttime="20171212 16:38:52.502"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Btscli Disable Bts Port Security</arg>
</arguments>
<msg timestamp="20171212 16:38:52.504" level="TRACE">Arguments: [ True | 'Btscli Disable Bts Port Security' ]</msg>
<msg timestamp="20171212 16:38:52.504" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:38:52.504" starttime="20171212 16:38:52.504"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>60</arg>
<arg>${FCMD_IP}</arg>
</arguments>
<msg timestamp="20171212 16:38:52.505" level="TRACE">Arguments: [ True | 'Wait Until Units Startup' | '60' | '${FCMD_IP}' ]</msg>
<msg timestamp="20171212 16:38:52.505" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:38:52.505" starttime="20171212 16:38:52.505"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5min</arg>
<arg>5s</arg>
<arg>_make sure fctb connect ok</arg>
</arguments>
<msg timestamp="20171212 16:38:52.506" level="TRACE">Arguments: [ 'Wait Until Keyword Succeeds' | '5min' | '5s' | '_make sure fctb connect ok' ]</msg>
<msg timestamp="20171212 16:38:52.506" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:38:52.506" starttime="20171212 16:38:52.506"></status>
</kw>
<msg timestamp="20171212 16:38:52.506" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:38:52.507" starttime="20171212 16:38:49.475"></status>
</kw>
<msg timestamp="20171212 16:38:52.507" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171212 16:38:52.507" starttime="20171212 16:38:49.474"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>get_enb_infomation</arg>
</arguments>
<msg timestamp="20171212 16:38:52.508" level="TRACE">Arguments: [ 'get_enb_infomation' ]</msg>
<kw name="Get Enb Infomation" library="RobotWS">
<doc>This keyword will print bts sw version, bbu type and RRU type.</doc>
<msg timestamp="20171212 16:38:52.508" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:38:55.757" level="DEBUG">Adding ssh-rsa host key for 192.168.255.1: 85e067deffe7ed0ff1653d51bef90770</msg>
<msg timestamp="20171212 16:38:55.875" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171212 16:39:06.318" level="DEBUG">Adding ssh-rsa host key for 192.168.255.1: 85e067deffe7ed0ff1653d51bef90770</msg>
<msg timestamp="20171212 16:39:06.431" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171212 16:39:16.879" level="DEBUG">Adding ssh-rsa host key for 192.168.255.1: 85e067deffe7ed0ff1653d51bef90770</msg>
<msg timestamp="20171212 16:39:16.993" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171212 16:39:27.433" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171212 16:39:27.496" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171212 16:39:27.709" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171212 16:39:27.716" level="DEBUG">[chan 0] lstat('/ram/SiteConf.xml')</msg>
<msg timestamp="20171212 16:39:27.717" level="DEBUG">[chan 0] lstat('/ram/SiteConf.xml')</msg>
<msg timestamp="20171212 16:39:27.721" level="DEBUG">[chan 0] stat('/ram/SiteConf.xml')</msg>
<msg timestamp="20171212 16:39:27.722" level="DEBUG">[chan 0] open('/ram/SiteConf.xml', 'rb')</msg>
<msg timestamp="20171212 16:39:27.723" level="DEBUG">[chan 0] open('/ram/SiteConf.xml', 'rb') -&gt; 00000000</msg>
<msg timestamp="20171212 16:39:27.724" level="DEBUG">[chan 0] stat('/ram/SiteConf.xml')</msg>
<msg timestamp="20171212 16:39:27.740" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171212 16:39:27.744" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171212 16:39:27.744" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171212 16:39:27.957" level="DEBUG">Adding ssh-rsa host key for 192.168.255.1: 85e067deffe7ed0ff1653d51bef90770</msg>
<msg timestamp="20171212 16:39:28.070" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171212 16:39:38.513" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171212 16:39:38.576" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171212 16:39:38.789" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171212 16:39:38.795" level="DEBUG">[chan 0] lstat('/ffs/fs2/FileDirectory.xml')</msg>
<msg timestamp="20171212 16:39:38.797" level="DEBUG">[chan 0] lstat('/ffs/fs2/FileDirectory.xml')</msg>
<msg timestamp="20171212 16:39:38.801" level="DEBUG">[chan 0] stat('/ffs/fs2/FileDirectory.xml')</msg>
<msg timestamp="20171212 16:39:38.802" level="DEBUG">[chan 0] open('/ffs/fs2/FileDirectory.xml', 'rb')</msg>
<msg timestamp="20171212 16:39:38.803" level="DEBUG">[chan 0] open('/ffs/fs2/FileDirectory.xml', 'rb') -&gt; 00000000</msg>
<msg timestamp="20171212 16:39:38.803" level="DEBUG">[chan 0] stat('/ffs/fs2/FileDirectory.xml')</msg>
<msg timestamp="20171212 16:39:38.809" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171212 16:39:38.813" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171212 16:39:38.813" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171212 16:39:39.024" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171212 16:39:39.087" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171212 16:39:39.298" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171212 16:39:39.305" level="DEBUG">[chan 0] lstat('/ffs/fs2/config/SCFC_19.xml')</msg>
<msg timestamp="20171212 16:39:39.306" level="DEBUG">[chan 0] lstat('/ffs/fs2/config/SCFC_19.xml')</msg>
<msg timestamp="20171212 16:39:39.310" level="DEBUG">[chan 0] stat('/ffs/fs2/config/SCFC_19.xml')</msg>
<msg timestamp="20171212 16:39:39.312" level="DEBUG">[chan 0] open('/ffs/fs2/config/SCFC_19.xml', 'rb')</msg>
<msg timestamp="20171212 16:39:39.312" level="DEBUG">[chan 0] open('/ffs/fs2/config/SCFC_19.xml', 'rb') -&gt; 00000000</msg>
<msg timestamp="20171212 16:39:39.313" level="DEBUG">[chan 0] stat('/ffs/fs2/config/SCFC_19.xml')</msg>
<msg timestamp="20171212 16:39:39.327" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171212 16:39:39.330" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171212 16:39:39.331" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171212 16:38:55.543" level="INFO">[ftm_control.py@287] pass this kw for PR exist</msg>
<msg timestamp="20171212 16:38:55.545" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20171212 16:39:05.928" level="INFO">[ssh_common.py@198] Last login: Tue Dec 12 16:38:32 CST 2017 from 10.140.161.191 on ssh
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171212 16:39:05.931" level="DEBUG">[ssh_common.py@203] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171212 16:39:05.935" level="INFO">[connection_mgr.py@184] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;RobotWS.CommonLib.connections.ssh_common.SshCommon instance at 0x05BCAD28&gt;</msg>
<msg timestamp="20171212 16:39:05.988" level="DEBUG">[ssh_common.py@278]</msg>
<msg timestamp="20171212 16:39:05.991" level="INFO">[ssh_common.py@253] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171212 16:39:06.044" level="INFO">[ssh_common.py@309] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171212 16:39:06.110" level="INFO">[ssh_common.py@136] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;RobotWS.CommonLib.connections.ssh_common.SshCommon instance at 0x05BCAD28&gt;</msg>
<msg timestamp="20171212 16:39:06.112" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20171212 16:39:16.484" level="INFO">[ssh_common.py@198] Last login: Tue Dec 12 16:38:58 CST 2017 from 192.168.255.126 on pts/0
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171212 16:39:16.487" level="DEBUG">[ssh_common.py@203] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171212 16:39:16.490" level="INFO">[connection_mgr.py@184] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;RobotWS.CommonLib.connections.ssh_common.SshCommon instance at 0x04C188A0&gt;</msg>
<msg timestamp="20171212 16:39:16.543" level="DEBUG">[ssh_common.py@278]</msg>
<msg timestamp="20171212 16:39:16.546" level="INFO">[ssh_common.py@253] Execute command: cd /ffs/fs2;ls TargetBD*.xml</msg>
<msg timestamp="20171212 16:39:16.599" level="INFO">[ssh_common.py@309] Get Response: cd /ffs/fs2;ls TargetBD*.xml
TargetBD_TL18_FSM4_9999_171211_019786.xml
root@fctj-4a:/ffs/fs2 &gt;</msg>
<msg timestamp="20171212 16:39:16.665" level="INFO">[ssh_common.py@136] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;RobotWS.CommonLib.connections.ssh_common.SshCommon instance at 0x04C188A0&gt;</msg>
<msg timestamp="20171212 16:39:16.667" level="INFO">[enb_resource.py@1219] 
 ****Current BTS version is 'TL18_FSM4_9999_171211_019786' *****</msg>
<msg timestamp="20171212 16:39:16.670" level="INFO">[enb_resource.py@1249] activeBuildVersion=TL18_FSM4_9999_171211_019786</msg>
<msg timestamp="20171212 16:39:16.673" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20171212 16:39:27.046" level="INFO">[ssh_common.py@198] Last login: Tue Dec 12 16:39:09 CST 2017 from 10.140.161.191 on ssh
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171212 16:39:27.048" level="DEBUG">[ssh_common.py@203] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171212 16:39:27.051" level="INFO">[connection_mgr.py@184] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;RobotWS.CommonLib.connections.ssh_common.SshCommon instance at 0x05AC4260&gt;</msg>
<msg timestamp="20171212 16:39:27.104" level="DEBUG">[ssh_common.py@278]</msg>
<msg timestamp="20171212 16:39:27.106" level="INFO">[ssh_common.py@253] Execute command: ls /ram/SiteConf.xml</msg>
<msg timestamp="20171212 16:39:27.160" level="INFO">[ssh_common.py@309] Get Response: ls /ram/SiteConf.xml
/ram/SiteConf.xml
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171212 16:39:27.226" level="INFO">[ssh_common.py@136] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;RobotWS.CommonLib.connections.ssh_common.SshCommon instance at 0x05AC4260&gt;</msg>
<msg timestamp="20171212 16:39:27.229" level="DEBUG">[sftp_control.py@21] transport is ok, host:'192.168.255.1', port:'22'</msg>
<msg timestamp="20171212 16:39:27.713" level="INFO">[sftp_control.py@30] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171212 16:39:27.716" level="INFO">[sftp_control.py@166] /ram/SiteConf.xml</msg>
<msg timestamp="20171212 16:39:27.721" level="DEBUG">[sftp_control.py@40] sftp get file size '/ram/SiteConf.xml' is 164KB</msg>
<msg timestamp="20171212 16:39:27.744" level="INFO">[sftp_control.py@72] sftp download from '/ram/SiteConf.xml' to 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\SiteConf.xml' is ok. local file size is 164k</msg>
<msg timestamp="20171212 16:39:27.750" level="DEBUG">[sftp_control.py@158] sftp close is ok</msg>
<msg timestamp="20171212 16:39:27.752" level="INFO">[enb_command_control.py@32] argument host is: 192.168.255.1</msg>
<msg timestamp="20171212 16:39:38.123" level="INFO">[ssh_common.py@198] Last login: Tue Dec 12 16:39:29 CST 2017 from 192.168.255.126 on ssh
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171212 16:39:38.126" level="DEBUG">[ssh_common.py@203] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171212 16:39:38.129" level="INFO">[connection_mgr.py@184] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;RobotWS.CommonLib.connections.ssh_common.SshCommon instance at 0x05BDEB20&gt;</msg>
<msg timestamp="20171212 16:39:38.182" level="DEBUG">[ssh_common.py@278]</msg>
<msg timestamp="20171212 16:39:38.185" level="INFO">[ssh_common.py@253] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171212 16:39:38.238" level="INFO">[ssh_common.py@309] Get Response: readlink /ffs/run
/ffs/fs2
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171212 16:39:38.304" level="INFO">[ssh_common.py@136] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;RobotWS.CommonLib.connections.ssh_common.SshCommon instance at 0x05BDEB20&gt;</msg>
<msg timestamp="20171212 16:39:38.306" level="INFO">[enb_resource.py@481] The real falsh folder is /ffs/fs2</msg>
<msg timestamp="20171212 16:39:38.310" level="DEBUG">[sftp_control.py@21] transport is ok, host:'192.168.255.1', port:'22'</msg>
<msg timestamp="20171212 16:39:38.792" level="INFO">[sftp_control.py@30] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171212 16:39:38.795" level="INFO">[sftp_control.py@166] /ffs/fs2/FileDirectory.xml</msg>
<msg timestamp="20171212 16:39:38.800" level="DEBUG">[sftp_control.py@40] sftp get file size '/ffs/fs2/FileDirectory.xml' is 45KB</msg>
<msg timestamp="20171212 16:39:38.813" level="INFO">[sftp_control.py@72] sftp download from '/ffs/fs2/FileDirectory.xml' to 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\FileDirectory_20171212163927.xml' is ok. local file size is 45k</msg>
<msg timestamp="20171212 16:39:38.819" level="DEBUG">[sftp_control.py@158] sftp close is ok</msg>
<msg timestamp="20171212 16:39:38.824" level="DEBUG">[sftp_control.py@21] transport is ok, host:'192.168.255.1', port:'22'</msg>
<msg timestamp="20171212 16:39:39.302" level="INFO">[sftp_control.py@30] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171212 16:39:39.305" level="INFO">[sftp_control.py@166] /ffs/fs2/config/SCFC_19.xml</msg>
<msg timestamp="20171212 16:39:39.310" level="DEBUG">[sftp_control.py@40] sftp get file size '/ffs/fs2/config/SCFC_19.xml' is 204KB</msg>
<msg timestamp="20171212 16:39:39.330" level="INFO">[sftp_control.py@72] sftp download from '/ffs/fs2/config/SCFC_19.xml' to 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\SCFC_19.xml' is ok. local file size is 204k</msg>
<msg timestamp="20171212 16:39:39.337" level="DEBUG">[sftp_control.py@158] sftp close is ok</msg>
<msg timestamp="20171212 16:39:39.371" level="INFO">[enb_resource.py@1219] 
 ****Current bbu type is 'ASIA' *****</msg>
<msg timestamp="20171212 16:39:39.373" level="INFO">[enb_resource.py@1344] HW_BBU_TYPE=ASIA</msg>
<msg timestamp="20171212 16:39:39.376" level="INFO">[enb_resource.py@1219] 
 ****Current rru type is 'FZHA:FZHA' *****</msg>
<msg timestamp="20171212 16:39:39.379" level="INFO">[enb_resource.py@1347] HW_RRU_TYPE=FZHA:FZHA</msg>
<msg timestamp="20171212 16:39:39.381" level="INFO">[enb_resource.py@1219] 
 ****Current HW type is 'null' *****</msg>
<msg timestamp="20171212 16:39:39.384" level="INFO">[enb_resource.py@1350] BTS_HW_TYPE=null</msg>
<msg timestamp="20171212 16:40:36.002" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:36.003" starttime="20171212 16:38:52.508"></status>
</kw>
<msg timestamp="20171212 16:40:36.003" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171212 16:40:36.003" starttime="20171212 16:38:52.507"></status>
</kw>
<kw name="Set Library Search Order" library="BuiltIn">
<doc>Sets the resolution order to use when a name matches multiple keywords.</doc>
<arguments>
<arg>RobotWS</arg>
<arg>OperatingSystem</arg>
</arguments>
<msg timestamp="20171212 16:40:36.004" level="TRACE">Arguments: [ 'RobotWS' | 'OperatingSystem' ]</msg>
<msg timestamp="20171212 16:40:36.004" level="TRACE">Return: ()</msg>
<status status="PASS" endtime="20171212 16:40:36.004" starttime="20171212 16:40:36.004"></status>
</kw>
<kw name="Initial Connection With BTS PC" library="common_resource">
<msg timestamp="20171212 16:40:36.005" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Os Platform Version" library="RobotWS">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20171212 16:40:36.005" level="TRACE">Arguments: [ with_connection=False ]</msg>
<msg timestamp="20171212 16:40:36.007" level="TRACE">Return: b'Windows-7-6.1.7601-SP1'</msg>
<msg timestamp="20171212 16:40:36.007" level="INFO">${platform_version} = Windows-7-6.1.7601-SP1</msg>
<status status="PASS" endtime="20171212 16:40:36.008" starttime="20171212 16:40:36.005"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>${TELNET_PORT}</arg>
<arg>${SSH_PORT}</arg>
</arguments>
<assign>
<var>${conn_port}</var>
</assign>
<msg timestamp="20171212 16:40:36.008" level="TRACE">Arguments: [ '"Windows" in "Windows-7-6.1.7601-SP1"' | '${TELNET_PORT}' | '${SSH_PORT}' ]</msg>
<msg timestamp="20171212 16:40:36.011" level="TRACE">Return: 23</msg>
<msg timestamp="20171212 16:40:36.011" level="INFO">${conn_port} = 23</msg>
<status status="PASS" endtime="20171212 16:40:36.011" starttime="20171212 16:40:36.008"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>TELNET</arg>
<arg>SSH</arg>
</arguments>
<assign>
<var>${conn_type}</var>
</assign>
<msg timestamp="20171212 16:40:36.012" level="TRACE">Arguments: [ '"Windows" in "Windows-7-6.1.7601-SP1"' | 'TELNET' | 'SSH' ]</msg>
<msg timestamp="20171212 16:40:36.014" level="TRACE">Return: 'TELNET'</msg>
<msg timestamp="20171212 16:40:36.014" level="INFO">${conn_type} = TELNET</msg>
<status status="PASS" endtime="20171212 16:40:36.014" starttime="20171212 16:40:36.011"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>30</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${timeout}</var>
</assign>
<msg timestamp="20171212 16:40:36.015" level="TRACE">Arguments: [ '"Windows" in "Windows-7-6.1.7601-SP1"' | '30' | '5' ]</msg>
<msg timestamp="20171212 16:40:36.017" level="TRACE">Return: '30'</msg>
<msg timestamp="20171212 16:40:36.017" level="INFO">${timeout} = 30</msg>
<status status="PASS" endtime="20171212 16:40:36.017" starttime="20171212 16:40:36.014"></status>
</kw>
<kw name="Connect To Host" library="RobotWS">
<doc>Used to connect to host, either TELNET or SSH</doc>
<arguments>
<arg>${BTS_PC_INFO.IP}</arg>
<arg>port=${conn_port}</arg>
<arg>username=${BTS_PC_INFO.USERNAME}</arg>
<arg>password=${BTS_PC_INFO.PASSWORD}</arg>
<arg>conn_type=${conn_type}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${BTS_PC_CONNECTION}</var>
</assign>
<msg timestamp="20171212 16:40:36.018" level="TRACE">Arguments: [ b'10.69.67.26' | port=23 | username=b'tdlte-tester' | password=b'btstest' | conn_type='TELNET' | timeout='30' ]</msg>
<msg timestamp="20171212 16:40:36.071" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:40:36</msg>
<msg timestamp="20171212 16:40:36.074" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:40:36 found ogin:</msg>
<msg timestamp="20171212 16:40:36.076" level="INFO">[telnet_common.py@298] Get Response: Welcome to Microsoft Telnet Service 

login:</msg>
<msg timestamp="20171212 16:40:36.079" level="INFO">[telnet_common.py@268] Execute command: tdlte-tester</msg>
<msg timestamp="20171212 16:40:36.131" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:40:36</msg>
<msg timestamp="20171212 16:40:36.134" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:40:36 found assword:</msg>
<msg timestamp="20171212 16:40:36.136" level="INFO">[telnet_common.py@298] Get Response:  tdlte-tester
password:</msg>
<msg timestamp="20171212 16:40:36.139" level="INFO">[telnet_common.py@268] Execute command: btstest</msg>
<msg timestamp="20171212 16:40:36.142" level="DEBUG">[telnet_common.py@216] not SUSE system</msg>
<msg timestamp="20171212 16:40:36.194" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:40:36</msg>
<msg timestamp="20171212 16:40:36.397" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:40:36 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:40:36.399" level="TRACE">[telnet_common.py@236] maybe this guy use default prompts, select the most similarly to set as default: '[CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$'</msg>
<msg timestamp="20171212 16:40:37.451" level="TRACE">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:40:37.453" level="INFO">[telnet_common.py@238]  

*===============================================================
Microsoft Telnet Server.
*===============================================================
C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:40:37.455" level="TRACE">Return: &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:40:37.456" level="INFO">${BTS_PC_CONNECTION} = 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<status status="PASS" endtime="20171212 16:40:37.456" starttime="20171212 16:40:36.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171212 16:40:37.456" level="TRACE">Arguments: [ '${BTS_PC_CONNECTION}' ]</msg>
<msg timestamp="20171212 16:40:37.457" level="INFO">${BTS_PC_CONNECTION} = 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:40:37.457" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:37.457" starttime="20171212 16:40:37.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>Execute Shell Command</arg>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<msg timestamp="20171212 16:40:37.458" level="TRACE">Arguments: [ '"Windows" in "Windows-7-6.1.7601-SP1"' | 'Execute Shell Command' | 'tlntadmn config timeoutactive\\=no' ]</msg>
<kw name="Execute Shell Command" library="RobotWS">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<msg timestamp="20171212 16:40:37.460" level="TRACE">Arguments: [ 'tlntadmn config timeoutactive=no' ]</msg>
<msg timestamp="20171212 16:40:37.464" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:40:38.517" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:40:38.520" level="INFO">[telnet_common.py@268] Execute command: tlntadmn config timeoutactive=no</msg>
<msg timestamp="20171212 16:40:38.573" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:40:38</msg>
<msg timestamp="20171212 16:40:38.632" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:40:38 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:40:38.635" level="INFO">[telnet_common.py@298] Get Response: tlntadmn config timeoutactive=no
The settings were successfully updated.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:40:38.636" level="TRACE">Return: b'tlntadmn config timeoutactive=no\r\nThe settings were successfully updated.\n\r\nC:\\Users\\Administrator&gt;'</msg>
<status status="PASS" endtime="20171212 16:40:38.636" starttime="20171212 16:40:37.460"></status>
</kw>
<msg timestamp="20171212 16:40:38.637" level="TRACE">Return: b'tlntadmn config timeoutactive=no\r\nThe settings were successfully updated.\n\r\nC:\\Users\\Administrator&gt;'</msg>
<status status="PASS" endtime="20171212 16:40:38.637" starttime="20171212 16:40:37.457"></status>
</kw>
<msg timestamp="20171212 16:40:38.637" level="TRACE">Return: &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<status status="PASS" endtime="20171212 16:40:38.637" starttime="20171212 16:40:36.004"></status>
</kw>
<kw name="Switch Host Connection" library="RobotWS">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171212 16:40:38.638" level="TRACE">Arguments: [ &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt; ]</msg>
<msg timestamp="20171212 16:40:38.640" level="INFO">[connection_mgr.py@139] Switch to connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;.</msg>
<msg timestamp="20171212 16:40:38.640" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.641" starttime="20171212 16:40:38.638"></status>
</kw>
<msg timestamp="20171212 16:40:38.641" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.641" starttime="20171212 16:38:49.391"></status>
</kw>
<test id="s1-t1" name="LTE2313-T-u_01_02 Fault_6706_EFaultId_DspPlatformFatalErrAl">
<kw type="setup" name="_Init Env">
<msg timestamp="20171212 16:40:38.642" level="TRACE">Arguments: [  ]</msg>
<kw name="Initial Test Connection" library="OM_resources_new">
<msg timestamp="20171212 16:40:38.643" level="TRACE">Arguments: [  ]</msg>
<kw name="Common Test Setup" library="common_resource">
<doc>this keyword create case name directory path as d:\test\log//ev_logs//d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849//</doc>
<msg timestamp="20171212 16:40:38.646" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Timestamp" library="RobotWS">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20171212 16:40:38.647" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:40:38.647" level="TRACE">Return: b'20171212164038'</msg>
<msg timestamp="20171212 16:40:38.647" level="INFO">${timestamp} = 20171212164038</msg>
<status status="PASS" endtime="20171212 16:40:38.647" starttime="20171212 16:40:38.646"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${TEST_NAME[:50]}</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20171212 16:40:38.648" level="TRACE">Arguments: [ 'SEPARATOR=\\' | 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849' | 'LTE2313-T-u_01_02 Fault_6706_EFaultId_DspPlatformF' ]</msg>
<msg timestamp="20171212 16:40:38.648" level="TRACE">Return: 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02 Fault_6706_EFaultId_DspPlatformF'</msg>
<msg timestamp="20171212 16:40:38.648" level="INFO">${TEST_LOG_DIR} = d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02 Fault_6706_EFaultId_DspPlatformF</msg>
<status status="PASS" endtime="20171212 16:40:38.649" starttime="20171212 16:40:38.648"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${TEST_LOG_DIR}</var>
</assign>
<msg timestamp="20171212 16:40:38.649" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02 Fault_6706_EFaultId_DspPlatformF' | b' ' | '_' ]</msg>
<msg timestamp="20171212 16:40:38.649" level="TRACE">Return: 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF'</msg>
<msg timestamp="20171212 16:40:38.650" level="INFO">${TEST_LOG_DIR} = d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF</msg>
<status status="PASS" endtime="20171212 16:40:38.650" starttime="20171212 16:40:38.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20171212 16:40:38.650" level="TRACE">Arguments: [ '${TEST_LOG_DIR}' ]</msg>
<msg timestamp="20171212 16:40:38.651" level="INFO">${TEST_LOG_DIR} = d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF</msg>
<msg timestamp="20171212 16:40:38.651" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.651" starttime="20171212 16:40:38.650"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20171212 16:40:38.652" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF' ]</msg>
<msg timestamp="20171212 16:40:38.652" html="yes" level="INFO">Created directory '&lt;a href="file://d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF"&gt;d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF&lt;/a&gt;'.</msg>
<msg timestamp="20171212 16:40:38.652" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.652" starttime="20171212 16:40:38.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${TEST_LOG_DIR}</arg>
</arguments>
<msg timestamp="20171212 16:40:38.653" level="TRACE">Arguments: [ 'save log dir:d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF' ]</msg>
<msg timestamp="20171212 16:40:38.653" level="INFO">save log dir:d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF</msg>
<msg timestamp="20171212 16:40:38.653" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.653" starttime="20171212 16:40:38.653"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${BTS PC CONNECTION.connected}</arg>
<arg>Initial Connection With BTS PC</arg>
</arguments>
<msg timestamp="20171212 16:40:38.654" level="TRACE">Arguments: [ True | 'Initial Connection With BTS PC' ]</msg>
<msg timestamp="20171212 16:40:38.654" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.654" starttime="20171212 16:40:38.654"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<msg timestamp="20171212 16:40:38.655" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<msg timestamp="20171212 16:40:38.656" level="TRACE">Arguments: [ 'variable should exist' | '${TEST LOG DIR}' ]</msg>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<msg timestamp="20171212 16:40:38.657" level="TRACE">Arguments: [ '${TEST LOG DIR}' ]</msg>
<msg timestamp="20171212 16:40:38.657" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.657" starttime="20171212 16:40:38.657"></status>
</kw>
<msg timestamp="20171212 16:40:38.658" level="TRACE">Return: (b'PASS', None)</msg>
<msg timestamp="20171212 16:40:38.658" level="INFO">${case_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20171212 16:40:38.658" starttime="20171212 16:40:38.656"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<msg timestamp="20171212 16:40:38.658" level="TRACE">Arguments: [ 'variable should exist' | '${SUITE LOG DIRECTORY}' ]</msg>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<msg timestamp="20171212 16:40:38.659" level="TRACE">Arguments: [ '${SUITE LOG DIRECTORY}' ]</msg>
<msg timestamp="20171212 16:40:38.659" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.659" starttime="20171212 16:40:38.659"></status>
</kw>
<msg timestamp="20171212 16:40:38.660" level="TRACE">Return: (b'PASS', None)</msg>
<msg timestamp="20171212 16:40:38.660" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20171212 16:40:38.660" starttime="20171212 16:40:38.658"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<msg timestamp="20171212 16:40:38.661" level="TRACE">Arguments: [ "'PASS'=='PASS'" | '${TEST LOG DIR}' | "'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'" | '${SUITE LOG DIRECTORY}' | "'FAIL'=='${suite_dir_exist[0]}'" | '${OUTPUT_DIR}' ]</msg>
<msg timestamp="20171212 16:40:38.663" level="TRACE">Return: 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF'</msg>
<msg timestamp="20171212 16:40:38.664" level="INFO">${log dir} = d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF</msg>
<status status="PASS" endtime="20171212 16:40:38.664" starttime="20171212 16:40:38.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20171212 16:40:38.665" level="TRACE">Arguments: [ '${SAVE LOG DIRECTORY}' | '${log dir}' ]</msg>
<msg timestamp="20171212 16:40:38.665" level="INFO">${SAVE LOG DIRECTORY} = d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF</msg>
<msg timestamp="20171212 16:40:38.665" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.665" starttime="20171212 16:40:38.664"></status>
</kw>
<msg timestamp="20171212 16:40:38.666" level="TRACE">Return: 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF'</msg>
<status status="PASS" endtime="20171212 16:40:38.666" starttime="20171212 16:40:38.655"></status>
</kw>
<msg timestamp="20171212 16:40:38.666" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.666" starttime="20171212 16:40:38.646"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Recover Active Version If NOT Matched</arg>
</arguments>
<msg timestamp="20171212 16:40:38.667" level="TRACE">Arguments: [ 'Recover Active Version If NOT Matched' ]</msg>
<msg timestamp="20171212 16:40:38.667" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.667" starttime="20171212 16:40:38.667"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Reset BTS If Not Onair</arg>
</arguments>
<msg timestamp="20171212 16:40:38.668" level="TRACE">Arguments: [ 'Reset BTS If Not Onair' ]</msg>
<msg timestamp="20171212 16:40:38.668" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.668" starttime="20171212 16:40:38.667"></status>
</kw>
<msg timestamp="20171212 16:40:38.668" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.668" starttime="20171212 16:40:38.643"></status>
</kw>
<kw name="Start Bts Udp Log" library="RobotWS">
<doc>This keyword starts catching of BTS system(UDP) log.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
</arguments>
<msg timestamp="20171212 16:40:38.669" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\btslog_check.LOG' ]</msg>
<msg timestamp="20171212 16:40:38.672" level="DEBUG">[process_control.py@158] Run command: TASKKILL /F /T /IM btslog.exe</msg>
<msg timestamp="20171212 16:40:38.748" level="DEBUG">[process_control.py@166]</msg>
<msg timestamp="20171212 16:40:38.750" level="DEBUG">[process_control.py@158] Run command: TASKKILL /F /T /IM BTSlog2.exe</msg>
<msg timestamp="20171212 16:40:38.806" level="DEBUG">[process_control.py@166]</msg>
<msg timestamp="20171212 16:40:38.808" level="DEBUG">[process_control.py@158] Run command: TASKKILL /F /T /IM btslog</msg>
<msg timestamp="20171212 16:40:38.864" level="DEBUG">[process_control.py@166]</msg>
<msg timestamp="20171212 16:40:38.866" level="INFO">[btslog_control.py@173] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'</msg>
<msg timestamp="20171212 16:40:38.868" level="INFO">[btslog_control.py@230] use ip is 192.168.255.126</msg>
<msg timestamp="20171212 16:40:38.871" level="INFO">[file_common.py@209] Directory "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF" already exists, no need to create it again.</msg>
<msg timestamp="20171212 16:40:38.873" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.873" starttime="20171212 16:40:38.669"></status>
</kw>
<msg timestamp="20171212 16:40:38.873" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:38.873" starttime="20171212 16:40:38.642"></status>
</kw>
<kw name="_Trigger Fault 6706 By Dsp Crash Tool">
<doc>1.Run Crash Tool To Dsp</doc>
<msg timestamp="20171212 16:40:38.874" level="TRACE">Arguments: [  ]</msg>
<kw name="Kill Sitemanager Process" library="RobotWS">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20171212 16:40:38.875" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:40:38.877" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:40:39.929" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:40:39.931" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:40:39.984" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:40:39</msg>
<msg timestamp="20171212 16:40:40.116" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:40:40 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:40:40.118" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\NOKIA-20170515I\ROOT\CIMV2:Win32_Process.Handle="4836"
Instance deletion successful.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:40:40.120" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:40:41.172" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:40:41.174" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:40:41.226" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:40:41</msg>
<msg timestamp="20171212 16:40:41.321" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:40:41 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:40:41.323" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\NOKIA-20170515I\ROOT\CIMV2:Win32_Process.Handle="7492"
Instance deletion successful.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:40:41.325" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:40:42.377" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:40:42.379" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:40:42.431" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:40:42</msg>
<msg timestamp="20171212 16:40:42.524" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:40:42 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:40:42.526" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:40:42.528" level="TRACE">Return: True</msg>
<status status="PASS" endtime="20171212 16:40:42.528" starttime="20171212 16:40:38.874"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<msg timestamp="20171212 16:40:42.532" level="TRACE">Arguments: [ ${IPAddress}='Local' | ${UserName}='Nemuadmin' | ${Password}='nemuuser' | ${CloseSEM}='N' | ${CheckExist}='1' | ${qtpkeepopen}='N' ]</msg>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<msg timestamp="20171212 16:40:42.533" level="TRACE">Arguments: [ 'Run keyword and ignore error' | 'modify sem maxpermsize' ]</msg>
<msg timestamp="20171212 16:40:42.533" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:42.533" starttime="20171212 16:40:42.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<msg timestamp="20171212 16:40:42.533" level="TRACE">Arguments: [ "'N'=='Y'" | 'Kill SiteManager Process' ]</msg>
<msg timestamp="20171212 16:40:42.536" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:42.536" starttime="20171212 16:40:42.533"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171212 16:40:42.537" level="TRACE">Arguments: [ 'IPAddress=Local' | 'UserName=Nemuadmin' | 'Password=nemuuser' | 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\' | 'CheckExist=1' ]</msg>
<msg timestamp="20171212 16:40:42.537" level="TRACE">Return: ['IPAddress=Local', 'UserName=Nemuadmin', 'Password=nemuuser', 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\', 'CheckExist=1']</msg>
<msg timestamp="20171212 16:40:42.537" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFau...</msg>
<status status="PASS" endtime="20171212 16:40:42.537" starttime="20171212 16:40:42.536"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<msg timestamp="20171212 16:40:42.538" level="TRACE">Arguments: [ 'run qtp script' | '${siteman_test_path}Login' | '${para_list}' | '${qtpkeepopen}' ]</msg>
<msg timestamp="20171212 16:40:42.538" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:40:42.538" starttime="20171212 16:40:42.538"></status>
</kw>
<kw name="Run Qtp" library="RobotWS">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171212 16:40:42.539" level="TRACE">Arguments: [ 'D:\\TALib\\tdd_robotws\\GUI_Databases\\QTP\\RL65\\SiteMan\\Login' | 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF' | ['IPAddress=Local', 'UserName=Nemuadmin', 'Password=nemuuser', 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\', 'CheckExist=1'] | 'N' | '7200' ]</msg>
<msg timestamp="20171212 16:41:22.834" level="INFO">&lt;QTP&gt; Test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\"
CheckExist="1"
&lt;QTP&gt; Save log to d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\GUILog\qtp_log20171212164042\Report
&lt;QTP&gt; Start to run script...</msg>
<msg timestamp="20171212 16:41:22.834" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:41:22.835" starttime="20171212 16:40:42.539"></status>
</kw>
<msg timestamp="20171212 16:41:22.835" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:41:22.835" starttime="20171212 16:40:42.531"></status>
</kw>
<kw name="GUI SM Alarm Oper" library="gui_resource">
<doc>this keyword provide check Active/History alarm in BTS SiteManager window</doc>
<arguments>
<arg>Check Alarm Not Existed</arg>
<arg>Active</arg>
<arg>FaultName=Diagnostic Files collected (6450);;Source=BTS: BS ${BTS_INFO.ID} / ${BTS_INFO.SYSTEM_MODEL_TYPE} 1</arg>
</arguments>
<msg timestamp="20171212 16:41:22.837" level="TRACE">Arguments: [ ${OperType}='Check Alarm Not Existed' | ${AlarmType}='Active' | ${AlarmInfo}='FaultName=Diagnostic Files collected (6450);;Source=BTS: BS 1492 / ASIA 1' | ${qtpkeepopen}='N' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>AlarmType=${AlarmType}</arg>
<arg>OperType=${OperType}</arg>
<arg>AlarmInfo=${AlarmInfo}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171212 16:41:22.837" level="TRACE">Arguments: [ 'AlarmType=Active' | 'OperType=Check Alarm Not Existed' | 'AlarmInfo=FaultName=Diagnostic Files collected (6450);;Source=BTS: BS 1492 / ASIA 1' | 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\' ]</msg>
<msg timestamp="20171212 16:41:22.838" level="TRACE">Return: ['AlarmType=Active', 'OperType=Check Alarm Not Existed', 'AlarmInfo=FaultName=Diagnostic Files collected (6450);;Source=BTS: BS 1492 / ASIA 1', 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\']</msg>
<msg timestamp="20171212 16:41:22.838" level="INFO">${para_list} = [u'AlarmType=Active', u'OperType=Check Alarm Not Existed', u'AlarmInfo=FaultName=Diagnostic Files collected (6450);;Source=BTS: BS 1492 / ASIA 1', u'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_F...</msg>
<status status="PASS" endtime="20171212 16:41:22.838" starttime="20171212 16:41:22.837"></status>
</kw>
<kw name="Run Qtp" library="RobotWS">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Alarm_Oper</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171212 16:41:22.839" level="TRACE">Arguments: [ 'D:\\TALib\\tdd_robotws\\GUI_Databases\\QTP\\RL65\\SiteMan\\Alarm_Oper' | 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF' | ['AlarmType=Active', 'OperType=Check Alarm Not Existed', 'AlarmInfo=FaultName=Diagnostic Files collected (6450);;Source=BTS: BS 1492 / ASIA 1', 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\'] | 'N' | '7200' ]</msg>
<msg timestamp="20171212 16:41:30.128" level="INFO">&lt;QTP&gt; Test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\Alarm_Oper is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\Alarm_Oper ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
AlarmType="Active"
OperType="Check Alarm Not Existed"
AlarmInfo="FaultName=Diagnostic Files collected (6450);;Source=BTS: BS 1492 / ASIA 1"
LogPath="d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\"
&lt;QTP&gt; Save log to d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\GUILog\qtp_log20171212164122\Report
&lt;QTP&gt; Start to run script...</msg>
<msg timestamp="20171212 16:41:30.129" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:41:30.129" starttime="20171212 16:41:22.839"></status>
</kw>
<msg timestamp="20171212 16:41:30.129" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:41:30.131" starttime="20171212 16:41:22.836"></status>
</kw>
<kw name="Execute Shell Command" library="RobotWS">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>${CRASH_FILE} -b 0x12 -k 0x31 -u 6706</arg>
</arguments>
<msg timestamp="20171212 16:41:30.132" level="TRACE">Arguments: [ 'D:\\TestCase\\Trunk_CRT\\Resource\\NonSRANResource\\OAM1_resources\\DspCrash.py -b 0x12 -k 0x31 -u 6706' ]</msg>
<msg timestamp="20171212 16:41:30.134" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:41:31.186" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:41:31.189" level="INFO">[telnet_common.py@268] Execute command: D:\TestCase\Trunk_CRT\Resource\NonSRANResource\OAM1_resources\DspCrash.py -b 0x12 -k 0x31 -u 6706</msg>
<msg timestamp="20171212 16:41:31.241" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:41:31</msg>
<msg timestamp="20171212 16:41:31.505" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:41:31 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:41:31.507" level="INFO">[telnet_common.py@298] Get Response: D:\TestCase\Trunk_CRT\Resource\NonSRANResource\OAM1_resources\DspCrash.py -b 0x12 -k 0x31 -u 6706
Local current time : 2017-12-12 16:41:31
Open connection to 192.168.255.1 : 15003
Connection established
Sending FAULT_IND_MSG 0x8008 with faultId:6706 from board:0x12, cpu:0x31
Closing connection

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:41:31.508" level="TRACE">Return: b'D:\\TestCase\\Trunk_CRT\\Resource\\NonSRANResource\\OAM1_resources\\DspCrash.py -b 0x12 -k 0x31 -u 6706\r\nLocal current time : 2017-12-12 16:41:31\r\nOpen connection to 192.168.255.1 : 15003\r\nConnection established\r\nSending FAULT_IND_MSG 0x8008 with faultId:6706 from board:0x12, cpu:0x31\r\nClosing connection\r\n\r\nC:\\Users\\Administrator&gt;'</msg>
<status status="PASS" endtime="20171212 16:41:31.508" starttime="20171212 16:41:30.131"></status>
</kw>
<msg timestamp="20171212 16:41:31.508" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:41:31.508" starttime="20171212 16:40:38.874"></status>
</kw>
<kw name="_Verify Check Points From BTSLog">
<doc>1.verify check points</doc>
<msg timestamp="20171212 16:41:31.509" level="TRACE">Arguments: [  ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>INF/FRI/FRI.*Detector 6706.*filtering timer 2s started</arg>
<arg>WRN/FRI/FRI.*Detector 6706.*active</arg>
</arguments>
<assign>
<var>${msg_check}</var>
</assign>
<msg timestamp="20171212 16:41:31.510" level="TRACE">Arguments: [ 'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started' | 'WRN/FRI/FRI.*Detector 6706.*active' ]</msg>
<msg timestamp="20171212 16:41:31.510" level="TRACE">Return: ['INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', 'WRN/FRI/FRI.*Detector 6706.*active']</msg>
<msg timestamp="20171212 16:41:31.510" level="INFO">${msg_check} = [u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']</msg>
<status status="PASS" endtime="20171212 16:41:31.510" starttime="20171212 16:41:31.509"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>5min</arg>
<arg>30sec</arg>
<arg>File Should Contain</arg>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
<arg>${msg_check}</arg>
</arguments>
<msg timestamp="20171212 16:41:31.511" level="TRACE">Arguments: [ '5min' | '30sec' | 'File Should Contain' | '${TEST LOG DIR}${/}btslog_check.LOG' | '${msg_check}' ]</msg>
<kw name="File Should Contain" library="RobotWS">
<doc>This keyword checks whether file contains specified messages.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
<arg>${msg_check}</arg>
</arguments>
<msg timestamp="20171212 16:41:31.512" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\btslog_check.LOG' | ['INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', 'WRN/FRI/FRI.*Detector 6706.*active'] ]</msg>
<msg timestamp="20171212 16:41:31.652" level="INFO">[file_control.py@78] *HTML*&lt;a href = "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG"&gt;fail log&lt;/a&gt;</msg>
<msg timestamp="20171212 16:41:31.652" level="FAIL">Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</msg>
<msg timestamp="20171212 16:41:31.652" level="DEBUG">Traceback (most recent call last):
  File "D:\TALib\tdd_robotws\RobotWS\CommonLib\file_lib\file_control.py", line 81, in file_should_contain
    (unfound_msgs, source_file_path))</msg>
<status status="FAIL" endtime="20171212 16:41:31.653" starttime="20171212 16:41:31.511"></status>
</kw>
<kw name="File Should Contain" library="RobotWS">
<doc>This keyword checks whether file contains specified messages.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
<arg>${msg_check}</arg>
</arguments>
<msg timestamp="20171212 16:42:01.654" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\btslog_check.LOG' | ['INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', 'WRN/FRI/FRI.*Detector 6706.*active'] ]</msg>
<msg timestamp="20171212 16:42:01.851" level="INFO">[file_control.py@78] *HTML*&lt;a href = "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG"&gt;fail log&lt;/a&gt;</msg>
<msg timestamp="20171212 16:42:01.851" level="FAIL">Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</msg>
<msg timestamp="20171212 16:42:01.851" level="DEBUG">Traceback (most recent call last):
  File "D:\TALib\tdd_robotws\RobotWS\CommonLib\file_lib\file_control.py", line 81, in file_should_contain
    (unfound_msgs, source_file_path))</msg>
<status status="FAIL" endtime="20171212 16:42:01.851" starttime="20171212 16:42:01.653"></status>
</kw>
<kw name="File Should Contain" library="RobotWS">
<doc>This keyword checks whether file contains specified messages.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
<arg>${msg_check}</arg>
</arguments>
<msg timestamp="20171212 16:42:31.853" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\btslog_check.LOG' | ['INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', 'WRN/FRI/FRI.*Detector 6706.*active'] ]</msg>
<msg timestamp="20171212 16:42:32.136" level="INFO">[file_control.py@78] *HTML*&lt;a href = "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG"&gt;fail log&lt;/a&gt;</msg>
<msg timestamp="20171212 16:42:32.136" level="FAIL">Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</msg>
<msg timestamp="20171212 16:42:32.136" level="DEBUG">Traceback (most recent call last):
  File "D:\TALib\tdd_robotws\RobotWS\CommonLib\file_lib\file_control.py", line 81, in file_should_contain
    (unfound_msgs, source_file_path))</msg>
<status status="FAIL" endtime="20171212 16:42:32.136" starttime="20171212 16:42:31.852"></status>
</kw>
<kw name="File Should Contain" library="RobotWS">
<doc>This keyword checks whether file contains specified messages.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
<arg>${msg_check}</arg>
</arguments>
<msg timestamp="20171212 16:43:02.138" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\btslog_check.LOG' | ['INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', 'WRN/FRI/FRI.*Detector 6706.*active'] ]</msg>
<msg timestamp="20171212 16:43:02.464" level="INFO">[file_control.py@78] *HTML*&lt;a href = "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG"&gt;fail log&lt;/a&gt;</msg>
<msg timestamp="20171212 16:43:02.465" level="FAIL">Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</msg>
<msg timestamp="20171212 16:43:02.465" level="DEBUG">Traceback (most recent call last):
  File "D:\TALib\tdd_robotws\RobotWS\CommonLib\file_lib\file_control.py", line 81, in file_should_contain
    (unfound_msgs, source_file_path))</msg>
<status status="FAIL" endtime="20171212 16:43:02.465" starttime="20171212 16:43:02.137"></status>
</kw>
<kw name="File Should Contain" library="RobotWS">
<doc>This keyword checks whether file contains specified messages.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
<arg>${msg_check}</arg>
</arguments>
<msg timestamp="20171212 16:43:32.467" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\btslog_check.LOG' | ['INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', 'WRN/FRI/FRI.*Detector 6706.*active'] ]</msg>
<msg timestamp="20171212 16:43:32.866" level="INFO">[file_control.py@78] *HTML*&lt;a href = "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG"&gt;fail log&lt;/a&gt;</msg>
<msg timestamp="20171212 16:43:32.867" level="FAIL">Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</msg>
<msg timestamp="20171212 16:43:32.867" level="DEBUG">Traceback (most recent call last):
  File "D:\TALib\tdd_robotws\RobotWS\CommonLib\file_lib\file_control.py", line 81, in file_should_contain
    (unfound_msgs, source_file_path))</msg>
<status status="FAIL" endtime="20171212 16:43:32.867" starttime="20171212 16:43:32.466"></status>
</kw>
<kw name="File Should Contain" library="RobotWS">
<doc>This keyword checks whether file contains specified messages.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
<arg>${msg_check}</arg>
</arguments>
<msg timestamp="20171212 16:44:02.868" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\btslog_check.LOG' | ['INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', 'WRN/FRI/FRI.*Detector 6706.*active'] ]</msg>
<msg timestamp="20171212 16:44:03.329" level="INFO">[file_control.py@78] *HTML*&lt;a href = "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG"&gt;fail log&lt;/a&gt;</msg>
<msg timestamp="20171212 16:44:03.329" level="FAIL">Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</msg>
<msg timestamp="20171212 16:44:03.329" level="DEBUG">Traceback (most recent call last):
  File "D:\TALib\tdd_robotws\RobotWS\CommonLib\file_lib\file_control.py", line 81, in file_should_contain
    (unfound_msgs, source_file_path))</msg>
<status status="FAIL" endtime="20171212 16:44:03.330" starttime="20171212 16:44:02.867"></status>
</kw>
<kw name="File Should Contain" library="RobotWS">
<doc>This keyword checks whether file contains specified messages.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
<arg>${msg_check}</arg>
</arguments>
<msg timestamp="20171212 16:44:33.330" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\btslog_check.LOG' | ['INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', 'WRN/FRI/FRI.*Detector 6706.*active'] ]</msg>
<msg timestamp="20171212 16:44:33.860" level="INFO">[file_control.py@78] *HTML*&lt;a href = "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG"&gt;fail log&lt;/a&gt;</msg>
<msg timestamp="20171212 16:44:33.861" level="FAIL">Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</msg>
<msg timestamp="20171212 16:44:33.861" level="DEBUG">Traceback (most recent call last):
  File "D:\TALib\tdd_robotws\RobotWS\CommonLib\file_lib\file_control.py", line 81, in file_should_contain
    (unfound_msgs, source_file_path))</msg>
<status status="FAIL" endtime="20171212 16:44:33.861" starttime="20171212 16:44:33.330"></status>
</kw>
<kw name="File Should Contain" library="RobotWS">
<doc>This keyword checks whether file contains specified messages.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
<arg>${msg_check}</arg>
</arguments>
<msg timestamp="20171212 16:45:03.863" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\btslog_check.LOG' | ['INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', 'WRN/FRI/FRI.*Detector 6706.*active'] ]</msg>
<msg timestamp="20171212 16:45:04.479" level="INFO">[file_control.py@78] *HTML*&lt;a href = "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG"&gt;fail log&lt;/a&gt;</msg>
<msg timestamp="20171212 16:45:04.479" level="FAIL">Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</msg>
<msg timestamp="20171212 16:45:04.479" level="DEBUG">Traceback (most recent call last):
  File "D:\TALib\tdd_robotws\RobotWS\CommonLib\file_lib\file_control.py", line 81, in file_should_contain
    (unfound_msgs, source_file_path))</msg>
<status status="FAIL" endtime="20171212 16:45:04.480" starttime="20171212 16:45:03.862"></status>
</kw>
<kw name="File Should Contain" library="RobotWS">
<doc>This keyword checks whether file contains specified messages.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
<arg>${msg_check}</arg>
</arguments>
<msg timestamp="20171212 16:45:34.481" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\btslog_check.LOG' | ['INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', 'WRN/FRI/FRI.*Detector 6706.*active'] ]</msg>
<msg timestamp="20171212 16:45:35.160" level="INFO">[file_control.py@78] *HTML*&lt;a href = "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG"&gt;fail log&lt;/a&gt;</msg>
<msg timestamp="20171212 16:45:35.160" level="FAIL">Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</msg>
<msg timestamp="20171212 16:45:35.160" level="DEBUG">Traceback (most recent call last):
  File "D:\TALib\tdd_robotws\RobotWS\CommonLib\file_lib\file_control.py", line 81, in file_should_contain
    (unfound_msgs, source_file_path))</msg>
<status status="FAIL" endtime="20171212 16:45:35.161" starttime="20171212 16:45:34.480"></status>
</kw>
<kw name="File Should Contain" library="RobotWS">
<doc>This keyword checks whether file contains specified messages.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
<arg>${msg_check}</arg>
</arguments>
<msg timestamp="20171212 16:46:05.162" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\btslog_check.LOG' | ['INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', 'WRN/FRI/FRI.*Detector 6706.*active'] ]</msg>
<msg timestamp="20171212 16:46:05.900" level="INFO">[file_control.py@78] *HTML*&lt;a href = "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG"&gt;fail log&lt;/a&gt;</msg>
<msg timestamp="20171212 16:46:05.901" level="FAIL">Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</msg>
<msg timestamp="20171212 16:46:05.901" level="DEBUG">Traceback (most recent call last):
  File "D:\TALib\tdd_robotws\RobotWS\CommonLib\file_lib\file_control.py", line 81, in file_should_contain
    (unfound_msgs, source_file_path))</msg>
<status status="FAIL" endtime="20171212 16:46:05.901" starttime="20171212 16:46:05.161"></status>
</kw>
<kw name="File Should Contain" library="RobotWS">
<doc>This keyword checks whether file contains specified messages.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}btslog_check.LOG</arg>
<arg>${msg_check}</arg>
</arguments>
<msg timestamp="20171212 16:46:35.902" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\btslog_check.LOG' | ['INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', 'WRN/FRI/FRI.*Detector 6706.*active'] ]</msg>
<msg timestamp="20171212 16:46:36.714" level="INFO">[file_control.py@78] *HTML*&lt;a href = "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG"&gt;fail log&lt;/a&gt;</msg>
<msg timestamp="20171212 16:46:36.715" level="FAIL">Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</msg>
<msg timestamp="20171212 16:46:36.715" level="DEBUG">Traceback (most recent call last):
  File "D:\TALib\tdd_robotws\RobotWS\CommonLib\file_lib\file_control.py", line 81, in file_should_contain
    (unfound_msgs, source_file_path))</msg>
<status status="FAIL" endtime="20171212 16:46:36.715" starttime="20171212 16:46:35.901"></status>
</kw>
<msg timestamp="20171212 16:46:36.715" level="FAIL">Keyword 'File Should Contain' failed after retrying for 5 minutes. The last error was: Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</msg>
<msg timestamp="20171212 16:46:36.716" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20171212 16:46:36.716" starttime="20171212 16:41:31.510"></status>
</kw>
<status status="FAIL" endtime="20171212 16:46:36.716" starttime="20171212 16:41:31.509"></status>
</kw>
<kw type="teardown" name="_Disconnect All Connection">
<doc>Dis-connectionation</doc>
<msg timestamp="20171212 16:46:36.717" level="TRACE">Arguments: [  ]</msg>
<kw name="Stop Bts Udp Log" library="RobotWS">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<msg timestamp="20171212 16:46:36.718" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:46:36.719" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:46:36.719" starttime="20171212 16:46:36.717"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Capture_OAM_LOG</arg>
</arguments>
<msg timestamp="20171212 16:46:36.720" level="TRACE">Arguments: [ 'Capture_OAM_LOG' ]</msg>
<kw name="Capture OAM LOG" library="OM_resources_new">
<msg timestamp="20171212 16:46:36.720" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Timestamp" library="RobotWS">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20171212 16:46:36.721" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:46:36.721" level="TRACE">Return: b'20171212164636'</msg>
<msg timestamp="20171212 16:46:36.721" level="INFO">${time} = 20171212164636</msg>
<status status="PASS" endtime="20171212 16:46:36.721" starttime="20171212 16:46:36.720"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>GUI SM Captuer Screen</arg>
</arguments>
<msg timestamp="20171212 16:46:36.722" level="TRACE">Arguments: [ 'GUI SM Captuer Screen' ]</msg>
<kw name="GUI SM Captuer Screen" library="gui_resource">
<doc>this keyword is used for capture the screen</doc>
<msg timestamp="20171212 16:46:36.722" level="TRACE">Arguments: [ ${qtpkeepopen}='N' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171212 16:46:36.723" level="TRACE">Arguments: [ 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\' ]</msg>
<msg timestamp="20171212 16:46:36.723" level="TRACE">Return: ['LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\']</msg>
<msg timestamp="20171212 16:46:36.723" level="INFO">${para_list} = [u'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\']</msg>
<status status="PASS" endtime="20171212 16:46:36.723" starttime="20171212 16:46:36.723"></status>
</kw>
<kw name="Run Qtp" library="RobotWS">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}CaptureImage</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171212 16:46:36.724" level="TRACE">Arguments: [ 'D:\\TALib\\tdd_robotws\\GUI_Databases\\QTP\\RL65\\SiteMan\\CaptureImage' | 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF' | ['LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\'] | 'N' | '7200' ]</msg>
<msg timestamp="20171212 16:46:42.606" level="INFO">&lt;QTP&gt; Test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\CaptureImage is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\CaptureImage ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
LogPath="d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\"
&lt;QTP&gt; Save log to d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\GUILog\qtp_log20171212164636\Report
&lt;QTP&gt; Start to run script...</msg>
<msg timestamp="20171212 16:46:42.606" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:46:42.606" starttime="20171212 16:46:36.724"></status>
</kw>
<msg timestamp="20171212 16:46:42.607" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:46:42.607" starttime="20171212 16:46:36.722"></status>
</kw>
<msg timestamp="20171212 16:46:42.607" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171212 16:46:42.607" starttime="20171212 16:46:36.721"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Capture Screen</arg>
</arguments>
<msg timestamp="20171212 16:46:42.608" level="TRACE">Arguments: [ 'Capture Screen' ]</msg>
<kw name="Capture Screen" library="OM_resources_new">
<msg timestamp="20171212 16:46:42.608" level="TRACE">Arguments: [  ]</msg>
<kw name="Kill Sitemanager Process" library="RobotWS">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20171212 16:46:42.609" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:46:42.614" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:46:43.668" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:46:43.672" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:46:43.726" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:46:43</msg>
<msg timestamp="20171212 16:46:43.835" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:46:43 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:46:43.839" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\NOKIA-20170515I\ROOT\CIMV2:Win32_Process.Handle="5376"
Instance deletion successful.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:46:43.843" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:46:44.897" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:46:44.901" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:46:44.968" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:46:44</msg>
<msg timestamp="20171212 16:46:45.103" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:46:45 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:46:45.107" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\NOKIA-20170515I\ROOT\CIMV2:Win32_Process.Handle="5416"
Instance deletion successful.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:46:45.111" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:46:46.165" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:46:46.169" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:46:46.223" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:46:46</msg>
<msg timestamp="20171212 16:46:46.320" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:46:46 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:46:46.325" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:46:46.327" level="TRACE">Return: True</msg>
<status status="PASS" endtime="20171212 16:46:46.328" starttime="20171212 16:46:42.609"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<msg timestamp="20171212 16:46:46.331" level="TRACE">Arguments: [ ${IPAddress}='Local' | ${UserName}='Nemuadmin' | ${Password}='nemuuser' | ${CloseSEM}='N' | ${CheckExist}='1' | ${qtpkeepopen}='N' ]</msg>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<msg timestamp="20171212 16:46:46.332" level="TRACE">Arguments: [ 'Run keyword and ignore error' | 'modify sem maxpermsize' ]</msg>
<msg timestamp="20171212 16:46:46.332" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:46:46.332" starttime="20171212 16:46:46.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<msg timestamp="20171212 16:46:46.333" level="TRACE">Arguments: [ "'N'=='Y'" | 'Kill SiteManager Process' ]</msg>
<msg timestamp="20171212 16:46:46.335" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:46:46.335" starttime="20171212 16:46:46.332"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171212 16:46:46.336" level="TRACE">Arguments: [ 'IPAddress=Local' | 'UserName=Nemuadmin' | 'Password=nemuuser' | 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\' | 'CheckExist=1' ]</msg>
<msg timestamp="20171212 16:46:46.336" level="TRACE">Return: ['IPAddress=Local', 'UserName=Nemuadmin', 'Password=nemuuser', 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\', 'CheckExist=1']</msg>
<msg timestamp="20171212 16:46:46.337" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFau...</msg>
<status status="PASS" endtime="20171212 16:46:46.337" starttime="20171212 16:46:46.336"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<msg timestamp="20171212 16:46:46.337" level="TRACE">Arguments: [ 'run qtp script' | '${siteman_test_path}Login' | '${para_list}' | '${qtpkeepopen}' ]</msg>
<msg timestamp="20171212 16:46:46.337" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:46:46.338" starttime="20171212 16:46:46.337"></status>
</kw>
<kw name="Run Qtp" library="RobotWS">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171212 16:46:46.338" level="TRACE">Arguments: [ 'D:\\TALib\\tdd_robotws\\GUI_Databases\\QTP\\RL65\\SiteMan\\Login' | 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF' | ['IPAddress=Local', 'UserName=Nemuadmin', 'Password=nemuuser', 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\', 'CheckExist=1'] | 'N' | '7200' ]</msg>
<msg timestamp="20171212 16:47:31.356" level="INFO">&lt;QTP&gt; Test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\"
CheckExist="1"
&lt;QTP&gt; Save log to d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\GUILog\qtp_log20171212164646\Report
&lt;QTP&gt; Start to run script...</msg>
<msg timestamp="20171212 16:47:31.356" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:47:31.357" starttime="20171212 16:46:46.338"></status>
</kw>
<msg timestamp="20171212 16:47:31.357" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:47:31.357" starttime="20171212 16:46:46.331"></status>
</kw>
<kw name="GUI SM Captuer Screen" library="gui_resource">
<doc>this keyword is used for capture the screen</doc>
<msg timestamp="20171212 16:47:31.358" level="TRACE">Arguments: [ ${qtpkeepopen}='N' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171212 16:47:31.359" level="TRACE">Arguments: [ 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\' ]</msg>
<msg timestamp="20171212 16:47:31.359" level="TRACE">Return: ['LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\']</msg>
<msg timestamp="20171212 16:47:31.359" level="INFO">${para_list} = [u'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\']</msg>
<status status="PASS" endtime="20171212 16:47:31.359" starttime="20171212 16:47:31.358"></status>
</kw>
<kw name="Run Qtp" library="RobotWS">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}CaptureImage</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171212 16:47:31.360" level="TRACE">Arguments: [ 'D:\\TALib\\tdd_robotws\\GUI_Databases\\QTP\\RL65\\SiteMan\\CaptureImage' | 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF' | ['LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\'] | 'N' | '7200' ]</msg>
<msg timestamp="20171212 16:47:36.993" level="INFO">&lt;QTP&gt; Test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\CaptureImage is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\CaptureImage ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
LogPath="d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\"
&lt;QTP&gt; Save log to d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\GUILog\qtp_log20171212164731\Report
&lt;QTP&gt; Start to run script...</msg>
<msg timestamp="20171212 16:47:36.993" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:47:36.993" starttime="20171212 16:47:31.360"></status>
</kw>
<msg timestamp="20171212 16:47:36.993" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:47:36.994" starttime="20171212 16:47:31.358"></status>
</kw>
<kw name="Kill Sitemanager Process" library="RobotWS">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20171212 16:47:36.994" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:47:36.999" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:47:38.053" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:47:38.057" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:47:38.112" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:47:38</msg>
<msg timestamp="20171212 16:47:38.249" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:47:38 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:47:38.253" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\NOKIA-20170515I\ROOT\CIMV2:Win32_Process.Handle="5616"
Instance deletion successful.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:47:38.257" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:47:39.311" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:47:39.315" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:47:39.374" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:47:39</msg>
<msg timestamp="20171212 16:47:39.498" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:47:39 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:47:39.502" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\NOKIA-20170515I\ROOT\CIMV2:Win32_Process.Handle="7156"
Instance deletion successful.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:47:39.506" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:47:40.560" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:47:40.564" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:47:40.618" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:47:40</msg>
<msg timestamp="20171212 16:47:40.708" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:47:40 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:47:40.713" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:47:40.715" level="TRACE">Return: True</msg>
<status status="PASS" endtime="20171212 16:47:40.715" starttime="20171212 16:47:36.994"></status>
</kw>
<msg timestamp="20171212 16:47:40.715" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:47:40.716" starttime="20171212 16:46:42.608"></status>
</kw>
<msg timestamp="20171212 16:47:40.716" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171212 16:47:40.716" starttime="20171212 16:46:42.608"></status>
</kw>
<kw name="Kill Sitemanager Process" library="RobotWS">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20171212 16:47:40.717" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:47:40.720" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:47:41.773" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:47:41.776" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:47:41.829" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:47:41</msg>
<msg timestamp="20171212 16:47:41.921" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:47:41 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:47:41.924" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:47:41.927" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:47:42.980" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:47:42.983" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:47:43.036" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:47:43</msg>
<msg timestamp="20171212 16:47:43.128" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:47:43 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:47:43.131" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:47:43.134" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:47:44.187" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:47:44.190" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:47:44.243" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:47:44</msg>
<msg timestamp="20171212 16:47:44.334" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:47:44 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:47:44.337" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:47:44.339" level="TRACE">Return: True</msg>
<status status="PASS" endtime="20171212 16:47:44.339" starttime="20171212 16:47:40.716"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Semcli Save Snapshot</arg>
</arguments>
<msg timestamp="20171212 16:47:44.340" level="TRACE">Arguments: [ 'Semcli Save Snapshot' ]</msg>
<msg timestamp="20171212 16:47:44.340" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:47:44.340" starttime="20171212 16:47:44.340"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>GUI SM Login</arg>
</arguments>
<msg timestamp="20171212 16:47:44.341" level="TRACE">Arguments: [ 'GUI SM Login' ]</msg>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<msg timestamp="20171212 16:47:44.344" level="TRACE">Arguments: [ ${IPAddress}='Local' | ${UserName}='Nemuadmin' | ${Password}='nemuuser' | ${CloseSEM}='N' | ${CheckExist}='1' | ${qtpkeepopen}='N' ]</msg>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<msg timestamp="20171212 16:47:44.345" level="TRACE">Arguments: [ 'Run keyword and ignore error' | 'modify sem maxpermsize' ]</msg>
<msg timestamp="20171212 16:47:44.345" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:47:44.345" starttime="20171212 16:47:44.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<msg timestamp="20171212 16:47:44.346" level="TRACE">Arguments: [ "'N'=='Y'" | 'Kill SiteManager Process' ]</msg>
<msg timestamp="20171212 16:47:44.348" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:47:44.349" starttime="20171212 16:47:44.346"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171212 16:47:44.350" level="TRACE">Arguments: [ 'IPAddress=Local' | 'UserName=Nemuadmin' | 'Password=nemuuser' | 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\' | 'CheckExist=1' ]</msg>
<msg timestamp="20171212 16:47:44.350" level="TRACE">Return: ['IPAddress=Local', 'UserName=Nemuadmin', 'Password=nemuuser', 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\', 'CheckExist=1']</msg>
<msg timestamp="20171212 16:47:44.350" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFau...</msg>
<status status="PASS" endtime="20171212 16:47:44.350" starttime="20171212 16:47:44.349"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<msg timestamp="20171212 16:47:44.351" level="TRACE">Arguments: [ 'run qtp script' | '${siteman_test_path}Login' | '${para_list}' | '${qtpkeepopen}' ]</msg>
<msg timestamp="20171212 16:47:44.351" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:47:44.351" starttime="20171212 16:47:44.350"></status>
</kw>
<kw name="Run Qtp" library="RobotWS">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171212 16:47:44.352" level="TRACE">Arguments: [ 'D:\\TALib\\tdd_robotws\\GUI_Databases\\QTP\\RL65\\SiteMan\\Login' | 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF' | ['IPAddress=Local', 'UserName=Nemuadmin', 'Password=nemuuser', 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\', 'CheckExist=1'] | 'N' | '7200' ]</msg>
<msg timestamp="20171212 16:48:43.927" level="INFO">&lt;QTP&gt; Test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\"
CheckExist="1"
&lt;QTP&gt; Save log to d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\GUILog\qtp_log20171212164744\Report
&lt;QTP&gt; Start to run script...</msg>
<msg timestamp="20171212 16:48:43.928" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:48:43.928" starttime="20171212 16:47:44.351"></status>
</kw>
<msg timestamp="20171212 16:48:43.928" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:48:43.928" starttime="20171212 16:47:44.344"></status>
</kw>
<msg timestamp="20171212 16:48:43.928" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171212 16:48:43.929" starttime="20171212 16:47:44.340"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>GUI SM Save Snapshot</arg>
</arguments>
<msg timestamp="20171212 16:48:43.929" level="TRACE">Arguments: [ 'GUI SM Save Snapshot' ]</msg>
<kw name="GUI SM Save Snapshot" library="gui_resource">
<doc>this keyword is use to save snapshot in Site Manager</doc>
<msg timestamp="20171212 16:48:43.930" level="TRACE">Arguments: [ ${DetailLevel}='3' | ${PathFile}='N' | ${qtpkeepopen}='N' | ${SaveParitialExist}='N' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>DetailLevel=${DetailLevel}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>PathFile=${PathFile}</arg>
<arg>SaveParitialExist=${SaveParitialExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171212 16:48:43.931" level="TRACE">Arguments: [ 'DetailLevel=3' | 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\' | 'PathFile=N' | 'SaveParitialExist=N' ]</msg>
<msg timestamp="20171212 16:48:43.932" level="TRACE">Return: ['DetailLevel=3', 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\', 'PathFile=N', 'SaveParitialExist=N']</msg>
<msg timestamp="20171212 16:48:43.932" level="INFO">${para_list} = [u'DetailLevel=3', u'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\', u'PathFile=N', u'SavePari...</msg>
<status status="PASS" endtime="20171212 16:48:43.932" starttime="20171212 16:48:43.931"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}SaveSnapshot</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<msg timestamp="20171212 16:48:43.933" level="TRACE">Arguments: [ 'run qtp script' | '${siteman_test_path}SaveSnapshot' | '${para_list}' | '${qtpkeepopen}' ]</msg>
<msg timestamp="20171212 16:48:43.933" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:48:43.933" starttime="20171212 16:48:43.932"></status>
</kw>
<kw name="Run Qtp" library="RobotWS">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}SaveSnapshot</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171212 16:48:43.934" level="TRACE">Arguments: [ 'D:\\TALib\\tdd_robotws\\GUI_Databases\\QTP\\RL65\\SiteMan\\SaveSnapshot' | 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF' | ['DetailLevel=3', 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\', 'PathFile=N', 'SaveParitialExist=N'] | 'N' | '7200' ]</msg>
<msg timestamp="20171212 16:50:28.437" level="INFO">&lt;QTP&gt; Test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\SaveSnapshot is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\SaveSnapshot ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
DetailLevel="3"
LogPath="d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\"
PathFile="N"
SaveParitialExist="N"
&lt;QTP&gt; Save log to d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\GUILog\qtp_log20171212164843\Report
&lt;QTP&gt; Start to run script...</msg>
<msg timestamp="20171212 16:50:28.437" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:50:28.438" starttime="20171212 16:48:43.933"></status>
</kw>
<msg timestamp="20171212 16:50:28.438" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:50:28.438" starttime="20171212 16:48:43.930"></status>
</kw>
<msg timestamp="20171212 16:50:28.438" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171212 16:50:28.439" starttime="20171212 16:48:43.929"></status>
</kw>
<kw name="Stop Bts Udp Log" library="RobotWS">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<msg timestamp="20171212 16:50:28.440" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:50:28.443" level="INFO">[btslog_control.py@173] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'</msg>
<msg timestamp="20171212 16:50:28.443" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:50:28.444" starttime="20171212 16:50:28.439"></status>
</kw>
<msg timestamp="20171212 16:50:28.444" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:50:28.444" starttime="20171212 16:46:36.720"></status>
</kw>
<msg timestamp="20171212 16:50:28.444" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:50:28.444" starttime="20171212 16:46:36.719"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Reset BTS Check Status</arg>
</arguments>
<msg timestamp="20171212 16:50:28.445" level="TRACE">Arguments: [ 'Reset BTS Check Status' ]</msg>
<kw name="Reset BTS Check Status" library="OM_resources_new">
<msg timestamp="20171212 16:50:28.446" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>GUI SM Captuer Screen</arg>
</arguments>
<msg timestamp="20171212 16:50:28.446" level="TRACE">Arguments: [ 'GUI SM Captuer Screen' ]</msg>
<kw name="GUI SM Captuer Screen" library="gui_resource">
<doc>this keyword is used for capture the screen</doc>
<msg timestamp="20171212 16:50:28.447" level="TRACE">Arguments: [ ${qtpkeepopen}='N' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171212 16:50:28.448" level="TRACE">Arguments: [ 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\' ]</msg>
<msg timestamp="20171212 16:50:28.448" level="TRACE">Return: ['LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\']</msg>
<msg timestamp="20171212 16:50:28.448" level="INFO">${para_list} = [u'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\']</msg>
<status status="PASS" endtime="20171212 16:50:28.448" starttime="20171212 16:50:28.447"></status>
</kw>
<kw name="Run Qtp" library="RobotWS">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}CaptureImage</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171212 16:50:28.449" level="TRACE">Arguments: [ 'D:\\TALib\\tdd_robotws\\GUI_Databases\\QTP\\RL65\\SiteMan\\CaptureImage' | 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF' | ['LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\'] | 'N' | '7200' ]</msg>
<msg timestamp="20171212 16:50:34.406" level="INFO">&lt;QTP&gt; Test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\CaptureImage is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\CaptureImage ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
LogPath="d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\"
&lt;QTP&gt; Save log to d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\GUILog\qtp_log20171212165028\Report
&lt;QTP&gt; Start to run script...</msg>
<msg timestamp="20171212 16:50:34.406" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:50:34.406" starttime="20171212 16:50:28.448"></status>
</kw>
<msg timestamp="20171212 16:50:34.407" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:50:34.407" starttime="20171212 16:50:28.446"></status>
</kw>
<msg timestamp="20171212 16:50:34.407" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171212 16:50:34.407" starttime="20171212 16:50:28.446"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Capture Screen</arg>
</arguments>
<msg timestamp="20171212 16:50:34.408" level="TRACE">Arguments: [ 'Capture Screen' ]</msg>
<kw name="Capture Screen" library="OM_resources_new">
<msg timestamp="20171212 16:50:34.409" level="TRACE">Arguments: [  ]</msg>
<kw name="Kill Sitemanager Process" library="RobotWS">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20171212 16:50:34.409" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:50:34.414" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:50:35.468" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:50:35.472" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:50:35.526" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:50:35</msg>
<msg timestamp="20171212 16:50:35.659" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:50:35 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:50:35.664" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\NOKIA-20170515I\ROOT\CIMV2:Win32_Process.Handle="2952"
Instance deletion successful.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:50:35.668" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:50:36.722" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:50:36.726" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:50:36.784" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:50:36</msg>
<msg timestamp="20171212 16:50:36.917" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:50:36 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:50:36.921" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\NOKIA-20170515I\ROOT\CIMV2:Win32_Process.Handle="6092"
Instance deletion successful.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:50:36.925" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:50:37.979" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:50:37.983" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:50:38.038" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:50:38</msg>
<msg timestamp="20171212 16:50:38.135" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:50:38 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:50:38.140" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:50:38.142" level="TRACE">Return: True</msg>
<status status="PASS" endtime="20171212 16:50:38.142" starttime="20171212 16:50:34.409"></status>
</kw>
<kw name="GUI SM Login" library="gui_resource">
<doc>This keyword used for login BTS Site Manager.</doc>
<msg timestamp="20171212 16:50:38.145" level="TRACE">Arguments: [ ${IPAddress}='Local' | ${UserName}='Nemuadmin' | ${Password}='nemuuser' | ${CloseSEM}='N' | ${CheckExist}='1' | ${qtpkeepopen}='N' ]</msg>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run keyword and ignore error</arg>
<arg>modify sem maxpermsize</arg>
</arguments>
<msg timestamp="20171212 16:50:38.146" level="TRACE">Arguments: [ 'Run keyword and ignore error' | 'modify sem maxpermsize' ]</msg>
<msg timestamp="20171212 16:50:38.146" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:50:38.147" starttime="20171212 16:50:38.146"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${CloseSEM}'=='Y'</arg>
<arg>Kill SiteManager Process</arg>
</arguments>
<msg timestamp="20171212 16:50:38.147" level="TRACE">Arguments: [ "'N'=='Y'" | 'Kill SiteManager Process' ]</msg>
<msg timestamp="20171212 16:50:38.150" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:50:38.150" starttime="20171212 16:50:38.147"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>IPAddress=${IPAddress}</arg>
<arg>UserName=${UserName}</arg>
<arg>Password=${Password}</arg>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
<arg>CheckExist=${CheckExist}</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171212 16:50:38.151" level="TRACE">Arguments: [ 'IPAddress=Local' | 'UserName=Nemuadmin' | 'Password=nemuuser' | 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\' | 'CheckExist=1' ]</msg>
<msg timestamp="20171212 16:50:38.151" level="TRACE">Return: ['IPAddress=Local', 'UserName=Nemuadmin', 'Password=nemuuser', 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\', 'CheckExist=1']</msg>
<msg timestamp="20171212 16:50:38.151" level="INFO">${para_list} = [u'IPAddress=Local', u'UserName=Nemuadmin', u'Password=nemuuser', u'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFau...</msg>
<status status="PASS" endtime="20171212 16:50:38.151" starttime="20171212 16:50:38.150"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>run qtp script</arg>
<arg>${siteman_test_path}Login</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
</arguments>
<msg timestamp="20171212 16:50:38.152" level="TRACE">Arguments: [ 'run qtp script' | '${siteman_test_path}Login' | '${para_list}' | '${qtpkeepopen}' ]</msg>
<msg timestamp="20171212 16:50:38.152" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:50:38.152" starttime="20171212 16:50:38.151"></status>
</kw>
<kw name="Run Qtp" library="RobotWS">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}Login</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171212 16:50:38.153" level="TRACE">Arguments: [ 'D:\\TALib\\tdd_robotws\\GUI_Databases\\QTP\\RL65\\SiteMan\\Login' | 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF' | ['IPAddress=Local', 'UserName=Nemuadmin', 'Password=nemuuser', 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\', 'CheckExist=1'] | 'N' | '7200' ]</msg>
<msg timestamp="20171212 16:51:26.107" level="INFO">&lt;QTP&gt; Test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\Login is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\Login ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
IPAddress="Local"
UserName="Nemuadmin"
Password="nemuuser"
LogPath="d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\"
CheckExist="1"
&lt;QTP&gt; Save log to d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\GUILog\qtp_log20171212165038\Report
&lt;QTP&gt; Start to run script...</msg>
<msg timestamp="20171212 16:51:26.107" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:51:26.108" starttime="20171212 16:50:38.152"></status>
</kw>
<msg timestamp="20171212 16:51:26.108" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:51:26.108" starttime="20171212 16:50:38.145"></status>
</kw>
<kw name="GUI SM Captuer Screen" library="gui_resource">
<doc>this keyword is used for capture the screen</doc>
<msg timestamp="20171212 16:51:26.109" level="TRACE">Arguments: [ ${qtpkeepopen}='N' ]</msg>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>LogPath=${SAVE LOG DIRECTORY}\\</arg>
</arguments>
<assign>
<var>${para_list}</var>
</assign>
<msg timestamp="20171212 16:51:26.110" level="TRACE">Arguments: [ 'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\' ]</msg>
<msg timestamp="20171212 16:51:26.110" level="TRACE">Return: ['LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\']</msg>
<msg timestamp="20171212 16:51:26.110" level="INFO">${para_list} = [u'LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\']</msg>
<status status="PASS" endtime="20171212 16:51:26.110" starttime="20171212 16:51:26.109"></status>
</kw>
<kw name="Run Qtp" library="RobotWS">
<doc>This keyword used for run qtp script, if you use in robot please select run_qtp_script</doc>
<arguments>
<arg>${siteman_test_path}CaptureImage</arg>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${para_list}</arg>
<arg>${qtpkeepopen}</arg>
<arg>7200</arg>
</arguments>
<msg timestamp="20171212 16:51:26.111" level="TRACE">Arguments: [ 'D:\\TALib\\tdd_robotws\\GUI_Databases\\QTP\\RL65\\SiteMan\\CaptureImage' | 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF' | ['LogPath=d:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\'] | 'N' | '7200' ]</msg>
<msg timestamp="20171212 16:51:32.318" level="INFO">&lt;QTP&gt; Test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\CaptureImage is existence.
Start to kill QTP process.
Finshed to kill QTP process.
&lt;QTP&gt; Launched QTP successfully!

&lt;QTP&gt; instanciation was SUCCESSFUL!
&lt;QTP&gt; find java addin
&lt;QTP&gt; start to open test D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65\SiteMan\CaptureImage ...

&lt;QTP&gt; open test successfully at 2rd time!

&lt;QTP&gt; automated test case open was SUCCESSFUL!
&lt;QTP&gt; Start to launch QTP App run on the background...

&lt;QTP&gt; start to move current release lib path to active...

D:\TALib\tdd_robotws\GUI_Databases\QTP\RL65
&lt;QTP&gt; Start to define parameters...

&lt;QTP&gt; Parameter as below:
LogPath="d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\"
&lt;QTP&gt; Save log to d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\GUILog\qtp_log20171212165126\Report
&lt;QTP&gt; Start to run script...</msg>
<msg timestamp="20171212 16:51:32.318" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:51:32.318" starttime="20171212 16:51:26.110"></status>
</kw>
<msg timestamp="20171212 16:51:32.319" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:51:32.319" starttime="20171212 16:51:26.109"></status>
</kw>
<kw name="Kill Sitemanager Process" library="RobotWS">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20171212 16:51:32.319" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:51:32.324" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:51:33.378" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:51:33.382" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:51:33.436" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:51:33</msg>
<msg timestamp="20171212 16:51:33.568" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:51:33 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:51:33.572" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\NOKIA-20170515I\ROOT\CIMV2:Win32_Process.Handle="6484"
Instance deletion successful.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:51:33.576" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:51:34.630" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:51:34.634" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:51:34.706" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:51:34</msg>
<msg timestamp="20171212 16:51:34.847" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:51:34 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:51:34.851" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
Deleting instance \\NOKIA-20170515I\ROOT\CIMV2:Win32_Process.Handle="5616"
Instance deletion successful.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:51:34.855" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:51:35.909" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:51:35.913" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:51:35.968" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:51:35</msg>
<msg timestamp="20171212 16:51:36.070" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:51:36 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:51:36.074" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:51:36.076" level="TRACE">Return: True</msg>
<status status="PASS" endtime="20171212 16:51:36.076" starttime="20171212 16:51:32.319"></status>
</kw>
<msg timestamp="20171212 16:51:36.077" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:51:36.077" starttime="20171212 16:50:34.408"></status>
</kw>
<msg timestamp="20171212 16:51:36.077" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171212 16:51:36.077" starttime="20171212 16:50:34.408"></status>
</kw>
<kw name="Get Timestamp" library="RobotWS">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20171212 16:51:36.078" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:51:36.106" level="TRACE">Return: b'20171212165136'</msg>
<msg timestamp="20171212 16:51:36.106" level="INFO">${time} = 20171212165136</msg>
<status status="PASS" endtime="20171212 16:51:36.106" starttime="20171212 16:51:36.078"></status>
</kw>
<kw name="Start Bts Udp Log" library="RobotWS">
<doc>This keyword starts catching of BTS system(UDP) log.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}BTSLOG_${time}.LOG</arg>
</arguments>
<msg timestamp="20171212 16:51:36.107" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\BTSLOG_20171212165136.LOG' ]</msg>
<msg timestamp="20171212 16:51:36.110" level="DEBUG">[process_control.py@158] Run command: TASKKILL /F /T /IM btslog.exe</msg>
<msg timestamp="20171212 16:51:36.164" level="DEBUG">[process_control.py@166]</msg>
<msg timestamp="20171212 16:51:36.168" level="DEBUG">[process_control.py@158] Run command: TASKKILL /F /T /IM BTSlog2.exe</msg>
<msg timestamp="20171212 16:51:36.220" level="DEBUG">[process_control.py@166]</msg>
<msg timestamp="20171212 16:51:36.223" level="DEBUG">[process_control.py@158] Run command: TASKKILL /F /T /IM btslog</msg>
<msg timestamp="20171212 16:51:36.280" level="DEBUG">[process_control.py@166]</msg>
<msg timestamp="20171212 16:51:36.283" level="INFO">[btslog_control.py@173] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'</msg>
<msg timestamp="20171212 16:51:36.286" level="INFO">[file_common.py@209] Directory "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF" already exists, no need to create it again.</msg>
<msg timestamp="20171212 16:51:36.288" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:51:36.288" starttime="20171212 16:51:36.107"></status>
</kw>
<kw name="Power Off" library="RobotWS">
<doc>control powerbreaker to power off a outlet</doc>
<arguments>
<arg>${BTS_POWERBREAK_PORT[0]}</arg>
</arguments>
<msg timestamp="20171212 16:51:36.289" level="TRACE">Arguments: [ b'FACOM:10.69.66.55:5' ]</msg>
<msg timestamp="20171212 16:51:36.292" level="DEBUG">[powerbreaker_control.py@69] start power off 'FACOM:10.69.66.55:5'</msg>
<msg timestamp="20171212 16:51:36.296" level="DEBUG">[base.py@22] PDU type is: Facom</msg>
<msg timestamp="20171212 16:51:36.299" level="DEBUG">[base.py@23] PDU ip is: 10.69.66.55</msg>
<msg timestamp="20171212 16:51:36.302" level="INFO">[facom.py@113] Connect to Facom succeed !</msg>
<msg timestamp="20171212 16:51:36.306" level="INFO">[base.py@40] trial power off for 0 times</msg>
<msg timestamp="20171212 16:51:36.309" level="DEBUG">[facom.py@121] send msg: 0105000400008c0b</msg>
<msg timestamp="20171212 16:51:36.312" level="DEBUG">[facom.py@126] recv msg: 0105000400008c0b</msg>
<msg timestamp="20171212 16:51:36.315" level="DEBUG">[facom.py@121] send msg: 010200040001f80b</msg>
<msg timestamp="20171212 16:51:36.318" level="DEBUG">[facom.py@126] recv msg: 01020100a188</msg>
<msg timestamp="20171212 16:51:36.321" level="INFO">[facom.py@52] Power off port 5 succeed!</msg>
<msg timestamp="20171212 16:51:36.323" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:51:36.323" starttime="20171212 16:51:36.288"></status>
</kw>
<kw name="Power On" library="RobotWS">
<doc>control powerbreaker to power on a outlet</doc>
<arguments>
<arg>${BTS_POWERBREAK_PORT[0]}</arg>
</arguments>
<msg timestamp="20171212 16:51:36.324" level="TRACE">Arguments: [ b'FACOM:10.69.66.55:5' ]</msg>
<msg timestamp="20171212 16:51:36.327" level="DEBUG">[powerbreaker_control.py@42] start power on 'FACOM:10.69.66.55:5'</msg>
<msg timestamp="20171212 16:51:36.331" level="DEBUG">[base.py@22] PDU type is: Facom</msg>
<msg timestamp="20171212 16:51:36.337" level="DEBUG">[base.py@23] PDU ip is: 10.69.66.55</msg>
<msg timestamp="20171212 16:51:36.340" level="INFO">[facom.py@113] Connect to Facom succeed !</msg>
<msg timestamp="20171212 16:51:36.343" level="INFO">[base.py@28] trial power on for 0 times</msg>
<msg timestamp="20171212 16:51:36.347" level="DEBUG">[facom.py@121] send msg: 01050004ff00cdfb</msg>
<msg timestamp="20171212 16:51:36.350" level="DEBUG">[facom.py@126] recv msg: 01050004ff00cdfb</msg>
<msg timestamp="20171212 16:51:36.353" level="DEBUG">[facom.py@121] send msg: 010200040001f80b</msg>
<msg timestamp="20171212 16:51:36.356" level="DEBUG">[facom.py@126] recv msg: 010201016048</msg>
<msg timestamp="20171212 16:51:36.359" level="INFO">[facom.py@75] Power on port 5 succeed!</msg>
<msg timestamp="20171212 16:51:36.361" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:51:36.361" starttime="20171212 16:51:36.323"></status>
</kw>
<kw name="Wait Until Units Startup" library="RobotWS">
<doc>This keyword tests the reachability of given unit/units.</doc>
<arguments>
<arg>300</arg>
<arg>${BTS_FCM}</arg>
</arguments>
<msg timestamp="20171212 16:51:36.362" level="TRACE">Arguments: [ '300' | '192.168.255.1' ]</msg>
<msg timestamp="20171212 16:54:04.018" level="INFO">[ping_control.py@145] ping 192.168.255.1 OK!</msg>
<msg timestamp="20171212 16:54:14.018" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:54:14.018" starttime="20171212 16:51:36.361"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Save IM Log</arg>
</arguments>
<msg timestamp="20171212 16:54:14.019" level="TRACE">Arguments: [ 'Save IM Log' ]</msg>
<kw name="Save IM Log" library="OM_resources_new">
<msg timestamp="20171212 16:54:14.020" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Timestamp" library="RobotWS">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${time}</var>
</assign>
<msg timestamp="20171212 16:54:14.020" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:54:14.020" level="TRACE">Return: b'20171212165414'</msg>
<msg timestamp="20171212 16:54:14.020" level="INFO">${time} = 20171212165414</msg>
<status status="PASS" endtime="20171212 16:54:14.021" starttime="20171212 16:54:14.020"></status>
</kw>
<kw name="Save Infomodel Log" library="RobotWS">
<doc>Save InfoModel log.</doc>
<arguments>
<arg>${TEST LOG DIR}${/}infomodel_${time}</arg>
</arguments>
<msg timestamp="20171212 16:54:14.021" level="TRACE">Arguments: [ 'd:\\test\\log\\ev_logs\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\\infomodel_20171212165414' ]</msg>
<msg timestamp="20171212 16:54:14.022" level="TRACE">Return: None</msg>
<msg timestamp="20171212 16:54:14.023" level="FAIL">AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<msg timestamp="20171212 16:54:14.023" level="DEBUG">Traceback (most recent call last):
  File "D:\TALib\tdd_robotws\RobotWS\TdlteLib\enb_lib\infomodel_control.py", line 215, in save_infomodel_log
    alias=alias)
  File "D:\TALib\ute_infomodel\interface.py", line 211, in save_infomodel_log
    self.store.get(alias).save_log(filename)
  File "D:\TALib\ute_common_store\store.py", line 83, in get
    "Please setup library before any other operation.".format(alias))</msg>
<status status="FAIL" endtime="20171212 16:54:14.023" starttime="20171212 16:54:14.021"></status>
</kw>
<kw name="Stop Infomodel" library="RobotWS">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20171212 16:54:14.023" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:54:14.029" level="INFO">[infomodel_control.py@190] stop infomodel logger failed, details: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<msg timestamp="20171212 16:54:14.032" level="INFO">[infomodel_control.py@194] disconnect from infomodel failed, details: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<msg timestamp="20171212 16:54:14.037" level="INFO">[infomodel_control.py@198] teardown infomodel failed. details: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<msg timestamp="20171212 16:54:14.041" level="INFO">[infomodel_control.py@200] stop infomodel succeed .</msg>
<msg timestamp="20171212 16:54:14.042" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:54:14.042" starttime="20171212 16:54:14.023"></status>
</kw>
<msg timestamp="20171212 16:54:14.042" level="TRACE">Return: None</msg>
<status status="FAIL" endtime="20171212 16:54:14.042" starttime="20171212 16:54:14.019"></status>
</kw>
<msg timestamp="20171212 16:54:14.043" level="TRACE">Return: (b'FAIL', "AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.")</msg>
<status status="PASS" endtime="20171212 16:54:14.043" starttime="20171212 16:54:14.019"></status>
</kw>
<kw name="Check Bts Until Onair" library="RobotWS">
<doc>check bts until all cell is onair with infomodel, and have PBCH in udp log.</doc>
<arguments>
<arg>onair_check_msg=['']</arg>
</arguments>
<msg timestamp="20171212 16:54:14.043" level="TRACE">Arguments: [ onair_check_msg="['']" ]</msg>
<msg timestamp="20171212 16:55:38.451" level="INFO">Exit code: 1</msg>
<msg timestamp="20171212 16:55:38.451" level="INFO">STDOUT
</msg>
<msg timestamp="20171212 16:55:38.451" level="INFO">STDERR
Started InfoModel server PYRO:TA_infomodel_server@localhost:35839
</msg>
<msg timestamp="20171212 16:54:14.048" level="DEBUG">[process_control.py@158] Run command: TASKKILL /F /T /IM btslog.exe</msg>
<msg timestamp="20171212 16:54:14.113" level="DEBUG">[process_control.py@166]</msg>
<msg timestamp="20171212 16:54:14.117" level="DEBUG">[process_control.py@158] Run command: TASKKILL /F /T /IM BTSlog2.exe</msg>
<msg timestamp="20171212 16:54:14.169" level="DEBUG">[process_control.py@166]</msg>
<msg timestamp="20171212 16:54:14.172" level="DEBUG">[process_control.py@158] Run command: TASKKILL /F /T /IM btslog</msg>
<msg timestamp="20171212 16:54:14.223" level="DEBUG">[process_control.py@166]</msg>
<msg timestamp="20171212 16:54:14.228" level="INFO">[file_common.py@209] Directory "d:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF" already exists, no need to create it again.</msg>
<msg timestamp="20171212 16:54:23.358" level="INFO">[infomodel_control.py@159] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None</msg>
<msg timestamp="20171212 16:54:25.255" level="INFO">[infomodel_control.py@163] start infomodel succeed .</msg>
<msg timestamp="20171212 16:54:25.264" level="INFO">[infomodel_control.py@165] start infomodel logger succeed .</msg>
<msg timestamp="20171212 16:54:25.269" level="INFO">[enb_resource.py@158] The current check mode is INFOMODEL</msg>
<msg timestamp="20171212 16:54:26.334" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171212 16:54:27.399" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:54:28.428" level="INFO">[enb_resource.py@213] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:54:29.458" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:54:40.490" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171212 16:54:41.525" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:54:42.551" level="INFO">[enb_resource.py@213] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:54:43.595" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:54:54.612" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171212 16:54:55.635" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:54:56.652" level="INFO">[enb_resource.py@213] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:54:57.725" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:55:08.743" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171212 16:55:09.760" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:55:10.789" level="INFO">[enb_resource.py@213] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:55:11.814" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:55:22.842" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will try another way</msg>
<msg timestamp="20171212 16:55:23.900" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:55:24.929" level="INFO">[enb_resource.py@213] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:55:25.991" level="INFO">[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.
/MRBTS-1/RAT-1/BTS_L-4/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 1492L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}
, it will sleep and try again</msg>
<msg timestamp="20171212 16:55:36.024" level="INFO">[infomodel_control.py@329] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171212 16:55:37.054" level="INFO">[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will try another way</msg>
<msg timestamp="20171212 16:55:37.086" level="INFO">[infomodel_control.py@329] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171212 16:55:38.107" level="INFO">[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.
, it will sleep and try again</msg>
<msg timestamp="20171212 16:55:38.141" level="INFO">[infomodel_control.py@329] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .</msg>
<msg timestamp="20171212 16:55:38.172" level="INFO">[infomodel_control.py@329] query infomodel: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' succeed .</msg>
<msg timestamp="20171212 16:55:38.175" level="INFO">[enb_resource.py@228] infomodel check every cell onair succeed !</msg>
<msg timestamp="20171212 16:55:38.178" level="INFO">[enb_resource.py@351] bts log check onair msg succeed !</msg>
<msg timestamp="20171212 16:55:38.187" level="INFO">[infomodel_control.py@216] save infomodel log to file: 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\im_20171212165538' succeed .</msg>
<msg timestamp="20171212 16:55:38.192" level="INFO">[infomodel_control.py@188] stop infomodel logger succeed .</msg>
<msg timestamp="20171212 16:55:38.454" level="INFO">[infomodel_control.py@200] stop infomodel succeed .</msg>
<msg timestamp="20171212 16:55:38.461" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:55:38.461" starttime="20171212 16:54:14.043"></status>
</kw>
<kw name="Stop Bts Udp Log" library="RobotWS">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<msg timestamp="20171212 16:55:38.462" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:55:38.465" level="INFO">[btslog_control.py@173] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'</msg>
<msg timestamp="20171212 16:55:38.465" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:55:38.466" starttime="20171212 16:55:38.462"></status>
</kw>
<msg timestamp="20171212 16:55:38.466" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:55:38.466" starttime="20171212 16:50:28.445"></status>
</kw>
<msg timestamp="20171212 16:55:38.466" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:55:38.466" starttime="20171212 16:50:28.445"></status>
</kw>
<kw name="Kill Sitemanager Process" library="RobotWS">
<doc>used to kill sitemanager process.</doc>
<msg timestamp="20171212 16:55:38.467" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:55:38.469" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:55:39.521" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:55:39.524" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:55:39.576" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:55:39</msg>
<msg timestamp="20171212 16:55:39.672" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:55:39 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:55:39.674" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.poseidon.PoseidonStarter%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:55:39.676" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:55:40.728" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:55:40.730" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:55:40.782" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:55:40</msg>
<msg timestamp="20171212 16:55:40.874" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:55:40 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:55:40.876" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%com.nokia.em.sitemgr.SitemgrStarter%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:55:40.878" level="INFO">[connection_mgr.py@184] Current connection: 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:55:41.930" level="DEBUG">[telnet_common.py@137] Get Response:</msg>
<msg timestamp="20171212 16:55:41.932" level="INFO">[telnet_common.py@268] Execute command: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete</msg>
<msg timestamp="20171212 16:55:41.984" level="TRACE">[telnet_common.py@361] Telnet: &gt;&gt;expect 2017-12-12 16:55:41</msg>
<msg timestamp="20171212 16:55:42.076" level="TRACE">[telnet_common.py@383] Telnet: &lt;&lt;expect 2017-12-12 16:55:42 found [CDEFGHcdefgh]:[\\/\-a-zA-Z0-9\s\._~&amp;\(\)]*[^\s]&gt;\s?$</msg>
<msg timestamp="20171212 16:55:42.078" level="INFO">[telnet_common.py@298] Get Response: C:/WINDOWS/System32/Wbem/wmic process where "commandline like '%%alclient.jar%%' and not commandline like '%wmic%'" delete
No Instance(s) Available.

C:\Users\Administrator&gt;</msg>
<msg timestamp="20171212 16:55:42.081" level="TRACE">Return: True</msg>
<status status="PASS" endtime="20171212 16:55:42.081" starttime="20171212 16:55:38.467"></status>
</kw>
<kw name="Disconnect All Hosts" library="RobotWS">
<doc>Closes all existing telnet connections to remote hosts.</doc>
<msg timestamp="20171212 16:55:42.082" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:55:42.084" level="INFO">[telnet_common.py@180]</msg>
<msg timestamp="20171212 16:55:42.087" level="INFO">[telnet_common.py@181] Disconnect from 10.69.67.26:23 DeviceType:Windows Timeout:30 seconds &lt;RobotWS.CommonLib.connections.telnet_common.TelnetCommon instance at 0x05C33B48&gt;</msg>
<msg timestamp="20171212 16:55:42.087" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:55:42.088" starttime="20171212 16:55:42.081"></status>
</kw>
<msg timestamp="20171212 16:55:42.088" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:55:42.088" starttime="20171212 16:46:36.717"></status>
</kw>
<doc>Purpose: The purpose of the test is to verify OAM and eNb behaviour with handling fault 6706_EFaultId_DspPlatformFatalErrAl</doc>
<tags>
<tag>Common + Common</tag>
<tag>configuration:ALL</tag>
<tag>developer-henry.1.wang@nsn.com</tag>
<tag>Domain:TEST</tag>
<tag>HW:FSIP *</tag>
<tag>OAM1</tag>
<tag>Owner-ziyu.yuan@nokia.com</tag>
<tag>QC_577092</tag>
<tag>Requirement:None</tag>
</tags>
<status status="FAIL" endtime="20171212 16:55:42.089" critical="yes" starttime="20171212 16:40:38.641">Keyword 'File Should Contain' failed after retrying for 5 minutes. The last error was: Not find '[u'INF/FRI/FRI.*Detector 6706.*filtering timer 2s started', u'WRN/FRI/FRI.*Detector 6706.*active']' in 'd:\test\log\ev_logs\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF_20171212163849\LTE2313-T-u_01_02_Fault_6706_EFaultId_DspPlatformF\btslog_check.LOG'</status>
</test>
<kw type="teardown" name="Common Suite Teardown" library="common_resource">
<msg timestamp="20171212 16:55:42.092" level="TRACE">Arguments: [ ${need_zip}=True ]</msg>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${REMOVE_LOGS}'=='on'</arg>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<msg timestamp="20171212 16:55:42.093" level="TRACE">Arguments: [ "'off'=='on'" | 'Run Keyword If All Tests Passed' | 'Remove Directory' | '${SUITE_LOG_DIRECTORY}' | '${True}' ]</msg>
<msg timestamp="20171212 16:55:42.095" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:55:42.095" starttime="20171212 16:55:42.092"></status>
</kw>
<kw name="Disconnect All Hosts" library="RobotWS">
<doc>Closes all existing telnet connections to remote hosts.</doc>
<msg timestamp="20171212 16:55:42.096" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171212 16:55:42.096" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:55:42.096" starttime="20171212 16:55:42.096"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${zip_pass_log}</arg>
</arguments>
<assign>
<var>${para_exist}</var>
</assign>
<msg timestamp="20171212 16:55:42.097" level="TRACE">Arguments: [ 'variable should exist' | '${zip_pass_log}' ]</msg>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${zip_pass_log}</arg>
</arguments>
<msg timestamp="20171212 16:55:42.098" level="TRACE">Arguments: [ '${zip_pass_log}' ]</msg>
<msg timestamp="20171212 16:55:42.102" level="TRACE">Return: None</msg>
<msg timestamp="20171212 16:55:42.102" level="FAIL">Variable ${zip_pass_log} does not exist.</msg>
<msg timestamp="20171212 16:55:42.102" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20171212 16:55:42.103" starttime="20171212 16:55:42.097"></status>
</kw>
<msg timestamp="20171212 16:55:42.103" level="TRACE">Return: (b'FAIL', 'Variable ${zip_pass_log} does not exist.')</msg>
<msg timestamp="20171212 16:55:42.103" level="INFO">${para_exist} = ('FAIL', u'Variable ${zip_pass_log} does not exist.')</msg>
<status status="PASS" endtime="20171212 16:55:42.103" starttime="20171212 16:55:42.097"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS' == '${para_exist[0]}'</arg>
<arg>${zip_pass_log}</arg>
<arg>${True}</arg>
</arguments>
<assign>
<var>${zip_log}</var>
</assign>
<msg timestamp="20171212 16:55:42.104" level="TRACE">Arguments: [ "'PASS' == 'FAIL'" | '${zip_pass_log}' | '${True}' ]</msg>
<msg timestamp="20171212 16:55:42.106" level="TRACE">Return: True</msg>
<msg timestamp="20171212 16:55:42.106" level="INFO">${zip_log} = True</msg>
<status status="PASS" endtime="20171212 16:55:42.107" starttime="20171212 16:55:42.104"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Run Keyword If</arg>
<arg>${zip_log} == ${True}</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${value}</var>
</assign>
<msg timestamp="20171212 16:55:42.107" level="TRACE">Arguments: [ 'Run Keyword If All Tests Passed' | 'Run Keyword If' | '${zip_log} == ${True}' | 'Zip File' | '${SUITE_LOG_DIRECTORY}' | '${SUITE_LOG_DIRECTORY}.zip' ]</msg>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>${zip_log} == ${True}</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<msg timestamp="20171212 16:55:42.108" level="TRACE">Arguments: [ 'Run Keyword If' | '${zip_log} == ${True}' | 'Zip File' | '${SUITE_LOG_DIRECTORY}' | '${SUITE_LOG_DIRECTORY}.zip' ]</msg>
<msg timestamp="20171212 16:55:42.108" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:55:42.108" starttime="20171212 16:55:42.108"></status>
</kw>
<msg timestamp="20171212 16:55:42.109" level="TRACE">Return: (b'PASS', None)</msg>
<msg timestamp="20171212 16:55:42.109" level="INFO">${status} = PASS</msg>
<msg timestamp="20171212 16:55:42.109" level="INFO">${value} = None</msg>
<status status="PASS" endtime="20171212 16:55:42.109" starttime="20171212 16:55:42.107"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Run Keyword If</arg>
<arg>'${status}' == 'PASS' and ${zip_log} == ${True}</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<msg timestamp="20171212 16:55:42.110" level="TRACE">Arguments: [ 'Run Keyword If All Tests Passed' | 'Run Keyword If' | "'${status}' == 'PASS' and ${zip_log} == ${True}" | 'Remove Directory' | '${SUITE_LOG_DIRECTORY}' | '${True}' ]</msg>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Run Keyword If</arg>
<arg>'${status}' == 'PASS' and ${zip_log} == ${True}</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<msg timestamp="20171212 16:55:42.110" level="TRACE">Arguments: [ 'Run Keyword If' | "'${status}' == 'PASS' and ${zip_log} == ${True}" | 'Remove Directory' | '${SUITE_LOG_DIRECTORY}' | '${True}' ]</msg>
<msg timestamp="20171212 16:55:42.111" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:55:42.111" starttime="20171212 16:55:42.110"></status>
</kw>
<msg timestamp="20171212 16:55:42.111" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171212 16:55:42.111" starttime="20171212 16:55:42.109"></status>
</kw>
<msg timestamp="20171212 16:55:42.112" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171212 16:55:42.112" starttime="20171212 16:55:42.092"></status>
</kw>
<doc>LTE2313-T-u_01_02 Fault_6706_EFaultId_DspPlatformFatalErrAl</doc>
<status status="FAIL" endtime="20171212 16:55:42.112" starttime="20171212 16:38:48.242"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">Common + Common</stat>
<stat fail="1" pass="0">configuration:ALL</stat>
<stat fail="1" pass="0">developer-henry.1.wang@nsn.com</stat>
<stat fail="1" pass="0">Domain:TEST</stat>
<stat fail="1" pass="0">HW:FSIP *</stat>
<stat fail="1" pass="0">OAM1</stat>
<stat fail="1" pass="0">Owner-ziyu.yuan@nokia.com</stat>
<stat fail="1" pass="0">QC_577092</stat>
<stat fail="1" pass="0">Requirement:None</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="LTE2313-T-u 01 02 Fault 6706 EFaultId DspPlatformFatalErrAl" pass="0">LTE2313-T-u 01 02 Fault 6706 EFaultId DspPlatformFatalErrAl</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20171212 16:38:48.975" level="ERROR">Adding keyword 'iphy_attach_ue' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'attach_ue'</msg>
<msg timestamp="20171212 16:38:48.975" level="ERROR">Adding keyword 'iphy_detach_ue' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'detach_ue'</msg>
<msg timestamp="20171212 16:38:48.976" level="ERROR">Adding keyword 'iphy_start_ul_udp_data_traffic' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'start_ul_udp_data_traffic'</msg>
<msg timestamp="20171212 16:38:48.976" level="ERROR">Adding keyword 'iphy_start_dl_udp_data_traffic' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'start_dl_udp_data_traffic'</msg>
<msg timestamp="20171212 16:38:48.976" level="ERROR">Adding keyword 'iphy_start_ul_tcp_data_traffic' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'start_ul_tcp_data_traffic'</msg>
<msg timestamp="20171212 16:38:48.976" level="ERROR">Adding keyword 'iphy_start_dl_tcp_data_traffic' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'start_dl_tcp_data_traffic'</msg>
<msg timestamp="20171212 16:38:48.976" level="ERROR">Adding keyword 'iphy_start_ue_logging' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'start_ue_logging'</msg>
<msg timestamp="20171212 16:38:48.976" level="ERROR">Adding keyword 'iphy_stop_ue_logging' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'stop_ue_logging'</msg>
<msg timestamp="20171212 16:38:48.976" level="ERROR">Adding keyword 'iphy_get_ue_log' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_ue_log'</msg>
<msg timestamp="20171212 16:38:48.977" level="ERROR">Adding keyword 'iphy_get_ul_throughput_ave' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_ul_throughput_ave'</msg>
<msg timestamp="20171212 16:38:48.977" level="ERROR">Adding keyword 'iphy_get_dl_throughput_ave' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_dl_throughput_ave'</msg>
<msg timestamp="20171212 16:38:48.977" level="ERROR">Adding keyword 'iphy_get_ul_throughput_max' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_ul_throughput_max'</msg>
<msg timestamp="20171212 16:38:48.977" level="ERROR">Adding keyword 'iphy_get_dl_throughput_max' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_dl_throughput_max'</msg>
<msg timestamp="20171212 16:38:48.977" level="ERROR">Adding keyword 'iphy_stop_dl_udp_data_traffic' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'stop_dl_udp_data_traffic'</msg>
<msg timestamp="20171212 16:38:48.977" level="ERROR">Adding keyword 'iphy_stop_ul_udp_data_traffic' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'stop_ul_udp_data_traffic'</msg>
<msg timestamp="20171212 16:38:48.977" level="ERROR">Adding keyword 'iphy_stop_dl_tcp_data_traffic' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'stop_dl_tcp_data_traffic'</msg>
<msg timestamp="20171212 16:38:48.978" level="ERROR">Adding keyword 'iphy_stop_ul_tcp_data_traffic' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'stop_ul_tcp_data_traffic'</msg>
<msg timestamp="20171212 16:38:48.978" level="ERROR">Adding keyword 'iphy_setup_ue' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'setup_ue'</msg>
<msg timestamp="20171212 16:38:48.978" level="ERROR">Adding keyword 'iphy_get_ue_state' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_ue_state'</msg>
<msg timestamp="20171212 16:38:48.978" level="ERROR">Adding keyword 'iphy_teardown_ue' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'teardown_ue'</msg>
<msg timestamp="20171212 16:38:48.978" level="ERROR">Adding keyword 'iphy_execute_ue_command' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'execute_ue_command'</msg>
<msg timestamp="20171212 16:38:48.978" level="ERROR">Adding keyword 'iphy_wait_until_sib1_and_sib2_received' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'wait_until_sib1_and_sib2_received'</msg>
<msg timestamp="20171212 16:38:48.978" level="ERROR">Adding keyword 'iphy_detach_all_ue' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'detach_all_ue'</msg>
<msg timestamp="20171212 16:38:48.978" level="ERROR">Adding keyword 'iphy_validate_bearer_is_active' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'validate_bearer_is_active'</msg>
<msg timestamp="20171212 16:38:48.979" level="ERROR">Adding keyword 'iphy_create_bearer' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'create_bearer'</msg>
<msg timestamp="20171212 16:38:48.979" level="ERROR">Adding keyword 'iphy_delete_bearer' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'delete_bearer'</msg>
<msg timestamp="20171212 16:38:48.979" level="ERROR">Adding keyword 'iphy_modify_bearer' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'modify_bearer'</msg>
<msg timestamp="20171212 16:38:48.979" level="ERROR">Adding keyword 'iphy_get_active_bearer_qci' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_active_bearer_qci'</msg>
<msg timestamp="20171212 16:38:48.979" level="ERROR">Adding keyword 'iphy_get_cell_states' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_cell_states'</msg>
<msg timestamp="20171212 16:38:48.979" level="ERROR">Adding keyword 'iphy_get_cell_throughput_ave' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_cell_throughput_ave'</msg>
<msg timestamp="20171212 16:38:48.979" level="ERROR">Adding keyword 'iphy_check_ue_is_active' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'check_ue_is_active'</msg>
<msg timestamp="20171212 16:38:48.979" level="ERROR">Adding keyword 'iphy_modify_pathloss' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'modify_pathloss'</msg>
<msg timestamp="20171212 16:38:48.980" level="ERROR">Adding keyword 'iphy_get_ul_bler_ave' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_ul_bler_ave'</msg>
<msg timestamp="20171212 16:38:48.980" level="ERROR">Adding keyword 'iphy_get_dl_bler_ave' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_dl_bler_ave'</msg>
<msg timestamp="20171212 16:38:48.980" level="ERROR">Adding keyword 'iphy_get_ue_throughput_on_specific_scell' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_ue_throughput_on_specific_scell'</msg>
<msg timestamp="20171212 16:38:48.980" level="ERROR">Adding keyword 'iphy_get_ue_last_allocation_info' to library 'RobotWS' failed: AttributeError: 'NoneType' object has no attribute 'get_ue_last_allocation_info'</msg>
<msg timestamp="20171212 16:38:48.991" level="ERROR">Error in file 'D:\TALib\tdd_robotws\RobotWS.html': Processing variable file 'D:\TALib\tdd_config' failed: Importing variable file 'D:\TALib\tdd_config' failed: ImportError: cannot import name enb
Traceback (most recent call last):
  File "D:\TALib\tdd_config\__init__.py", line 166, in &lt;module&gt;
    tl = importlib.import_module("%s." % config_module + CONFIGURATION)
  File "C:\Python27\lib\importlib\__init__.py", line 37, in import_module
    __import__(name)
  File "C:\Python27\lib\site-packages\config\evcommon\__init__.py", line 8, in &lt;module&gt;
    from .enb import enb as enb_local
PYTHONPATH:
  D:\TALib\tdd_robotws
  D:\TALib\tdd_robotws\RobotWS\tools\RemoteSwing\remoteswinglibrary-2.0.3.jar
  C:\Python27\lib\site-packages\robotframework-3.0-py2.7.egg
  C:\Python27\lib\site-packages\pygments-1.6-py2.7.egg
  C:\Python27\lib\site-packages\robotframework_ride-1.5.2.1-py2.7.egg
  C:\Python27\lib\site-packages\pycrypto-2.6-py2.7-win32.egg
  C:\Python27\lib\site-packages\ecdsa-0.11-py2.7.egg
  C:\Python27\lib\site-packages\paramiko-1.15.2-py2.7.egg
  C:\Python27\lib\site-packages\robotframework_sshlibrary-2.1.1-py2.7.egg
  C:\Python27\lib\site-packages\xlrd-0.9.2-py2.7.egg
  C:\Python27\lib\site-packages\xlwt-0.7.5-py2.7.egg
  C:\Python27\lib\site-packages\xlutils-1.7.0-py2.7.egg
  C:\Python27\lib\site-packages\lxml-3.1.0-py2.7-win32.egg
  C:\Python27\lib\site-packages\pyserial-2.7-py2.7.egg
  C:\Python27\lib\site-packages\pyasn1-0.1.7-py2.7.egg
  C:\Python27\lib\site-packages\pysnmp-4.2.4-py2.7.egg
  C:\Python27\lib\site-packages\pytz-2014.4-py2.7.egg
  C:\Python27\lib\site-packages\zope.interface-4.1.2-py2.7-win32.egg
  C:\Python27\lib\site-packages\datetime-4.0.1-py2.7.egg
  C:\Python27\lib\site-packages\json_rpc-1.7.0-py2.7.egg
  C:\Python27\lib\site-packages\wrapt-1.10.4-py2.7.egg
  C:\Python27\lib\site-packages\requests-2.7.0-py2.7.egg
  C:\Python27\lib\site-packages\configobj-4.7.2-py2.7.egg
  C:\Python27\lib\site-packages\mock-1.0.1-py2.7.egg
  C:\Python27\lib\site-packages\wheel-0.29.0-py2.7.egg
  C:\Python27\lib\site-packages\ute_installer-1.2.1-py2.7.egg
  C:\Python27\lib\site-packages\threadsaferequests-2.9.1-py2.7.egg
  C:\Python27\lib\site-packages\sutool-1.0.0-py2.7.egg
  C:\Python27\lib\site-packages\common_lib_sessions-1.0.2-py2.7.egg
  C:\Python27\lib\site-packages\easyprocess-0.2.2-py2.7.egg
  C:\Python27\lib\site-packages\pyvirtualdisplay-0.2-py2.7.egg
  C:\Python27\lib\site-packages\pyvisa-1.5.dev4-py2.7.egg
  C:\Python27\lib\site-packages\serpent-1.7-py2.7.egg
  C:\Python27\lib\site-packages\pyro4-4.29-py2.7.egg
  C:\Python27\lib\site-packages\selenium-2.48.0-py2.7.egg
  C:\Python27\lib\site-packages\decorator-3.4.0-py2.7.egg
  C:\Windows\system32\python27.zip
  C:\Python27\DLLs
  C:\Python27\lib
  C:\Python27\lib\plat-win
  C:\Python27\lib\lib-tk
  C:\Python27
  C:\Python27\lib\site-packages
  C:\Python27\lib\site-packages\win32
  C:\Python27\lib\site-packages\win32\lib
  C:\Python27\lib\site-packages\Pythonwin
  D:\TALib
  D:\TALib\tdd_robotws
  C:\Python27\lib\site-packages\wx-2.8-msw-unicode
  D:\TALib\ute_infomodel\resource
  .
  .
  .</msg>
<msg timestamp="20171212 16:38:49.161" level="ERROR">Error in file 'D:\TALib\tdd_robotws\RobotWS\resources\common_resource.robot': Importing test library 'tdd_config' failed: ImportError: cannot import name enb
Traceback (most recent call last):
  File "D:\TALib\tdd_config\__init__.py", line 166, in &lt;module&gt;
    tl = importlib.import_module("%s." % config_module + CONFIGURATION)
  File "C:\Python27\lib\importlib\__init__.py", line 37, in import_module
    __import__(name)
  File "C:\Python27\lib\site-packages\config\evcommon\__init__.py", line 8, in &lt;module&gt;
    from .enb import enb as enb_local
PYTHONPATH:
  D:\TALib\tdd_robotws
  D:\TALib\tdd_robotws\RobotWS\tools\RemoteSwing\remoteswinglibrary-2.0.3.jar
  C:\Python27\lib\site-packages\robotframework-3.0-py2.7.egg
  C:\Python27\lib\site-packages\pygments-1.6-py2.7.egg
  C:\Python27\lib\site-packages\robotframework_ride-1.5.2.1-py2.7.egg
  C:\Python27\lib\site-packages\pycrypto-2.6-py2.7-win32.egg
  C:\Python27\lib\site-packages\ecdsa-0.11-py2.7.egg
  C:\Python27\lib\site-packages\paramiko-1.15.2-py2.7.egg
  C:\Python27\lib\site-packages\robotframework_sshlibrary-2.1.1-py2.7.egg
  C:\Python27\lib\site-packages\xlrd-0.9.2-py2.7.egg
  C:\Python27\lib\site-packages\xlwt-0.7.5-py2.7.egg
  C:\Python27\lib\site-packages\xlutils-1.7.0-py2.7.egg
  C:\Python27\lib\site-packages\lxml-3.1.0-py2.7-win32.egg
  C:\Python27\lib\site-packages\pyserial-2.7-py2.7.egg
  C:\Python27\lib\site-packages\pyasn1-0.1.7-py2.7.egg
  C:\Python27\lib\site-packages\pysnmp-4.2.4-py2.7.egg
  C:\Python27\lib\site-packages\pytz-2014.4-py2.7.egg
  C:\Python27\lib\site-packages\zope.interface-4.1.2-py2.7-win32.egg
  C:\Python27\lib\site-packages\datetime-4.0.1-py2.7.egg
  C:\Python27\lib\site-packages\json_rpc-1.7.0-py2.7.egg
  C:\Python27\lib\site-packages\wrapt-1.10.4-py2.7.egg
  C:\Python27\lib\site-packages\requests-2.7.0-py2.7.egg
  C:\Python27\lib\site-packages\configobj-4.7.2-py2.7.egg
  C:\Python27\lib\site-packages\mock-1.0.1-py2.7.egg
  C:\Python27\lib\site-packages\wheel-0.29.0-py2.7.egg
  C:\Python27\lib\site-packages\ute_installer-1.2.1-py2.7.egg
  C:\Python27\lib\site-packages\threadsaferequests-2.9.1-py2.7.egg
  C:\Python27\lib\site-packages\sutool-1.0.0-py2.7.egg
  C:\Python27\lib\site-packages\common_lib_sessions-1.0.2-py2.7.egg
  C:\Python27\lib\site-packages\easyprocess-0.2.2-py2.7.egg
  C:\Python27\lib\site-packages\pyvirtualdisplay-0.2-py2.7.egg
  C:\Python27\lib\site-packages\pyvisa-1.5.dev4-py2.7.egg
  C:\Python27\lib\site-packages\serpent-1.7-py2.7.egg
  C:\Python27\lib\site-packages\pyro4-4.29-py2.7.egg
  C:\Python27\lib\site-packages\selenium-2.48.0-py2.7.egg
  C:\Python27\lib\site-packages\decorator-3.4.0-py2.7.egg
  C:\Windows\system32\python27.zip
  C:\Python27\DLLs
  C:\Python27\lib
  C:\Python27\lib\plat-win
  C:\Python27\lib\lib-tk
  C:\Python27
  C:\Python27\lib\site-packages
  C:\Python27\lib\site-packages\win32
  C:\Python27\lib\site-packages\win32\lib
  C:\Python27\lib\site-packages\Pythonwin
  D:\TALib
  D:\TALib\tdd_robotws
  C:\Python27\lib\site-packages\wx-2.8-msw-unicode
  D:\TALib\ute_infomodel\resource
  .
  .
  .</msg>
</errors>
</robot>
