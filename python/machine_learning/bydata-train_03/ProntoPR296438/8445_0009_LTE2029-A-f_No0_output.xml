<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20171220 05:57:04.210" generator="Robot 3.0.2 (Python 2.7.13 on linux2)">
<suite source="/opt/iphy/trunk_sran/DevHZ5_SRAN/CRT/Regression_iPHY_AS/DevHZ5_FV/LTE2029/LTE2029-A-f/LTE2029-A-f.robot" id="s1" name="LTE2029-A-f">
<kw type="setup" name="Common Suite Setup And Setup Iphy Env">
<msg timestamp="20171220 05:57:05.247" level="TRACE">Arguments: [  ]</msg>
<kw name="Common Suite Setup" library="common_resource">
<doc>this keyword create suite name directory path as /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347//logs//</doc>
<msg timestamp="20171220 05:57:05.254" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Timestamp" library="tdd_ev_robotws">
<doc>This keyword return the time stamp, default format is: 'yyyymmddhhmmss'</doc>
<assign>
<var>${timestamp}</var>
</assign>
<msg timestamp="20171220 05:57:05.254" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 05:57:05.278" level="TRACE">Return: b'20171220055705'</msg>
<msg timestamp="20171220 05:57:05.278" level="INFO">${timestamp} = 20171220055705</msg>
<status status="PASS" endtime="20171220 05:57:05.278" starttime="20171220 05:57:05.254"></status>
</kw>
<kw name="Replace String Using Regexp" library="String">
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_NAME[:50]}</arg>
<arg>\\s+$</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${FILE_NAME}</var>
</assign>
<msg timestamp="20171220 05:57:05.279" level="TRACE">Arguments: [ 'LTE2029-A-f' | '\\s+$' | b'' ]</msg>
<msg timestamp="20171220 05:57:05.279" level="TRACE">Return: 'LTE2029-A-f'</msg>
<msg timestamp="20171220 05:57:05.280" level="INFO">${FILE_NAME} = LTE2029-A-f</msg>
<status status="PASS" endtime="20171220 05:57:05.280" starttime="20171220 05:57:05.279"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=${/}</arg>
<arg>${OUTPUT_DIR}</arg>
<arg>ev_logs</arg>
<arg>${FILE_NAME}_${timestamp}</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20171220 05:57:05.280" level="TRACE">Arguments: [ 'SEPARATOR=/' | '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347' | 'ev_logs' | 'LTE2029-A-f_20171220055705' ]</msg>
<msg timestamp="20171220 05:57:05.280" level="TRACE">Return: '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705'</msg>
<msg timestamp="20171220 05:57:05.280" level="INFO">${SUITE_LOG_DIRECTORY} = /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705</msg>
<status status="PASS" endtime="20171220 05:57:05.280" starttime="20171220 05:57:05.280"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${SUITE_LOG_DIRECTORY}</var>
</assign>
<msg timestamp="20171220 05:57:05.281" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705' | b' ' | '_' ]</msg>
<msg timestamp="20171220 05:57:05.281" level="TRACE">Return: '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705'</msg>
<msg timestamp="20171220 05:57:05.281" level="INFO">${SUITE_LOG_DIRECTORY} = /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705</msg>
<status status="PASS" endtime="20171220 05:57:05.281" starttime="20171220 05:57:05.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20171220 05:57:05.282" level="TRACE">Arguments: [ '${SUITE_LOG_DIRECTORY}' ]</msg>
<msg timestamp="20171220 05:57:05.282" level="INFO">${SUITE_LOG_DIRECTORY} = /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705</msg>
<msg timestamp="20171220 05:57:05.282" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:05.282" starttime="20171220 05:57:05.282"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20171220 05:57:05.282" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705' ]</msg>
<msg timestamp="20171220 05:57:05.283" html="yes" level="INFO">Created directory '&lt;a href="file:///opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705"&gt;/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705&lt;/a&gt;'.</msg>
<msg timestamp="20171220 05:57:05.283" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:05.283" starttime="20171220 05:57:05.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>save log dir:${SUITE_LOG_DIRECTORY}</arg>
</arguments>
<msg timestamp="20171220 05:57:05.283" level="TRACE">Arguments: [ 'save log dir:/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705' ]</msg>
<msg timestamp="20171220 05:57:05.283" level="INFO">save log dir:/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705</msg>
<msg timestamp="20171220 05:57:05.283" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:05.284" starttime="20171220 05:57:05.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${snapshot_flag}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20171220 05:57:05.284" level="TRACE">Arguments: [ '${snapshot_flag}' | '0' ]</msg>
<msg timestamp="20171220 05:57:05.290" level="INFO">${snapshot_flag} = 0</msg>
<msg timestamp="20171220 05:57:05.290" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:05.290" starttime="20171220 05:57:05.284"></status>
</kw>
<kw name="Get Log Save Directory" library="common_resource">
<doc>This keyword return useable LOG directory.</doc>
<msg timestamp="20171220 05:57:05.311" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${TEST LOG DIR}</arg>
</arguments>
<assign>
<var>${case_dir_exist}</var>
</assign>
<msg timestamp="20171220 05:57:05.312" level="TRACE">Arguments: [ 'variable should exist' | '${TEST LOG DIR}' ]</msg>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST LOG DIR}</arg>
</arguments>
<msg timestamp="20171220 05:57:05.312" level="TRACE">Arguments: [ '${TEST LOG DIR}' ]</msg>
<msg timestamp="20171220 05:57:05.323" level="FAIL">Variable ${TEST LOG DIR} does not exist.</msg>
<msg timestamp="20171220 05:57:05.323" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20171220 05:57:05.323" starttime="20171220 05:57:05.312"></status>
</kw>
<msg timestamp="20171220 05:57:05.323" level="TRACE">Return: (b'FAIL', 'Variable ${TEST LOG DIR} does not exist.')</msg>
<msg timestamp="20171220 05:57:05.323" level="INFO">${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')</msg>
<status status="PASS" endtime="20171220 05:57:05.323" starttime="20171220 05:57:05.312"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>variable should exist</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<assign>
<var>${suite_dir_exist}</var>
</assign>
<msg timestamp="20171220 05:57:05.323" level="TRACE">Arguments: [ 'variable should exist' | '${SUITE LOG DIRECTORY}' ]</msg>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${SUITE LOG DIRECTORY}</arg>
</arguments>
<msg timestamp="20171220 05:57:05.324" level="TRACE">Arguments: [ '${SUITE LOG DIRECTORY}' ]</msg>
<msg timestamp="20171220 05:57:05.324" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:05.324" starttime="20171220 05:57:05.324"></status>
</kw>
<msg timestamp="20171220 05:57:05.324" level="TRACE">Return: (b'PASS', None)</msg>
<msg timestamp="20171220 05:57:05.324" level="INFO">${suite_dir_exist} = ('PASS', None)</msg>
<status status="PASS" endtime="20171220 05:57:05.324" starttime="20171220 05:57:05.323"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'PASS'=='${case_dir_exist[0]}'</arg>
<arg>${TEST LOG DIR}</arg>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<assign>
<var>${log dir}</var>
</assign>
<msg timestamp="20171220 05:57:05.325" level="TRACE">Arguments: [ "'PASS'=='FAIL'" | '${TEST LOG DIR}' | "'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'" | '${SUITE LOG DIRECTORY}' | "'FAIL'=='${suite_dir_exist[0]}'" | '${OUTPUT_DIR}' ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'</arg>
<arg>${SUITE LOG DIRECTORY}</arg>
<arg>'FAIL'=='${suite_dir_exist[0]}'</arg>
<arg>${OUTPUT_DIR}</arg>
</arguments>
<msg timestamp="20171220 05:57:05.326" level="TRACE">Arguments: [ "'FAIL'=='FAIL' and 'PASS'=='PASS'" | '${SUITE LOG DIRECTORY}' | "'FAIL'=='${suite_dir_exist[0]}'" | '${OUTPUT_DIR}' ]</msg>
<msg timestamp="20171220 05:57:05.326" level="TRACE">Return: '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705'</msg>
<status status="PASS" endtime="20171220 05:57:05.326" starttime="20171220 05:57:05.325"></status>
</kw>
<msg timestamp="20171220 05:57:05.326" level="TRACE">Return: '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705'</msg>
<msg timestamp="20171220 05:57:05.326" level="INFO">${log dir} = /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705</msg>
<status status="PASS" endtime="20171220 05:57:05.326" starttime="20171220 05:57:05.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}</arg>
<arg>${log dir}</arg>
</arguments>
<msg timestamp="20171220 05:57:05.327" level="TRACE">Arguments: [ '${SAVE LOG DIRECTORY}' | '${log dir}' ]</msg>
<msg timestamp="20171220 05:57:05.332" level="INFO">${SAVE LOG DIRECTORY} = /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705</msg>
<msg timestamp="20171220 05:57:05.332" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:05.333" starttime="20171220 05:57:05.326"></status>
</kw>
<msg timestamp="20171220 05:57:05.333" level="TRACE">Return: '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705'</msg>
<status status="PASS" endtime="20171220 05:57:05.333" starttime="20171220 05:57:05.311"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20min</arg>
<arg>30sec</arg>
<arg>Initial Connection With BTS PC</arg>
</arguments>
<msg timestamp="20171220 05:57:05.333" level="TRACE">Arguments: [ '20min' | '30sec' | 'Initial Connection With BTS PC' ]</msg>
<kw name="Initial Connection With BTS PC" library="common_resource">
<msg timestamp="20171220 05:57:05.334" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Os Platform Version" library="tdd_ev_robotws">
<doc>used to get operation system platform version, can be used to judge if</doc>
<arguments>
<arg>with_connection=${false}</arg>
</arguments>
<assign>
<var>${platform_version}</var>
</assign>
<msg timestamp="20171220 05:57:05.334" level="TRACE">Arguments: [ with_connection=False ]</msg>
<msg timestamp="20171220 05:57:05.335" level="TRACE">Return: b'Linux-3.16.0-4-amd64-x86_64-with-debian-8.8'</msg>
<msg timestamp="20171220 05:57:05.335" level="INFO">${platform_version} = Linux-3.16.0-4-amd64-x86_64-with-debian-8.8</msg>
<status status="PASS" endtime="20171220 05:57:05.335" starttime="20171220 05:57:05.334"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>${TELNET_PORT}</arg>
<arg>${SSH_PORT}</arg>
</arguments>
<assign>
<var>${conn_port}</var>
</assign>
<msg timestamp="20171220 05:57:05.335" level="TRACE">Arguments: [ '"Windows" in "Linux-3.16.0-4-amd64-x86_64-with-debian-8.8"' | '${TELNET_PORT}' | '${SSH_PORT}' ]</msg>
<msg timestamp="20171220 05:57:05.336" level="TRACE">Return: 22</msg>
<msg timestamp="20171220 05:57:05.336" level="INFO">${conn_port} = 22</msg>
<status status="PASS" endtime="20171220 05:57:05.336" starttime="20171220 05:57:05.335"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>TELNET</arg>
<arg>SSH</arg>
</arguments>
<assign>
<var>${conn_type}</var>
</assign>
<msg timestamp="20171220 05:57:05.336" level="TRACE">Arguments: [ '"Windows" in "Linux-3.16.0-4-amd64-x86_64-with-debian-8.8"' | 'TELNET' | 'SSH' ]</msg>
<msg timestamp="20171220 05:57:05.336" level="TRACE">Return: 'SSH'</msg>
<msg timestamp="20171220 05:57:05.336" level="INFO">${conn_type} = SSH</msg>
<status status="PASS" endtime="20171220 05:57:05.336" starttime="20171220 05:57:05.336"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>30</arg>
<arg>25</arg>
</arguments>
<assign>
<var>${timeout}</var>
</assign>
<msg timestamp="20171220 05:57:05.337" level="TRACE">Arguments: [ '"Windows" in "Linux-3.16.0-4-amd64-x86_64-with-debian-8.8"' | '30' | '25' ]</msg>
<msg timestamp="20171220 05:57:05.337" level="TRACE">Return: '25'</msg>
<msg timestamp="20171220 05:57:05.337" level="INFO">${timeout} = 25</msg>
<status status="PASS" endtime="20171220 05:57:05.337" starttime="20171220 05:57:05.337"></status>
</kw>
<kw name="Connect To Host" library="tdd_ev_robotws">
<doc>Used to connect to host, either TELNET or SSH</doc>
<arguments>
<arg>127.0.0.1</arg>
<arg>port=${conn_port}</arg>
<arg>username=${BTS_PC_INFO.USERNAME}</arg>
<arg>password=${BTS_PC_INFO.PASSWORD}</arg>
<arg>conn_type=${conn_type}</arg>
<arg>timeout=${timeout}</arg>
</arguments>
<assign>
<var>${BTS_PC_CONNECTION}</var>
</assign>
<msg timestamp="20171220 05:57:05.338" level="TRACE">Arguments: [ '127.0.0.1' | port=22 | username=b'ute' | password=b'ute' | conn_type='SSH' | timeout='25' ]</msg>
<msg timestamp="20171220 05:57:05.510" level="DEBUG">Adding ssh-rsa host key for 127.0.0.1: 429be5feff5aa210b381beaac8c3a542</msg>
<msg timestamp="20171220 05:57:05.511" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 05:57:05.577" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:57:30.632" level="INFO">[ssh_common.py@203] 
The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
You have new mail.
Last login: Wed Dec 20 05:55:34 2017 from 127.0.0.1
ute@test:~$</msg>
<msg timestamp="20171220 05:57:30.632" level="DEBUG">[ssh_common.py@208] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171220 05:57:30.632" level="TRACE">Return: &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 05:57:30.632" level="INFO">${BTS_PC_CONNECTION} = 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<status status="PASS" endtime="20171220 05:57:30.632" starttime="20171220 05:57:05.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171220 05:57:30.633" level="TRACE">Arguments: [ '${BTS_PC_CONNECTION}' ]</msg>
<msg timestamp="20171220 05:57:30.633" level="INFO">${BTS_PC_CONNECTION} = 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 05:57:30.633" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:30.634" starttime="20171220 05:57:30.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"Windows" in "${platform_version}"</arg>
<arg>Execute Shell Command</arg>
<arg>tlntadmn config timeoutactive\=no</arg>
</arguments>
<msg timestamp="20171220 05:57:30.634" level="TRACE">Arguments: [ '"Windows" in "Linux-3.16.0-4-amd64-x86_64-with-debian-8.8"' | 'Execute Shell Command' | 'tlntadmn config timeoutactive\\=no' ]</msg>
<msg timestamp="20171220 05:57:30.634" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:30.634" starttime="20171220 05:57:30.634"></status>
</kw>
<msg timestamp="20171220 05:57:30.634" level="TRACE">Return: &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<status status="PASS" endtime="20171220 05:57:30.635" starttime="20171220 05:57:05.334"></status>
</kw>
<msg timestamp="20171220 05:57:30.635" level="TRACE">Return: &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<status status="PASS" endtime="20171220 05:57:30.635" starttime="20171220 05:57:05.333"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Make Sure FCT Ping Ok</arg>
</arguments>
<msg timestamp="20171220 05:57:30.635" level="TRACE">Arguments: [ 'Make Sure FCT Ping Ok' ]</msg>
<kw name="Make Sure FCT Ping Ok" library="common_resource">
<msg timestamp="20171220 05:57:30.636" level="TRACE">Arguments: [  ]</msg>
<kw name="Ping Should Ok" library="tdd_ev_robotws">
<doc>This function is used for check whether ping host success, if yes, return 1, else return 0</doc>
<arguments>
<arg>${FCMD_IP}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20171220 05:57:30.636" level="TRACE">Arguments: [ b'192.168.255.1' ]</msg>
<msg timestamp="20171220 05:57:30.643" level="INFO">[ping_control.py@189] PING 192.168.255.1 (192.168.255.1) 56(84) bytes of data.
64 bytes from 192.168.255.1: icmp_seq=1 ttl=255 time=0.201 ms

--- 192.168.255.1 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 0.201/0.201/0.201/0.000 ms</msg>
<msg timestamp="20171220 05:57:30.643" level="TRACE">Return: True</msg>
<msg timestamp="20171220 05:57:30.644" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20171220 05:57:30.644" starttime="20171220 05:57:30.636"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>300</arg>
<arg>${FTM_IP}</arg>
</arguments>
<msg timestamp="20171220 05:57:30.644" level="TRACE">Arguments: [ True | 'Wait Until Units Startup' | '300' | '${FTM_IP}' ]</msg>
<msg timestamp="20171220 05:57:30.645" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:30.645" starttime="20171220 05:57:30.644"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Btscli Disable Bts Port Security</arg>
</arguments>
<msg timestamp="20171220 05:57:30.645" level="TRACE">Arguments: [ True | 'Btscli Disable Bts Port Security' ]</msg>
<msg timestamp="20171220 05:57:30.645" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:30.645" starttime="20171220 05:57:30.645"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>${status}</arg>
<arg>Wait Until Units Startup</arg>
<arg>60</arg>
<arg>${FCMD_IP}</arg>
</arguments>
<msg timestamp="20171220 05:57:30.646" level="TRACE">Arguments: [ True | 'Wait Until Units Startup' | '60' | '${FCMD_IP}' ]</msg>
<msg timestamp="20171220 05:57:30.646" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:30.646" starttime="20171220 05:57:30.646"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Wait Until Keyword Succeeds</arg>
<arg>5min</arg>
<arg>5s</arg>
<arg>_make sure fctb connect ok</arg>
</arguments>
<msg timestamp="20171220 05:57:30.646" level="TRACE">Arguments: [ 'Wait Until Keyword Succeeds' | '5min' | '5s' | '_make sure fctb connect ok' ]</msg>
<msg timestamp="20171220 05:57:30.646" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:30.646" starttime="20171220 05:57:30.646"></status>
</kw>
<msg timestamp="20171220 05:57:30.647" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:57:30.647" starttime="20171220 05:57:30.635"></status>
</kw>
<msg timestamp="20171220 05:57:30.647" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171220 05:57:30.647" starttime="20171220 05:57:30.635"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>get_enb_infomation</arg>
</arguments>
<msg timestamp="20171220 05:57:30.647" level="TRACE">Arguments: [ 'get_enb_infomation' ]</msg>
<kw name="Get Enb Infomation" library="tdd_ev_robotws">
<doc>This keyword will print bts sw version, bbu type and RRU type.</doc>
<msg timestamp="20171220 05:57:30.648" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 05:57:30.775" level="DEBUG">Adding ssh-rsa host key for 192.168.255.1: d72735f0fd9701b32d60938382e7a0e8</msg>
<msg timestamp="20171220 05:57:30.776" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 05:57:30.849" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:57:41.179" level="DEBUG">Adding ssh-rsa host key for 192.168.255.1: d72735f0fd9701b32d60938382e7a0e8</msg>
<msg timestamp="20171220 05:57:41.180" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 05:57:41.254" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:57:51.583" level="DEBUG">Adding ssh-rsa host key for 192.168.255.1: d72735f0fd9701b32d60938382e7a0e8</msg>
<msg timestamp="20171220 05:57:51.584" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 05:57:51.657" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:58:05.006" level="DEBUG">Adding ssh-rsa host key for 192.168.200.1: ea9911811e1060471ac968ead0e8421b</msg>
<msg timestamp="20171220 05:58:05.007" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 05:58:05.173" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[ping_control.py@189] PING 192.168.255.1 (192.168.255.1) 56(84) bytes of data.
64 bytes from 192.168.255.1: icmp_seq=1 ttl=255 time=0.180 ms

--- 192.168.255.1 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 0.180/0.180/0.180/0.000 ms</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[ftm_control.py@292] Temporary pass this keyword until PR is fixed!</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[ssh_common.py@203] Last login: Wed Dec 20 12:56:56 CST 2017 from 192.168.255.126 on ssh
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:58:35.335" level="DEBUG">[ssh_common.py@208] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a4f33b90&gt;</msg>
<msg timestamp="20171220 05:58:35.335" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a4f33b90&gt;</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[ssh_common.py@203] Last login: Wed Dec 20 12:57:30 CST 2017 from 192.168.255.126 on pts/0
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:58:35.335" level="DEBUG">[ssh_common.py@208] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a4fd1488&gt;</msg>
<msg timestamp="20171220 05:58:35.335" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml
root@fctj-4a:/ffs/fs1 &gt;</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a4fd1488&gt;</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[enb_resource.py@1158] 
 ****Current BTS version is 'SBTS00_TDDFSM4_9999_171219_000441' *****</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[enb_resource.py@1188] activeBuildVersion=SBTS00_TDDFSM4_9999_171219_000441</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[ssh_common.py@203] Last login: Wed Dec 20 12:57:41 CST 2017 from 192.168.255.126 on pts/1
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:58:35.335" level="DEBUG">[ssh_common.py@208] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171220 05:58:35.335" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a6c25b00&gt;</msg>
<msg timestamp="20171220 05:58:35.335" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:58:35.336" level="INFO">[ssh_common.py@258] Execute command: ls /ram/SiteConf.xml</msg>
<msg timestamp="20171220 05:58:35.336" level="INFO">[ssh_common.py@314] Get Response: ls /ram/SiteConf.xml
ls: cannot access /ram/SiteConf.xml: No such file or directory
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:58:35.336" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a6c25b00&gt;</msg>
<msg timestamp="20171220 05:58:35.336" level="INFO">[enb_resource.py@1158] 
 ****Not find /ram/SiteConf.xml *****</msg>
<msg timestamp="20171220 05:58:35.336" level="INFO">[ping_control.py@189] PING 192.168.200.1 (192.168.200.1) 56(84) bytes of data.
64 bytes from 192.168.200.1: icmp_seq=1 ttl=255 time=0.246 ms

--- 192.168.200.1 ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 0.246/0.246/0.246/0.000 ms</msg>
<msg timestamp="20171220 05:58:35.336" level="INFO">[ping_control.py@189] PING 192.168.255.20 (192.168.255.20) 56(84) bytes of data.
From 192.168.255.140 icmp_seq=1 Destination Host Unreachable

--- 192.168.255.20 ping statistics ---
1 packets transmitted, 0 received, +1 errors, 100% packet loss, time 0ms</msg>
<msg timestamp="20171220 05:58:35.336" level="INFO">[ssh_common.py@203] Last login: Wed Dec 20 04:55:31 UTC 2017 from 192.168.200.126 on pts/0
root@FCTB:~ &gt;</msg>
<msg timestamp="20171220 05:58:35.336" level="DEBUG">[ssh_common.py@208] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171220 05:58:35.336" level="INFO">[connection_mgr.py@208] Current connection: 192.168.200.1:22 DeviceType:Linux Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6abea73b0&gt;</msg>
<msg timestamp="20171220 05:58:35.336" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:58:35.336" level="INFO">[ssh_common.py@258] Execute command: cd /flash/simmode/;ls iphy-db_WTS_*.xml</msg>
<msg timestamp="20171220 05:58:35.336" level="INFO">[ssh_common.py@314] Get Response: cd /flash/simmode/;ls iphy-db_WTS_*.xml
iphy-db_WTS_trunk_28629.xml
root@FCTB:/flash/simmode &gt;</msg>
<msg timestamp="20171220 05:58:35.336" level="INFO">[enb_resource.py@1158] 
 ****Current IPHY version is '28629' *****</msg>
<msg timestamp="20171220 05:58:35.336" level="INFO">[enb_resource.py@1333] activeIphyVersion=28629</msg>
<msg timestamp="20171220 05:58:35.337" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:58:35.337" starttime="20171220 05:57:30.648"></status>
</kw>
<msg timestamp="20171220 05:58:35.338" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171220 05:58:35.338" starttime="20171220 05:57:30.647"></status>
</kw>
<kw name="Set Library Search Order" library="BuiltIn">
<doc>Sets the resolution order to use when a name matches multiple keywords.</doc>
<arguments>
<arg>tdd_ev_robotws</arg>
<arg>OperatingSystem</arg>
</arguments>
<msg timestamp="20171220 05:58:35.339" level="TRACE">Arguments: [ 'tdd_ev_robotws' | 'OperatingSystem' ]</msg>
<msg timestamp="20171220 05:58:35.339" level="TRACE">Return: ()</msg>
<status status="PASS" endtime="20171220 05:58:35.339" starttime="20171220 05:58:35.339"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171220 05:58:35.340" level="TRACE">Arguments: [ &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt; ]</msg>
<msg timestamp="20171220 05:58:35.341" level="INFO">[connection_mgr.py@147] Switch to connection: 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;.</msg>
<msg timestamp="20171220 05:58:35.341" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:58:35.341" starttime="20171220 05:58:35.339"></status>
</kw>
<msg timestamp="20171220 05:58:35.341" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:58:35.342" starttime="20171220 05:57:05.254"></status>
</kw>
<kw name="Setup IPHY Env" library="DevHZ5_iphy_resource">
<doc>This keyword is to setup iphy env.</doc>
<msg timestamp="20171220 05:58:35.343" level="TRACE">Arguments: [ ${params}=['delete:LNADJ.*', 'delete:LNREL.*', 'delete:LNNEIH.*'] | ${tl_type}='3CELLs' | ${ue_id}='1' | ${ue_number}='1' | ${cfg}='sanity_cfg_zy.lua' | ${match_string}=b'' | ${lte_nb_cells}='1' | ${utra_enb_id}='0' | ${subframe}='sa1' | ${special_pattern}='ssp7' | ${atten_port}='off' | ${tdd_cell_flag}='on' | ${earfcn_dl}='38000' | ${earfcn_ul}='38000' | ${x2_peer}='none' ]</msg>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>ps -ef | grep node</arg>
</arguments>
<msg timestamp="20171220 05:58:35.344" level="TRACE">Arguments: [ 'Execute Shell Command' | 'ps -ef | grep node' ]</msg>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>ps -ef | grep node</arg>
</arguments>
<msg timestamp="20171220 05:58:35.345" level="TRACE">Arguments: [ 'ps -ef | grep node' ]</msg>
<msg timestamp="20171220 05:58:35.451" level="INFO">[connection_mgr.py@208] Current connection: 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 05:58:35.451" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:58:35.451" level="INFO">[ssh_common.py@258] Execute command: ps -ef | grep node</msg>
<msg timestamp="20171220 05:58:35.451" level="INFO">[ssh_common.py@314] Get Response: ps -ef | grep node
ute       3217  3183  0 05:58 pts/6    00:00:00 grep node
ute@test:~$</msg>
<msg timestamp="20171220 05:58:35.452" level="TRACE">Return: b'ps -ef | grep node\r\nute       3217  3183  0 05:58 pts/6    00:00:00 grep node\r\nute@test:~$ '</msg>
<status status="PASS" endtime="20171220 05:58:35.452" starttime="20171220 05:58:35.345"></status>
</kw>
<msg timestamp="20171220 05:58:35.452" level="TRACE">Return: (b'PASS', b'ps -ef | grep node\r\nute       3217  3183  0 05:58 pts/6    00:00:00 grep node\r\nute@test:~$ ')</msg>
<status status="PASS" endtime="20171220 05:58:35.452" starttime="20171220 05:58:35.344"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>netstat -ano | grep 9002</arg>
</arguments>
<msg timestamp="20171220 05:58:35.452" level="TRACE">Arguments: [ 'Execute Shell Command' | 'netstat -ano | grep 9002' ]</msg>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>netstat -ano | grep 9002</arg>
</arguments>
<msg timestamp="20171220 05:58:35.453" level="TRACE">Arguments: [ 'netstat -ano | grep 9002' ]</msg>
<msg timestamp="20171220 05:58:35.559" level="INFO">[connection_mgr.py@208] Current connection: 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 05:58:35.559" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:58:35.559" level="INFO">[ssh_common.py@258] Execute command: netstat -ano | grep 9002</msg>
<msg timestamp="20171220 05:58:35.559" level="INFO">[ssh_common.py@314] Get Response: netstat -ano | grep 9002
ute@test:~$</msg>
<msg timestamp="20171220 05:58:35.559" level="TRACE">Return: b'netstat -ano | grep 9002\r\nute@test:~$ '</msg>
<status status="PASS" endtime="20171220 05:58:35.559" starttime="20171220 05:58:35.453"></status>
</kw>
<msg timestamp="20171220 05:58:35.559" level="TRACE">Return: (b'PASS', b'netstat -ano | grep 9002\r\nute@test:~$ ')</msg>
<status status="PASS" endtime="20171220 05:58:35.559" starttime="20171220 05:58:35.452"></status>
</kw>
<kw name="Setup Admin" library="ute_admin">
<doc>Setup Admin API.</doc>
<arguments>
<arg>bts_port=9002</arg>
<arg>use_ssl=False</arg>
<arg>bts_host=192.168.255.129</arg>
<arg>admin_api_log_dir=${SAVE LOG DIRECTORY}</arg>
</arguments>
<msg timestamp="20171220 05:58:35.560" level="TRACE">Arguments: [ bts_port='9002' | use_ssl='False' | bts_host='192.168.255.129' | admin_api_log_dir='/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705' ]</msg>
<msg timestamp="20171220 05:58:35.561" level="INFO">/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/resource/node/linux/bin/node --expose-gc /opt/ute/python/lib/python2.7/site-packages/ute_common_admin/resource/src/main.js --bts-host=192.168.255.129 --bts-port=9002 --bts-username=Nemuadmin --bts-password=nemuuser --debug=/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/admin_api_default.log --interval=5000 --cli-port=38538 --bundles-dir=/tmp/tmpYC5UF4 --insecure</msg>
<msg timestamp="20171220 05:58:35.568" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 05:58:35.568" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 05:58:37.571" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 05:58:37.572" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 05:58:39.579" level="INFO">Recived response: Connection opened.</msg>
<msg timestamp="20171220 05:58:39.580" level="INFO">Send message: {"type": "ADMIN_API", "payload": {"requestType": "infoModel", "requestId": 8689, "parameters": {"name": "abnormalities", "parameters": {"type": "currentAlarms"}}}}</msg>
<msg timestamp="20171220 05:58:42.995" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "completed", "requestId": 8689, "requestMessage": [{"degradedCells": "", "faultId": 6203, "alarmingResource": "/MRBTS-1/RAT-1/RUNTIME_VIEW-4/MRBTS_R-4/LNBTS_R-1/LNADJ_R-1", "hwPath": "N/A", "detailsAlarmId": "7657 -", "number": 7657, "alarmId": 7657, "btsObservationTime": "20171220125446.615+0800", "impactedCells": "-", "faultName": "Transport layer connection failure in X2 interface", "alarmName": "-", "distName": "/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/ALARM_L-3", "destinationIPAddr": "1.1.1.1", "technology": "LTE", "notifier": "MRBTS-1/LNBTS-1/LNADJ-1", "severity": "Major"}]}}</msg>
<msg timestamp="20171220 05:58:42.995" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:58:42.995" starttime="20171220 05:58:35.560"></status>
</kw>
<kw name="Kill Useless Local Hosts" library="lib">
<doc>keep 2 latest 127.0.0.1 connections and kill others</doc>
<msg timestamp="20171220 05:58:42.996" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 05:58:43.104" level="INFO">[connection_mgr.py@208] Current connection: 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 05:58:43.104" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:58:43.104" level="INFO">[ssh_common.py@258] Execute command: who | grep 127.0.0.1</msg>
<msg timestamp="20171220 05:58:43.104" level="INFO">[ssh_common.py@314] Get Response: who | grep 127.0.0.1
ute      pts/6        2017-12-20 05:57 (127.0.0.1)
ute@test:~$</msg>
<msg timestamp="20171220 05:58:43.104" level="INFO">[son.py@184] output of 'who | grep 127.0.0.1' is 'ute      pts/6        2017-12-20 05:57 (127.0.0.1)'</msg>
<msg timestamp="20171220 05:58:43.104" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:58:43.104" starttime="20171220 05:58:42.996"></status>
</kw>
<kw name="Deside Config Path For UTE Cloud" library="DevHZ5_iphy_resource">
<msg timestamp="20171220 05:58:43.105" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Bbu Type" library="tdd_ev_robotws">
<doc>This keyword will get BBU type.</doc>
<assign>
<var>${bbu_type}</var>
</assign>
<msg timestamp="20171220 05:58:43.105" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 05:58:43.208" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 05:58:43.225" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:58:43.300" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 05:58:43.303" level="DEBUG">[chan 0] lstat('/proc/device-tree/module-identity//unit-id')</msg>
<msg timestamp="20171220 05:58:43.304" level="DEBUG">[chan 0] lstat('/proc/device-tree/module-identity//unit-id')</msg>
<msg timestamp="20171220 05:58:43.305" level="DEBUG">[chan 0] stat('/proc/device-tree/module-identity//unit-id')</msg>
<msg timestamp="20171220 05:58:43.306" level="DEBUG">[chan 0] open('/proc/device-tree/module-identity//unit-id', 'rb')</msg>
<msg timestamp="20171220 05:58:43.307" level="DEBUG">[chan 0] open('/proc/device-tree/module-identity//unit-id', 'rb') -&gt; 00000000</msg>
<msg timestamp="20171220 05:58:43.309" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 05:58:43.311" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 05:58:43.311" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 05:58:43.316" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.255.1', port:'22'</msg>
<msg timestamp="20171220 05:58:43.316" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 05:58:43.316" level="INFO">[sftp_control.py@176] /proc/device-tree/module-identity//unit-id</msg>
<msg timestamp="20171220 05:58:43.316" level="DEBUG">[sftp_control.py@49] sftp get file size '/proc/device-tree/module-identity//unit-id' is 0KB</msg>
<msg timestamp="20171220 05:58:43.316" level="INFO">[sftp_control.py@79] sftp download from '/proc/device-tree/module-identity//unit-id' to '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/unit-id' is ok. local file size is 0k</msg>
<msg timestamp="20171220 05:58:43.316" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 05:58:43.316" level="TRACE">Return: b'ASIA'</msg>
<msg timestamp="20171220 05:58:43.316" level="INFO">${bbu_type} = ASIA</msg>
<status status="PASS" endtime="20171220 05:58:43.317" starttime="20171220 05:58:43.105"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Directory Should Exist</arg>
<arg>${CONFIG_PATH}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20171220 05:58:43.317" level="TRACE">Arguments: [ 'Directory Should Exist' | '${CONFIG_PATH}' ]</msg>
<kw name="Directory Should Exist" library="OperatingSystem">
<doc>Fails unless the given path points to an existing directory.</doc>
<arguments>
<arg>${CONFIG_PATH}</arg>
</arguments>
<msg timestamp="20171220 05:58:43.318" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/cloudtest' ]</msg>
<msg timestamp="20171220 05:58:43.318" level="FAIL">Directory '/opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/cloudtest' does not exist.</msg>
<msg timestamp="20171220 05:58:43.319" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" endtime="20171220 05:58:43.319" starttime="20171220 05:58:43.318"></status>
</kw>
<msg timestamp="20171220 05:58:43.319" level="TRACE">Return: False</msg>
<msg timestamp="20171220 05:58:43.319" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20171220 05:58:43.319" starttime="20171220 05:58:43.317"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == '${False}'</arg>
<arg>Set Suite Variable</arg>
<arg>\${CONFIG_PATH}</arg>
<arg>${SCF_TEMPLATE_PATH}${/}IPHY_R3_CONF</arg>
</arguments>
<msg timestamp="20171220 05:58:43.319" level="TRACE">Arguments: [ "'False' == 'False'" | 'Set Suite Variable' | '\\${CONFIG_PATH}' | '${SCF_TEMPLATE_PATH}${/}IPHY_R3_CONF' ]</msg>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>\${CONFIG_PATH}</arg>
<arg>${SCF_TEMPLATE_PATH}${/}IPHY_R3_CONF</arg>
</arguments>
<msg timestamp="20171220 05:58:43.320" level="TRACE">Arguments: [ '\\${CONFIG_PATH}' | '${SCF_TEMPLATE_PATH}${/}IPHY_R3_CONF' ]</msg>
<msg timestamp="20171220 05:58:43.321" level="INFO">${CONFIG_PATH} = /opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/IPHY_R3_CONF</msg>
<msg timestamp="20171220 05:58:43.321" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:58:43.321" starttime="20171220 05:58:43.320"></status>
</kw>
<msg timestamp="20171220 05:58:43.321" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:58:43.321" starttime="20171220 05:58:43.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == '${False}' and '${bbu_type}' == 'FSIP'</arg>
<arg>Set Suite Variable</arg>
<arg>\${CONFIG_PATH}</arg>
<arg>${SCF_TEMPLATE_PATH}${/}IPHY_R4_CONF</arg>
</arguments>
<msg timestamp="20171220 05:58:43.322" level="TRACE">Arguments: [ "'False' == 'False' and 'ASIA' == 'FSIP'" | 'Set Suite Variable' | '\\${CONFIG_PATH}' | '${SCF_TEMPLATE_PATH}${/}IPHY_R4_CONF' ]</msg>
<msg timestamp="20171220 05:58:43.322" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:58:43.322" starttime="20171220 05:58:43.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == '${False}' and '${bbu_type}' == 'ASIA'</arg>
<arg>Set Suite Variable</arg>
<arg>\${CONFIG_PATH}</arg>
<arg>${SCF_TEMPLATE_PATH}${/}IPHY_R4_CONF</arg>
</arguments>
<msg timestamp="20171220 05:58:43.323" level="TRACE">Arguments: [ "'False' == 'False' and 'ASIA' == 'ASIA'" | 'Set Suite Variable' | '\\${CONFIG_PATH}' | '${SCF_TEMPLATE_PATH}${/}IPHY_R4_CONF' ]</msg>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>\${CONFIG_PATH}</arg>
<arg>${SCF_TEMPLATE_PATH}${/}IPHY_R4_CONF</arg>
</arguments>
<msg timestamp="20171220 05:58:43.323" level="TRACE">Arguments: [ '\\${CONFIG_PATH}' | '${SCF_TEMPLATE_PATH}${/}IPHY_R4_CONF' ]</msg>
<msg timestamp="20171220 05:58:43.324" level="INFO">${CONFIG_PATH} = /opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/IPHY_R4_CONF</msg>
<msg timestamp="20171220 05:58:43.324" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:58:43.324" starttime="20171220 05:58:43.323"></status>
</kw>
<msg timestamp="20171220 05:58:43.324" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:58:43.324" starttime="20171220 05:58:43.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>\${bbu_type}</arg>
</arguments>
<msg timestamp="20171220 05:58:43.324" level="TRACE">Arguments: [ '\\${bbu_type}' ]</msg>
<msg timestamp="20171220 05:58:43.325" level="INFO">${bbu_type} = ASIA</msg>
<msg timestamp="20171220 05:58:43.325" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:58:43.325" starttime="20171220 05:58:43.324"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>None</arg>
</arguments>
<assign>
<var>${POSITION}</var>
</assign>
<msg timestamp="20171220 05:58:43.325" level="TRACE">Arguments: [ 'None' ]</msg>
<msg timestamp="20171220 05:58:43.326" level="TRACE">Return: 'None'</msg>
<msg timestamp="20171220 05:58:43.326" level="INFO">${POSITION} = None</msg>
<status status="PASS" endtime="20171220 05:58:43.326" starttime="20171220 05:58:43.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bbu_type}' == 'ASIA'</arg>
<arg>Get SCF Parameter Value</arg>
<arg>SMOD-1:positionInSubrack</arg>
</arguments>
<assign>
<var>${POSITION}</var>
</assign>
<msg timestamp="20171220 05:58:43.326" level="TRACE">Arguments: [ "'ASIA' == 'ASIA'" | 'Get SCF Parameter Value' | 'SMOD-1:positionInSubrack' ]</msg>
<kw name="Get SCF Parameter Value" library="DevHZ5_common_resource">
<arguments>
<arg>SMOD-1:positionInSubrack</arg>
</arguments>
<msg timestamp="20171220 05:58:43.327" level="TRACE">Arguments: [ ${param_name}='SMOD-1:positionInSubrack' ]</msg>
<kw name="Match To Xpath" library="tdd_ev_robotws.DomainLib.oam_lib">
<doc>This keyword is to convert parameters format to xpath</doc>
<arguments>
<arg>${param_name}</arg>
</arguments>
<assign>
<var>${xpath}</var>
</assign>
<msg timestamp="20171220 05:58:43.327" level="TRACE">Arguments: [ 'SMOD-1:positionInSubrack' ]</msg>
<msg timestamp="20171220 05:58:43.328" level="TRACE">Return: ["//*[matches(@distName, '.*SMOD-1$')]/*[@name='positionInSubrack']"]</msg>
<msg timestamp="20171220 05:58:43.328" level="INFO">${xpath} = [u"//*[matches(@distName, '.*SMOD-1$')]/*[@name='positionInSubrack']"]</msg>
<status status="PASS" endtime="20171220 05:58:43.328" starttime="20171220 05:58:43.327"></status>
</kw>
<kw name="Download Scf" library="tdd_ev_robotws.DomainLib.oam_lib">
<doc>This keyword is to download active SCF from bts</doc>
<assign>
<var>${scf}</var>
</assign>
<msg timestamp="20171220 05:58:43.328" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 05:58:43.436" level="DEBUG">Adding ssh-rsa host key for 192.168.255.1: d72735f0fd9701b32d60938382e7a0e8</msg>
<msg timestamp="20171220 05:58:43.437" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 05:58:43.510" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:58:53.843" level="DEBUG">Adding ssh-rsa host key for 192.168.255.1: d72735f0fd9701b32d60938382e7a0e8</msg>
<msg timestamp="20171220 05:58:53.843" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 05:58:53.917" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:59:04.198" level="DEBUG">Adding ssh-rsa host key for 127.0.0.1: 429be5feff5aa210b381beaac8c3a542</msg>
<msg timestamp="20171220 05:59:04.199" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 05:59:04.231" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:59:04.317" level="INFO">/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/resource/node/linux/bin/node --expose-gc /opt/ute/python/lib/python2.7/site-packages/ute_common_admin/resource/src/main.js --bts-host=localhost --bts-port=18054 --bts-username=Nemuadmin --bts-password=nemuuser --debug=/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/admin_api_scf_20171220055904.log --interval=5000 --cli-port=40862 --bundles-dir=/tmp/tmpCFcx9g --insecure</msg>
<msg timestamp="20171220 05:59:04.323" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 05:59:04.323" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 05:59:06.324" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 05:59:06.324" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 05:59:08.331" level="INFO">Recived response: Connection opened.</msg>
<msg timestamp="20171220 05:59:08.332" level="INFO">Send message: {"type": "ADMIN_API", "payload": {"requestType": "infoModel", "requestId": 51526, "parameters": {"name": "abnormalities", "parameters": {"type": "currentAlarms"}}}}</msg>
<msg timestamp="20171220 05:59:11.797" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "completed", "requestId": 51526, "requestMessage": [{"degradedCells": "", "faultId": 6203, "alarmingResource": "/MRBTS-1/RAT-1/RUNTIME_VIEW-4/MRBTS_R-4/LNBTS_R-1/LNADJ_R-1", "hwPath": "N/A", "detailsAlarmId": "7657 -", "number": 7657, "alarmId": 7657, "btsObservationTime": "20171220125446.615+0800", "impactedCells": "-", "faultName": "Transport layer connection failure in X2 interface", "alarmName": "-", "distName": "/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/ALARM_L-3", "destinationIPAddr": "1.1.1.1", "technology": "LTE", "notifier": "MRBTS-1/LNBTS-1/LNADJ-1", "severity": "Major"}]}}</msg>
<msg timestamp="20171220 05:59:11.798" level="INFO">Send message: {"type": "ADMIN_API", "payload": {"requestType": "procedure", "requestId": 50135, "parameters": {"name": "generateScf", "parameters": {"exportType": "configurationAndRuntimeObjects", "outputFileContent": ""}}}}</msg>
<msg timestamp="20171220 05:59:16.012" level="INFO">Recived response: {"type": "FILE_TRANSFER", "payload": {"data": "PD94bWwgdm ... &lt;type 'unicode'&gt; of length: 383276", "type": "WRITE", "id": 50135}}</msg>
<msg timestamp="20171220 05:59:16.014" level="INFO">Recived response: {"type": "FILE_TRANSFER", "payload": {"type": "CLOSE_WRITER", "id": 50135}}</msg>
<msg timestamp="20171220 05:59:16.015" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "completed", "requestId": 50135, "requestMessage": "", "outputFileContent": ""}}</msg>
<msg timestamp="20171220 05:59:16.265" level="INFO">Exit code: -15</msg>
<msg timestamp="20171220 05:59:16.265" level="INFO">STDOUT
CLI LOG:  CLI server is listening on localhost:40862
</msg>
<msg timestamp="20171220 05:59:16.266" level="INFO">STDERR
</msg>
<msg timestamp="20171220 05:59:16.616" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 05:59:16.649" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171220 05:59:16.649" level="INFO">[ssh_common.py@203] Last login: Wed Dec 20 12:58:43 CST 2017 from 192.168.255.126 on ssh
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:59:16.649" level="DEBUG">[ssh_common.py@208] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171220 05:59:16.649" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c15f0&gt;</msg>
<msg timestamp="20171220 05:59:16.649" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:59:16.649" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171220 05:59:16.649" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:59:16.649" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c15f0&gt;</msg>
<msg timestamp="20171220 05:59:16.649" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171220 05:59:16.649" level="INFO">[ssh_common.py@203] Last login: Wed Dec 20 12:58:43 CST 2017 from 192.168.255.126 on pts/0
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:59:16.649" level="DEBUG">[ssh_common.py@208] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171220 05:59:16.649" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c1f80&gt;</msg>
<msg timestamp="20171220 05:59:16.649" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:59:16.649" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20171220 05:59:16.649" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml
root@fctj-4a:/ffs/fs1 &gt;</msg>
<msg timestamp="20171220 05:59:16.649" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c1f80&gt;</msg>
<msg timestamp="20171220 05:59:16.650" level="TRACE">Return: '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/scf_20171220055904.xml'</msg>
<msg timestamp="20171220 05:59:16.655" level="INFO">${scf} = /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/scf_20171220055904.xml</msg>
<status status="PASS" endtime="20171220 05:59:16.655" starttime="20171220 05:58:43.328"></status>
</kw>
<kw name="Read Xml" library="tdd_ev_robotws">
<doc>This keyword return string or list or dictionary base on given condition.</doc>
<arguments>
<arg>${scf}</arg>
<arg>text|${xpath[0]}</arg>
</arguments>
<assign>
<var>${param_value}</var>
</assign>
<msg timestamp="20171220 05:59:16.656" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/scf_20171220055904.xml' | "text|//*[matches(@distName, '.*SMOD-1$')]/*[@name='positionInSubrack']" ]</msg>
<msg timestamp="20171220 05:59:16.703" level="TRACE">pattern '.*SMOD-1$' match 'MRBTS-1/EQM-1/APEQM-1/CABINET-1/SMOD-1' result is 'True'</msg>
<msg timestamp="20171220 05:59:16.703" level="TRACE">Return: b'RightSide'</msg>
<msg timestamp="20171220 05:59:16.703" level="INFO">${param_value} = RightSide</msg>
<status status="PASS" endtime="20171220 05:59:16.703" starttime="20171220 05:59:16.655"></status>
</kw>
<msg timestamp="20171220 05:59:16.703" level="TRACE">Return: b'RightSide'</msg>
<status status="PASS" endtime="20171220 05:59:16.703" starttime="20171220 05:58:43.327"></status>
</kw>
<msg timestamp="20171220 05:59:16.703" level="TRACE">Return: b'RightSide'</msg>
<msg timestamp="20171220 05:59:16.704" level="INFO">${POSITION} = RightSide</msg>
<status status="PASS" endtime="20171220 05:59:16.704" starttime="20171220 05:58:43.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${POSITION}</arg>
</arguments>
<msg timestamp="20171220 05:59:16.704" level="TRACE">Arguments: [ '${POSITION}' ]</msg>
<msg timestamp="20171220 05:59:16.704" level="INFO">${POSITION} = RightSide</msg>
<msg timestamp="20171220 05:59:16.705" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:59:16.705" starttime="20171220 05:59:16.704"></status>
</kw>
<msg timestamp="20171220 05:59:16.705" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:59:16.705" starttime="20171220 05:58:43.104"></status>
</kw>
<kw name="Change Vendor Parameters" library="lib">
<doc>This keyword is to change vendor parameters in local BTS</doc>
<arguments>
<arg>${PARAMS_IN_VENDOR}</arg>
</arguments>
<msg timestamp="20171220 05:59:16.705" level="TRACE">Arguments: [ ['thMinorAlRaiseAnrMOI=80', 'thAlCancelAnrMOI=10', 'allowExceedAnrMOI=15'] ]</msg>
<msg timestamp="20171220 05:59:16.819" level="DEBUG">Adding ssh-rsa host key for 192.168.255.129: d72735f0fd9701b32d60938382e7a0e8</msg>
<msg timestamp="20171220 05:59:16.820" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 05:59:16.893" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:59:27.048" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 05:59:27.064" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:59:27.139" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 05:59:27.141" level="DEBUG">[chan 0] lstat('/proc/device-tree/module-identity//unit-id')</msg>
<msg timestamp="20171220 05:59:27.142" level="DEBUG">[chan 0] lstat('/proc/device-tree/module-identity//unit-id')</msg>
<msg timestamp="20171220 05:59:27.144" level="DEBUG">[chan 0] stat('/proc/device-tree/module-identity//unit-id')</msg>
<msg timestamp="20171220 05:59:27.145" level="DEBUG">[chan 0] open('/proc/device-tree/module-identity//unit-id', 'rb')</msg>
<msg timestamp="20171220 05:59:27.146" level="DEBUG">[chan 0] open('/proc/device-tree/module-identity//unit-id', 'rb') -&gt; 00000000</msg>
<msg timestamp="20171220 05:59:27.148" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 05:59:27.150" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 05:59:27.150" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 05:59:27.363" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 05:59:27.378" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:59:27.453" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 05:59:27.455" level="DEBUG">[chan 0] lstat('/ffs/run/swpool/OAM/vendor_S3031317.xml')</msg>
<msg timestamp="20171220 05:59:27.456" level="DEBUG">[chan 0] lstat('/ffs/run/swpool/OAM/vendor_S3031317.xml')</msg>
<msg timestamp="20171220 05:59:27.458" level="DEBUG">[chan 0] stat('/ffs/run/swpool/OAM/vendor_S3031317.xml')</msg>
<msg timestamp="20171220 05:59:27.459" level="DEBUG">[chan 0] open('/ffs/run/swpool/OAM/vendor_S3031317.xml', 'rb')</msg>
<msg timestamp="20171220 05:59:27.459" level="DEBUG">[chan 0] open('/ffs/run/swpool/OAM/vendor_S3031317.xml', 'rb') -&gt; 00000000</msg>
<msg timestamp="20171220 05:59:27.467" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 05:59:27.469" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 05:59:27.469" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 05:59:27.577" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 05:59:27.593" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:59:27.668" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 05:59:27.671" level="DEBUG">[chan 0] lstat('/ffs/run/swpool/OAM/vendor_S3031317.xml.p7')</msg>
<msg timestamp="20171220 05:59:27.671" level="DEBUG">[chan 0] lstat('/ffs/run/swpool/OAM/vendor_S3031317.xml.p7')</msg>
<msg timestamp="20171220 05:59:27.673" level="DEBUG">[chan 0] stat('/ffs/run/swpool/OAM/vendor_S3031317.xml.p7')</msg>
<msg timestamp="20171220 05:59:27.674" level="DEBUG">[chan 0] open('/ffs/run/swpool/OAM/vendor_S3031317.xml.p7', 'rb')</msg>
<msg timestamp="20171220 05:59:27.675" level="DEBUG">[chan 0] open('/ffs/run/swpool/OAM/vendor_S3031317.xml.p7', 'rb') -&gt; 00000000</msg>
<msg timestamp="20171220 05:59:27.677" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 05:59:27.679" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 05:59:27.679" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 05:59:27.816" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 05:59:27.832" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:59:27.907" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 05:59:27.908" level="DEBUG">[chan 0] open('/ffs/run/swpool/OAM/vendor_S3031317.xml', 'wb')</msg>
<msg timestamp="20171220 05:59:27.916" level="DEBUG">[chan 0] open('/ffs/run/swpool/OAM/vendor_S3031317.xml', 'wb') -&gt; 00000000</msg>
<msg timestamp="20171220 05:59:27.918" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 05:59:28.130" level="DEBUG">[chan 0] lstat('/ffs/run/swpool/OAM/vendor_S3031317.xml')</msg>
<msg timestamp="20171220 05:59:28.131" level="DEBUG">[chan 0] lstat('/ffs/run/swpool/OAM/vendor_S3031317.xml')</msg>
<msg timestamp="20171220 05:59:28.132" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 05:59:28.133" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 05:59:29.074" level="INFO">${VENDOR_NAME} = vendor_S3031317.xml</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">${SRC_VENDOR} = /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/vendor_S3031317.xml</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[son.py@288] parameters to be changed:[u'thMinorAlRaiseAnrMOI=80', u'thAlCancelAnrMOI=10', u'allowExceedAnrMOI=15']</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ftm_control.py@292] Temporary pass this keyword until PR is fixed!</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.129</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@203] Last login: Wed Dec 20 12:58:53 CST 2017 from 192.168.255.126 on pts/1
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[ssh_common.py@208] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.255.1', port:'22'</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[sftp_control.py@176] /proc/device-tree/module-identity//unit-id</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[sftp_control.py@49] sftp get file size '/proc/device-tree/module-identity//unit-id' is 0KB</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[sftp_control.py@79] sftp download from '/proc/device-tree/module-identity//unit-id' to '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/unit-id' is ok. local file size is 0k</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46d2200&gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@258] Execute command: ls /ffs/run/swpool/OAM | grep vendor</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@314] Get Response: ls /ffs/run/swpool/OAM | grep vendor
vendor_S3031317.xml
vendor_S3031317.xml.p7
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[enb_resource.py@935] vendor name is 'vendor_S3031317.xml'</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[enb_resource.py@975] The real vendor folder is /ffs/run/swpool/OAM</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.255.129', port:'22'</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.129', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[sftp_control.py@176] /ffs/run/swpool/OAM/vendor_S3031317.xml</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[sftp_control.py@49] sftp get file size '/ffs/run/swpool/OAM/vendor_S3031317.xml' is 90KB</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[sftp_control.py@79] sftp download from '/ffs/run/swpool/OAM/vendor_S3031317.xml' to '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/vendor_S3031317.xml' is ok. local file size is 90k</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.255.129', port:'22'</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.129', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[sftp_control.py@176] /ffs/run/swpool/OAM/vendor_S3031317.xml.p7</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[sftp_control.py@49] sftp get file size '/ffs/run/swpool/OAM/vendor_S3031317.xml.p7' is 1KB</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[sftp_control.py@79] sftp download from '/ffs/run/swpool/OAM/vendor_S3031317.xml.p7' to '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/vendor_S3031317.xml.p7' is ok. local file size is 1k</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[enb_resource.py@982] Start modify vendor file, modify parameter is [u"text|80|//*[matches(@distName, '.*LNBTS-\\*$')]/*[@name='thMinorAlRaiseAnrMOI']", u"text|10|//*[matches(@distName, '.*LNBTS-\\*$')]/*[@name='thAlCancelAnrMOI']", u"text|15|//*[matches(@distName, '.*LNBTS-\\*$')]/*[@name='allowExceedAnrMOI']"]</msg>
<msg timestamp="20171220 05:59:29.080" level="TRACE">pattern '.*LNBTS-\*$' match 'LNBTS-*' result is 'True'</msg>
<msg timestamp="20171220 05:59:29.080" level="TRACE">pattern '.*LNBTS-\*$' match 'LNBTS-*' result is 'True'</msg>
<msg timestamp="20171220 05:59:29.080" level="TRACE">pattern '.*LNBTS-\*$' match 'LNBTS-*' result is 'True'</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.255.129', port:'22'</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.129', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[sftp_control.py@61] sftp upload from '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/vendor_modified.xml' to '/ffs/run/swpool/OAM/vendor_S3031317.xml' is ok.</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[sftp_control.py@176] /ffs/run/swpool/OAM/vendor_S3031317.xml</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[sftp_control.py@49] sftp get file size '/ffs/run/swpool/OAM/vendor_S3031317.xml' is 90KB</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46d2200&gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@258] Execute command: find /ffs/run/swpool/OAM/vendor_S3031317.xml</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@314] Get Response: find /ffs/run/swpool/OAM/vendor_S3031317.xml
/ffs/run/swpool/OAM/vendor_S3031317.xml
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46d2200&gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@258] Execute command: rm -rf /ffs/run/swpool/OAM/vendor_S3031317.xml.p7</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@314] Get Response: rm -rf /ffs/run/swpool/OAM/vendor_S3031317.xml.p7
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46d2200&gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@258] Execute command: crasign /ffs/run/swpool/OAM/vendor_S3031317.xml</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@314] Get Response: crasign /ffs/run/swpool/OAM/vendor_S3031317.xml
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46d2200&gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@258] Execute command: rm -f /ffs/run/HashContainer*</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@314] Get Response: rm -f /ffs/run/HashContainer*
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46d2200&gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@258] Execute command: find /ffs/run/swpool/OAM/vendor_S3031317.xml</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@314] Get Response: find /ffs/run/swpool/OAM/vendor_S3031317.xml
/ffs/run/swpool/OAM/vendor_S3031317.xml
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46d2200&gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@258] Execute command: craverify /ffs/run/swpool/OAM/vendor_S3031317.xml /ffs/run/swpool/OAM/vendor_S3031317.xml.p7</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@314] Get Response: craverify /ffs/run/swpool/OAM/vendor_S3031317.xml /ffs/run/swpooll/OAM/vendor_S3031317.xml.p7
good signature
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:59:29.080" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46d2200&gt;</msg>
<msg timestamp="20171220 05:59:29.082" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:59:29.082" starttime="20171220 05:59:16.705"></status>
</kw>
<kw name="Upload File To Bts" library="tdd_ev_robotws">
<doc>upload file to bts use sftp.</doc>
<arguments>
<arg>${CONFIG_PATH}${/}swconfig.txt</arg>
<arg>swconfig.txt</arg>
<arg>/rom</arg>
</arguments>
<msg timestamp="20171220 05:59:29.083" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/IPHY_R4_CONF/swconfig.txt' | 'swconfig.txt' | '/rom' ]</msg>
<msg timestamp="20171220 05:59:29.189" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 05:59:29.205" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:59:29.281" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 05:59:29.282" level="DEBUG">[chan 0] open('/rom/swconfig.txt', 'wb')</msg>
<msg timestamp="20171220 05:59:29.308" level="DEBUG">[chan 0] open('/rom/swconfig.txt', 'wb') -&gt; 00000000</msg>
<msg timestamp="20171220 05:59:29.308" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 05:59:29.424" level="DEBUG">[chan 0] lstat('/rom/swconfig.txt')</msg>
<msg timestamp="20171220 05:59:29.426" level="DEBUG">[chan 0] lstat('/rom/swconfig.txt')</msg>
<msg timestamp="20171220 05:59:29.427" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 05:59:29.428" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 05:59:29.430" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.255.1', port:'22'</msg>
<msg timestamp="20171220 05:59:29.430" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 05:59:29.430" level="INFO">[sftp_control.py@61] sftp upload from '/opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/IPHY_R4_CONF/swconfig.txt' to '/rom/swconfig.txt' is ok.</msg>
<msg timestamp="20171220 05:59:29.430" level="INFO">[sftp_control.py@176] /rom/swconfig.txt</msg>
<msg timestamp="20171220 05:59:29.430" level="DEBUG">[sftp_control.py@49] sftp get file size '/rom/swconfig.txt' is 5KB</msg>
<msg timestamp="20171220 05:59:29.430" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 05:59:29.431" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:59:29.431" starttime="20171220 05:59:29.082"></status>
</kw>
<kw name="Change Swconfig File" library="lib">
<doc>This keyword is to change swconfig.txt in current connection</doc>
<arguments>
<arg>${PARAMS_IN_SWCONFIG}</arg>
</arguments>
<msg timestamp="20171220 05:59:29.431" level="TRACE">Arguments: [ [b''] ]</msg>
<msg timestamp="20171220 05:59:29.536" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 05:59:29.552" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:59:29.627" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 05:59:29.629" level="DEBUG">[chan 0] lstat('/ffs/run/swconfig.txt')</msg>
<msg timestamp="20171220 05:59:29.630" level="DEBUG">[chan 0] lstat('/ffs/run/swconfig.txt')</msg>
<msg timestamp="20171220 05:59:29.631" level="DEBUG">[chan 0] stat('/ffs/run/swconfig.txt')</msg>
<msg timestamp="20171220 05:59:29.632" level="DEBUG">[chan 0] open('/ffs/run/swconfig.txt', 'rb')</msg>
<msg timestamp="20171220 05:59:29.633" level="DEBUG">[chan 0] open('/ffs/run/swconfig.txt', 'rb') -&gt; 00000000</msg>
<msg timestamp="20171220 05:59:29.635" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 05:59:29.637" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 05:59:29.637" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 05:59:29.644" level="INFO">${SWCONFIG_BAK} = /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/swconfig.txt</msg>
<msg timestamp="20171220 05:59:29.747" level="DEBUG">Adding ssh-rsa host key for 192.168.255.129: d72735f0fd9701b32d60938382e7a0e8</msg>
<msg timestamp="20171220 05:59:29.748" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 05:59:29.821" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:59:39.938" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.255.129', port:'22'</msg>
<msg timestamp="20171220 05:59:39.938" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.129', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 05:59:39.938" level="INFO">[sftp_control.py@176] /ffs/run/swconfig.txt</msg>
<msg timestamp="20171220 05:59:39.938" level="DEBUG">[sftp_control.py@49] sftp get file size '/ffs/run/swconfig.txt' is 5KB</msg>
<msg timestamp="20171220 05:59:39.938" level="INFO">[sftp_control.py@79] sftp download from '/ffs/run/swconfig.txt' to '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/swconfig.txt' is ok. local file size is 5k</msg>
<msg timestamp="20171220 05:59:39.938" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 05:59:39.938" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.129</msg>
<msg timestamp="20171220 05:59:39.938" level="INFO">[ssh_common.py@203] Last login: Wed Dec 20 12:59:29 CST 2017 from 192.168.255.126 on ssh
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 05:59:39.938" level="DEBUG">[ssh_common.py@208] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171220 05:59:39.938" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7c29b48&gt;</msg>
<msg timestamp="20171220 05:59:39.939" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 05:59:39.939" starttime="20171220 05:59:29.431"></status>
</kw>
<kw name="Modify And Upload Iphy Xml" library="DevHZ5_iphy_resource">
<arguments>
<arg>${tl_type}</arg>
</arguments>
<msg timestamp="20171220 05:59:39.940" level="TRACE">Arguments: [ ${tl_type}='3CELLs' ]</msg>
<kw name="Modify Iphy Xml Rru Version" library="tdd_ev_robotws">
<doc>modify iphy xml rru version</doc>
<arguments>
<arg>${CONFIG_PATH}${/}${tl_type}${/}Iphy${/}iphy.xml</arg>
<arg>${SAVE LOG DIRECTORY}${/}iphy.xml</arg>
</arguments>
<msg timestamp="20171220 05:59:39.940" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/IPHY_R4_CONF/3CELLs/Iphy/iphy.xml' | '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/iphy.xml' ]</msg>
<msg timestamp="20171220 05:59:40.043" level="DEBUG">Adding ssh-rsa host key for 192.168.255.1: d72735f0fd9701b32d60938382e7a0e8</msg>
<msg timestamp="20171220 05:59:40.044" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 05:59:40.117" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 05:59:50.444" level="DEBUG">Adding ssh-rsa host key for 192.168.255.1: d72735f0fd9701b32d60938382e7a0e8</msg>
<msg timestamp="20171220 05:59:50.445" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 05:59:50.518" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:00:00.843" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 06:00:00.859" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:00:00.934" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 06:00:00.937" level="DEBUG">[chan 0] lstat('/ffs/fs1/TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml')</msg>
<msg timestamp="20171220 06:00:00.937" level="DEBUG">[chan 0] lstat('/ffs/fs1/TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml')</msg>
<msg timestamp="20171220 06:00:00.939" level="DEBUG">[chan 0] stat('/ffs/fs1/TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml')</msg>
<msg timestamp="20171220 06:00:00.940" level="DEBUG">[chan 0] open('/ffs/fs1/TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml', 'rb')</msg>
<msg timestamp="20171220 06:00:00.941" level="DEBUG">[chan 0] open('/ffs/fs1/TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml', 'rb') -&gt; 00000000</msg>
<msg timestamp="20171220 06:00:00.949" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 06:00:00.951" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 06:00:00.951" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[ssh_common.py@203] Last login: Wed Dec 20 12:59:29 CST 2017 from 192.168.255.126 on pts/0
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 06:00:00.977" level="DEBUG">[ssh_common.py@208] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c1f38&gt;</msg>
<msg timestamp="20171220 06:00:00.977" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[ssh_common.py@258] Execute command: readlink /ffs/run</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[ssh_common.py@314] Get Response: readlink /ffs/run
/ffs/fs1
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c1f38&gt;</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[ssh_common.py@203] Last login: Wed Dec 20 12:59:40 CST 2017 from 192.168.255.126 on pts/0
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 06:00:00.977" level="DEBUG">[ssh_common.py@208] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a4711908&gt;</msg>
<msg timestamp="20171220 06:00:00.977" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[ssh_common.py@258] Execute command: cd /ffs/fs1;ls TargetBD*.xml</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[ssh_common.py@314] Get Response: cd /ffs/fs1;ls TargetBD*.xml
TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml
root@fctj-4a:/ffs/fs1 &gt;</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a4711908&gt;</msg>
<msg timestamp="20171220 06:00:00.977" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.255.1', port:'22'</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[sftp_control.py@176] /ffs/fs1/TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml</msg>
<msg timestamp="20171220 06:00:00.977" level="DEBUG">[sftp_control.py@49] sftp get file size '/ffs/fs1/TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml' is 101KB</msg>
<msg timestamp="20171220 06:00:00.977" level="INFO">[sftp_control.py@79] sftp download from '/ffs/fs1/TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml' to '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml' is ok. local file size is 101k</msg>
<msg timestamp="20171220 06:00:00.977" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 06:00:00.978" level="INFO">[enb_resource.py@1446] Get RRU type is set(['FZHJ']) from /opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/IPHY_R4_CONF/3CELLs/Iphy/iphy.xml</msg>
<msg timestamp="20171220 06:00:00.978" level="INFO">[enb_resource.py@1377] Type: LTX_FZHJ-b_N1, RRU version: TDL37.12.R03, key list is ['LTX_FZHJ-b_N1_FRM-DFE_050301_3434C930.LAR', 'LTX_FZHJ-b_N1_FRM-JARRU_050301_EC6A0D6F.LAR', 'LTX_FZHJ-b_N1_FRM-PROP_050301_8F0E21EF.LAR', 'LTX_FZHJ-b_N1_FRM-SW_050301_44066037.LAR'] from /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/TargetBD_SBTS00_TDDFSM4_9999_171219_000441.xml
FZHJ TDL37.12.R03 ['LTX_FZHJ-b_N1_FRM-DFE_050301_3434C930.LAR', 'LTX_FZHJ-b_N1_FRM-JARRU_050301_EC6A0D6F.LAR', 'LTX_FZHJ-b_N1_FRM-PROP_050301_8F0E21EF.LAR', 'LTX_FZHJ-b_N1_FRM-SW_050301_44066037.LAR']</msg>
<msg timestamp="20171220 06:00:00.978" level="INFO">[enb_resource.py@1401] modify /opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/IPHY_R4_CONF/3CELLs/Iphy/iphy.xml as /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/iphy.xml ok with parameters ["text|TDL37.12.R03|//*[text()='FZHJ']/../buildname", "text|TDL37.12.R03|//*[text()='FZHJ']/../buildversion", "text|FZHJ-b_N1_FRM-DFE_050301_3434C930|//*[text()='FZHJ']/../..//soap-config/software/file[1]/version", "text|LTX_FZHJ-b_N1_FRM-DFE_050301_3434C930.LAR|//*[text()='FZHJ']/../..//soap-config/software/file[1]/name", "text|FZHJ-b_N1_FRM-JARRU_050301_EC6A0D6F|//*[text()='FZHJ']/../..//soap-config/software/file[2]/version", "text|LTX_FZHJ-b_N1_FRM-JARRU_050301_EC6A0D6F.LAR|//*[text()='FZHJ']/../..//soap-config/software/file[2]/name", "text|FZHJ-b_N1_FRM-PROP_050301_8F0E21EF|//*[text()='FZHJ']/../..//soap-config/software/file[3]/version", "text|LTX_FZHJ-b_N1_FRM-PROP_050301_8F0E21EF.LAR|//*[text()='FZHJ']/../..//soap-config/software/file[3]/name", "text|FZHJ-b_N1_FRM-SW_050301_44066037|//*[text()='FZHJ']/../..//soap-config/software/file[4]/version", "text|LTX_FZHJ-b_N1_FRM-SW_050301_44066037.LAR|//*[text()='FZHJ']/../..//soap-config/software/file[4]/name"]</msg>
<msg timestamp="20171220 06:00:00.978" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:00.978" starttime="20171220 05:59:39.940"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Upload File To Bts</arg>
<arg>${SAVE LOG DIRECTORY}${/}iphy.xml</arg>
<arg>iphy.xml</arg>
<arg>/ffs/run/simmode</arg>
<arg>host=192.168.255.20</arg>
</arguments>
<msg timestamp="20171220 06:00:00.979" level="TRACE">Arguments: [ 'Upload File To Bts' | '${SAVE LOG DIRECTORY}${/}iphy.xml' | 'iphy.xml' | '/ffs/run/simmode' | 'host=192.168.255.20' ]</msg>
<kw name="Upload File To Bts" library="tdd_ev_robotws">
<doc>upload file to bts use sftp.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}${/}iphy.xml</arg>
<arg>iphy.xml</arg>
<arg>/ffs/run/simmode</arg>
<arg>host=192.168.255.20</arg>
</arguments>
<msg timestamp="20171220 06:00:00.980" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/iphy.xml' | 'iphy.xml' | '/ffs/run/simmode' | host='192.168.255.20' ]</msg>
<msg timestamp="20171220 06:00:03.979" level="FAIL">sftp failed, host:'192.168.255.20', port:'22', reason:'Unable to connect to 192.168.255.20: [Errno 113] No route to host'</msg>
<msg timestamp="20171220 06:00:03.979" level="DEBUG">Traceback (most recent call last):
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ev_robotws/resources/py_resource/enb_resource.py", line 585, in upload_file_to_bts
    host_dir=bts_filepath)
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ev_robotws/CommonLib/connections/sftp_control.py", line 507, in sftp_upload
    sftp = Sftp(host, port, username, password)
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ev_robotws/CommonLib/connections/sftp_control.py", line 33, in __init__
    (host, port, error))</msg>
<status status="FAIL" endtime="20171220 06:00:03.979" starttime="20171220 06:00:00.979"></status>
</kw>
<msg timestamp="20171220 06:00:03.980" level="TRACE">Return: (b'FAIL', "sftp failed, host:'192.168.255.20', port:'22', reason:'Unable to connect to 192.168.255.20: [Errno 113] No route to host'")</msg>
<status status="PASS" endtime="20171220 06:00:03.980" starttime="20171220 06:00:00.979"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Upload File To Bts</arg>
<arg>${SAVE LOG DIRECTORY}${/}iphy.xml</arg>
<arg>iphy.xml</arg>
<arg>/ffs/run/simmode</arg>
<arg>host=192.168.200.1</arg>
</arguments>
<msg timestamp="20171220 06:00:03.980" level="TRACE">Arguments: [ 'Upload File To Bts' | '${SAVE LOG DIRECTORY}${/}iphy.xml' | 'iphy.xml' | '/ffs/run/simmode' | 'host=192.168.200.1' ]</msg>
<kw name="Upload File To Bts" library="tdd_ev_robotws">
<doc>upload file to bts use sftp.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}${/}iphy.xml</arg>
<arg>iphy.xml</arg>
<arg>/ffs/run/simmode</arg>
<arg>host=192.168.200.1</arg>
</arguments>
<msg timestamp="20171220 06:00:03.981" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/iphy.xml' | 'iphy.xml' | '/ffs/run/simmode' | host='192.168.200.1' ]</msg>
<msg timestamp="20171220 06:00:04.105" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 06:00:04.170" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:00:04.248" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 06:00:04.249" level="DEBUG">[chan 0] open('/ffs/run/simmode/iphy.xml', 'wb')</msg>
<msg timestamp="20171220 06:00:04.292" level="DEBUG">[chan 0] open('/ffs/run/simmode/iphy.xml', 'wb') -&gt; 00000000</msg>
<msg timestamp="20171220 06:00:04.292" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 06:00:04.433" level="DEBUG">[chan 0] lstat('/ffs/run/simmode/iphy.xml')</msg>
<msg timestamp="20171220 06:00:04.435" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 06:00:04.435" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 06:00:04.438" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.200.1', port:'22'</msg>
<msg timestamp="20171220 06:00:04.438" level="INFO">[sftp_control.py@39] sftp connect to '192.168.200.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 06:00:04.438" level="INFO">[sftp_control.py@61] sftp upload from '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/iphy.xml' to '/ffs/run/simmode/iphy.xml' is ok.</msg>
<msg timestamp="20171220 06:00:04.438" level="INFO">[sftp_control.py@176] /ffs/run/simmode/iphy.xml</msg>
<msg timestamp="20171220 06:00:04.438" level="DEBUG">[sftp_control.py@54] sftp get file size '/ffs/run/simmode/iphy.xml' is wrong: not a file or not exist</msg>
<msg timestamp="20171220 06:00:04.438" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 06:00:04.438" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:04.438" starttime="20171220 06:00:03.981"></status>
</kw>
<msg timestamp="20171220 06:00:04.438" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171220 06:00:04.438" starttime="20171220 06:00:03.980"></status>
</kw>
<msg timestamp="20171220 06:00:04.439" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:04.439" starttime="20171220 05:59:39.939"></status>
</kw>
<kw name="Start To Capture Logs" library="DevHZ5_iphy_resource">
<arguments>
<arg>startup</arg>
</arguments>
<msg timestamp="20171220 06:00:04.439" level="TRACE">Arguments: [ ${tag}='startup' ]</msg>
<kw name="Start To Capture BTS Logs" library="DevHZ5_common_resource">
<doc>capture bts udplog and wireshark log, and so on</doc>
<arguments>
<arg>${tag}</arg>
</arguments>
<msg timestamp="20171220 06:00:04.440" level="TRACE">Arguments: [ ${tag}='startup' ]</msg>
<kw name="Start To Capture BTS UdpLogs" library="DevHZ5_common_resource">
<arguments>
<arg>${tag}</arg>
</arguments>
<msg timestamp="20171220 06:00:04.440" level="TRACE">Arguments: [ ${tag}='startup' ]</msg>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FULL_LOGS}</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Set Mac Log Level</arg>
<arg>1231,1232,1233,1234</arg>
<arg>FID_RA=DEBUG</arg>
</arguments>
<msg timestamp="20171220 06:00:04.441" level="TRACE">Arguments: [ False | 'Run Keyword And Ignore Error' | 'Set Mac Log Level' | '1231,1232,1233,1234' | 'FID_RA=DEBUG' ]</msg>
<msg timestamp="20171220 06:00:04.441" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:04.441" starttime="20171220 06:00:04.441"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${tag.__len__()}==0</arg>
<arg>btslog</arg>
<arg>btslog_${tag}</arg>
</arguments>
<assign>
<var>${btslog_name}</var>
</assign>
<msg timestamp="20171220 06:00:04.442" level="TRACE">Arguments: [ '7==0' | 'btslog' | 'btslog_${tag}' ]</msg>
<msg timestamp="20171220 06:00:04.442" level="TRACE">Return: 'btslog_startup'</msg>
<msg timestamp="20171220 06:00:04.442" level="INFO">${btslog_name} = btslog_startup</msg>
<status status="PASS" endtime="20171220 06:00:04.442" starttime="20171220 06:00:04.442"></status>
</kw>
<kw name="Start Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword starts catching of BTS system(UDP) log.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}${/}${btslog_name}.LOG</arg>
</arguments>
<msg timestamp="20171220 06:00:04.443" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/btslog_startup.LOG' ]</msg>
<msg timestamp="20171220 06:00:04.491" level="DEBUG">[process_control.py@162] Run command: pkill -f btslog.exe</msg>
<msg timestamp="20171220 06:00:04.491" level="DEBUG">[process_control.py@170]</msg>
<msg timestamp="20171220 06:00:04.491" level="DEBUG">[process_control.py@162] Run command: pkill -f BTSlog2.exe</msg>
<msg timestamp="20171220 06:00:04.491" level="DEBUG">[process_control.py@170]</msg>
<msg timestamp="20171220 06:00:04.491" level="DEBUG">[process_control.py@162] Run command: pkill -f btslog</msg>
<msg timestamp="20171220 06:00:04.491" level="DEBUG">[process_control.py@170]</msg>
<msg timestamp="20171220 06:00:04.491" level="INFO">[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'</msg>
<msg timestamp="20171220 06:00:04.491" level="INFO">[btslog_control.py@174] use ip is 192.168.255.126</msg>
<msg timestamp="20171220 06:00:04.491" level="INFO">[file_common.py@209] Directory "/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705" already exists, no need to create it again.</msg>
<msg timestamp="20171220 06:00:04.492" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:04.492" starttime="20171220 06:00:04.443"></status>
</kw>
<msg timestamp="20171220 06:00:04.492" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:04.492" starttime="20171220 06:00:04.440"></status>
</kw>
<kw name="Start To Capture Wireshark Log" library="DevHZ5_common_resource">
<doc>capture bts udplog and wireshark log, and so on</doc>
<arguments>
<arg>${tag}</arg>
</arguments>
<msg timestamp="20171220 06:00:04.493" level="TRACE">Arguments: [ ${tag}='startup' ]</msg>
<kw name="Get Bbu Type" library="tdd_ev_robotws">
<doc>This keyword will get BBU type.</doc>
<assign>
<var>${bbu_type}</var>
</assign>
<msg timestamp="20171220 06:00:04.494" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 06:00:04.598" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 06:00:04.614" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:00:04.689" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 06:00:04.692" level="DEBUG">[chan 0] lstat('/proc/device-tree/module-identity//unit-id')</msg>
<msg timestamp="20171220 06:00:04.693" level="DEBUG">[chan 0] lstat('/proc/device-tree/module-identity//unit-id')</msg>
<msg timestamp="20171220 06:00:04.695" level="DEBUG">[chan 0] stat('/proc/device-tree/module-identity//unit-id')</msg>
<msg timestamp="20171220 06:00:04.696" level="DEBUG">[chan 0] open('/proc/device-tree/module-identity//unit-id', 'rb')</msg>
<msg timestamp="20171220 06:00:04.696" level="DEBUG">[chan 0] open('/proc/device-tree/module-identity//unit-id', 'rb') -&gt; 00000000</msg>
<msg timestamp="20171220 06:00:04.699" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 06:00:04.701" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 06:00:04.701" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 06:00:04.705" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.255.1', port:'22'</msg>
<msg timestamp="20171220 06:00:04.705" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 06:00:04.705" level="INFO">[sftp_control.py@176] /proc/device-tree/module-identity//unit-id</msg>
<msg timestamp="20171220 06:00:04.705" level="DEBUG">[sftp_control.py@49] sftp get file size '/proc/device-tree/module-identity//unit-id' is 0KB</msg>
<msg timestamp="20171220 06:00:04.705" level="INFO">[sftp_control.py@79] sftp download from '/proc/device-tree/module-identity//unit-id' to '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/unit-id' is ok. local file size is 0k</msg>
<msg timestamp="20171220 06:00:04.705" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 06:00:04.705" level="TRACE">Return: b'ASIA'</msg>
<msg timestamp="20171220 06:00:04.705" level="INFO">${bbu_type} = ASIA</msg>
<status status="PASS" endtime="20171220 06:00:04.705" starttime="20171220 06:00:04.494"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${bbu_type}' == 'FSIP' or '${bbu_type}' == 'ASIA'</arg>
<arg>br1</arg>
<arg>eth3</arg>
</arguments>
<assign>
<var>${enb_s1_interface}</var>
</assign>
<msg timestamp="20171220 06:00:04.706" level="TRACE">Arguments: [ "'ASIA' == 'FSIP' or 'ASIA' == 'ASIA'" | 'br1' | 'eth3' ]</msg>
<msg timestamp="20171220 06:00:04.706" level="TRACE">Return: 'br1'</msg>
<msg timestamp="20171220 06:00:04.706" level="INFO">${enb_s1_interface} = br1</msg>
<status status="PASS" endtime="20171220 06:00:04.706" starttime="20171220 06:00:04.706"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${tag.__len__()}==0</arg>
<arg>wireshark</arg>
<arg>wireshark_${tag}</arg>
</arguments>
<assign>
<var>${wireshare_name}</var>
</assign>
<msg timestamp="20171220 06:00:04.707" level="TRACE">Arguments: [ '7==0' | 'wireshark' | 'wireshark_${tag}' ]</msg>
<msg timestamp="20171220 06:00:04.707" level="TRACE">Return: 'wireshark_startup'</msg>
<msg timestamp="20171220 06:00:04.707" level="INFO">${wireshare_name} = wireshark_startup</msg>
<status status="PASS" endtime="20171220 06:00:04.707" starttime="20171220 06:00:04.706"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Start FCTB tcpdump</arg>
<arg>${wireshare_name}</arg>
<arg>${enb_s1_interface}</arg>
<arg>-s 1600</arg>
</arguments>
<msg timestamp="20171220 06:00:04.708" level="TRACE">Arguments: [ 'Start FCTB tcpdump' | '${wireshare_name}' | '${enb_s1_interface}' | '-s 1600' ]</msg>
<kw name="Start FCTB tcpdump" library="enb_resource">
<doc>This keyword start tshark</doc>
<arguments>
<arg>${wireshare_name}</arg>
<arg>${enb_s1_interface}</arg>
<arg>-s 1600</arg>
</arguments>
<msg timestamp="20171220 06:00:04.709" level="TRACE">Arguments: [ ${name}='wireshark_startup' | ${interface}='br1' | ${option}='-s 1600' ]</msg>
<kw name="Connect To Bts" library="tdd_ev_robotws">
<doc>connect to BTS with given ip/user/passwd.</doc>
<assign>
<var>${BTS_CONNECTION}</var>
</assign>
<msg timestamp="20171220 06:00:04.709" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 06:00:04.821" level="DEBUG">Adding ssh-rsa host key for 192.168.255.1: d72735f0fd9701b32d60938382e7a0e8</msg>
<msg timestamp="20171220 06:00:04.822" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 06:00:04.895" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:00:14.949" level="INFO">[enb_command_control.py@33] argument host is: 192.168.255.1</msg>
<msg timestamp="20171220 06:00:14.949" level="INFO">[ssh_common.py@203] Last login: Wed Dec 20 13:00:04 CST 2017 from 192.168.255.126 on ssh
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 06:00:14.949" level="DEBUG">[ssh_common.py@208] Select pattern '[\\;\[\.\-a-zA-Z0-9\s]+@.*[$&gt;#]{1}\s{0,1}$' as default pattern</msg>
<msg timestamp="20171220 06:00:14.950" level="TRACE">Return: &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c1830&gt;</msg>
<msg timestamp="20171220 06:00:14.950" level="INFO">${BTS_CONNECTION} = 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c1830&gt;</msg>
<status status="PASS" endtime="20171220 06:00:14.950" starttime="20171220 06:00:04.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${BTS_CONNECTION}</arg>
</arguments>
<msg timestamp="20171220 06:00:14.950" level="TRACE">Arguments: [ '${BTS_CONNECTION}' ]</msg>
<msg timestamp="20171220 06:00:14.951" level="INFO">${BTS_CONNECTION} = 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c1830&gt;</msg>
<msg timestamp="20171220 06:00:14.951" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:14.951" starttime="20171220 06:00:14.950"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>tcpdump -i ${interface} \ -w /tmp/${name}.pcap ${option}&amp;</arg>
</arguments>
<msg timestamp="20171220 06:00:14.952" level="TRACE">Arguments: [ 'tcpdump -i br1  -w /tmp/wireshark_startup.pcap -s 1600&amp;' ]</msg>
<msg timestamp="20171220 06:00:15.060" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c1830&gt;</msg>
<msg timestamp="20171220 06:00:15.060" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 06:00:15.060" level="INFO">[ssh_common.py@258] Execute command: tcpdump -i br1  -w /tmp/wireshark_startup.pcap -s 1600&amp;</msg>
<msg timestamp="20171220 06:00:15.060" level="INFO">[ssh_common.py@314] Get Response: tcpdump -i br1  -w /tmp/wireshark_startup.pcap -s 1600&amp;
[1] 27414
root@fctj-4a:~ &gt;</msg>
<msg timestamp="20171220 06:00:15.061" level="TRACE">Return: b'tcpdump -i br1  -w /tmp/wireshark_startup.pcap -s 1600&amp;\r\n[1] 27414\r\nroot@fctj-4a:~ &gt;'</msg>
<status status="PASS" endtime="20171220 06:00:15.061" starttime="20171220 06:00:14.951"></status>
</kw>
<msg timestamp="20171220 06:00:15.061" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:15.061" starttime="20171220 06:00:04.708"></status>
</kw>
<msg timestamp="20171220 06:00:15.061" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171220 06:00:15.061" starttime="20171220 06:00:04.707"></status>
</kw>
<kw type="teardown" name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171220 06:00:15.062" level="TRACE">Arguments: [ &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt; ]</msg>
<msg timestamp="20171220 06:00:15.063" level="INFO">[connection_mgr.py@147] Switch to connection: 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;.</msg>
<msg timestamp="20171220 06:00:15.063" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:15.063" starttime="20171220 06:00:15.061"></status>
</kw>
<msg timestamp="20171220 06:00:15.063" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:15.064" starttime="20171220 06:00:04.493"></status>
</kw>
<kw name="Start To Capture Infomodel Log" library="DevHZ5_common_resource">
<msg timestamp="20171220 06:00:15.064" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Start Infomodel</arg>
<arg>port=${BTS_INFOMODEL_PORT}</arg>
</arguments>
<msg timestamp="20171220 06:00:15.065" level="TRACE">Arguments: [ 'Start Infomodel' | 'port=${BTS_INFOMODEL_PORT}' ]</msg>
<kw name="Start Infomodel" library="tdd_ev_robotws">
<doc>Setup InfoModel library and Connect to InfoModel.</doc>
<arguments>
<arg>port=${BTS_INFOMODEL_PORT}</arg>
</arguments>
<msg timestamp="20171220 06:00:15.066" level="TRACE">Arguments: [ port=12345 ]</msg>
<msg timestamp="20171220 06:00:22.304" level="DEBUG">[process_control.py@162] Run command: pkill -f .*python.*nameserver.*</msg>
<msg timestamp="20171220 06:00:22.304" level="DEBUG">[process_control.py@170]</msg>
<msg timestamp="20171220 06:00:22.304" level="DEBUG">[process_control.py@162] Run command: pkill -f .*javaw.exe.*-jar.*IMViewer.*</msg>
<msg timestamp="20171220 06:00:22.304" level="DEBUG">[process_control.py@170]</msg>
<msg timestamp="20171220 06:00:22.304" level="DEBUG">[process_control.py@162] Run command: pkill -f .*javaw.exe.*-jar.*IMCommander.*</msg>
<msg timestamp="20171220 06:00:22.304" level="DEBUG">[process_control.py@170]</msg>
<msg timestamp="20171220 06:00:22.304" level="INFO">[infomodel_control.py@157] set up infomodel with following info succeed .
    details: address=192.168.255.129, port=12345, definitions_file_path=None</msg>
<msg timestamp="20171220 06:00:22.304" level="INFO">[infomodel_control.py@161] start infomodel succeed .</msg>
<msg timestamp="20171220 06:00:22.304" level="INFO">[infomodel_control.py@163] start infomodel logger succeed .</msg>
<msg timestamp="20171220 06:00:22.304" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:22.304" starttime="20171220 06:00:15.065"></status>
</kw>
<msg timestamp="20171220 06:00:22.304" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171220 06:00:22.304" starttime="20171220 06:00:15.065"></status>
</kw>
<msg timestamp="20171220 06:00:22.305" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:22.305" starttime="20171220 06:00:15.064"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FULL_LOGS}</arg>
<arg>Start To Capture Emil Log</arg>
<arg>${tag}</arg>
</arguments>
<msg timestamp="20171220 06:00:22.306" level="TRACE">Arguments: [ False | 'Start To Capture Emil Log' | '${tag}' ]</msg>
<msg timestamp="20171220 06:00:22.306" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:22.306" starttime="20171220 06:00:22.305"></status>
</kw>
<msg timestamp="20171220 06:00:22.306" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:22.306" starttime="20171220 06:00:04.440"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${tag.__len__()}==0</arg>
<arg>iphylog.LOG</arg>
<arg>iphylog_${tag}.LOG</arg>
</arguments>
<assign>
<var>${iphylog_name}</var>
</assign>
<msg timestamp="20171220 06:00:22.306" level="TRACE">Arguments: [ '7==0' | 'iphylog.LOG' | 'iphylog_${tag}.LOG' ]</msg>
<msg timestamp="20171220 06:00:22.307" level="TRACE">Return: 'iphylog_startup.LOG'</msg>
<msg timestamp="20171220 06:00:22.307" level="INFO">${iphylog_name} = iphylog_startup.LOG</msg>
<status status="PASS" endtime="20171220 06:00:22.307" starttime="20171220 06:00:22.306"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Iphy Start Udp Log</arg>
<arg>${SAVE LOG DIRECTORY}${/}${iphylog_name}</arg>
</arguments>
<msg timestamp="20171220 06:00:22.307" level="TRACE">Arguments: [ 'Iphy Start Udp Log' | '${SAVE LOG DIRECTORY}${/}${iphylog_name}' ]</msg>
<kw name="iphy_start_udp_log" library="iphy_resource">
<arguments>
<arg>${SAVE LOG DIRECTORY}${/}${iphylog_name}</arg>
</arguments>
<msg timestamp="20171220 06:00:22.308" level="TRACE">Arguments: [ ${full_log_name}='/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/iphylog_startup.LOG' | ${ip}='192.168.255.127' | ${alias}='default' ]</msg>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>os.path.dirname("${full_log_name}")</arg>
<arg>modules=os</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<msg timestamp="20171220 06:00:22.309" level="TRACE">Arguments: [ 'os.path.dirname("/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/iphylog_startup.LOG")' | modules='os' ]</msg>
<msg timestamp="20171220 06:00:22.309" level="TRACE">Return: b'/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705'</msg>
<msg timestamp="20171220 06:00:22.309" level="INFO">${dir} = /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705</msg>
<status status="PASS" endtime="20171220 06:00:22.309" starttime="20171220 06:00:22.308"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>os.path.basename("${full_log_name}")</arg>
<arg>modules=os</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20171220 06:00:22.310" level="TRACE">Arguments: [ 'os.path.basename("/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/iphylog_startup.LOG")' | modules='os' ]</msg>
<msg timestamp="20171220 06:00:22.310" level="TRACE">Return: b'iphylog_startup.LOG'</msg>
<msg timestamp="20171220 06:00:22.310" level="INFO">${name} = iphylog_startup.LOG</msg>
<status status="PASS" endtime="20171220 06:00:22.310" starttime="20171220 06:00:22.310"></status>
</kw>
<kw name="Start Collect Iphy Syslog" library="tdd_ue">
<doc>Start collecting iphy syslog.</doc>
<arguments>
<arg>log_name=${name}</arg>
<arg>log_dir=${dir}</arg>
</arguments>
<msg timestamp="20171220 06:00:22.311" level="TRACE">Arguments: [ log_name=b'iphylog_startup.LOG' | log_dir=b'/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705' ]</msg>
<msg timestamp="20171220 06:00:22.392" level="DEBUG">Adding ssh-rsa host key for 127.0.0.1: 429be5feff5aa210b381beaac8c3a542</msg>
<msg timestamp="20171220 06:00:22.393" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 06:00:22.425" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:00:22.780" level="DEBUG">Adding ssh-rsa host key for [127.0.0.1]:12107: ea9911811e1060471ac968ead0e8421b</msg>
<msg timestamp="20171220 06:00:22.781" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 06:00:22.863" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:00:22.968" level="DEBUG">[chan 1] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:00:22.984" level="INFO">[chan 1] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 06:00:22.984" level="DEBUG">[chan 1] normalize('.')</msg>
<msg timestamp="20171220 06:00:22.985" level="DEBUG">[chan 1] stat('/ffs/run')</msg>
<msg timestamp="20171220 06:00:22.986" level="DEBUG">[chan 1] listdir('/ffs/run')</msg>
<msg timestamp="20171220 06:00:23.030" level="DEBUG">[chan 1] normalize('/ffs/run')</msg>
<msg timestamp="20171220 06:00:23.032" level="DEBUG">[chan 1] stat('/ffs/fs2/swconfig.txt')</msg>
<msg timestamp="20171220 06:00:23.033" level="DEBUG">[chan 1] open('/ffs/fs2/swconfig.txt', 'rb')</msg>
<msg timestamp="20171220 06:00:23.034" level="DEBUG">[chan 1] open('/ffs/fs2/swconfig.txt', 'rb') -&gt; 00000000</msg>
<msg timestamp="20171220 06:00:23.038" level="DEBUG">[chan 1] close(00000000)</msg>
<msg timestamp="20171220 06:00:23.039" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 06:00:23.590" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 06:00:23.592" level="DEBUG">swconfig.txt is in /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/log/LTE2029-A-f_20171220060022/kiss_debug_log/swconfig.txt</msg>
<msg timestamp="20171220 06:00:23.592" level="DEBUG">0x10042=0xC0A8C87E #ccs.service.aasyslog.udpaddress
</msg>
<msg timestamp="20171220 06:00:23.592" level="DEBUG">ip used for iphy syslog get from swconfig , is : 192.168.200.126</msg>
<msg timestamp="20171220 06:00:23.698" level="DEBUG">Adding ssh-rsa host key for 127.0.0.1: 429be5feff5aa210b381beaac8c3a542</msg>
<msg timestamp="20171220 06:00:23.699" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 06:00:23.715" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:00:23.804" level="INFO">Attempting to stop syslog but no instance found.</msg>
<msg timestamp="20171220 06:00:24.190" level="INFO">Syslog started successfully!
Sylog pid: None</msg>
<msg timestamp="20171220 06:00:24.190" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:24.191" starttime="20171220 06:00:22.311"></status>
</kw>
<msg timestamp="20171220 06:00:24.191" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:24.191" starttime="20171220 06:00:22.308"></status>
</kw>
<msg timestamp="20171220 06:00:24.191" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171220 06:00:24.191" starttime="20171220 06:00:22.307"></status>
</kw>
<kw name="Start RRC Log" library="DevHZ5_iphy_resource">
<msg timestamp="20171220 06:00:24.192" level="TRACE">Arguments: [ ${tag}=b'' ]</msg>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Iphy Execute Ue Command Without Kargs</arg>
<arg>sim_trace uec=1 protocol=rrc on</arg>
</arguments>
<msg timestamp="20171220 06:00:24.193" level="TRACE">Arguments: [ 'Iphy Execute Ue Command Without Kargs' | 'sim_trace uec=1 protocol=rrc on' ]</msg>
<kw name="Iphy Execute Ue Command Without Kargs" library="lib">
<doc>1. to use iphy_execute_ue_command in python, it will use the instance in robot.</doc>
<arguments>
<arg>sim_trace uec=1 protocol=rrc on</arg>
</arguments>
<msg timestamp="20171220 06:00:24.193" level="TRACE">Arguments: [ 'sim_trace uec=1 protocol=rrc on' ]</msg>
<msg timestamp="20171220 06:00:24.195" level="FAIL">AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<msg timestamp="20171220 06:00:24.195" level="DEBUG">Traceback (most recent call last):
  File "/opt/iphy/trunk_sran/DevHZ5_SRAN/resources/lib/src/son.py", line 451, in iphy_execute_ue_command_without_kargs
    out = _ue_obj.execute_ue_command(command, pass_regexp, fail_regexp, timeout)
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ue/interface.py", line 673, in execute_ue_command
    return self.store.get(alias)['ue_setup'].execute_command(command, pass_regexp, fail_regexp, timeout)
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_store/store.py", line 81, in get
    "Please setup library before any other operation.".format(alias))</msg>
<status status="FAIL" endtime="20171220 06:00:24.195" starttime="20171220 06:00:24.193"></status>
</kw>
<msg timestamp="20171220 06:00:24.195" level="TRACE">Return: (b'FAIL', "AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.")</msg>
<status status="PASS" endtime="20171220 06:00:24.195" starttime="20171220 06:00:24.192"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${tag.__len__()}==0</arg>
<arg>rrc.log</arg>
<arg>rrc_${tag}.log</arg>
</arguments>
<assign>
<var>${rrc_name}</var>
</assign>
<msg timestamp="20171220 06:00:24.196" level="TRACE">Arguments: [ '0==0' | 'rrc.log' | 'rrc_${tag}.log' ]</msg>
<msg timestamp="20171220 06:00:24.196" level="TRACE">Return: 'rrc.log'</msg>
<msg timestamp="20171220 06:00:24.196" level="INFO">${rrc_name} = rrc.log</msg>
<status status="PASS" endtime="20171220 06:00:24.196" starttime="20171220 06:00:24.195"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171220 06:00:24.197" level="TRACE">Arguments: [ &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt; ]</msg>
<msg timestamp="20171220 06:00:24.199" level="INFO">[connection_mgr.py@147] Switch to connection: 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;.</msg>
<msg timestamp="20171220 06:00:24.199" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:24.199" starttime="20171220 06:00:24.197"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Tail Log</arg>
<arg>${WTS_DIR}/egate_console.log</arg>
<arg>${WTS_DIR}/${rrc_name}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${TAIL_PID}</var>
</assign>
<msg timestamp="20171220 06:00:24.200" level="TRACE">Arguments: [ 'Tail Log' | '${WTS_DIR}/egate_console.log' | '${WTS_DIR}/${rrc_name}' ]</msg>
<kw name="Tail Log" library="lib">
<arguments>
<arg>${WTS_DIR}/egate_console.log</arg>
<arg>${WTS_DIR}/${rrc_name}</arg>
</arguments>
<msg timestamp="20171220 06:00:24.200" level="TRACE">Arguments: [ '/opt/iphy/latest/egate_console.log' | '/opt/iphy/latest/rrc.log' ]</msg>
<msg timestamp="20171220 06:00:24.535" level="INFO">[connection_mgr.py@208] Current connection: 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 06:00:24.535" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 06:00:24.535" level="INFO">[ssh_common.py@258] Execute command: ps -ef | grep 'tail' | grep -v -w grep | grep '/opt/iphy/latest/egate_console.log'</msg>
<msg timestamp="20171220 06:00:24.535" level="INFO">[ssh_common.py@314] Get Response: ps -ef | grep 'tail' | grep -v -w grep | grep '/opt/iphy/latest/egat e_console.log'
ute@test:~$</msg>
<msg timestamp="20171220 06:00:24.535" level="INFO">[son.py@184] output of 'ps -ef | grep 'tail' | grep -v -w grep | grep '/opt/iphy/latest/egate_console.log'' is ''</msg>
<msg timestamp="20171220 06:00:24.535" level="INFO">[connection_mgr.py@208] Current connection: 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 06:00:24.535" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 06:00:24.535" level="INFO">[ssh_common.py@258] Execute command: tail -F -n 0 /opt/iphy/latest/egate_console.log &gt; /opt/iphy/latest/rrc.log &amp;</msg>
<msg timestamp="20171220 06:00:24.535" level="INFO">[ssh_common.py@314] Get Response: tail -F -n 0 /opt/iphy/latest/egate_console.log &gt; /opt/iphy/latest/r rc.log &amp;
[1] 3504
ute@test:~$</msg>
<msg timestamp="20171220 06:00:24.535" level="INFO">[son.py@184] output of 'tail -F -n 0 /opt/iphy/latest/egate_console.log &gt; /opt/iphy/latest/rrc.log &amp;' is '[1] 3504'</msg>
<msg timestamp="20171220 06:00:24.535" level="INFO">[connection_mgr.py@208] Current connection: 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 06:00:24.535" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 06:00:24.535" level="INFO">[ssh_common.py@258] Execute command: ps -ef | grep 'tail' | grep -v -w grep | grep '/opt/iphy/latest/egate_console.log'</msg>
<msg timestamp="20171220 06:00:24.535" level="INFO">[ssh_common.py@314] Get Response: ps -ef | grep 'tail' | grep -v -w grep | grep '/opt/iphy/latest/egat e_console.log'
ute       3504  3183  0 06:00 pts/6    00:00:00 tail -F -n 0 /opt/iphy/latest/egate_console.log
ute@test:~$</msg>
<msg timestamp="20171220 06:00:24.535" level="INFO">[son.py@184] output of 'ps -ef | grep 'tail' | grep -v -w grep | grep '/opt/iphy/latest/egate_console.log'' is 'ute       3504  3183  0 06:00 pts/6    00:00:00 tail -F -n 0 /opt/iphy/latest/egate_console.log'</msg>
<msg timestamp="20171220 06:00:24.536" level="TRACE">Return: [b'3504']</msg>
<status status="PASS" endtime="20171220 06:00:24.536" starttime="20171220 06:00:24.200"></status>
</kw>
<msg timestamp="20171220 06:00:24.536" level="TRACE">Return: (b'PASS', [b'3504'])</msg>
<msg timestamp="20171220 06:00:24.536" level="INFO">${status} = PASS</msg>
<msg timestamp="20171220 06:00:24.536" level="INFO">${TAIL_PID} = ['3504']</msg>
<status status="PASS" endtime="20171220 06:00:24.536" starttime="20171220 06:00:24.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TAIL_PID}</arg>
</arguments>
<msg timestamp="20171220 06:00:24.537" level="TRACE">Arguments: [ '${TAIL_PID}' ]</msg>
<msg timestamp="20171220 06:00:24.538" level="INFO">${TAIL_PID} = ['3504']</msg>
<msg timestamp="20171220 06:00:24.538" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:24.538" starttime="20171220 06:00:24.537"></status>
</kw>
<msg timestamp="20171220 06:00:24.538" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:24.538" starttime="20171220 06:00:24.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FULL_LOGS}</arg>
<arg>Start To Capture WTS Ttitrace</arg>
</arguments>
<msg timestamp="20171220 06:00:24.539" level="TRACE">Arguments: [ False | 'Start To Capture WTS Ttitrace' ]</msg>
<msg timestamp="20171220 06:00:24.539" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:24.539" starttime="20171220 06:00:24.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FULL_LOGS}</arg>
<arg>Start To Capture Extra Logs For WTS Debug</arg>
</arguments>
<msg timestamp="20171220 06:00:24.540" level="TRACE">Arguments: [ False | 'Start To Capture Extra Logs For WTS Debug' ]</msg>
<msg timestamp="20171220 06:00:24.540" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:24.540" starttime="20171220 06:00:24.539"></status>
</kw>
<msg timestamp="20171220 06:00:24.540" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:24.540" starttime="20171220 06:00:04.439"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Upload Trs Conf file</arg>
</arguments>
<msg timestamp="20171220 06:00:24.541" level="TRACE">Arguments: [ 'Upload Trs Conf file' ]</msg>
<msg timestamp="20171220 06:00:24.541" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:24.541" starttime="20171220 06:00:24.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${POSITION}' !='None'</arg>
<arg>Append To List</arg>
<arg>${params}</arg>
<arg>SMOD-1:positionInSubrack=${POSITION}</arg>
</arguments>
<msg timestamp="20171220 06:00:24.542" level="TRACE">Arguments: [ "'RightSide' !='None'" | 'Append To List' | '${params}' | 'SMOD-1:positionInSubrack=${POSITION}' ]</msg>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${params}</arg>
<arg>SMOD-1:positionInSubrack=${POSITION}</arg>
</arguments>
<msg timestamp="20171220 06:00:24.542" level="TRACE">Arguments: [ ['delete:LNADJ.*', 'delete:LNREL.*', 'delete:LNNEIH.*'] | 'SMOD-1:positionInSubrack=RightSide' ]</msg>
<msg timestamp="20171220 06:00:24.543" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:24.543" starttime="20171220 06:00:24.542"></status>
</kw>
<msg timestamp="20171220 06:00:24.543" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:00:24.543" starttime="20171220 06:00:24.541"></status>
</kw>
<kw name="Modify Scf And Perform Full Commission" library="tdd_ev_robotws.DomainLib.oam_lib">
<doc>This keyword is an extension based on tdd_ev_robotws.modify_and_upload_scf_file in order to:</doc>
<arguments>
<arg>${CONFIG_PATH}${/}${tl_type}${/}SCFC_1.xml</arg>
<arg>${params}</arg>
</arguments>
<msg timestamp="20171220 06:00:24.544" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/IPHY_R4_CONF/3CELLs/SCFC_1.xml' | ['delete:LNADJ.*', 'delete:LNREL.*', 'delete:LNNEIH.*', 'SMOD-1:positionInSubrack=RightSide'] ]</msg>
<msg timestamp="20171220 06:00:24.555" level="INFO">${SCF_TEMPLATE_USED_192.168.255.129} = /opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/IPHY_R4_CONF/3CELLs/SCFC_1.xml</msg>
<msg timestamp="20171220 06:00:24.557" html="yes" level="INFO">Copied file from '&lt;a href="file:///opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/IPHY_R4_CONF/3CELLs/SCFC_1.xml"&gt;/opt/iphy/trunk_sran/DevHZ5_SRAN/resources/configuration_file/IPHY_R4_CONF/3CELLs/SCFC_1.xml&lt;/a&gt;' to '&lt;a href="file:///opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/scf_modified_20171220060024.xml"&gt;/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/scf_modified_20171220060024.xml&lt;/a&gt;'.</msg>
<msg timestamp="20171220 06:00:25.064" level="DEBUG">Adding ssh-rsa host key for 127.0.0.1: 429be5feff5aa210b381beaac8c3a542</msg>
<msg timestamp="20171220 06:00:25.065" level="DEBUG">Trying discovered key a2b06d4a3c864637bace8c28f0ebe82a in /home/ute/.ssh/id_rsa</msg>
<msg timestamp="20171220 06:00:25.098" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:00:25.204" level="INFO">/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/resource/node/linux/bin/node --expose-gc /opt/ute/python/lib/python2.7/site-packages/ute_common_admin/resource/src/main.js --bts-host=localhost --bts-port=34238 --bts-username=Nemuadmin --bts-password=nemuuser --debug=/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/admin_api_full_127.0.0.1.log --interval=5000 --cli-port=39193 --bundles-dir=/tmp/tmpRpebax --insecure</msg>
<msg timestamp="20171220 06:00:25.212" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:00:25.212" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:00:27.214" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:00:27.214" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:00:29.221" level="INFO">Recived response: Connection opened.</msg>
<msg timestamp="20171220 06:00:29.222" level="INFO">Send message: {"type": "ADMIN_API", "payload": {"requestType": "infoModel", "requestId": 36723, "parameters": {"name": "abnormalities", "parameters": {"type": "currentAlarms"}}}}</msg>
<msg timestamp="20171220 06:00:32.586" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "completed", "requestId": 36723, "requestMessage": [{"degradedCells": "", "faultId": 6203, "alarmingResource": "/MRBTS-1/RAT-1/RUNTIME_VIEW-4/MRBTS_R-4/LNBTS_R-1/LNADJ_R-1", "hwPath": "N/A", "detailsAlarmId": "7657 -", "number": 7657, "alarmId": 7657, "btsObservationTime": "20171220125446.615+0800", "impactedCells": "-", "faultName": "Transport layer connection failure in X2 interface", "alarmName": "-", "distName": "/MRBTS-1/RAT-1/LTS-4/LNBTS_L-4/ALARM_L-3", "destinationIPAddr": "1.1.1.1", "technology": "LTE", "notifier": "MRBTS-1/LNBTS-1/LNADJ-1", "severity": "Major"}]}}</msg>
<msg timestamp="20171220 06:00:32.587" level="INFO">Send message: {"type": "ADMIN_API", "payload": {"requestType": "procedure", "requestId": 97389, "parameters": {"name": "downloadPlan", "parameters": {"skipParameterRelationErrors": true, "inputFileContent": "", "btsId": "1", "shouldBeActivated": true}}}}</msg>
<msg timestamp="20171220 06:00:41.803" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:00:41.803" level="INFO">Recived response: {"type": "FILE_TRANSFER", "payload": {"type": "SIZE", "id": 97389}}</msg>
<msg timestamp="20171220 06:00:41.803" level="INFO">Send message: {"type": "FILE_TRANSFER", "payload": {"data": 223383, "type": "SIZE", "id": 97389}}</msg>
<msg timestamp="20171220 06:00:41.867" level="INFO">Recived response: {"type": "FILE_TRANSFER", "payload": {"length": 223383, "type": "READ", "id": 97389, "offset": 0}}</msg>
<msg timestamp="20171220 06:00:41.954" level="INFO">Send message: {"type": "FILE_TRANSFER", "payload": {"data": "PD94bWwgdm ... &lt;type 'str'&gt; of length: 297844", "type": "READ", "id": 97389}}</msg>
<msg timestamp="20171220 06:00:46.819" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:00:56.235" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:01:01.236" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:01:06.551" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:01:11.517" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:01:16.782" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:01:21.784" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:01:27.053" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:01:32.019" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:01:37.284" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:01:42.285" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:01:47.500" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:01:52.501" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:01:57.766" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:02:02.732" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:02:07.947" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:02:12.948" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:02:18.263" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:02:23.264" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:02:28.479" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:02:33.481" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:02:38.696" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:02:43.697" level="INFO">Recived response: {"type": "ADMIN_API", "payload": {"requestStatus": "ongoing", "requestId": 97389, "requestMessage": "Waiting for response"}}</msg>
<msg timestamp="20171220 06:02:45.078" level="INFO">Exit code: -2</msg>
<msg timestamp="20171220 06:02:45.078" level="INFO">STDOUT
CLI LOG:  CLI server is listening on localhost:39193
</msg>
<msg timestamp="20171220 06:02:45.078" level="INFO">STDERR
</msg>
<msg timestamp="20171220 06:02:45.098" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 06:02:45.130" level="INFO">target scf path:/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/scf_modified_20171220060024.xml</msg>
<msg timestamp="20171220 06:02:45.130" level="INFO">[commission_extend.py@966] parameters to be changed:[u'delete:LNADJ.*', u'delete:LNREL.*', u'delete:LNNEIH.*', u'SMOD-1:positionInSubrack=RightSide']</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNCEL$' match 'NOKLTE:LNCEL' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNCEL$' match 'NOKLTE:LNCEL' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNCEL$' match 'NOKLTE:LNCEL' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LCELL$' match 'com.nokia.srbts.mnl:LCELL' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LCELL$' match 'com.nokia.srbts.mnl:LCELL' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LCELL$' match 'com.nokia.srbts.mnl:LCELL' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="INFO">[commission_extend.py@970] parameters to be changed after extention:[u'delete:LNADJ.*', u'delete:LNREL.*', u'delete:LNNEIH.*', u'SMOD-1:positionInSubrack=RightSide']</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNADJ.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNADJ-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNADJ.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNADJ-1/LNADJL-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNADJ.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNADJG-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNADJ.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNADJT-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNADJ.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNADJW-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNADJ.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNADJX-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNREL.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNCEL-1/LNREL-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNREL.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNCEL-1/LNRELG-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNREL.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNCEL-1/LNRELT-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNREL.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNCEL-1/LNRELW-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNREL.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNCEL-1/LNRELX-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNNEIH.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNCEL-1/LNNEIH-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNNEIH.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNCEL-2/LNNEIH-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*LNNEIH.*($|/.*$)' match 'MRBTS-1/LNBTS-1/LNCEL-3/LNNEIH-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*SMOD-1$' match 'MRBTS-1/EQM-1/APEQM-1/CABINET-1/SMOD-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="INFO">[commission_extend.py@482] commission: handling parameter: SMOD-1:positionInSubrack=RightSide</msg>
<msg timestamp="20171220 06:02:45.130" level="INFO">[commission_extend.py@378] zy: trying parameter: SMOD-1:positionInSubrack</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*SMOD-1$' match 'MRBTS-1/EQM-1/APEQM-1/CABINET-1/SMOD-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*SMOD-1$' match 'MRBTS-1/EQM-1/APEQM-1/CABINET-1/SMOD-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*SMOD-1$' match 'MRBTS-1/EQM-1/APEQM-1/CABINET-1/SMOD-1' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.130" level="TRACE">pattern '.*MRBTS$' match 'com.nokia.srbts:MRBTS' result is 'True'</msg>
<msg timestamp="20171220 06:02:45.131" level="FAIL">Execution terminated by signal</msg>
<msg timestamp="20171220 06:02:45.131" level="DEBUG">Traceback (most recent call last):
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ev_robotws/DomainLib/oam_lib/commission_extend.py", line 930, in modify_scf_and_perform_full_commission
    raise Exception(str(e))</msg>
<status status="FAIL" endtime="20171220 06:02:45.131" starttime="20171220 06:00:24.543"></status>
</kw>
<kw type="teardown" name="Teardown For Iphy Env" library="DevHZ5_iphy_resource">
<msg timestamp="20171220 06:02:45.134" level="TRACE">Arguments: [  ]</msg>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171220 06:02:45.135" level="TRACE">Arguments: [ &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt; ]</msg>
<msg timestamp="20171220 06:02:45.136" level="INFO">[connection_mgr.py@147] Switch to connection: 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;.</msg>
<msg timestamp="20171220 06:02:45.136" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:02:45.137" starttime="20171220 06:02:45.135"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Collect Snapshot</arg>
<arg>${SAVE LOG DIRECTORY}${/}snapshot_startup.zip</arg>
</arguments>
<msg timestamp="20171220 06:02:45.137" level="TRACE">Arguments: [ 'Collect Snapshot' | '${SAVE LOG DIRECTORY}${/}snapshot_startup.zip' ]</msg>
<kw name="Collect Snapshot" library="ute_admin">
<doc>Collect Techrep snapshot.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}${/}snapshot_startup.zip</arg>
</arguments>
<msg timestamp="20171220 06:02:45.138" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/snapshot_startup.zip' ]</msg>
<msg timestamp="20171220 06:02:45.138" level="WARN">Admin API connection lost. Resetting ...</msg>
<msg timestamp="20171220 06:02:45.138" level="INFO">Exit code: -2</msg>
<msg timestamp="20171220 06:02:45.138" level="INFO">STDOUT
CLI LOG:  CLI server is listening on localhost:38538
</msg>
<msg timestamp="20171220 06:02:45.138" level="INFO">STDERR
</msg>
<msg timestamp="20171220 06:02:45.139" level="INFO">/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/resource/node/linux/bin/node --expose-gc /opt/ute/python/lib/python2.7/site-packages/ute_common_admin/resource/src/main.js --bts-host=192.168.255.129 --bts-port=9002 --bts-username=Nemuadmin --bts-password=nemuuser --debug=/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/admin_api_default.log --interval=5000 --cli-port=38538 --bundles-dir=/tmp/tmpYC5UF4 --insecure</msg>
<msg timestamp="20171220 06:02:45.144" level="INFO">Recived response: Connection closed. Connection is already closed.</msg>
<msg timestamp="20171220 06:02:45.144" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:02:46.860" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:02:46.860" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:02:48.860" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:02:48.861" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:02:50.861" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:02:50.861" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:02:52.862" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:02:52.862" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:02:54.862" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:02:54.863" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:02:56.863" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:02:56.864" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:02:58.864" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:02:58.864" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:00.865" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:00.865" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:02.865" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:02.866" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:04.867" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:04.867" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:06.871" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:06.871" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:08.873" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:08.873" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:10.877" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:10.877" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:12.880" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:12.881" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:14.882" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:14.882" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:15.892" level="TRACE">Return: None</msg>
<msg timestamp="20171220 06:03:15.892" level="FAIL">AdminApiTerminatedException: ADMIN CLI TERMINATED
EXIT CODE: 1
STDOUT:

STDERR:
CLI ERROR:  { Error: connect ECONNREFUSED 192.168.255.129:9002
    at Object.exports._errnoException (util.js:1036:11)
    at exports._exceptionWithHostPort (util.js:1059:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'ECONNREFUSED',
  errno: 'ECONNREFUSED',
  syscall: 'connect',
  address: '192.168.255.129',
  port: 9002 }
</msg>
<msg timestamp="20171220 06:03:15.892" level="DEBUG">Traceback (most recent call last):
  File "/opt/ute/python/lib/python2.7/site-packages/ute_admin/interfaces/basic.py", line 56, in collect_snapshot
    self.store.get(alias).execute_procedure("snapshot", {"coverage": coverage, "force": force}, timeout, output_file_name=target_file_name)
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/api.py", line 247, in _wrap
    return function(self, name, parameters, timeout)
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/api.py", line 276, in execute_procedure
    return self.execute_request(request, timeout)
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/api.py", line 38, in _wrap
    inst.reset()
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/api.py", line 69, in reset
    self._wait_for_ws_connection()
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/api.py", line 123, in _wait_for_ws_connection
    self.process.assert_running()
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/controller.py", line 100, in assert_running
    raise AdminApiTerminatedException("ADMIN CLI TERMINATED\nEXIT CODE: {}\nSTDOUT:\n{}\nSTDERR:\n{}".format(exit, out, err))</msg>
<status status="FAIL" endtime="20171220 06:03:15.892" starttime="20171220 06:02:45.137"></status>
</kw>
<msg timestamp="20171220 06:03:15.892" level="TRACE">Return: (b'FAIL',
 "AdminApiTerminatedException: ADMIN CLI TERMINATED\nEXIT CODE: 1\nSTDOUT:\n\nSTDERR:\nCLI ERROR:  { Error: connect ECONNREFUSED 192.168.255.129:9002\n    at Object.exports._errnoException (util.js:1036:11)\n    at exports._exceptionWithHostPort (util.js:1059:20)\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)\n  code: 'ECONNREFUSED',\n  errno: 'ECONNREFUSED',\n  syscall: 'connect',\n  address: '192.168.255.129',\n  port: 9002 }\n")</msg>
<status status="PASS" endtime="20171220 06:03:15.892" starttime="20171220 06:02:45.137"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Collect Scf</arg>
<arg>${SAVE LOG DIRECTORY}${/}scf_after_full_commission.xml</arg>
</arguments>
<msg timestamp="20171220 06:03:15.893" level="TRACE">Arguments: [ 'Collect Scf' | '${SAVE LOG DIRECTORY}${/}scf_after_full_commission.xml' ]</msg>
<kw name="Collect Scf" library="ute_admin">
<doc>Collect SCF file.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}${/}scf_after_full_commission.xml</arg>
</arguments>
<msg timestamp="20171220 06:03:15.894" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/scf_after_full_commission.xml' ]</msg>
<msg timestamp="20171220 06:03:15.894" level="WARN">Admin API connection lost. Resetting ...</msg>
<msg timestamp="20171220 06:03:15.895" level="INFO">Exit code: 1</msg>
<msg timestamp="20171220 06:03:15.895" level="INFO">STDOUT
</msg>
<msg timestamp="20171220 06:03:15.895" level="INFO">STDERR
</msg>
<msg timestamp="20171220 06:03:15.895" level="INFO">/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/resource/node/linux/bin/node --expose-gc /opt/ute/python/lib/python2.7/site-packages/ute_common_admin/resource/src/main.js --bts-host=192.168.255.129 --bts-port=9002 --bts-username=Nemuadmin --bts-password=nemuuser --debug=/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/admin_api_default.log --interval=5000 --cli-port=38538 --bundles-dir=/tmp/tmpYC5UF4 --insecure</msg>
<msg timestamp="20171220 06:03:16.900" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:16.901" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:18.901" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:18.901" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:20.902" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:20.902" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:22.902" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:22.903" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:24.903" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:24.903" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:26.904" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:26.904" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:28.904" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:28.905" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:30.905" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:30.905" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:32.906" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:32.906" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:34.909" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:34.910" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:36.911" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:36.911" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:38.913" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:38.913" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:40.917" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:40.917" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:42.919" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:42.919" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:44.920" level="INFO">Recived response: Connection closed. [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:44.921" level="INFO">Recived response: Connection closed. </msg>
<msg timestamp="20171220 06:03:45.935" level="TRACE">Return: None</msg>
<msg timestamp="20171220 06:03:45.935" level="FAIL">AdminApiTerminatedException: ADMIN CLI TERMINATED
EXIT CODE: 1
STDOUT:

STDERR:
CLI ERROR:  { Error: ETIMEDOUT
    at Timeout._onTimeout (/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/resource/node_modules/request/request.js:772:15)
    at tryOnTimeout (timers.js:232:11)
    at Timer.listOnTimeout (timers.js:202:5) code: 'ETIMEDOUT', connect: true }
</msg>
<msg timestamp="20171220 06:03:45.935" level="DEBUG">Traceback (most recent call last):
  File "/opt/ute/python/lib/python2.7/site-packages/ute_admin/interfaces/files.py", line 47, in collect_scf
    self.store.get(alias).execute_procedure("generateScf", parameters, timeout, output_file_name=target_file_name)
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/api.py", line 247, in _wrap
    return function(self, name, parameters, timeout)
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/api.py", line 276, in execute_procedure
    return self.execute_request(request, timeout)
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/api.py", line 38, in _wrap
    inst.reset()
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/api.py", line 69, in reset
    self._wait_for_ws_connection()
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/api.py", line 123, in _wait_for_ws_connection
    self.process.assert_running()
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/controller.py", line 100, in assert_running
    raise AdminApiTerminatedException("ADMIN CLI TERMINATED\nEXIT CODE: {}\nSTDOUT:\n{}\nSTDERR:\n{}".format(exit, out, err))</msg>
<status status="FAIL" endtime="20171220 06:03:45.935" starttime="20171220 06:03:15.894"></status>
</kw>
<msg timestamp="20171220 06:03:45.935" level="TRACE">Return: (b'FAIL', "AdminApiTerminatedException: ADMIN CLI TERMINATED\nEXIT CODE: 1\nSTDOUT:\n\nSTDERR:\nCLI ERROR:  { Error: ETIMEDOUT\n    at Timeout._onTimeout (/opt/ute/python/lib/python2.7/site-packages/ute_common_admin/resource/node_modules/request/request.js:772:15)\n    at tryOnTimeout (timers.js:232:11)\n    at Timer.listOnTimeout (timers.js:202:5) code: 'ETIMEDOUT', connect: true }\n")</msg>
<status status="PASS" endtime="20171220 06:03:45.935" starttime="20171220 06:03:15.893"></status>
</kw>
<kw name="Stop Capture Logs" library="DevHZ5_iphy_resource">
<arguments>
<arg>startup</arg>
</arguments>
<msg timestamp="20171220 06:03:45.936" level="TRACE">Arguments: [ ${tag}='startup' ]</msg>
<kw name="Stop Capture BTS Logs" library="DevHZ5_common_resource">
<arguments>
<arg>${tag}</arg>
<arg>${TCE_PORT}</arg>
</arguments>
<msg timestamp="20171220 06:03:45.937" level="TRACE">Arguments: [ ${tag}='startup' | ${tce_port}='49151' ]</msg>
<kw name="Stop Capture BTS UdpLogs" library="DevHZ5_common_resource">
<msg timestamp="20171220 06:03:45.938" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Stop Bts Udp Log</arg>
</arguments>
<msg timestamp="20171220 06:03:45.938" level="TRACE">Arguments: [ 'Stop Bts Udp Log' ]</msg>
<kw name="Stop Bts Udp Log" library="tdd_ev_robotws">
<doc>This keyword stops BTS system(UDP) log catching.</doc>
<msg timestamp="20171220 06:03:45.939" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 06:03:46.368" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:46.368" starttime="20171220 06:03:45.939"></status>
</kw>
<msg timestamp="20171220 06:03:46.368" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171220 06:03:46.368" starttime="20171220 06:03:45.938"></status>
</kw>
<msg timestamp="20171220 06:03:46.369" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:46.369" starttime="20171220 06:03:45.937"></status>
</kw>
<kw name="Stop Capture Wireshark Log" library="DevHZ5_common_resource">
<arguments>
<arg>${tag}</arg>
</arguments>
<msg timestamp="20171220 06:03:46.369" level="TRACE">Arguments: [ ${tag}='startup' ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${tag.__len__()}==0</arg>
<arg>wireshark</arg>
<arg>wireshark_${tag}</arg>
</arguments>
<assign>
<var>${wireshark_name}</var>
</assign>
<msg timestamp="20171220 06:03:46.370" level="TRACE">Arguments: [ '7==0' | 'wireshark' | 'wireshark_${tag}' ]</msg>
<msg timestamp="20171220 06:03:46.370" level="TRACE">Return: 'wireshark_startup'</msg>
<msg timestamp="20171220 06:03:46.371" level="INFO">${wireshark_name} = wireshark_startup</msg>
<status status="PASS" endtime="20171220 06:03:46.371" starttime="20171220 06:03:46.370"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Stop FCTB tcpdump</arg>
<arg>${wireshark_name}</arg>
<arg>-d tcp.port==${tce_port},ntrstr -d tcp.port==49151,ntrstr</arg>
</arguments>
<msg timestamp="20171220 06:03:46.371" level="TRACE">Arguments: [ 'Stop FCTB tcpdump' | '${wireshark_name}' | '-d tcp.port==${tce_port},ntrstr -d tcp.port==49151,ntrstr' ]</msg>
<kw name="Stop FCTB tcpdump" library="enb_resource">
<doc>This keyword start tshark</doc>
<arguments>
<arg>${wireshark_name}</arg>
<arg>-d tcp.port==${tce_port},ntrstr -d tcp.port==49151,ntrstr</arg>
</arguments>
<msg timestamp="20171220 06:03:46.372" level="TRACE">Arguments: [ ${name}='wireshark_startup' | ${pcap_to_txt_option}='-d tcp.port==49151,ntrstr -d tcp.port==49151,ntrstr' ]</msg>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_CONNECTION}</arg>
</arguments>
<msg timestamp="20171220 06:03:46.373" level="TRACE">Arguments: [ &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c1830&gt; ]</msg>
<msg timestamp="20171220 06:03:46.376" level="INFO">[connection_mgr.py@147] Switch to connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c1830&gt;.</msg>
<msg timestamp="20171220 06:03:46.376" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:46.376" starttime="20171220 06:03:46.372"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>pkill -x tcpdump</arg>
</arguments>
<msg timestamp="20171220 06:03:46.377" level="TRACE">Arguments: [ 'pkill -x tcpdump' ]</msg>
<msg timestamp="20171220 06:03:46.437" level="INFO">[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c1830&gt;</msg>
<msg timestamp="20171220 06:03:46.437" level="DEBUG">[ssh_common.py@283] tcpdump: listening on br1, link-type EN10MB (Ethernet), capture size 1600 bytes</msg>
<msg timestamp="20171220 06:03:46.437" level="INFO">[ssh_common.py@258] Execute command: pkill -x tcpdump</msg>
<msg timestamp="20171220 06:03:46.437" level="INFO">[ssh_common.py@258] Execute command: Ctrl-C</msg>
<msg timestamp="20171220 06:03:46.464" level="TRACE">Return: None</msg>
<msg timestamp="20171220 06:03:46.464" level="FAIL">error: Socket is closed</msg>
<msg timestamp="20171220 06:03:46.464" level="DEBUG">Traceback (most recent call last):
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ev_robotws/CommonLib/connections/telnet_ssh_control.py", line 44, in execute_shell_command
    command, **kwargs)
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ev_robotws/CommonLib/connections/connection_mgr.py", line 256, in execute_shell_command
    self._current.write_bare(chr(3))
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ev_robotws/CommonLib/connections/ssh_common.py", line 259, in write_bare
    self.channel.sendall(text)
  File "/opt/ute/python/lib/python2.7/site-packages/paramiko/channel.py", line 813, in sendall
    sent = self.send(s)
  File "/opt/ute/python/lib/python2.7/site-packages/paramiko/channel.py", line 767, in send
    return self._send(s, m)
  File "/opt/ute/python/lib/python2.7/site-packages/paramiko/channel.py", line 1134, in _send
    raise socket.error('Socket is closed')</msg>
<status status="FAIL" endtime="20171220 06:03:46.464" starttime="20171220 06:03:46.377"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20171220 06:03:46.465" level="TRACE">Arguments: [ '5' ]</msg>
<msg timestamp="20171220 06:03:51.465" level="INFO">Slept 5 seconds</msg>
<msg timestamp="20171220 06:03:51.465" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:51.465" starttime="20171220 06:03:46.464"></status>
</kw>
<kw name="Ftp Download" library="tdd_ev_robotws">
<doc>This keyword use ftp download file to host PC.</doc>
<arguments>
<arg>${FCMD_IP}</arg>
<arg>21</arg>
<arg>${FCMD USERNAME}</arg>
<arg>${FCMD PASSWORD}</arg>
<arg>${SAVE_LOG_DIRECTORY}${/}${name}.pcap</arg>
<arg>${name}.pcap</arg>
<arg>/tmp</arg>
</arguments>
<msg timestamp="20171220 06:03:51.466" level="TRACE">Arguments: [ b'192.168.255.1' | '21' | b'toor4nsn' | b'oZPS0POrRieRtu' | '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/wireshark_startup.pcap' | 'wireshark_startup.pcap' | '/tmp' ]</msg>
<msg timestamp="20171220 06:03:51.700" level="DEBUG">[ftp_control.py@28] ftp connect to ip='192.168.255.1' port='21' OK.</msg>
<msg timestamp="20171220 06:03:51.700" level="INFO">[ftp_control.py@38] ftp login as username='toor4nsn' password='oZPS0POrRieRtu' OK.</msg>
<msg timestamp="20171220 06:03:51.700" level="INFO">[ftp_control.py@44] 220 (vsFTPd 3.0.3)</msg>
<msg timestamp="20171220 06:03:51.700" level="DEBUG">[ftp_control.py@83] ftp cd to dir '/tmp' OK.</msg>
<msg timestamp="20171220 06:03:51.700" level="DEBUG">[ftp_control.py@93] ftp open local file '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/wireshark_startup.pcap' OK.</msg>
<msg timestamp="20171220 06:03:51.700" level="TRACE">Return: None</msg>
<msg timestamp="20171220 06:03:51.700" level="FAIL">ftp download '/tmp/wireshark_startup.pcap' as '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/wireshark_startup.pcap' failed for '550 Failed to open file.'.</msg>
<msg timestamp="20171220 06:03:51.700" level="DEBUG">Traceback (most recent call last):
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ev_robotws/CommonLib/connections/ftp_control.py", line 265, in ftp_download
    local_file_dir, host_file_name, host_dir)
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ev_robotws/CommonLib/connections/ftp_control.py", line 106, in ftp_download_single_file
    (host_dir, host_file_name, local_file_dir, error))</msg>
<status status="FAIL" endtime="20171220 06:03:51.700" starttime="20171220 06:03:51.466"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171220 06:03:51.701" level="TRACE">Arguments: [ &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt; ]</msg>
<msg timestamp="20171220 06:03:51.704" level="INFO">[connection_mgr.py@147] Switch to connection: 127.0.0.1:22 DeviceType:Linux Timeout:25 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;.</msg>
<msg timestamp="20171220 06:03:51.704" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:51.704" starttime="20171220 06:03:51.701"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>30</arg>
</arguments>
<msg timestamp="20171220 06:03:51.704" level="TRACE">Arguments: [ '30' ]</msg>
<msg timestamp="20171220 06:03:51.704" level="TRACE">Return: b'25 seconds'</msg>
<status status="PASS" endtime="20171220 06:03:51.704" starttime="20171220 06:03:51.704"></status>
</kw>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>tshark -r ${SAVE_LOG_DIRECTORY}${/}${name}.pcap ${pcap_to_txt_option} -V &gt; ${SAVE_LOG_DIRECTORY}${/}${name}.txt</arg>
</arguments>
<msg timestamp="20171220 06:03:51.707" level="TRACE">Arguments: [ 'tshark -r /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/wireshark_startup.pcap -d tcp.port==49151,ntrstr -d tcp.port==49151,ntrstr -V &gt; /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/wireshark_startup.txt' ]</msg>
<msg timestamp="20171220 06:03:51.993" level="INFO">[connection_mgr.py@208] Current connection: 127.0.0.1:22 DeviceType:Linux Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 06:03:51.993" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 06:03:51.993" level="INFO">[ssh_common.py@258] Execute command: tshark -r /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/wireshark_startup.pcap -d tcp.port==49151,ntrstr -d tcp.port==49151,ntrstr -V &gt; /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/wireshark_startup.txt</msg>
<msg timestamp="20171220 06:03:51.993" level="INFO">[ssh_common.py@314] Get Response: tshark -r /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_201712200 30347/ev_logs/LTE2029-A-f_20171220055705/wireshark_startup.pcap -d tcp.port==491 51,ntrstr -d tcp.port==49151,ntrstr -V &gt; /opt/iphy/trunk_sran/daily_ci/pick_logs /Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/wireshark_startup.tx t
ute@test:~$</msg>
<msg timestamp="20171220 06:03:51.993" level="TRACE">Return: b'tshark -r /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_201712200 \r30347/ev_logs/LTE2029-A-f_20171220055705/wireshark_startup.pcap -d tcp.port==491 \r51,ntrstr -d tcp.port==49151,ntrstr -V &gt; /opt/iphy/trunk_sran/daily_ci/pick_logs \r/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/wireshark_startup.tx \rt\r\nute@test:~$ '</msg>
<status status="PASS" endtime="20171220 06:03:51.993" starttime="20171220 06:03:51.705"></status>
</kw>
<msg timestamp="20171220 06:03:51.994" level="TRACE">Return: None</msg>
<status status="FAIL" endtime="20171220 06:03:51.994" starttime="20171220 06:03:46.372"></status>
</kw>
<msg timestamp="20171220 06:03:51.994" level="TRACE">Return: (b'FAIL', "Several failures occurred:\n\n1) error: Socket is closed\n\n2) ftp download '/tmp/wireshark_startup.pcap' as '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/wireshark_startup.pcap' failed for '550 Failed to open file.'.")</msg>
<status status="PASS" endtime="20171220 06:03:51.994" starttime="20171220 06:03:46.371"></status>
</kw>
<msg timestamp="20171220 06:03:51.994" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:51.994" starttime="20171220 06:03:46.369"></status>
</kw>
<kw name="Stop To Capture Infomodel Log" library="DevHZ5_common_resource">
<arguments>
<arg>${tag}</arg>
</arguments>
<msg timestamp="20171220 06:03:51.995" level="TRACE">Arguments: [ ${tag}='startup' ]</msg>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${tag.__len__()}==0</arg>
<arg>infomodel_log.ims2</arg>
<arg>infomodel_log_${tag}.ims2</arg>
</arguments>
<assign>
<var>${im_name}</var>
</assign>
<msg timestamp="20171220 06:03:51.995" level="TRACE">Arguments: [ '7==0' | 'infomodel_log.ims2' | 'infomodel_log_${tag}.ims2' ]</msg>
<msg timestamp="20171220 06:03:51.996" level="TRACE">Return: 'infomodel_log_startup.ims2'</msg>
<msg timestamp="20171220 06:03:51.996" level="INFO">${im_name} = infomodel_log_startup.ims2</msg>
<status status="PASS" endtime="20171220 06:03:51.996" starttime="20171220 06:03:51.995"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Save Infomodel Log</arg>
<arg>${SAVE LOG DIRECTORY}${/}${im_name}</arg>
</arguments>
<msg timestamp="20171220 06:03:51.996" level="TRACE">Arguments: [ 'Save Infomodel Log' | '${SAVE LOG DIRECTORY}${/}${im_name}' ]</msg>
<kw name="Save Infomodel Log" library="tdd_ev_robotws">
<doc>Save InfoModel log.</doc>
<arguments>
<arg>${SAVE LOG DIRECTORY}${/}${im_name}</arg>
</arguments>
<msg timestamp="20171220 06:03:51.997" level="TRACE">Arguments: [ '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/infomodel_log_startup.ims2' ]</msg>
<msg timestamp="20171220 06:03:52.056" level="TRACE">Return: None</msg>
<msg timestamp="20171220 06:03:52.057" level="FAIL">ConnectionClosedError: receiving: not enough data</msg>
<msg timestamp="20171220 06:03:52.057" level="DEBUG">Traceback (most recent call last):
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ev_robotws/TdlteLib/enb_lib/infomodel_control.py", line 213, in save_infomodel_log
    alias=alias)
  File "/opt/ute/python/lib/python2.7/site-packages/ute_infomodel/interface.py", line 211, in save_infomodel_log
    self.store.get(alias).save_log(filename)
  File "/opt/ute/python/lib/python2.7/site-packages/ute_infomodel/infomodel.py", line 219, in save_log
    self.infomodel_server_ctrl.save_log(filename)
  File "/opt/ute/python/lib/python2.7/site-packages/ute_infomodel/controller.py", line 188, in save_log
    self.infomodel_server.save_log(filename)
  File "/opt/ute/python/lib/python2.7/site-packages/Pyro4/core.py", line 171, in __call__
    return self.__send(self.__name, args, kwargs)
  File "/opt/ute/python/lib/python2.7/site-packages/Pyro4/core.py", line 410, in _pyroInvoke
    msg = message.Message.recv(self._pyroConnection, [message.MSG_RESULT], hmac_key=self._pyroHmacKey)
  File "/opt/ute/python/lib/python2.7/site-packages/Pyro4/message.py", line 168, in recv
    msg = cls.from_header(connection.recv(cls.header_size))
  File "/opt/ute/python/lib/python2.7/site-packages/Pyro4/socketutil.py", line 438, in recv
    return receiveData(self.sock, size)
  File "/opt/ute/python/lib/python2.7/site-packages/Pyro4/socketutil.py", line 172, in receiveData
    raise err</msg>
<status status="FAIL" endtime="20171220 06:03:52.057" starttime="20171220 06:03:51.996"></status>
</kw>
<msg timestamp="20171220 06:03:52.057" level="TRACE">Return: (b'FAIL', 'ConnectionClosedError: receiving: not enough data')</msg>
<status status="PASS" endtime="20171220 06:03:52.057" starttime="20171220 06:03:51.996"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Stop Infomodel</arg>
</arguments>
<msg timestamp="20171220 06:03:52.058" level="TRACE">Arguments: [ 'Stop Infomodel' ]</msg>
<kw name="Stop Infomodel" library="tdd_ev_robotws">
<doc>Disconnect from InfoModel and teardown InfoModel. Keyword will</doc>
<msg timestamp="20171220 06:03:52.058" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 06:03:52.062" level="INFO">Exit code: 130</msg>
<msg timestamp="20171220 06:03:52.062" level="INFO">STDOUT
</msg>
<msg timestamp="20171220 06:03:52.062" level="INFO">STDERR
Started InfoModel server PYRO:default_infomodel_server@localhost:38270
</msg>
<msg timestamp="20171220 06:03:52.120" level="INFO">[infomodel_control.py@188] stop infomodel logger failed, details: cannot connect: [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:52.120" level="INFO">[infomodel_control.py@192] disconnect from infomodel failed, details: cannot connect: [Errno 111] Connection refused</msg>
<msg timestamp="20171220 06:03:52.120" level="DEBUG">[process_control.py@162] Run command: pkill -f .*python.*nameserver.*</msg>
<msg timestamp="20171220 06:03:52.120" level="DEBUG">[process_control.py@170]</msg>
<msg timestamp="20171220 06:03:52.120" level="DEBUG">[process_control.py@162] Run command: pkill -f .*javaw.exe.*-jar.*IMViewer.*</msg>
<msg timestamp="20171220 06:03:52.120" level="DEBUG">[process_control.py@170]</msg>
<msg timestamp="20171220 06:03:52.120" level="DEBUG">[process_control.py@162] Run command: pkill -f .*javaw.exe.*-jar.*IMCommander.*</msg>
<msg timestamp="20171220 06:03:52.120" level="DEBUG">[process_control.py@170]</msg>
<msg timestamp="20171220 06:03:52.120" level="INFO">[infomodel_control.py@198] stop infomodel succeed .</msg>
<msg timestamp="20171220 06:03:52.120" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:52.120" starttime="20171220 06:03:52.058"></status>
</kw>
<msg timestamp="20171220 06:03:52.120" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171220 06:03:52.120" starttime="20171220 06:03:52.058"></status>
</kw>
<msg timestamp="20171220 06:03:52.121" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:52.121" starttime="20171220 06:03:51.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FULL_LOGS}</arg>
<arg>Stop Capture Emil Log</arg>
</arguments>
<msg timestamp="20171220 06:03:52.122" level="TRACE">Arguments: [ False | 'Stop Capture Emil Log' ]</msg>
<msg timestamp="20171220 06:03:52.122" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:52.122" starttime="20171220 06:03:52.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FULL_LOGS}</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Dump Mac Ttitrace</arg>
<arg>${SAVE LOG DIRECTORY}${/}Tti_trace</arg>
</arguments>
<msg timestamp="20171220 06:03:52.122" level="TRACE">Arguments: [ False | 'Run Keyword And Ignore Error' | 'Dump Mac Ttitrace' | '${SAVE LOG DIRECTORY}${/}Tti_trace' ]</msg>
<msg timestamp="20171220 06:03:52.122" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:52.123" starttime="20171220 06:03:52.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FULL_LOGS}</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Decode Mac Ttitrace</arg>
<arg>${SAVE LOG DIRECTORY}${/}Tti_trace</arg>
</arguments>
<msg timestamp="20171220 06:03:52.123" level="TRACE">Arguments: [ False | 'Run Keyword And Ignore Error' | 'Decode Mac Ttitrace' | '${SAVE LOG DIRECTORY}${/}Tti_trace' ]</msg>
<msg timestamp="20171220 06:03:52.123" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:52.123" starttime="20171220 06:03:52.123"></status>
</kw>
<msg timestamp="20171220 06:03:52.123" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:52.123" starttime="20171220 06:03:45.937"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Iphy Stop Udp Log</arg>
</arguments>
<msg timestamp="20171220 06:03:52.124" level="TRACE">Arguments: [ 'Iphy Stop Udp Log' ]</msg>
<kw name="iphy_stop_udp_log" library="iphy_resource">
<msg timestamp="20171220 06:03:52.124" level="TRACE">Arguments: [ ${alias}='default' ]</msg>
<kw name="Stop And Collect Iphy Syslog" library="tdd_ue">
<doc>Stop syslogging and download the created file to the test result directory.</doc>
<msg timestamp="20171220 06:03:52.125" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 06:03:52.125" level="DEBUG">[chan 1] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:03:52.148" level="INFO">Attempting to stop syslog (PID: {}) instance...</msg>
<msg timestamp="20171220 06:03:52.148" level="DEBUG">[chan 2] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:03:53.202" level="DEBUG">[chan 3] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:03:53.225" level="INFO">Syslog (PID: 3496) stopped!</msg>
<msg timestamp="20171220 06:03:53.225" level="DEBUG">Command to execute: sshpass -p ute ssh ute@127.0.0.1 '! fuser -s /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/iphylog_startup_*.LOG'</msg>
<msg timestamp="20171220 06:03:53.407" level="DEBUG">Command output:
</msg>
<msg timestamp="20171220 06:03:53.408" level="DEBUG">Command ends with exit code: 0</msg>
<msg timestamp="20171220 06:03:53.508" level="DEBUG">Command to execute: sudo dmidecode -s system-uuid 2&gt;&amp;1</msg>
<msg timestamp="20171220 06:03:53.593" level="DEBUG">Command output:
42306A1B-34E0-82DF-4D78-0E5644AFE55A
</msg>
<msg timestamp="20171220 06:03:53.593" level="DEBUG">Command ends with exit code: 0</msg>
<msg timestamp="20171220 06:03:53.693" level="DEBUG">Command to execute: sshpass -p ute ssh ute@127.0.0.1 'sudo dmidecode -s system-uuid'</msg>
<msg timestamp="20171220 06:03:53.859" level="DEBUG">Command output:
42306A1B-34E0-82DF-4D78-0E5644AFE55A
</msg>
<msg timestamp="20171220 06:03:53.860" level="DEBUG">Command ends with exit code: 0</msg>
<msg timestamp="20171220 06:03:53.960" level="INFO">Download operation will be performed locally</msg>
<msg timestamp="20171220 06:03:53.960" level="DEBUG">Command to execute: mkdir -p /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705</msg>
<msg timestamp="20171220 06:03:54.043" level="DEBUG">Command output:
</msg>
<msg timestamp="20171220 06:03:54.043" level="DEBUG">Command ends with exit code: 0</msg>
<msg timestamp="20171220 06:03:54.144" level="DEBUG">Command to execute: stat -c %i:%s \/opt\/iphy\/trunk\_sran\/daily\_ci\/pick\_logs\/Test\_Log\_20171220030347\/ev\_logs\/LTE2029\-A\-f\_20171220055705/iphylog_startup_*.LOG 2&gt;&amp;1</msg>
<msg timestamp="20171220 06:03:54.228" level="DEBUG">Command output:
1573360:2453806
</msg>
<msg timestamp="20171220 06:03:54.228" level="DEBUG">Command ends with exit code: 0</msg>
<msg timestamp="20171220 06:03:54.329" level="DEBUG">Command to execute: stat -c %i:%s \/opt\/iphy\/trunk\_sran\/daily\_ci\/pick\_logs\/Test\_Log\_20171220030347\/ev\_logs\/LTE2029\-A\-f\_20171220055705/iphylog_startup_*.LOG 2&gt;&amp;1</msg>
<msg timestamp="20171220 06:03:54.410" level="DEBUG">Command output:
1573360:2453806
</msg>
<msg timestamp="20171220 06:03:54.410" level="DEBUG">Command ends with exit code: 0</msg>
<msg timestamp="20171220 06:03:54.511" level="DEBUG">[chan 4] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:03:54.524" level="DEBUG">[chan 5] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:03:54.577" level="INFO">Syslog (PID: 3496) stopped!</msg>
<msg timestamp="20171220 06:03:54.577" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 06:03:54.609" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:54.609" starttime="20171220 06:03:52.125"></status>
</kw>
<msg timestamp="20171220 06:03:54.610" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:54.610" starttime="20171220 06:03:52.124"></status>
</kw>
<msg timestamp="20171220 06:03:54.610" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171220 06:03:54.610" starttime="20171220 06:03:52.124"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>collect_wts_logs</arg>
<arg>${tag}</arg>
</arguments>
<msg timestamp="20171220 06:03:54.611" level="TRACE">Arguments: [ 'collect_wts_logs' | '${tag}' ]</msg>
<kw name="Collect Wts Logs" library="lib">
<arguments>
<arg>${tag}</arg>
</arguments>
<msg timestamp="20171220 06:03:54.611" level="TRACE">Arguments: [ 'startup' ]</msg>
<msg timestamp="20171220 06:03:54.612" html="yes" level="INFO">Created directory '&lt;a href="file:///opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/WTS_logs_startup"&gt;/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/WTS_logs_startup&lt;/a&gt;'.</msg>
<msg timestamp="20171220 06:03:54.612" level="TRACE">Return: None</msg>
<msg timestamp="20171220 06:03:54.612" level="FAIL">AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<msg timestamp="20171220 06:03:54.612" level="DEBUG">Traceback (most recent call last):
  File "/opt/iphy/trunk_sran/DevHZ5_SRAN/resources/lib/src/son.py", line 253, in collect_wts_logs
    iphy_execute_ue_command_without_kargs("set_log flush")
  File "/opt/iphy/trunk_sran/DevHZ5_SRAN/resources/lib/src/son.py", line 451, in iphy_execute_ue_command_without_kargs
    out = _ue_obj.execute_ue_command(command, pass_regexp, fail_regexp, timeout)
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ue/interface.py", line 673, in execute_ue_command
    return self.store.get(alias)['ue_setup'].execute_command(command, pass_regexp, fail_regexp, timeout)
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_store/store.py", line 81, in get
    "Please setup library before any other operation.".format(alias))</msg>
<status status="FAIL" endtime="20171220 06:03:54.612" starttime="20171220 06:03:54.611"></status>
</kw>
<msg timestamp="20171220 06:03:54.612" level="TRACE">Return: (b'FAIL', "AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.")</msg>
<status status="PASS" endtime="20171220 06:03:54.613" starttime="20171220 06:03:54.610"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>grep ERR ${SAVE LOG DIRECTORY}${/}WTS_logs*${/}egate_console.log</arg>
</arguments>
<msg timestamp="20171220 06:03:54.613" level="TRACE">Arguments: [ 'Execute Shell Command' | 'grep ERR ${SAVE LOG DIRECTORY}${/}WTS_logs*${/}egate_console.log' ]</msg>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>grep ERR ${SAVE LOG DIRECTORY}${/}WTS_logs*${/}egate_console.log</arg>
</arguments>
<msg timestamp="20171220 06:03:54.614" level="TRACE">Arguments: [ 'grep ERR /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/WTS_logs*/egate_console.log' ]</msg>
<msg timestamp="20171220 06:03:54.722" level="INFO">[connection_mgr.py@208] Current connection: 127.0.0.1:22 DeviceType:Linux Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 06:03:54.722" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 06:03:54.722" level="INFO">[ssh_common.py@258] Execute command: grep ERR /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/WTS_logs*/egate_console.log</msg>
<msg timestamp="20171220 06:03:54.722" level="INFO">[ssh_common.py@314] Get Response: grep ERR /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_2017122003 0347/ev_logs/LTE2029-A-f_20171220055705/WTS_logs*/egate_console.log
grep: /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/WTS_logs*/egate_console.log: No such file or directory
ute@test:~$</msg>
<msg timestamp="20171220 06:03:54.722" level="TRACE">Return: b'grep ERR /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_2017122003 \r0347/ev_logs/LTE2029-A-f_20171220055705/WTS_logs*/egate_console.log\r\ngrep: /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/WTS_logs*/egate_console.log: No such file or directory\r\nute@test:~$ '</msg>
<status status="PASS" endtime="20171220 06:03:54.722" starttime="20171220 06:03:54.613"></status>
</kw>
<msg timestamp="20171220 06:03:54.722" level="TRACE">Return: (b'PASS', b'grep ERR /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_2017122003 \r0347/ev_logs/LTE2029-A-f_20171220055705/WTS_logs*/egate_console.log\r\ngrep: /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/WTS_logs*/egate_console.log: No such file or directory\r\nute@test:~$ ')</msg>
<status status="PASS" endtime="20171220 06:03:54.722" starttime="20171220 06:03:54.613"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FULL_LOGS}</arg>
<arg>Stop Capture WTS Ttitrace</arg>
</arguments>
<msg timestamp="20171220 06:03:54.723" level="TRACE">Arguments: [ False | 'Stop Capture WTS Ttitrace' ]</msg>
<msg timestamp="20171220 06:03:54.723" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:54.723" starttime="20171220 06:03:54.723"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${FULL_LOGS}</arg>
<arg>Stop To Capture Extra Logs For WTS Debug</arg>
</arguments>
<msg timestamp="20171220 06:03:54.724" level="TRACE">Arguments: [ False | 'Stop To Capture Extra Logs For WTS Debug' ]</msg>
<msg timestamp="20171220 06:03:54.724" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:54.724" starttime="20171220 06:03:54.724"></status>
</kw>
<msg timestamp="20171220 06:03:54.724" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:54.724" starttime="20171220 06:03:45.936"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171220 06:03:54.725" level="TRACE">Arguments: [ &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt; ]</msg>
<msg timestamp="20171220 06:03:54.726" level="INFO">[connection_mgr.py@147] Switch to connection: 127.0.0.1:22 DeviceType:Linux Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;.</msg>
<msg timestamp="20171220 06:03:54.726" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:54.726" starttime="20171220 06:03:54.724"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>30</arg>
</arguments>
<assign>
<var>${old_timeout}</var>
</assign>
<msg timestamp="20171220 06:03:54.726" level="TRACE">Arguments: [ '30' ]</msg>
<msg timestamp="20171220 06:03:54.726" level="TRACE">Return: b'30 seconds'</msg>
<msg timestamp="20171220 06:03:54.727" level="INFO">${old_timeout} = 30 seconds</msg>
<status status="PASS" endtime="20171220 06:03:54.727" starttime="20171220 06:03:54.726"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>grep -i "reported alarm" ${SAVE LOG DIRECTORY}${/}btslog_startup.LOG</arg>
</arguments>
<msg timestamp="20171220 06:03:54.727" level="TRACE">Arguments: [ 'Execute Shell Command' | 'grep -i "reported alarm" ${SAVE LOG DIRECTORY}${/}btslog_startup.LOG' ]</msg>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>grep -i "reported alarm" ${SAVE LOG DIRECTORY}${/}btslog_startup.LOG</arg>
</arguments>
<msg timestamp="20171220 06:03:54.728" level="TRACE">Arguments: [ 'grep -i "reported alarm" /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/btslog_startup.LOG' ]</msg>
<msg timestamp="20171220 06:03:55.054" level="INFO">[connection_mgr.py@208] Current connection: 127.0.0.1:22 DeviceType:Linux Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 06:03:55.054" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 06:03:55.054" level="INFO">[ssh_common.py@258] Execute command: grep -i "reported alarm" /opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/btslog_startup.LOG</msg>
<msg timestamp="20171220 06:03:55.054" level="INFO">[ssh_common.py@314] Get Response: grep -i "reported alarm" /opt/iphy/trunk_sran/daily_ci/pick_logs/Tes t_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/btslog_startup.LOG
ute@test:~$</msg>
<msg timestamp="20171220 06:03:55.054" level="TRACE">Return: b'grep -i "reported alarm" /opt/iphy/trunk_sran/daily_ci/pick_logs/Tes \rt_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/btslog_startup.LOG\r\nute@test:~$ '</msg>
<status status="PASS" endtime="20171220 06:03:55.055" starttime="20171220 06:03:54.727"></status>
</kw>
<msg timestamp="20171220 06:03:55.055" level="TRACE">Return: (b'PASS', b'grep -i "reported alarm" /opt/iphy/trunk_sran/daily_ci/pick_logs/Tes \rt_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/btslog_startup.LOG\r\nute@test:~$ ')</msg>
<status status="PASS" endtime="20171220 06:03:55.055" starttime="20171220 06:03:54.727"></status>
</kw>
<kw name="Set Shell Timeout" library="tdd_ev_robotws">
<doc>This keyword sets the new connection timeout.</doc>
<arguments>
<arg>${old_timeout}</arg>
</arguments>
<msg timestamp="20171220 06:03:55.055" level="TRACE">Arguments: [ b'30 seconds' ]</msg>
<msg timestamp="20171220 06:03:55.056" level="TRACE">Return: b'30 seconds'</msg>
<status status="PASS" endtime="20171220 06:03:55.056" starttime="20171220 06:03:55.055"></status>
</kw>
<msg timestamp="20171220 06:03:55.056" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:55.056" starttime="20171220 06:02:45.134"></status>
</kw>
<status status="FAIL" endtime="20171220 06:03:55.056" starttime="20171220 05:58:35.342"></status>
</kw>
<status status="FAIL" endtime="20171220 06:03:55.056" starttime="20171220 05:57:05.247"></status>
</kw>
<test id="s1-t1" name="LTE2029-A-f_01_03 Accept NPF due to totalLimit is not exceeded and acceptance of objects to delete before objects to add when MajorAlarm is ON">
<doc>old total number of neighbor objects is ${StartMinorAlarm}-2: below minor alarm threshold, so minor alarm is off.
to_create + old total number = 3 + ${StartMinorAlarm} -2 = ${StartMinorAlarm} + 1: more than minor alarm threshold
to_create - to_delete + old total number = 3 - 2 + ${StartMinorAlarm}-2 = ${StartMinorAlarm} - 1: still below alarm threshold

result: minor alarm is still off.</doc>
<tags>
<tag>OAM2</tag>
<tag>owner-yin.zhang</tag>
<tag>QC_756172</tag>
<tag>release-TL16</tag>
</tags>
<status status="FAIL" endtime="20171220 06:03:55.085" critical="yes" starttime="20171220 06:03:55.084">Parent suite setup failed:
Execution terminated by signal</status>
</test>
<kw type="teardown" name="Common Suite Teardown And Restore BTS Configuration Parameters" library="DevHZ5_common_resource">
<msg timestamp="20171220 06:03:55.086" level="TRACE">Arguments: [  ]</msg>
<kw name="Restore BTS Configuration Files" library="DevHZ5_common_resource">
<msg timestamp="20171220 06:03:55.086" level="TRACE">Arguments: [  ]</msg>
<kw name="Recover Vendor Parameters" library="lib">
<msg timestamp="20171220 06:03:55.087" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 06:03:55.191" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 06:03:55.207" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:03:55.335" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 06:03:55.337" level="DEBUG">[chan 0] open('/ffs/run/swpool/OAM/vendor_S3031317.xml', 'wb')</msg>
<msg timestamp="20171220 06:03:55.349" level="DEBUG">[chan 0] open('/ffs/run/swpool/OAM/vendor_S3031317.xml', 'wb') -&gt; 00000000</msg>
<msg timestamp="20171220 06:03:55.351" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 06:03:55.495" level="DEBUG">[chan 0] lstat('/ffs/run/swpool/OAM/vendor_S3031317.xml')</msg>
<msg timestamp="20171220 06:03:55.496" level="DEBUG">[chan 0] lstat('/ffs/run/swpool/OAM/vendor_S3031317.xml')</msg>
<msg timestamp="20171220 06:03:55.498" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 06:03:55.498" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 06:03:55.625" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 06:03:55.689" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:03:55.802" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 06:03:55.804" level="DEBUG">[chan 0] open('/ffs/run/swpool/OAM/vendor_S3031317.xml.p7', 'wb')</msg>
<msg timestamp="20171220 06:03:55.817" level="DEBUG">[chan 0] open('/ffs/run/swpool/OAM/vendor_S3031317.xml.p7', 'wb') -&gt; 00000000</msg>
<msg timestamp="20171220 06:03:55.817" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 06:03:55.939" level="DEBUG">[chan 0] lstat('/ffs/run/swpool/OAM/vendor_S3031317.xml.p7')</msg>
<msg timestamp="20171220 06:03:55.940" level="DEBUG">[chan 0] lstat('/ffs/run/swpool/OAM/vendor_S3031317.xml.p7')</msg>
<msg timestamp="20171220 06:03:55.942" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 06:03:55.942" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 06:03:55.944" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.255.129', port:'22'</msg>
<msg timestamp="20171220 06:03:55.944" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.129', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 06:03:55.944" level="INFO">[sftp_control.py@61] sftp upload from '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/vendor_S3031317.xml' to '/ffs/run/swpool/OAM/vendor_S3031317.xml' is ok.</msg>
<msg timestamp="20171220 06:03:55.944" level="INFO">[sftp_control.py@176] /ffs/run/swpool/OAM/vendor_S3031317.xml</msg>
<msg timestamp="20171220 06:03:55.944" level="DEBUG">[sftp_control.py@49] sftp get file size '/ffs/run/swpool/OAM/vendor_S3031317.xml' is 90KB</msg>
<msg timestamp="20171220 06:03:55.944" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 06:03:55.944" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.255.129', port:'22'</msg>
<msg timestamp="20171220 06:03:55.944" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.129', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 06:03:55.944" level="INFO">[sftp_control.py@61] sftp upload from '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/vendor_S3031317.xml.p7' to '/ffs/run/swpool/OAM/vendor_S3031317.xml.p7' is ok.</msg>
<msg timestamp="20171220 06:03:55.944" level="INFO">[sftp_control.py@176] /ffs/run/swpool/OAM/vendor_S3031317.xml.p7</msg>
<msg timestamp="20171220 06:03:55.944" level="DEBUG">[sftp_control.py@49] sftp get file size '/ffs/run/swpool/OAM/vendor_S3031317.xml.p7' is 1KB</msg>
<msg timestamp="20171220 06:03:55.944" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 06:03:55.945" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:55.945" starttime="20171220 06:03:55.086"></status>
</kw>
<kw name="Recover Swconfig File" library="lib">
<msg timestamp="20171220 06:03:55.945" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 06:03:56.064" level="DEBUG">Attempting password auth...</msg>
<msg timestamp="20171220 06:03:56.080" level="DEBUG">[chan 0] Max packet in: 32768 bytes</msg>
<msg timestamp="20171220 06:03:56.158" level="INFO">[chan 0] Opened sftp connection (server version 3)</msg>
<msg timestamp="20171220 06:03:56.160" level="DEBUG">[chan 0] open('/ffs/run/swconfig.txt', 'wb')</msg>
<msg timestamp="20171220 06:03:56.173" level="DEBUG">[chan 0] open('/ffs/run/swconfig.txt', 'wb') -&gt; 00000000</msg>
<msg timestamp="20171220 06:03:56.173" level="DEBUG">[chan 0] close(00000000)</msg>
<msg timestamp="20171220 06:03:56.269" level="DEBUG">[chan 0] lstat('/ffs/run/swconfig.txt')</msg>
<msg timestamp="20171220 06:03:56.270" level="DEBUG">[chan 0] lstat('/ffs/run/swconfig.txt')</msg>
<msg timestamp="20171220 06:03:56.272" level="INFO">[chan 0] sftp session closed.</msg>
<msg timestamp="20171220 06:03:56.272" level="DEBUG">[chan 0] EOF sent (0)</msg>
<msg timestamp="20171220 06:03:56.276" level="DEBUG">[sftp_control.py@30] transport is ok, host:'192.168.255.129', port:'22'</msg>
<msg timestamp="20171220 06:03:56.276" level="INFO">[sftp_control.py@39] sftp connect to '192.168.255.129', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok</msg>
<msg timestamp="20171220 06:03:56.276" level="INFO">[sftp_control.py@61] sftp upload from '/opt/iphy/trunk_sran/daily_ci/pick_logs/Test_Log_20171220030347/ev_logs/LTE2029-A-f_20171220055705/swconfig.txt' to '/ffs/run/swconfig.txt' is ok.</msg>
<msg timestamp="20171220 06:03:56.276" level="INFO">[sftp_control.py@176] /ffs/run/swconfig.txt</msg>
<msg timestamp="20171220 06:03:56.276" level="DEBUG">[sftp_control.py@49] sftp get file size '/ffs/run/swconfig.txt' is 5KB</msg>
<msg timestamp="20171220 06:03:56.276" level="DEBUG">[sftp_control.py@168] sftp close is ok</msg>
<msg timestamp="20171220 06:03:56.277" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.277" starttime="20171220 06:03:55.945"></status>
</kw>
<msg timestamp="20171220 06:03:56.277" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.277" starttime="20171220 06:03:55.086"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Iphy Teardown Ue</arg>
</arguments>
<msg timestamp="20171220 06:03:56.277" level="TRACE">Arguments: [ 'Run Keyword And Ignore Error' | 'Iphy Teardown Ue' ]</msg>
<msg timestamp="20171220 06:03:56.277" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.278" starttime="20171220 06:03:56.277"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Teardown All Aliases For Admin</arg>
</arguments>
<msg timestamp="20171220 06:03:56.278" level="TRACE">Arguments: [ 'Teardown All Aliases For Admin' ]</msg>
<kw name="Teardown All Aliases For Admin" library="ute_admin">
<doc>Cleanup all ute_admin aliases.</doc>
<msg timestamp="20171220 06:03:56.278" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 06:03:56.278" level="INFO">Exit code: 1</msg>
<msg timestamp="20171220 06:03:56.279" level="INFO">STDOUT
</msg>
<msg timestamp="20171220 06:03:56.279" level="INFO">STDERR
</msg>
<msg timestamp="20171220 06:03:56.282" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.282" starttime="20171220 06:03:56.278"></status>
</kw>
<msg timestamp="20171220 06:03:56.282" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171220 06:03:56.282" starttime="20171220 06:03:56.278"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>ps -ef | grep node</arg>
</arguments>
<msg timestamp="20171220 06:03:56.282" level="TRACE">Arguments: [ 'Execute Shell Command' | 'ps -ef | grep node' ]</msg>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>ps -ef | grep node</arg>
</arguments>
<msg timestamp="20171220 06:03:56.283" level="TRACE">Arguments: [ 'ps -ef | grep node' ]</msg>
<msg timestamp="20171220 06:03:56.388" level="INFO">[connection_mgr.py@208] Current connection: 127.0.0.1:22 DeviceType:Linux Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 06:03:56.388" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 06:03:56.388" level="INFO">[ssh_common.py@258] Execute command: ps -ef | grep node</msg>
<msg timestamp="20171220 06:03:56.388" level="INFO">[ssh_common.py@314] Get Response: ps -ef | grep node
ute       3774  3183  0 06:03 pts/6    00:00:00 grep node
ute@test:~$</msg>
<msg timestamp="20171220 06:03:56.388" level="TRACE">Return: b'ps -ef | grep node\r\nute       3774  3183  0 06:03 pts/6    00:00:00 grep node\r\nute@test:~$ '</msg>
<status status="PASS" endtime="20171220 06:03:56.388" starttime="20171220 06:03:56.282"></status>
</kw>
<msg timestamp="20171220 06:03:56.388" level="TRACE">Return: (b'PASS', b'ps -ef | grep node\r\nute       3774  3183  0 06:03 pts/6    00:00:00 grep node\r\nute@test:~$ ')</msg>
<status status="PASS" endtime="20171220 06:03:56.388" starttime="20171220 06:03:56.282"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>netstat -ano | grep 9002</arg>
</arguments>
<msg timestamp="20171220 06:03:56.389" level="TRACE">Arguments: [ 'Execute Shell Command' | 'netstat -ano | grep 9002' ]</msg>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>netstat -ano | grep 9002</arg>
</arguments>
<msg timestamp="20171220 06:03:56.389" level="TRACE">Arguments: [ 'netstat -ano | grep 9002' ]</msg>
<msg timestamp="20171220 06:03:56.494" level="INFO">[connection_mgr.py@208] Current connection: 127.0.0.1:22 DeviceType:Linux Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 06:03:56.495" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 06:03:56.495" level="INFO">[ssh_common.py@258] Execute command: netstat -ano | grep 9002</msg>
<msg timestamp="20171220 06:03:56.495" level="INFO">[ssh_common.py@314] Get Response: netstat -ano | grep 9002
ute@test:~$</msg>
<msg timestamp="20171220 06:03:56.495" level="TRACE">Return: b'netstat -ano | grep 9002\r\nute@test:~$ '</msg>
<status status="PASS" endtime="20171220 06:03:56.495" starttime="20171220 06:03:56.389"></status>
</kw>
<msg timestamp="20171220 06:03:56.495" level="TRACE">Return: (b'PASS', b'netstat -ano | grep 9002\r\nute@test:~$ ')</msg>
<status status="PASS" endtime="20171220 06:03:56.495" starttime="20171220 06:03:56.389"></status>
</kw>
<kw name="Switch Host Connection" library="tdd_ev_robotws">
<doc>Switch to the connection identified by 'conn'.</doc>
<arguments>
<arg>${BTS_PC_CONNECTION}</arg>
</arguments>
<msg timestamp="20171220 06:03:56.496" level="TRACE">Arguments: [ &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt; ]</msg>
<msg timestamp="20171220 06:03:56.497" level="INFO">[connection_mgr.py@147] Switch to connection: 127.0.0.1:22 DeviceType:Linux Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;.</msg>
<msg timestamp="20171220 06:03:56.497" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.497" starttime="20171220 06:03:56.496"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Execute Shell Command</arg>
<arg>who</arg>
</arguments>
<msg timestamp="20171220 06:03:56.497" level="TRACE">Arguments: [ 'Execute Shell Command' | 'who' ]</msg>
<kw name="Execute Shell Command" library="tdd_ev_robotws">
<doc>Execute a command on the remote system.</doc>
<arguments>
<arg>who</arg>
</arguments>
<msg timestamp="20171220 06:03:56.498" level="TRACE">Arguments: [ 'who' ]</msg>
<msg timestamp="20171220 06:03:56.603" level="INFO">[connection_mgr.py@208] Current connection: 127.0.0.1:22 DeviceType:Linux Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 06:03:56.603" level="DEBUG">[ssh_common.py@283]</msg>
<msg timestamp="20171220 06:03:56.603" level="INFO">[ssh_common.py@258] Execute command: who</msg>
<msg timestamp="20171220 06:03:56.603" level="INFO">[ssh_common.py@314] Get Response: who
ute      :0           2017-10-26 04:20 (:0)
ute      pts/1        2017-12-20 02:33 (10.106.214.19)
ute      pts/0        2017-12-20 02:31 (10.106.214.19)
ute      pts/3        2017-12-20 03:03 (10.106.214.19)
ute      pts/6        2017-12-20 05:57 (127.0.0.1)
ute@test:~$</msg>
<msg timestamp="20171220 06:03:56.603" level="TRACE">Return: b'who\r\nute      :0           2017-10-26 04:20 (:0)\r\nute      pts/1        2017-12-20 02:33 (10.106.214.19)\r\nute      pts/0        2017-12-20 02:31 (10.106.214.19)\r\nute      pts/3        2017-12-20 03:03 (10.106.214.19)\r\nute      pts/6        2017-12-20 05:57 (127.0.0.1)\r\nute@test:~$ '</msg>
<status status="PASS" endtime="20171220 06:03:56.604" starttime="20171220 06:03:56.498"></status>
</kw>
<msg timestamp="20171220 06:03:56.604" level="TRACE">Return: (b'PASS', b'who\r\nute      :0           2017-10-26 04:20 (:0)\r\nute      pts/1        2017-12-20 02:33 (10.106.214.19)\r\nute      pts/0        2017-12-20 02:31 (10.106.214.19)\r\nute      pts/3        2017-12-20 03:03 (10.106.214.19)\r\nute      pts/6        2017-12-20 05:57 (127.0.0.1)\r\nute@test:~$ ')</msg>
<status status="PASS" endtime="20171220 06:03:56.604" starttime="20171220 06:03:56.497"></status>
</kw>
<kw name="Common Suite Teardown And Release TM500 Resource" library="DevHZ5_common_resource">
<doc>suite teardown with TM500 schedule usage to release TM500 reource.</doc>
<msg timestamp="20171220 06:03:56.605" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Tm500 Teardown</arg>
</arguments>
<msg timestamp="20171220 06:03:56.605" level="TRACE">Arguments: [ 'Tm500 Teardown' ]</msg>
<kw name="Tm500 Teardown" library="tdd_ev_robotws">
<doc>tm500 teardown.</doc>
<msg timestamp="20171220 06:03:56.606" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 06:03:56.606" level="TRACE">Return: None</msg>
<msg timestamp="20171220 06:03:56.606" level="FAIL">AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.</msg>
<msg timestamp="20171220 06:03:56.606" level="DEBUG">Traceback (most recent call last):
  File "/opt/ute/python/lib/python2.7/site-packages/tdd_ev_robotws/TdlteLib/ue_lib/tm500/__init__.py", line 80, in tm500_teardown
    self.store.get(alias).teardown()
  File "/opt/ute/python/lib/python2.7/site-packages/ute_common_store/store.py", line 81, in get
    "Please setup library before any other operation.".format(alias))</msg>
<status status="FAIL" endtime="20171220 06:03:56.606" starttime="20171220 06:03:56.606"></status>
</kw>
<msg timestamp="20171220 06:03:56.607" level="TRACE">Return: (b'FAIL', "AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.")</msg>
<status status="PASS" endtime="20171220 06:03:56.607" starttime="20171220 06:03:56.605"></status>
</kw>
<kw name="Common Suite Teardown" library="common_resource">
<msg timestamp="20171220 06:03:56.607" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${REMOVE_LOGS}'=='on'</arg>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<msg timestamp="20171220 06:03:56.608" level="TRACE">Arguments: [ "'on'=='on'" | 'Run Keyword If All Tests Passed' | 'Remove Directory' | '${SUITE_LOG_DIRECTORY}' | '${True}' ]</msg>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<msg timestamp="20171220 06:03:56.608" level="TRACE">Arguments: [ 'Remove Directory' | '${SUITE_LOG_DIRECTORY}' | '${True}' ]</msg>
<msg timestamp="20171220 06:03:56.608" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.608" starttime="20171220 06:03:56.608"></status>
</kw>
<msg timestamp="20171220 06:03:56.608" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.609" starttime="20171220 06:03:56.607"></status>
</kw>
<kw name="Disconnect All Hosts" library="tdd_ev_robotws">
<doc>Closes all existing telnet connections to remote hosts.</doc>
<msg timestamp="20171220 06:03:56.609" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20171220 06:03:56.709" level="INFO">[ssh_common.py@141] Disconnect from 127.0.0.1:22 DeviceType:Linux Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a7d3cc20&gt;</msg>
<msg timestamp="20171220 06:03:56.709" level="INFO">[ssh_common.py@141] Disconnect from 192.168.200.1:22 DeviceType:Linux Timeout:30 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6abea73b0&gt;</msg>
<msg timestamp="20171220 06:03:56.709" level="INFO">[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds &lt;tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x7fe6a46c1830&gt;</msg>
<msg timestamp="20171220 06:03:56.709" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.709" starttime="20171220 06:03:56.609"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<msg timestamp="20171220 06:03:56.709" level="TRACE">Arguments: [ 'Run Keyword If All Tests Passed' | 'Zip File' | '${SUITE_LOG_DIRECTORY}' | '${SUITE_LOG_DIRECTORY}.zip' ]</msg>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Zip File</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${SUITE_LOG_DIRECTORY}.zip</arg>
</arguments>
<msg timestamp="20171220 06:03:56.710" level="TRACE">Arguments: [ 'Zip File' | '${SUITE_LOG_DIRECTORY}' | '${SUITE_LOG_DIRECTORY}.zip' ]</msg>
<msg timestamp="20171220 06:03:56.710" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.710" starttime="20171220 06:03:56.710"></status>
</kw>
<msg timestamp="20171220 06:03:56.710" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171220 06:03:56.710" starttime="20171220 06:03:56.709"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Run Keyword If All Tests Passed</arg>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<msg timestamp="20171220 06:03:56.711" level="TRACE">Arguments: [ 'Run Keyword If All Tests Passed' | 'Remove Directory' | '${SUITE_LOG_DIRECTORY}' | '${True}' ]</msg>
<kw name="Run Keyword If All Tests Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if all tests passed.</doc>
<arguments>
<arg>Remove Directory</arg>
<arg>${SUITE_LOG_DIRECTORY}</arg>
<arg>${True}</arg>
</arguments>
<msg timestamp="20171220 06:03:56.711" level="TRACE">Arguments: [ 'Remove Directory' | '${SUITE_LOG_DIRECTORY}' | '${True}' ]</msg>
<msg timestamp="20171220 06:03:56.711" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.711" starttime="20171220 06:03:56.711"></status>
</kw>
<msg timestamp="20171220 06:03:56.711" level="TRACE">Return: (b'PASS', None)</msg>
<status status="PASS" endtime="20171220 06:03:56.712" starttime="20171220 06:03:56.711"></status>
</kw>
<msg timestamp="20171220 06:03:56.712" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.712" starttime="20171220 06:03:56.607"></status>
</kw>
<msg timestamp="20171220 06:03:56.712" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.712" starttime="20171220 06:03:56.604"></status>
</kw>
<msg timestamp="20171220 06:03:56.712" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20171220 06:03:56.712" starttime="20171220 06:03:55.085"></status>
</kw>
<status status="FAIL" endtime="20171220 06:03:56.712" starttime="20171220 05:57:04.628">Suite setup failed:
Execution terminated by signal</status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">OAM2</stat>
<stat fail="1" pass="0">owner-yin.zhang</stat>
<stat fail="1" pass="0">QC_756172</stat>
<stat fail="1" pass="0">release-TL16</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="LTE2029-A-f" pass="0">LTE2029-A-f</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20171220 05:57:04.832" level="ERROR">Loading tdd_config has failed. Please check if: 
       1. you executed pybot with --variable CONFIGURATION:$your_tl_config 
          i.e. pybot --variable CONFIGURATION:Wroclaw.test 
       2. check if there is no problem with your configuration 
       Error msg: Variable ${CONFIGURATION} does not exist.
</msg>
<msg timestamp="20171220 06:02:45.138" level="WARN">Admin API connection lost. Resetting ...</msg>
<msg timestamp="20171220 06:03:15.894" level="WARN">Admin API connection lost. Resetting ...</msg>
</errors>
</robot>
