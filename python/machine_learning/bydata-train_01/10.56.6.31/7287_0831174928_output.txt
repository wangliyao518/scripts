


this keyword create suite name directory path as D:\TA_logs\TestLog_20170831172307//logs//


This keyword return the time stamp, default format is: 'yyyymmddhhmmss'


${timestamp}


${timestamp} = 20170831174331




Replaces ``pattern`` in the given ``string`` with ``replace_with``.


${SUITE_NAME[:50]}

\\s+$

${EMPTY}



${FILE_NAME}


${FILE_NAME} = FZFI Operational RF block unblock




Catenates the given items together and returns the resulted string.


SEPARATOR=${/}

${OUTPUT_DIR}

ev_logs

${FILE_NAME}_${timestamp}



${SUITE_LOG_DIRECTORY}


${SUITE_LOG_DIRECTORY} = D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI Operational RF block unblock_20170831174331




Replaces ``search_for`` in the given ``string`` with ``replace_with``.


${SUITE_LOG_DIRECTORY}

${SPACE}

_



${SUITE_LOG_DIRECTORY}


${SUITE_LOG_DIRECTORY} = D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331




Makes a variable available everywhere within the scope of the current suite.


${SUITE_LOG_DIRECTORY}


${SUITE_LOG_DIRECTORY} = D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331




Creates the specified directory.


${SUITE_LOG_DIRECTORY}


Created directory '
<
a href="file://D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331"
>
D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331
<
/a
>
'.




Logs the given message with the given level.


save log dir:${SUITE_LOG_DIRECTORY}


save log dir:D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331




Makes a variable available everywhere within the scope of the current suite.


${snapshot_flag}

0


${snapshot_flag} = 0




This keyword return useable LOG directory.


Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${TEST LOG DIR}



${case_dir_exist}



Fails unless the given variable exists within the current scope.


${TEST LOG DIR}


Variable ${TEST LOG DIR} does not exist.



${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')




Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${SUITE LOG DIRECTORY}



${suite_dir_exist}



Fails unless the given variable exists within the current scope.


${SUITE LOG DIRECTORY}




${suite_dir_exist} = ('PASS', None)




Sets variable based on the given condition.


'PASS'=='${case_dir_exist[0]}'

${TEST LOG DIR}

'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'

${SUITE LOG DIRECTORY}

'FAIL'=='${suite_dir_exist[0]}'

${OUTPUT_DIR}



${log dir}



Sets variable based on the given condition.


'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'

${SUITE LOG DIRECTORY}

'FAIL'=='${suite_dir_exist[0]}'

${OUTPUT_DIR}




${log dir} = D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331




Makes a variable available everywhere within the scope of the current suite.


${SAVE LOG DIRECTORY}

${log dir}


${SAVE LOG DIRECTORY} = D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331






Runs the given keyword with the given arguments and ignores possible error.


Make Sure FCT Ping Ok




This function is used for check whether ping host success, if yes, return 1, else return 0


${FCMD_IP}



${status}


${status} = False




Runs the given keyword with the given arguments, if ``condition`` is false.


${status}

Wait Until Units Startup

300

${FTM_IP}



This keyword tests the reachability of given unit/units.


300

${FTM_IP}


[ping_control.py@155] ping 192.168.255.129 OK!






Runs the given keyword with the given arguments, if ``condition`` is false.


${status}

Btscli Disable Bts Port Security



Disable Ethernet port security.

Starting process:

D:\TA\trunk_soam\tdd_ev_others\btscli\resource\jre_windows\bin\java -Djava.awt.headless=true -classpath .;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\btsemappl.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\coreasset.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\ganymed-ssh2-build262.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\jansi-1.11.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\javabuilder.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\json-20140107.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\laf.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\log4j.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\poseidon.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\rfview.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\rpmaster.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\xz.jar com.nokia.em.bts.coreasset.application.CoreAssetToolApplication -op changesecurity -ne "192.168.255.129" -outdir "D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331" -pw "Nemuadmin:nemuuser" -timeout "300" -disable

Waiting for process to complete.

Process completed.

[runner.py@40] execute cmd: D:\TA\trunk_soam\tdd_ev_others\btscli\resource\jre_windows\bin\java -Djava.awt.headless=true -classpath .;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\btsemappl.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\coreasset.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\ganymed-ssh2-build262.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\jansi-1.11.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\javabuilder.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\json-20140107.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\laf.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\log4j.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\poseidon.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\rfview.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\rpmaster.jar;D:\TA\trunk_soam\tdd_ev_robotws\TdlteLib\enb_lib\btscli\resource\jars\xz.jar com.nokia.em.bts.coreasset.application.CoreAssetToolApplication -op changesecurity -ne "192.168.255.129" -outdir "D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331" -pw "Nemuadmin:nemuuser" -timeout "300" -disable

[runner.py@44] Start to kill Site Manager process...

[runner.py@60] response: 31/08 17:43:47  INFO Ethernet Security Tool version 3.0

31/08 17:43:47  INFO Connecting to 192.168.255.129...

31/08 17:43:50  INFO Create write connection to 192.168.255.129

31/08 17:43:50  INFO Connected to 192.168.255.129

31/08 17:43:52  INFO Successfully changed ethernet security status to 192.168.255.129

31/08 17:43:52  INFO Disconnected from 192.168.255.129

31/08 17:43:54  INFO Ethernet Security Tool finished

31/08 17:43:54  INFO Operations finished successfully

Picked up JAVA_TOOL_OPTIONS: -agentlib:jvmhook

Picked up _JAVA_OPTIONS: -Xrunjvmhook -Xbootclasspath/a:"C:\Program Files (x86)\HP\Unified Functional Testing\bin\java_shared\classes";"C:\Program Files (x86)\HP\Unified Functional Testing\bin\java_shared\classes\jasmine.jar"

Picked up JAVA_TOOL_OPTIONS: -agentlib:jvmhook






Runs the given keyword with the given arguments, if ``condition`` is false.


${status}

Wait Until Units Startup

60

${FCMD_IP}



This keyword tests the reachability of given unit/units.


60

${FCMD_IP}


[ping_control.py@155] ping 192.168.255.1 OK!






Displays the given messages in the log file as keyword arguments.


Wait Until Keyword Succeeds

5min

5s

_make sure fctb connect ok









Runs the given keyword with the given arguments and ignores possible error.


get_enb_infomation



This keyword will print bts sw version, bbu type and RRU type.

[chan 0] Opened sftp connection (server version 3)

[chan 0] sftp session closed.

[chan 0] Opened sftp connection (server version 3)

[chan 0] sftp session closed.

[chan 0] Opened sftp connection (server version 3)

[chan 0] sftp session closed.

[ftm_control.py@94] try: 1/1, http return code: 200

[ftm_control.py@210] login succeed !

[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'

[ftm_control.py@94] try: 1/1, http return code: 200

[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1504172666
&
token=896fa313463c6540e9805bf9bc2ce5e9040558ab5a3168d36c98740b205cde9a
&
frame=sshservice'

[ftm_control.py@94] try: 1/3, http return code: 200

[ftm_control.py@266]
<
!doctype html public "-//w3c//dtd html 4.0 transitional//en"
>

<
html
>


<
head
>


<
meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"
>


<
meta http-equiv="expires" content="0"
>


<
meta http-equiv="cache-control" content="public,no-cache"
>


<
meta http-equiv="pragma" content="no-cache"
>


<
/head
>


<
body bgcolor="#E7E7E7"
>



<
bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"
>



<
h3
>
<
FONT face="Arial, Helvetica, sans-serif"
>

<
p
>
<
h3
>
SSH Service Enabled Successfully
<
/h3
>

<
/p
>
<
/body
>

<
/html
>

[ftm_control.py@94] try: 1/1, http return code: 200

[ftm_control.py@210] login succeed !

[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'

[ftm_control.py@94] try: 1/1, http return code: 200

[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1504172671
&
token=c9e161dfc663cedfab9b06f1dbe25ab5e3c37449eae2e32edf0ebaef478efd24
&
frame=RndPortsService'

[ftm_control.py@94] try: 1/3, http return code: 200

[ftm_control.py@266]
<
!doctype html public "-//w3c//dtd html 4.0 transitional//en"
>

<
html
>


<
head
>


<
meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"
>


<
meta http-equiv="expires" content="0"
>


<
meta http-equiv="cache-control" content="public,no-cache"
>


<
meta http-equiv="pragma" content="no-cache"
>


<
/head
>


<
body bgcolor="#E7E7E7"
>



<
bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"
>



<
h3
>
<
FONT face="Arial, Helvetica, sans-serif"
>

<
p
>
<
h3
>
R
&
D Ports Service Enabled Successfully
<
/h3
>

<
/p
>
<
/body
>

<
/html
>

[enb_command_control.py@32] argument host is: 192.168.255.1

[ssh_common.py@203] -bash-4.4#

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Unknow Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0552E800
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

-bash-4.4#

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Unknow Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0552E800
>

[enb_command_control.py@32] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Thu Aug 31 09:44:36 UTC 2017 from 192.168.255.126 on pts/0

-bash-4.4#

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0552E8C8
>

[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml

[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml

TargetBD_TL18_ENB_9999_170831_066468.xml

-bash-4.4#

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0552E8C8
>

[enb_resource.py@1086]

****Current BTS version is 'TL18_ENB_9999_170831_066468' *****

[enb_resource.py@1113] activeBuildVersion=TL18_ENB_9999_170831_066468

[enb_command_control.py@32] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Thu Aug 31 09:44:47 UTC 2017 from 192.168.255.126 on pts/0

-bash-4.4#

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05531120
>

[ssh_common.py@258] Execute command: ls /ram/SiteConf.xml

[ssh_common.py@314] Get Response: ls /ram/SiteConf.xml

/ram/SiteConf.xml

-bash-4.4#

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05531120
>

[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok

[sftp_control.py@176] /ram/SiteConf.xml

[sftp_control.py@79] sftp download from '/ram/SiteConf.xml' to 'D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331\SiteConf.xml' is ok. local file size is 195k

[enb_command_control.py@32] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Thu Aug 31 09:45:08 UTC 2017 from 192.168.255.126 on ssh

-bash-4.4#

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05526BE8
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

-bash-4.4#

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05526BE8
>

[enb_resource.py@375] The real falsh folder is /ffs/fs2

[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok

[sftp_control.py@176] /ffs/fs2/FileDirectory.xml

[sftp_control.py@79] sftp download from '/ffs/fs2/FileDirectory.xml' to 'D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331\FileDirectory_20170831174503.xml' is ok. local file size is 38k

[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok

[sftp_control.py@176] /ffs/fs2/config/SCFC_132.xml

[sftp_control.py@79] sftp download from '/ffs/fs2/config/SCFC_132.xml' to 'D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331\SCFC_132.xml' is ok. local file size is 115k

[enb_resource.py@1086]

****Current bbu type is 'FSIH' *****

[enb_resource.py@1208] HW_BBU_TYPE=FSIH

[enb_resource.py@1086]

****Current rru type is 'FZFI-f:FZFI-d' *****

[enb_resource.py@1211] HW_RRU_TYPE=FZFI-f:FZFI-d

[enb_resource.py@1086]

****Current HW type is 'null' *****

[enb_resource.py@1214] BTS_HW_TYPE=null






Sets the resolution order to use when a name matches multiple keywords.


tdd_ev_robotws

OperatingSystem






used to get operation system platform version, can be used to judge if


with_connection=${false}



${platform_version}


${platform_version} = Windows-7-6.1.7601-SP1




Sets variable based on the given condition.


"Windows" in "${platform_version}"

${TELNET_PORT}

${SSH_PORT}



${conn_port}


${conn_port} = 23




Sets variable based on the given condition.


"Windows" in "${platform_version}"

TELNET

SSH



${conn_type}


${conn_type} = TELNET




Sets variable based on the given condition.


"Windows" in "${platform_version}"

30

5



${timeout}


${timeout} = 30




Used to connect to host, either TELNET or SSH


${BTS_PC_INFO.IP}

port=${conn_port}

username=${BTS_PC_INFO.USERNAME}

password=${BTS_PC_INFO.PASSWORD}

conn_type=${conn_type}

timeout=${timeout}



${BTS_PC_CONNECTION}


[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service



login:

[telnet_common.py@276] Execute command: tdlte-tester

[telnet_common.py@306] Get Response:  tdlte-tester


password:

[telnet_common.py@276] Execute command: btstest

[telnet_common.py@246]


*===============================================================

Microsoft Telnet Server.

*===============================================================

C:\Users\tdlte-tester
>

${BTS_PC_CONNECTION} = 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x055A14B8
>




Makes a variable available everywhere within the scope of the current suite.


${BTS_PC_CONNECTION}


${BTS_PC_CONNECTION} = 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x055A14B8
>




Runs the given keyword with the given arguments, if ``condition`` is true.


"Windows" in "${platform_version}"

Execute Shell Command

tlntadmn config timeoutactive\=no



Execute a command on the remote system.


tlntadmn config timeoutactive\=no


[connection_mgr.py@208] Current connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x055A14B8
>

[telnet_common.py@276] Execute command: tlntadmn config timeoutactive=no

[telnet_common.py@306] Get Response: tlntadmn config timeoutactive=no

The settings were successfully updated.


C:\Users\tdlte-tester
>








Switch to the connection identified by 'conn'.


${BTS_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x055A14B8
>
.







Runs the given keyword with the given arguments, if ``condition`` is true.


'${REMOVE_LOGS}'=='on'

Run Keyword If All Tests Passed

Remove Directory

${SUITE_LOG_DIRECTORY}

${True}





Closes all existing telnet connections to remote hosts.

[telnet_common.py@188]

[telnet_common.py@189] Disconnect from 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x055A14B8
>




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If All Tests Passed

Zip File

${SUITE_LOG_DIRECTORY}

${SUITE_LOG_DIRECTORY}.zip



Runs the given keyword with the given arguments, if all tests passed.


Zip File

${SUITE_LOG_DIRECTORY}

${SUITE_LOG_DIRECTORY}.zip







Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If All Tests Passed

Remove Directory

${SUITE_LOG_DIRECTORY}

${True}



Runs the given keyword with the given arguments, if all tests passed.


Remove Directory

${SUITE_LOG_DIRECTORY}

${True}










this keyword create case name directory path as D:\TA_logs\TestLog_20170831172307//ev_logs//D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331//


This keyword return the time stamp, default format is: 'yyyymmddhhmmss'


${timestamp}


${timestamp} = 20170831174541




Catenates the given items together and returns the resulted string.


SEPARATOR=${/}

${SUITE_LOG_DIRECTORY}

${TEST_NAME[:50]}



${TEST_LOG_DIR}


${TEST_LOG_DIR} = D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331\FZFI_Operational_RF_block_unblock




Replaces ``search_for`` in the given ``string`` with ``replace_with``.


${TEST_LOG_DIR}

${SPACE}

_



${TEST_LOG_DIR}


${TEST_LOG_DIR} = D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331\FZFI_Operational_RF_block_unblock




Makes a variable available everywhere within the scope of the current suite.


${TEST_LOG_DIR}


${TEST_LOG_DIR} = D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331\FZFI_Operational_RF_block_unblock




Creates the specified directory.


${TEST_LOG_DIR}


Created directory '
<
a href="file://D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331\FZFI_Operational_RF_block_unblock"
>
D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331\FZFI_Operational_RF_block_unblock
<
/a
>
'.




Logs the given message with the given level.


save log dir:${TEST_LOG_DIR}


save log dir:D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331\FZFI_Operational_RF_block_unblock




Runs the given keyword with the given arguments, if ``condition`` is false.


${BTS PC CONNECTION.connected}

Initial Connection With BTS PC





This keyword return useable LOG directory.


Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${TEST LOG DIR}



${case_dir_exist}



Fails unless the given variable exists within the current scope.


${TEST LOG DIR}




${case_dir_exist} = ('PASS', None)




Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${SUITE LOG DIRECTORY}



${suite_dir_exist}



Fails unless the given variable exists within the current scope.


${SUITE LOG DIRECTORY}




${suite_dir_exist} = ('PASS', None)




Sets variable based on the given condition.


'PASS'=='${case_dir_exist[0]}'

${TEST LOG DIR}

'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'

${SUITE LOG DIRECTORY}

'FAIL'=='${suite_dir_exist[0]}'

${OUTPUT_DIR}



${log dir}


${log dir} = D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331\FZFI_Operational_RF_block_unblock




Makes a variable available everywhere within the scope of the current suite.


${SAVE LOG DIRECTORY}

${log dir}


${SAVE LOG DIRECTORY} = D:\TA_logs\TestLog_20170831172307\ev_logs\FZFI_Operational_RF_block_unblock_20170831174331\FZFI_Operational_RF_block_unblock









${source_scf}

${parameter_list}

${ini_earfcn_check}



Setup InfoModel library and Connect to InfoModel.


port=${BTS_INFOMODEL_PORT}


[infomodel_control.py@157] set up infomodel with following info succeed .

details: address=192.168.255.129, port=12345, definitions_file_path=None

InfoModelConnectionException: Expected connection status: RegisteredToInfoModel not achieved. Status reached: SocketCreation






Action when case finishs


Switch to the connection identified by 'conn'.


${BTS_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.56.6.31:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x055A14B8
>
.




This keyword is used to kill the processes related to QTP application.

Start to kill QTP process.

Finshed to kill QTP process.




This keyword stops BTS system(UDP) log catching.

[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'




Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${case_execute_log_name}



${return}



Fails unless the given variable exists within the current scope.


${case_execute_log_name}


Variable ${case_execute_log_name} does not exist.



${return} = ('FAIL', u'Variable ${case_execute_log_name} does not exist.')




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${return[0]}'=='PASS'

Save Infomodel Log

${TEST_LOG_DIR}\\${case_execute_log_name}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Save Infomodel Log

${TEST_LOG_DIR}\\${case_execute_log_name}







Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${return[0]}'=='PASS'

Stop Infomodel



Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Stop Infomodel







Runs the given keyword with the given arguments and ignores possible error.


Release_TM500_And_Colse_PA_Port




Displays the given messages in the log file as keyword arguments.


${return}

Run Keyword And Ignore Error

Variable Should Exist

${TM500_Use_Tag}





Displays the given messages in the log file as keyword arguments.


Run Keyword If

'${return[0]}'=='PASS'

Run Keyword If

'${TM500_Use_Tag}'=='used'

Set Attenuators Off

${ATT_ALL_INFO}





Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${TM500_Pppoe_Tag}



${return}



Fails unless the given variable exists within the current scope.


${TM500_Pppoe_Tag}


Variable ${TM500_Pppoe_Tag} does not exist.



${return} = ('FAIL', u'Variable ${TM500_Pppoe_Tag} does not exist.')




Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Run Keyword If

'${TM500_Pppoe_Tag}'=='used'

Switch Host Connection

${TM500_PC_CONNECTION}





Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Run Keyword If

'${TM500_Pppoe_Tag}'=='used'

Tm500 Stop Pppoe Connection





tm500 teardown.

AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.







Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${CELL${index}_ATT_INFO}



${ret1}

${ret2}



Fails unless the given variable exists within the current scope.


${CELL${index}_ATT_INFO}




${ret1} = PASS

${ret2} = None




Stops executing the enclosing for loop if the ``condition`` is true.


'${ret1}'=='FAIL'





This keyword set attenuation value for one eNB cell.


${CELL${index}_ATT_INFO}

120

120


$TA,C,03F0*

[attenuator_control.py@445] send-
>
'$TA,C,03F0*', Receive
<
-'$TA,C,03F0*'

[attenuator_control.py@450] send-
>
'$TA,H,03*', Receive
<
-'$TA,C,03F0*'

$TA,C,04F0*

[attenuator_control.py@445] send-
>
'$TA,C,04F0*', Receive
<
-'$TA,C,04F0*'

[attenuator_control.py@450] send-
>
'$TA,H,04*', Receive
<
-'$TA,C,04F0*'







Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${CELL${index}_ATT_INFO}



${ret1}

${ret2}



Fails unless the given variable exists within the current scope.


${CELL${index}_ATT_INFO}




${ret1} = PASS

${ret2} = None




Stops executing the enclosing for loop if the ``condition`` is true.


'${ret1}'=='FAIL'





This keyword set attenuation value for one eNB cell.


${CELL${index}_ATT_INFO}

120

120


$TA,C,03F0*

[attenuator_control.py@445] send-
>
'$TA,C,03F0*', Receive
<
-'$TA,C,03F0*'

[attenuator_control.py@450] send-
>
'$TA,H,03*', Receive
<
-'$TA,C,03F0*'

$TA,C,04F0*

[attenuator_control.py@445] send-
>
'$TA,C,04F0*', Receive
<
-'$TA,C,04F0*'

[attenuator_control.py@450] send-
>
'$TA,H,04*', Receive
<
-'$TA,C,04F0*'







Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${CELL${index}_ATT_INFO}



${ret1}

${ret2}



Fails unless the given variable exists within the current scope.


${CELL${index}_ATT_INFO}


Variable ${CELL3_ATT_INFO} does not exist.



${ret1} = FAIL

${ret2} = Variable ${CELL3_ATT_INFO} does not exist.




Stops executing the enclosing for loop if the ``condition`` is true.


'${ret1}'=='FAIL'


Exiting for loop altogether.










Displays the given messages in the log file as keyword arguments.


Set Test Variable

${TM500_Use_Tag}

unused





Makes a variable available everywhere within the scope of the current test.


${TM500_Pppoe_Tag}

unused


${TM500_Pppoe_Tag} = unused








Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${route_add_cpe_pc}



${return}



Fails unless the given variable exists within the current scope.


${route_add_cpe_pc}


Variable ${route_add_cpe_pc} does not exist.



${return} = ('FAIL', u'Variable ${route_add_cpe_pc} does not exist.')




Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Run Keyword If

'${route_add_cpe_pc}'=='true'

Execute Shell Command

route delete ${BTS_PC_INFO.IP} mask 255.255.255.255 ${UE1_INFO.ADDRESS}






${TEST_LOG_DIR}

${OUTPUT_DIR}

alarm_monitor.csv

${TEST_NAME[:50]}


Infomodel not connected.

[infomodel_control.py@82] set up infomodel with following info succeed .

details: address=192.168.255.1, port=12345, definitions_file_path=None

[infomodel_control.py@100] stop infomodel succeed .





${TEST_LOG_DIR}

${OUTPUT_DIR}

alarm_monitor.csv

${TEST_NAME[:50]}





Runs the given keyword with the given arguments and ignores possible error.


Should Contain

${TEST_NAME[:50]}

Fiber



${return1}



Fails if ``container`` does not contain ``item`` one or more times.


${TEST_NAME[:50]}

Fiber


'FZFI_Operational_RF_block_unblock' does not contain 'Fiber'



${return1} = ('FAIL', u"'FZFI_Operational_RF_block_unblock' does not contain 'Fiber'")




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${return1[0]}'=='PASS'

Get_All_Fiber_Link



${all_fiber_link}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${return1[0]}'=='PASS'

Get_All_Fiber_Link




${all_fiber_link} = ('PASS', None)




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${return1[0]}'=='PASS'

Connect_Fiber_Link

${all_fiber_link[1]}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${return1[0]}'=='PASS'

Connect_Fiber_Link

${all_fiber_link[1]}







Displays the given messages in the log file as keyword arguments.


Run Keyword And Ignore Error

Run Keyword If

'${return1[0]}'=='PASS'

Software Reboot Bts





Displays the given messages in the log file as keyword arguments.


Run Keyword And Ignore Error

Run Keyword If

'${return1[0]}'=='PASS'

Sleep

60





Displays the given messages in the log file as keyword arguments.


Run Keyword And Ignore Error

Run Keyword If

'${return1[0]}'=='PASS'

Wait Until Units Startup

600

192.168.255.1





[Caution] this keyword step:


used to get operation system platform version, can be used to judge if


with_connection=${false}



${platform_version}


${platform_version} = Windows-7-6.1.7601-SP1




Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'

One Key Capture Bts Logs

${SAVE_LOG_DIRECTORY}${/}capture_logs

${one_key_capture_logs_option}



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'

One Key Capture Bts Logs

${SAVE_LOG_DIRECTORY}${/}capture_logs

${one_key_capture_logs_option}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'

One Key Capture Bts Logs

${SAVE_LOG_DIRECTORY}${/}capture_logs

${one_key_capture_logs_option}









Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Login



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Login



Runs the given keyword with the given arguments, if ``condition`` is true.


'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Login









Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Save Snapshot

3



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Save Snapshot

3



Runs the given keyword with the given arguments, if ``condition`` is true.


'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Save Snapshot

3









get active BTS SW Build Version from enb targetBD file..


${version}


[enb_command_control.py@32] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Thu Aug 31 09:45:19 UTC 2017 from 192.168.255.126 on ssh

-bash-4.4#

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x055A1C10
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

-bash-4.4#

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x055A1C10
>

[enb_command_control.py@32] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Thu Aug 31 09:49:09 UTC 2017 from 192.168.255.126 on pts/0

-bash-4.4#

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x056E1BC0
>

[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml

[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml

TargetBD_TL18_ENB_9999_170831_066468.xml

-bash-4.4#

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x056E1BC0
>

${version} = TL18_ENB_9999_170831_066468




Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"

semcli save snapshot



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"

semcli save snapshot



Runs the given keyword with the given arguments, if ``condition`` is true.


'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"

semcli save snapshot









Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"

_soam_snapshot



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"

_soam_snapshot



Runs the given keyword with the given arguments, if ``condition`` is true.


'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"

_soam_snapshot













owner-jiaqi.jin@nokia.com

QC_464835


InfoModelConnectionException: Expected connection status: RegisteredToInfoModel not achieved. Status reached: SocketCreation


TD-LTE I
&
V SISO1





Critical Tests

All Tests



owner-jiaqi.jin@nokia.com

QC_464835



FZFI Operational RF block unblock




Loading tdd_config has failed. Please check if:

1. you executed pybot with --variable CONFIGURATION:$your_tl_config

i.e. pybot --variable CONFIGURATION:Wroclaw.test

2. check if there is no problem with your configuration

Error msg: Variable ${CONFIGURATION} does not exist.


Infomodel not connected.


