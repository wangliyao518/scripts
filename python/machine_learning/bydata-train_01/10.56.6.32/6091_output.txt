


this keyword create suite name directory path as D:\TA\TA_logs\TestLog_20170703174310//logs//


This keyword return the time stamp, default format is: 'yyyymmddhhmmss'


${timestamp}


${timestamp} = 20170703174312




Replaces ``pattern`` in the given ``string`` with ``replace_with``.


${SUITE_NAME[:50]}

\\s+$

${EMPTY}



${FILE_NAME}


${FILE_NAME} = FZHR Operational RF power off then on




Catenates the given items together and returns the resulted string.


SEPARATOR=${/}

${OUTPUT_DIR}

ev_logs

${FILE_NAME}_${timestamp}



${SUITE_LOG_DIRECTORY}


${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR Operational RF power off then on_20170703174312




Replaces ``search_for`` in the given ``string`` with ``replace_with``.


${SUITE_LOG_DIRECTORY}

${SPACE}

_



${SUITE_LOG_DIRECTORY}


${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312




Makes a variable available everywhere within the scope of the current suite.


${SUITE_LOG_DIRECTORY}


${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312




Creates the specified directory.


${SUITE_LOG_DIRECTORY}


Created directory '
<
a href="file://D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312"
>
D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312
<
/a
>
'.




Logs the given message with the given level.


save log dir:${SUITE_LOG_DIRECTORY}


save log dir:D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312




Makes a variable available everywhere within the scope of the current suite.


${snapshot_flag}

0


${snapshot_flag} = 0




This keyword return useable LOG directory.


Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${TEST LOG DIR}



${case_dir_exist}



Fails unless the given variable exists within the current scope.


${TEST LOG DIR}


Variable ${TEST LOG DIR} does not exist.



${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')




Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${SUITE LOG DIRECTORY}



${suite_dir_exist}



Fails unless the given variable exists within the current scope.


${SUITE LOG DIRECTORY}




${suite_dir_exist} = ('PASS', None)




Sets variable based on the given condition.


'PASS'=='${case_dir_exist[0]}'

${TEST LOG DIR}

'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'

${SUITE LOG DIRECTORY}

'FAIL'=='${suite_dir_exist[0]}'

${OUTPUT_DIR}



${log dir}



Sets variable based on the given condition.


'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'

${SUITE LOG DIRECTORY}

'FAIL'=='${suite_dir_exist[0]}'

${OUTPUT_DIR}




${log dir} = D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312




Makes a variable available everywhere within the scope of the current suite.


${SAVE LOG DIRECTORY}

${log dir}


${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312






Runs the given keyword with the given arguments and ignores possible error.


Make Sure FCT Ping Ok




This function is used for check whether ping host success, if yes, return 1, else return 0


${FCMD_IP}



${status}


[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Reply from 192.168.255.1: bytes=32 time
<
1ms TTL=255


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),

Approximate round trip times in milli-seconds:

Minimum = 0ms, Maximum = 0ms, Average = 0ms

${status} = True




Runs the given keyword with the given arguments, if ``condition`` is false.


${status}

Wait Until Units Startup

300

${FTM_IP}





Runs the given keyword with the given arguments, if ``condition`` is false.


${status}

Btscli Disable Bts Port Security





Runs the given keyword with the given arguments, if ``condition`` is false.


${status}

Wait Until Units Startup

60

${FCMD_IP}





Displays the given messages in the log file as keyword arguments.


Wait Until Keyword Succeeds

5min

5s

_make sure fctb connect ok









Runs the given keyword with the given arguments and ignores possible error.


get_enb_infomation



This keyword will print bts sw version, bbu type and RRU type.

[chan 0] Opened sftp connection (server version 3)

[chan 0] sftp session closed.

[chan 0] Opened sftp connection (server version 3)

[chan 0] sftp session closed.

[chan 0] Opened sftp connection (server version 3)

[chan 0] sftp session closed.

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Reply from 192.168.255.1: bytes=32 time
<
1ms TTL=255


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),

Approximate round trip times in milli-seconds:

Minimum = 0ms, Maximum = 0ms, Average = 0ms

[ftm_control.py@94] try: 1/1, http return code: 200

[ftm_control.py@210] login succeed !

[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/sshservice.html'

[ftm_control.py@94] try: 1/1, http return code: 200

[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableSsh.cgi?stamp=1499074998
&
token=f93acd79e990b410fbd77bb8def66a50454e2d49da21fb9d5f9b26c5cd635289
&
frame=sshservice'

[ftm_control.py@94] try: 1/3, http return code: 200

[ftm_control.py@266]
<
!doctype html public "-//w3c//dtd html 4.0 transitional//en"
>

<
html
>


<
head
>


<
meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"
>


<
meta http-equiv="expires" content="0"
>


<
meta http-equiv="cache-control" content="public,no-cache"
>


<
meta http-equiv="pragma" content="no-cache"
>


<
/head
>


<
body bgcolor="#E7E7E7"
>



<
bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"
>



<
h3
>
<
FONT face="Arial, Helvetica, sans-serif"
>

<
p
>
<
h3
>
SSH Service Enabled Successfully
<
/h3
>

<
/p
>
<
/body
>

<
/html
>

[ftm_control.py@94] try: 1/1, http return code: 200

[ftm_control.py@210] login succeed !

[ftm_control.py@65] request on FTM: 'https://192.168.255.129/protected/RndPortsService.html'

[ftm_control.py@94] try: 1/1, http return code: 200

[ftm_control.py@237] Calling CGI script on FTM: 'https://192.168.255.129/protected/enableRndPorts.cgi?stamp=1499075000
&
token=e6728b2ff73a3d40f3d6d54f2b451766dfc3191f20f8e2aae8df0b0569fd2ede
&
frame=RndPortsService'

[ftm_control.py@94] try: 1/3, http return code: 200

[ftm_control.py@266]
<
!doctype html public "-//w3c//dtd html 4.0 transitional//en"
>

<
html
>


<
head
>


<
meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"
>


<
meta http-equiv="expires" content="0"
>


<
meta http-equiv="cache-control" content="public,no-cache"
>


<
meta http-equiv="pragma" content="no-cache"
>


<
/head
>


<
body bgcolor="#E7E7E7"
>



<
bgcolor="#00FF00" text="#000000" link="#A00000" vlink="#600000" alink="#A00000"
>



<
h3
>
<
FONT face="Arial, Helvetica, sans-serif"
>

<
p
>
<
h3
>
R
&
D Ports Service Enabled Successfully
<
/h3
>

<
/p
>
<
/body
>

<
/html
>

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Mon Jul  3 17:35:40 CST 2017 from 10.69.80.114 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05616B70
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05616B70
>

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Mon Jul  3 17:43:22 CST 2017 from 192.168.255.126 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05616C38
>

[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml

[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml

TargetBD_TL17A_ENB_0000_000106_000000.xml

root@fctj-0a:/ffs/fs2
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05616C38
>

[enb_resource.py@1130]

****Current BTS version is 'TL17A_ENB_0000_000106_000000' *****

[enb_resource.py@1160] activeBuildVersion=TL17A_ENB_0000_000106_000000

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Mon Jul  3 17:43:33 CST 2017 from 192.168.255.126 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05619490
>

[ssh_common.py@258] Execute command: ls /ram/SiteConf.xml

[ssh_common.py@314] Get Response: ls /ram/SiteConf.xml

/ram/SiteConf.xml

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05619490
>

[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok

[sftp_control.py@176] /ram/SiteConf.xml

[sftp_control.py@79] sftp download from '/ram/SiteConf.xml' to 'D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\SiteConf.xml' is ok. local file size is 23k

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Mon Jul  3 17:43:54 CST 2017 from 192.168.255.126 on ssh

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0569ADA0
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0569ADA0
>

[enb_resource.py@402] The real falsh folder is /ffs/fs2

[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok

[sftp_control.py@176] /ffs/fs2/FileDirectory.xml

[sftp_control.py@79] sftp download from '/ffs/fs2/FileDirectory.xml' to 'D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FileDirectory_20170703174351.xml' is ok. local file size is 35k

[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok

[sftp_control.py@176] /ffs/fs2/config/SCFC_79.xml

[sftp_control.py@79] sftp download from '/ffs/fs2/config/SCFC_79.xml' to 'D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\SCFC_79.xml' is ok. local file size is 140k

[enb_resource.py@1130]

****Current bbu type is 'ASIA' *****

[enb_resource.py@1255] HW_BBU_TYPE=ASIA

[enb_resource.py@1130]

****Current rru type is '' *****

[enb_resource.py@1258] HW_RRU_TYPE=

[enb_resource.py@1130]

****Current HW type is '#2720-2CL1-T3-L-14' *****

[enb_resource.py@1261] BTS_HW_TYPE=#2720-2CL1-T3-L-14

[ping_control.py@189]

Pinging 192.168.255.20 with 32 bytes of data:

Reply from 192.168.255.126: Destination host unreachable.


Ping statistics for 192.168.255.20:

Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),






Sets the resolution order to use when a name matches multiple keywords.


tdd_ev_robotws

OperatingSystem






used to get operation system platform version, can be used to judge if


with_connection=${false}



${platform_version}


${platform_version} = Windows-7-6.1.7601-SP1




Sets variable based on the given condition.


"Windows" in "${platform_version}"

${TELNET_PORT}

${SSH_PORT}



${conn_port}


${conn_port} = 23




Sets variable based on the given condition.


"Windows" in "${platform_version}"

TELNET

SSH



${conn_type}


${conn_type} = TELNET




Sets variable based on the given condition.


"Windows" in "${platform_version}"

30

5



${timeout}


${timeout} = 30




Used to connect to host, either TELNET or SSH


${BTS_PC_INFO.IP}

port=${conn_port}

username=${BTS_PC_INFO.USERNAME}

password=${BTS_PC_INFO.PASSWORD}

conn_type=${conn_type}

timeout=${timeout}



${BTS_PC_CONNECTION}


[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service



login:

[telnet_common.py@276] Execute command: tdlte-tester

[telnet_common.py@306] Get Response:  tdlte-tester


password:

[telnet_common.py@276] Execute command: btstest

[telnet_common.py@246]


*===============================================================

Microsoft Telnet Server.

*===============================================================

C:\Users\tdlte-tester
>

${BTS_PC_CONNECTION} = 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>




Makes a variable available everywhere within the scope of the current suite.


${BTS_PC_CONNECTION}


${BTS_PC_CONNECTION} = 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>




Runs the given keyword with the given arguments, if ``condition`` is true.


"Windows" in "${platform_version}"

Execute Shell Command

tlntadmn config timeoutactive\=no



Execute a command on the remote system.


tlntadmn config timeoutactive\=no


[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>

[telnet_common.py@276] Execute command: tlntadmn config timeoutactive=no

[telnet_common.py@306] Get Response: tlntadmn config timeoutactive=no

The settings were successfully updated.


C:\Users\tdlte-tester
>








Switch to the connection identified by 'conn'.


${BTS_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>
.







Runs the given keyword with the given arguments, if ``condition`` is true.


'${REMOVE_LOGS}'=='on'

Run Keyword If All Tests Passed

Remove Directory

${SUITE_LOG_DIRECTORY}

${True}





Closes all existing telnet connections to remote hosts.

[telnet_common.py@188]

[telnet_common.py@189] Disconnect from 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>

[telnet_common.py@188]

[telnet_common.py@189] Disconnect from 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If All Tests Passed

Zip File

${SUITE_LOG_DIRECTORY}

${SUITE_LOG_DIRECTORY}.zip



Runs the given keyword with the given arguments, if all tests passed.


Zip File

${SUITE_LOG_DIRECTORY}

${SUITE_LOG_DIRECTORY}.zip







Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If All Tests Passed

Remove Directory

${SUITE_LOG_DIRECTORY}

${True}



Runs the given keyword with the given arguments, if all tests passed.


Remove Directory

${SUITE_LOG_DIRECTORY}

${True}










this keyword create case name directory path as D:\TA\TA_logs\TestLog_20170703174310//ev_logs//D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312//


This keyword return the time stamp, default format is: 'yyyymmddhhmmss'


${timestamp}


${timestamp} = 20170703174429




Catenates the given items together and returns the resulted string.


SEPARATOR=${/}

${SUITE_LOG_DIRECTORY}

${TEST_NAME[:50]}



${TEST_LOG_DIR}


${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on




Replaces ``search_for`` in the given ``string`` with ``replace_with``.


${TEST_LOG_DIR}

${SPACE}

_



${TEST_LOG_DIR}


${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on




Makes a variable available everywhere within the scope of the current suite.


${TEST_LOG_DIR}


${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on




Creates the specified directory.


${TEST_LOG_DIR}


Created directory '
<
a href="file://D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on"
>
D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on
<
/a
>
'.




Logs the given message with the given level.


save log dir:${TEST_LOG_DIR}


save log dir:D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on




Runs the given keyword with the given arguments, if ``condition`` is false.


${BTS PC CONNECTION.connected}

Initial Connection With BTS PC





This keyword return useable LOG directory.


Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${TEST LOG DIR}



${case_dir_exist}



Fails unless the given variable exists within the current scope.


${TEST LOG DIR}




${case_dir_exist} = ('PASS', None)




Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${SUITE LOG DIRECTORY}



${suite_dir_exist}



Fails unless the given variable exists within the current scope.


${SUITE LOG DIRECTORY}




${suite_dir_exist} = ('PASS', None)




Sets variable based on the given condition.


'PASS'=='${case_dir_exist[0]}'

${TEST LOG DIR}

'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'

${SUITE LOG DIRECTORY}

'FAIL'=='${suite_dir_exist[0]}'

${OUTPUT_DIR}



${log dir}


${log dir} = D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on




Makes a variable available everywhere within the scope of the current suite.


${SAVE LOG DIRECTORY}

${log dir}


${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on









${source_scf}

${parameter_list}

${ini_earfcn_check}



Setup InfoModel library and Connect to InfoModel.


port=${BTS_INFOMODEL_PORT}


[infomodel_control.py@157] set up infomodel with following info succeed .

details: address=192.168.255.129, port=12345, definitions_file_path=None

[infomodel_control.py@161] start infomodel succeed .

[infomodel_control.py@163] start infomodel logger succeed .




Runs the given keyword with the given arguments and ignores possible error.


Query_Infomodel_With_Multi_Condition

${ini_earfcn_check}



${result}

${ret}




${ini_earfcn_check}



Returns and logs the length of the given item as an integer.


${condition_list}



${ret}


Length is 1

${ret} = 1






Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.


${condition_list[${num}]}


[infomodel_control.py@327] query infomodel: 'count /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]=3' succeed .









${result} = PASS

${ret} = None




Disconnect from InfoModel and teardown InfoModel. Keyword will

[infomodel_control.py@186] stop infomodel logger succeed .

[infomodel_control.py@198] stop infomodel succeed .




Runs the given keyword with the given arguments, if ``condition`` is true.


'FAIL'=='${result}'

BTS_On_Air

${source_scf}

${parameter_list}

${bts_powerbreak}









Operation with RF


${num}



Switch to the connection identified by 'conn'.


${BTS_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>
.




restart powerbreak_port device use powerbreaker.


${BTS_POWERBREAK_PORT[1]}


[tools_resource.py@34] start power off ..

[facom.py@121] Connect to Facom succeed !

[base.py@48] trial power off for 0 times

[facom.py@60] Power off port 6 succeed!

[tools_resource.py@37] start power on ..

[facom.py@121] Connect to Facom succeed !

[base.py@36] trial power on for 0 times

[facom.py@83] Power on port 6 succeed!

[tools_resource.py@39] restart port 'FACOM:10.56.7.128:6' with powerbreak succeed !




Pauses the test executed for the given time.


20 sec


Slept 20 seconds




check bts until all cell is onair with infomodel, and have PBCH in udp log.


log_name=bts_power_reset_${num}


[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'

[btslog_control.py@174] use ip is 192.168.255.126

[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on" already exists, no need to create it again.

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Reply from 192.168.255.1: bytes=32 time
<
1ms TTL=255


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),

Approximate round trip times in milli-seconds:

Minimum = 0ms, Maximum = 0ms, Average = 0ms

[infomodel_control.py@157] set up infomodel with following info succeed .

details: address=192.168.255.129, port=12345, definitions_file_path=None

[infomodel_control.py@161] start infomodel succeed .

[infomodel_control.py@163] start infomodel logger succeed .

[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .

[enb_resource.py@182] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.

, it will try another way

[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .

[enb_resource.py@199] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.

, it will sleep and try again

[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .

[infomodel_control.py@327] query infomodel: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' succeed .

[enb_resource.py@225] infomodel check every cell onair succeed !

[enb_resource.py@253] bts log check onair msg succeed !

[infomodel_control.py@214] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\im_20170703174516' succeed .

[infomodel_control.py@186] stop infomodel logger succeed .

[infomodel_control.py@198] stop infomodel succeed .





bts_attach_${num}



This keyword starts catching of BTS system(UDP) log.


${TEST_LOG_DIR}\\${case_execute_log_name}.log


[btslog_control.py@117] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'

[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on" already exists, no need to create it again.




Setup InfoModel library and Connect to InfoModel.


port=${BTS_INFOMODEL_PORT}


[infomodel_control.py@157] set up infomodel with following info succeed .

details: address=192.168.255.129, port=12345, definitions_file_path=None

[infomodel_control.py@161] start infomodel succeed .

[infomodel_control.py@163] start infomodel logger succeed .




Makes a variable available everywhere within the scope of the current test.


${case_execute_log_name}


${case_execute_log_name} = bts_attach_0






Example


1:2:3



Splits the ``string`` using ``separator`` as a delimiter string.


${cell_id}

:



@{cell_list}


@{cell_list} = [ 1 | 2 | 3 ]




Returns and logs the length of the given item as an integer.


${cell_list}



${cell_list_length}


Length is 3

${cell_list_length} = 3




Runs the given keyword with the given arguments, if ``condition`` is true.


'${attach_earfcn}'!=''

Split String

${attach_earfcn}

:



${earfcn_list1}


${earfcn_list1} = None




Runs the given keyword with the given arguments, if ``condition`` is true.


'${attach_earfcn}'!=''

Change_Earfcn_To_Freqency

${earfcn_list1}



${freqency_list1}

${band_list1}


${freqency_list1} = None

${band_list1} = None




Runs the given keyword with the given arguments, if ``condition`` is false.


'${attach_earfcn}'!=''

Get_Earfcn_From_Infomodel



${earfcn_list2}

${freqency_list2}

${band_list2}




Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.


get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1



@{ret_earfcn}


[infomodel_control.py@327] query infomodel: 'get list /MRBTS-1/RAT-1/LTS-*/LNBTS_L-*/LNCEL_L-*/CARRIER_GROUP_L-1' succeed .

@{ret_earfcn} = [ InfoModelObject /MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-3/CARRIER_GROUP_L-1: {u'fcnULs': [38100L], u'fcnDLs': [38100L], 'dist_name': u'/MRBTS-1/RAT-1/LTS-1/LNBTS_L-1/LNCEL_L-3/CARRIER_GROUP_L-1', u's...




Sorts the given list in place.


${ret_earfcn}





Returns a list containing given items.


${earfcn_list}


${earfcn_list} = []




Returns a list containing given items.


${freqency_list}


${freqency_list} = []




Returns a list containing given items.


${band_list}


${band_list} = []




Creates and returns a dictionary based on given items.


@{BAND_OFFSET}



${offset_dict}


Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.

${offset_dict} = {u'38': u'1205', u'40': u'1565', u'39': u'1945', u'41': u'1469', u'42': u'759', u'43': u'759', u'37': u'1845', u'36': u'1765', u'35': u'1785', u'34': u'1610', u'33': u'1700'}






Converts the given item to a Unicode string.


${index.fcnDLs[0]}



${index.earfcn}


${index.earfcn} = 40940




Adds ``values`` to the end of ``list``.


${earfcn_list}

${index.earfcn}






${index.earfcn}



${attach_band}



Creates and returns a dictionary based on given items.


@{BAND_RANGE}



${band_dict}


Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.

${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}




Returns keys of the given ``dictionary``.


${band_dict}



@{keys}


@{keys} = [ 38 | 39 | 40 | 41 | 42 ]






Splits the ``string`` using ``separator`` as a delimiter string.


${band_dict['${index}']}

-



@{temp1}


@{temp1} = [ 37750 | 38249 ]




Evaluates the given expression in Python and returns the results.


${temp1[1]}
>
=${earfcn}
>
=${temp1[0]}



${result}


${result} = False




Stops executing the enclosing for loop if the ``condition`` is true.


${result}








Splits the ``string`` using ``separator`` as a delimiter string.


${band_dict['${index}']}

-



@{temp1}


@{temp1} = [ 38250 | 38649 ]




Evaluates the given expression in Python and returns the results.


${temp1[1]}
>
=${earfcn}
>
=${temp1[0]}



${result}


${result} = False




Stops executing the enclosing for loop if the ``condition`` is true.


${result}








Splits the ``string`` using ``separator`` as a delimiter string.


${band_dict['${index}']}

-



@{temp1}


@{temp1} = [ 38650 | 39649 ]




Evaluates the given expression in Python and returns the results.


${temp1[1]}
>
=${earfcn}
>
=${temp1[0]}



${result}


${result} = False




Stops executing the enclosing for loop if the ``condition`` is true.


${result}








Splits the ``string`` using ``separator`` as a delimiter string.


${band_dict['${index}']}

-



@{temp1}


@{temp1} = [ 39650 | 41589 ]




Evaluates the given expression in Python and returns the results.


${temp1[1]}
>
=${earfcn}
>
=${temp1[0]}



${result}


${result} = True




Stops executing the enclosing for loop if the ``condition`` is true.


${result}


Exiting for loop altogether.








Runs the given keyword with the given arguments, if ``condition`` is true.


'${result}'=='False'

Fail

no corresponding bts band find





Evaluates the given expression in Python and returns the results.


${index}



${bts_band}


${bts_band} = 41



${attach_band} = 41




Converts t
he given item to a Unicode string.


${attach_band}



${attach_band}


${attach_band} = 41




Adds ``values`` to the end of ``list``.


${band_list}

${attach_band}





Returns a value from the given ``dictionary`` based on the given ``key``.


${offset_dict}

${attach_band}



${offset}


${offset} = 1469




Evaluates the given expression in Python and returns the results.


(${index.earfcn}*0.1-${offset})*10



${freq}


${freq} = 26250.0




Converts the given item to an integer number.


${freq}



${fq}


${fq} = 26250




Converts the given item to a Unicode string.


${fq}



${freqency}


${freqency} = 26250




Adds ``values`` to the end of ``list``.


${freqency_list}

${freqency}








Converts the given item to a Unicode string.


${index.fcnDLs[0]}



${index.earfcn}


${index.earfcn} = 37910




Adds ``values`` to the end of ``list``.


${earfcn_list}

${index.earfcn}






${index.earfcn}



${attach_band}



Creates and returns a dictionary based on given items.


@{BAND_RANGE}



${band_dict}


Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.

${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}




Returns keys of the given ``dictionary``.


${band_dict}



@{keys}


@{keys} = [ 38 | 39 | 40 | 41 | 42 ]






Splits the ``string`` using ``separator`` as a delimiter string.


${band_dict['${index}']}

-



@{temp1}


@{temp1} = [ 37750 | 38249 ]




Evaluates the given expression in Python and returns the results.


${temp1[1]}
>
=${earfcn}
>
=${temp1[0]}



${result}


${result} = True




Stops executing the enclosing for loop if the ``condition`` is true.


${result}


Exiting for loop altogether.








Runs the given keyword with the given arguments, if ``condition`` is true.


'${result}'=='False'

Fail

no corresponding bts band find





Evaluates the given expression in Python and returns the results.


${index}



${bts_band}


${bts_band} = 38



${attach_band} = 38




Converts the given item to a Unicode string.


${attach_band}



${attach_band}


${attach_band} = 38




Adds ``values`` to the end of ``list``.


${band_list}

${attach_band}





Returns a value from the given ``dictionary`` based on the given ``key``.


${offset_dict}

${attach_band}



${offset}


${offset} = 1205




Evaluates the given expression in Python and returns the results.


(${index.earfcn}*0.1-${offset})*10



${freq}


${freq} = 25860.0




Converts the given item to an integer number.


${freq}



${fq}


${fq} = 25860




Converts the given item to a Unicode string.


${fq}



${freqency}


${freqency} = 25860




Adds ``values`` to the end of ``list``.


${freqency_list}

${freqency}








Converts the given item to a Unicode string.


${index.fcnDLs[0]}



${index.earfcn}


${index.earfcn} = 38100




Adds ``values`` to the end of ``list``.


${earfcn_list}

${index.earfcn}






${index.earfcn}



${attach_band}



Creates and returns a dictionary based on given items.


@{BAND_RANGE}



${band_dict}


Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.

${band_dict} = {u'38': u'37750-38249', u'39': u'38250-38649', u'40': u'38650-39649', u'41': u'39650-41589', u'42': u'41590-43589'}




Returns keys of the given ``dictionary``.


${band_dict}



@{keys}


@{keys} = [ 38 | 39 | 40 | 41 | 42 ]






Splits the ``string`` using ``separator`` as a delimiter string.


${band_dict['${index}']}

-



@{temp1}


@{temp1} = [ 37750 | 38249 ]




Evaluates the given expression in Python and returns the results.


${temp1[1]}
>
=${earfcn}
>
=${temp1[0]}



${result}


${result} = True




Stops executing the enclosing for loop if the ``condition`` is true.


${result}


Exiting for loop altogether.








Runs the given keyword with the given arguments, if ``condition`` is true.


'${result}'=='False'

Fail

no corresponding bts band find





Evaluates the given expression in Python and returns the results.


${index}



${bts_band}


${bts_band} = 38



${attach_band} = 38




Converts the given item to a Unicode string.


${attach_band}



${attach_band}


${attach_band} = 38




Adds ``values`` to the end of ``list``.


${band_list}

${attach_band}





Returns a value from the given ``dictionary`` based on the given ``key``.


${offset_dict}

${attach_band}



${offset}


${offset} = 1205




Evaluates the given expression in Python and returns the results.


(${index.earfcn}*0.1-${offset})*10



${freq}


${freq} = 26050.0




Converts the given item to an integer number.


${freq}



${fq}


${fq} = 26050




Converts the given item to a Unicode string.


${fq}



${freqency}


${freqency} = 26050




Adds ``values`` to the end of ``list``.


${freqency_list}

${freqency}










${earfcn_list2} = [u'40940', u'37910', u'38100']

${freqency_list2} = [u'26250', u'25860', u'26050']

${band_list2} = [u'41', u'38', u'38']




Sets variable based on the given condition.


'${attach_earfcn}'!=''

${earfcn_list1}

'${attach_earfcn}'==''

${earfcn_list2}



${earfcn_list}



Sets variable based on the given condition.


'${attach_earfcn}'==''

${earfcn_list2}




${earfcn_list} = [u'40940', u'37910', u'38100']




Sets variable based on the given condition.


'${attach_earfcn}'!=''

${freqency_list1}

'${attach_earfcn}'==''

${freqency_list2}



${freqency_list}



Sets variable based on the given condition.


'${attach_earfcn}'==''

${freqency_list2}




${freqency_list} = [u'26250', u'25860', u'26050']




Sets variable based on the given condition.


'${attach_earfcn}'!=''

${band_list1}

'${attach_earfcn}'==''

${band_list2}



${band_list}



Sets variable based on the given condition.


'${attach_earfcn}'==''

${band_list2}




${band_list} = [u'41', u'38', u'38']




Returns the given values which can then be assigned to a variables.


0



${cell_index1}


${cell_index1} = 0






Runs the given keyword with the given arguments, if ``condition`` is true.


'${attach_earfcn}'!=''

Evaluate

${cell_index1}

ELSE

Evaluate

${cell_index2}-1



${cell_index}



Evaluates the given expression in Python and returns the results.


${cell_index2}-1




${cell_index} = 0




Runs the given keyword with the given arguments, if ``condition`` is true.


'${UE_TYPE}'!='CPE'

Run Keyword If

'${UE_TYPE}'!='TM500'

Fail

The keyword doesn't yet support this type of UE



Runs the given keyword with the given arguments, if ``condition`` is true.


'${UE_TYPE}'!='TM500'

Fail

The keyword doesn't yet support this type of UE







Runs the given keyword with the given arguments, if ``condition`` is true.


'${UE_TYPE}'=='CPE'

CPE_Attach_SISO1_src

${earfcn_list[${cell_index}]}

${cell_index2}

${band_list[${cell_index}]}





Runs the given keyword with the given arguments, if ``condition`` is true.


'${UE_TYPE}'=='TM500'

TM500_Attach_SISO1_src

${freqency_list[${cell_index}]}

${cell_index2}

${modify_tm500_script}

${attach_scripts}




${freqency_list[${cell_index}]}

${cell_index2}

${modify_tm500_script}

${attach_scripts}



tm500 setup.

${TM500_PC_CONNECTION} = 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[robot_func.py@29] Can't get variable '${TM500_PC_CONNECTION}' ! details: 'Variable '${TM500_PC_CONNECTION}' not found.'

[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service



login:

[telnet_common.py@276] Execute command: tdlte-tester

[telnet_common.py@306] Get Response:  tdlte-tester


password:

[telnet_common.py@276] Execute command: btstest

[telnet_common.py@246]


*===============================================================

Welcome to Microsoft Telnet Server.

*===============================================================

C:\Documents and Settings\bts-tester
>

[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>
.

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"

[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"

*SEP* 1.0.1


C:\Documents and Settings\bts-tester
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"

[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"

*SEP* D:\TA\trunk_soam\tdd_ev_robotws


C:\Documents and Settings\bts-tester
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"

[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"

*SEP* D:\TA\trunk_soam\tdd_ev_robotws


C:\Documents and Settings\bts-tester
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8271 -s True

[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8271 -s True


PsExec v1.98 - Execute processes remotely

Copyright (C) 2001-2010 Mark Russinovich

Sysinternals - www.sysinternals.com


python started with process ID 2616.


C:\Documents and Settings\bts-tester
>

[process_control.py@74] Process start successed ! process id: 2616

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[remote_lib_control.py@62] start remote server succeed !

[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8271

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '14.12' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '13.9' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '13.68' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '13.47' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '13.23' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '13.02' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '12.8' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '12.58' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '12.35' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '12.13' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '11.92' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Welcome! Please use it, You are No.1 in 1 user queue.


"

[tm500.py@412] Get TM500 resource success!

[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>
.

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"

[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"

FileZilla Server Interface.exe

FileZilla Server Interface.xml

FileZilla Server.xml

FileZilla server.exe

FzGSS.dll

Uninstall.exe

legal.htm

libeay32.dll

license.txt

readme.htm

ssleay32.dll


C:\Documents and Settings\bts-tester
>

[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>
.

[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\FileZilla server.xml"'

[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>

[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\FileZilla server.xml"

[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\FileZilla server.xml"


C:\Users\tdlte-tester
>

[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%

[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%

ERRORCODE is: 0


C:\Users\tdlte-tester
>

[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\FileZilla server.xml.change_bak" succeeded.

[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.

[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>
.

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[tm500.py@1728] TM500 command to be sent: #$$CLOSE

[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe

[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe

ERROR: The process "TmaApplication.exe" not found.


C:\Documents and Settings\bts-tester
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"

[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"

*SEP* D:\TA\trunk_soam\tdd_ev_robotws


C:\Documents and Settings\bts-tester
>

[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: Ctrl-C

[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'

Keep Alive Message from Server Received [3 bytes]: '(be 0 3)'

^C

C:\Documents and Settings\bts-tester
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[tm500.py@591] Prev msg:

[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT

[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK

[tm500.py@1728] TM500 command to be sent: #$$CONNECT

[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile

[tm500.py@1728] TM500 command to be sent: GSTS

[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset

[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1

[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e

[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED

[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok

[tm500.py@1728] TM500 command to be sent: EREF 0 0 0

[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok

[tm500.py@1728] TM500 command to be sent: GETR

[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok

Radio cards

==============

Card   : Umbra2 LTE (20MHz)

Slot   : RC1

Chassis: 0

Context: -

RF     : type 7

A:  DL : 2110.0 - 2170.0 MHz

UL : 1920.0 - 1980.0 MHz

B:  DL : 2300.0 - 2400.0 MHz

UL : 2300.0 - 2400.0 MHz

==============

*  Card   : Umbra2 LTE (20MHz)

Slot   : RC2

Chassis: 0

Context: 0

RF     : type 200

A:  DL : 400.0 - 4000.0 MHz

UL : 400.0 - 4000.0 MHz

B:  DL : 0.0 - 0.0 MHz

UL : 0.0 - 0.0 MHz

[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE

[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE

[tm500.py@1728] TM500 command to be sent: STRT

[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok

[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"

[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0

[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.




Makes a variable available everywhere within the scope of the current test.


${TM500_Use_Tag}

used


${TM500_Use_Tag} = used




This keyword set attenuation value for one eNB cell.


${CELL${cell_id}_ATT_INFO}


$TA,C,020A*

[attenuator_control.py@445] send-
>
'$TA,C,020A*', Receive
<
-'$TA,C,020A*'

[attenuator_control.py@450] send-
>
'$TA,H,02*', Receive
<
-'$TA,C,020A*'

$TA,C,060A*

[attenuator_control.py@445] send-
>
'$TA,C,060A*', Receive
<
-'$TA,C,060A*'

[attenuator_control.py@450] send-
>
'$TA,H,06*', Receive
<
-'$TA,C,060A*'




This keyword selects TM500's logging items.


${ue_log_types}


[tm500.py@1728] TM500 command to be sent: GVER

[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok

PPC-0:

BSP: 2.0/n/R13

APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4

DSP-0:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x0062

DSP-1:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-2:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-3:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-4:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x0062

DSP-5:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-6:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-7:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-8:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x101C

DSP-9:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-10:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-11:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-12:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x208A

DSP-13:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-14:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-15:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55

UMBRA-0

API: 13.3.1  Product: 3

APP: 1.0.149  Built: Sep 25 2014 17:17:27

CON: 3.5.0  Build: 0

SIG: 2.1.1  Build: 46

MMC: 1.7

Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568

MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285

MOD RX: 0.0.31  Build: 34  PCB: 3.0

[tm500.py@507] TM500 command line response of "GVER":

C: GVER 0x00 Ok

PPC-0:

BSP: 2.0/n/R13

APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4

DSP-0:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x0062

DSP-1:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-2:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-3:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-4:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x0062

DSP-5:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-6:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-7:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-8:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x101C

DSP-9:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-10:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-11:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-12:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x208A

DSP-13:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-14:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-15:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55

UMBRA-0

API: 13.3.1  Product: 3

APP: 1.0.149  Built: Sep 25 2014 17:17:27

CON: 3.5.0  Build: 0

SIG: 2.1.1  Build: 46

MMC: 1.7

Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568

MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285

MOD RX: 0.0.31  Build: 34  PCB: 3.0

[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL

[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual

[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING

[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING

[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING

[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic

[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_END

[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.




This keyword starts TM500's logging.

[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING

[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170703_174848_session/170703_174939'

[tm500.py@1352] TM500 command line response of "START LOGGING":

C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170703_174848_session/170703_174939'

[tm500.py@1363] C:\TM500_LOG\170703_174848_session\170703_174939




Converts the given ``item`` to a Python ``list`` type.


${modify_tm500_script}



${modify_tm500_script}


${modify_tm500_script} = []




Adds ``values`` to the end of ``list``.


${modify_tm500_script}

forw mte RrcAptConfigCellSelection: ${attach_freqency}





This keyword does UE attach operation of TM500.


${attach_scripts}

${modify_tm500_script}



${tm500_attach_result}


[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded

[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0

[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1

[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0


C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2

[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002

[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 26250

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0

[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0

[tm500.py@1673] TM500 command line received data:

I: CMPI RRC Cell Selection: UE Id: 0

Cell Info:

Cell Id: 196 DL Freq: 26250 Cell Type: Suitable

I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26250)


I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0x6F46, TimingAdv: 2, PreambleTxCount: 1)


I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0


I: CMPI MTE 0 EMM REGISTER IND:UE Id:0

Selected PLMN: 26203F

Pdn Id: 0

EPS Bearer Id: 5

Access Point Name: 123.NSN.COM.mnc003.mcc262.gprs

IPv4 Address: 172.170.2.138

Attach Result: EPS Only

Mode: PS 2

I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0

${tm500_attach_result} = {'CMD_CONTENT': 'C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED\r\n\r\n\nC: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0\r\n\r\n\nI: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0\r\n\...




This keyword connects TM500 PPPoE connections by their names.

[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>
.

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500

[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500

Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...

Verifying username and password...

Registering your computer on the network...

Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.

Command completed successfully.


C:\Documents and Settings\bts-tester
>

[tm500.py@1302] Connect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:

rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" tm500 tm500

Connecting to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50...

Verifying username and password...

Registering your computer on the network...

Successfully connected to CONNECTION TO TM500_LTE_192.168.110.50_0_0 AT TM500_AC_192.168.110.50.

Command completed successfully.


C:\Documents and Settings\bts-tester
>




TM500: stop logging, convert log to csv format, copy logs to local PC.


tm500_attach_log${cell_id}



Switch to the connection identified by 'conn'.


${BTS_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>
.




Creates the specified directory.


${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}


Created directory '
<
a href="file://D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\tm500_attach_log1"
>
D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\tm500_attach_log1
<
/a
>
'.




This keyword stops TM500's logging.


${log_folder_path_on_tm500_pc}


[tm500.py@1376] Prev msg: I: CMPI RRC Leave Connected Cell Selection: UE Id: 0

Old Cell Info:

Cell Id: 196 DL Freq: 26250 Cell Type: -

New Cell Info:

Cell Id: 196 DL Freq: 26250 Cell Type: Suitable

I: CMPI DTE PPPOE CONNECTION IND: UE Id: 0

De Id: 8

EPS Bearer Id: 5

PDN IP Address String: 172.170.2.138


I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26250)


I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0xB15, TimingAdv: 1, PreambleTxCount: 1)


I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0

[tm500.py@1728] TM500 command to be sent: #$$STOP_LOGGING

[tm500.py@1736] TM500 command reply: C: STOP_LOGGING 0x00 OK

[tm500.py@1387] TM500 command line response of "STOP LOGGING":

C: STOP_LOGGING 0x00 OK

[tm500.py@1391] TM500 stop logging succeeded.

${log_folder_path_on_tm500_pc} = C:\TM500_LOG\170703_174848_session\170703_174939




This keyword converts TM500 log to csv format files.


timeout=${log_convertion_timeout}


[tm500.py@1728] TM500 command to be sent: #$$CONVERT_OPTIONS 0 0 0 65535 1 0 0

[tm500.py@1736] TM500 command reply: C: CONVERT_OPTIONS 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$CONVERT_TO_TEXT 0

[tm500.py@1736] TM500 command reply: I: CONVERT_TO_TEXT Completed = 0%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 0%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 1%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 2%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%


I: CONVERT_TO_TEXT Completed = 3%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 3%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 4%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 5%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 6%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 6%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 7%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 8%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 9%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 9%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 10%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 11%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 12%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 13%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 14%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 15%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 16%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 17%


I: CONVERT_TO_TEXT Completed = 18%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 18%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 19%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 20%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 21%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 22%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 23%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%


I: CONVERT_TO_TEXT Completed = 24%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 25%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 26%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 27%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 28%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 29%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 30%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%


I: CONVERT_TO_TEXT Completed = 31%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 31%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 32%


I: CONVERT_TO_TEXT Completed = 33%


I: CONVERT_TO_TEXT Completed = 33%


I: CONVERT_TO_TEXT Completed = 33%


I: CONVERT_TO_TEXT Completed = 33%


I: CONVERT_TO_TEXT Completed = 33%


I: CONVERT_TO_TEXT Completed = 33%


I: CONVERT_TO_TEXT Completed = 33%


I: CONVERT_TO_TEXT Completed = 33%


I: CONVERT_TO_TEXT Completed = 33%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 33%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 77%

[tm500.py@1468] I: CONVERT_TO_TEXT Completed = 100%


C: CONVERT_TO_TEXT 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$CONVERT_COMMAND_LOG 0 "C:\TM500_LOG\170703_174848_session\170703_174939"

[tm500.py@1736] TM500 command reply: I: CONVERT_COMMAND_LOG started

[tm500.py@1487] I: CONVERT_COMMAND_LOG progress= 7%

I: CONVERT_COMMAND_LOG progress= 15%

I: CONVERT_COMMAND_LOG progress= 23%

I: CONVERT_COMMAND_LOG progress= 30%

I: CONVERT_COMMAND_LOG progress= 38%

I: CONVERT_COMMAND_LOG progress= 46%

I: CONVERT_COMMAND_LOG progress= 53%

I: CONVERT_COMMAND_LOG progress= 61%

I: CONVERT_COMMAND_LOG progress= 69%

I: CONVERT_COMMAND_LOG progress= 76%

I: CONVERT_COMMAND_LOG progress= 84%

I: CONVERT_COMMAND_LOG progress= 92%

I: CONVERT_COMMAND_LOG progress= 99%

C: CONVERT_COMMAND_LOG 0x00 ok. Converted command log. Report path= C:\TM500_LOG\170703_174848_SESSION\170703_174939\170703_174848_session_command_log.csv

[tm500.py@1492] TM500 convert log succeeded.




TM500 Log fetching.


${log_folder_path_on_tm500_pc}

${SAVE_LOG_DIRECTORY}${/}${log_folder_name_on_local_pc}



Switch to the connection identified by 'conn'.


${TM500_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute 30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>
.




This keyword sets the new connection timeout.


60





Execute a command on the remote system.


cd /D "${log_folder_path_on_tm500_pc}"


[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: cd /D "C:\TM500_LOG\170703_174848_session\170703_174939"

[telnet_common.py@306] Get Response: cd /D "C:\TM500_LOG\170703_174848_session\170703_174939"


C:\TM500_log\170703_174848_session\170703_174939
>




Execute a command on the remote system.


cp ../*ommand*og*.txt session_command_log.txt


[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: cp ../*ommand*og*.txt session_command_log.txt

[telnet_common.py@306] Get Response: cp ../*ommand*og*.txt session_command_log.txt

cp: cannot stat `../*ommand*og*.txt': No such file or directory


C:\TM500_log\170703_174848_session\170703_174939
>




Execute a command on the remote system.


chmod 777 -R *


[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: chmod 777 -R *

[telnet_common.py@306] Get Response: chmod 777 -R *


C:\TM500_log\170703_174848_session\170703_174939
>




Displays the given messages in the log file as keyword arguments.


Execute Shell Command

tar -zcvf tm500_log.tar *.*





Splits the ``string`` using ``separator`` as a delimiter string.


${log_folder_path_on_tm500_pc}

:\\

1



${driver_log_folder}


${driver_log_folder} = [u'C', u'TM500_LOG\\170703_174848_session\\170703_174939']




This keyword use ftp download file to host PC.


${TM500_PC_INFO.IP}

21

TA_LOG

${None}

${log_folder_path_on_local_pc}

ALL

${driver_log_folder[1]}


[ftp_control.py@38] ftp login as username='TA_LOG' password='None' OK.

[ftp_control.py@44] 220-FileZilla Server version 0.9.34 beta

220-written by Tim Kosse (Tim.Kosse@gmx.de)

220 Please visit http://sourceforge.net/projects/filezilla/




Switch to the connection identified by 'conn'.


${BTS_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>
.




Displays the given messages in the log file as keyword arguments.


Run keyword and ignore error

Execute Shell Command

cd /D "${log_folder_path_on_local_pc}"





Displays the given messages in the log file as keyword arguments.


Execute Shell Command

tar -zxvf tm500_log.tar





Displays the given messages in the log file as keyword arguments.


Run keyword and ignore error

Execute Shell Command

chmod 777 -R *





Displays the given messages in the log file as keyword arguments.


${unzip_result}

Run keyword and ignore error

Unzip file

tm500_log.tar

${log_folder_path_on_local_pc}





Displays the given messages in the log file as keyword arguments.


Run keyword if

'${unzip_result[0]}' == 'FAIL'

Execute Shell Command

tar -zxvf tm500_log.tar





Displays the given messages in the log file as keyword arguments.


remove file

${log_folder_path_on_local_pc}/tm500_log.tar









Makes a variable available everywhere within the scope of the current test.


${ue_attach_ip}

${tm500_attach_result.UE0}


${ue_attach_ip} = 172.170.2.138








Runs the given keyword with the given arguments, if ``condition`` is true.


'${UE_TYPE}'=='CPE'

Run Keyword If

'${detach_ue}'=='YES'

CPE_Detach_SISO1_src

${cell_index2}





Runs the given keyword with the given arguments, if ``condition`` is true.


'${UE_TYPE}'=='TM500'

Run Keyword If

'${detach_ue}'=='YES'

TM500_Detach_SISO1_src

${cell_index2}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${detach_ue}'=='YES'

TM500_Detach_SISO1_src

${cell_index2}




${cell_index2}



Switch to the connection identified by 'conn'.


${BTS_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>
.




used to kill processes, both in linux and windows environement.


iperf.exe


[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>

[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe

[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe

ERROR: The process "iperf.exe" not found.


C:\Users\tdlte-tester
>




Switch to the connection identified by 'conn'.


${TM500_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>
.




used to kill processes, both in linux and windows environement.


iperf.exe


[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: TASKKILL /F /T /IM iperf.exe

[telnet_common.py@306] Get Response: TASKKILL /F /T /IM iperf.exe

ERROR: The process "iperf.exe" not found.


C:\TM500_log\170703_174848_session\170703_174939
>




This keyword disconnects TM500 PPPoE connection by PPPoE name.

[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>
.

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT

[telnet_common.py@306] Get Response: rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT

Command completed successfully.


C:\TM500_log\170703_174848_session\170703_174939
>

[tm500.py@1321] Disconnect PPPoE "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" succeeded, command return:

rasdial "Connection to tm500_lte_192.168.110.50_0_0 at TM500_AC_192.168.110.50" /DISCONNECT

Command completed successfully.


C:\TM500_log\170703_174848_session\170703_174939
>




This keyword does UE detach operation of TM500.

[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0

[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0


I: CMPI RRC Leave Connected Cell Selection: UE Id: 0

Old Cell Info:

Cell Id: 196 DL Freq: 26250 Cell Type: -

New Cell Info:

Cell Id: 196 DL Freq: 26250 Cell Type: Suitable

I: CMPI DTE PPPOE DISCONNECTION IND: UE Id: 0


C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]

[tm500.py@1728] TM500 command to be sent: forw mte NasConfigEmmDeregister 0

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMDEREGISTER: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: forw mte SetUEContext 0

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE SETUECONTEXT RETURN CODE:0 SUCCEEDED [Ue Context Id: 0]

[tm500.py@1728] TM500 command to be sent: forw mte Activate -1

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0




Switch to the connection identified by 'conn'.


${BTS_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>
.




This keyword set attenuation value for one eNB cell.


${CELL${cell_id}_ATT_INFO}

120

120


$TA,C,02F0*

[attenuator_control.py@445] send-
>
'$TA,C,02F0*', Receive
<
-'$TA,C,02F0*'

[attenuator_control.py@450] send-
>
'$TA,H,02*', Receive
<
-'$TA,C,02F0*'

$TA,C,06F0*

[attenuator_control.py@445] send-
>
'$TA,C,06F0*', Receive
<
-'$TA,C,06F0*'

[attenuator_control.py@450] send-
>
'$TA,H,06*', Receive
<
-'$TA,C,06F0*'




tm500 teardown.

[tm500.py@591] Prev msg: I: CMPI L2 Random Access Initiated :UE Id:0 (Connection Establish: Cell Id 196, Dl Freq 26250)


I: CMPI L2 Random Access Complete :UE Id:0 (TC-RNTI: 0xA6E4, TimingAdv: 1, PreambleTxCount: 1)


I: CMPI MTE 0 ECM CONNECTION IND:UE Id:0


I: CMPI MTE 0 ECM DISCONNECTION IND:UE Id:0


I: CMPI MTE 0 EMM DEREGISTER IND:UE Id:0

Detach Cause: UE Initiated


I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0


I: CMPI RRC Leave Connected Cell Selection: UE Id: 0

Old Cell Info:

Cell Id: 196 DL Freq: 26250 Cell Type: -

New Cell Info:

Cell Id: 196 DL Freq: 26250 Cell Type: Acceptable

[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT

[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK

[tm500.py@437] Release TM500 Resource:

sent -
>
"release"

received
<
- "Bye!"

Robot Framework remote server at 0.0.0.0:8271 stopping










Evaluates the given expression in Python and returns the results.


${cell_index1}+1



${cell_index1}


${cell_index1} = 1




Converts the given item to a Unicode string.


${cell_index1}



${cell_index1}


${cell_index1} = 1







Runs the given keyword with the given arguments, if ``condition`` is true.


'${attach_earfcn}'!=''

Evaluate

${cell_index1}

ELSE

Evaluate

${cell_index2}-1



${cell_index}



Evaluates the given expression in Python and returns the results.


${cell_index2}-1




${cell_index} = 1




Runs the given keyword with the given arguments, if ``condition`` is true.


'${UE_TYPE}'!='CPE'

Run Keyword If

'${UE_TYPE}'!='TM500'

Fail

The keyword doesn't yet support this type of UE



Runs the given keyword with the given arguments, if ``condition`` is true.


'${UE_TYPE}'!='TM500'

Fail

The keyword doesn't yet support this type of UE







Runs the given keyword with the given arguments, if ``condition`` is true.


'${UE_TYPE}'=='CPE'

CPE_Attach_SISO1_src

${earfcn_list[${cell_index}]}

${cell_index2}

${band_list[${cell_index}]}





Runs the given keyword with the given arguments, if ``condition`` is true.


'${UE_TYPE}'=='TM500'

TM500_Attach_SISO1_src

${freqency_list[${cell_index}]}

${cell_index2}

${modify_tm500_script}

${attach_scripts}




${freqency_list[${cell_index}]}

${cell_index2}

${modify_tm500_script}

${attach_scripts}



tm500 setup.

[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>
.

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"

[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',tdd_ev_robotws.__version__"

*SEP* 1.0.1


C:\TM500_log\170703_174848_session\170703_174939
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"

[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"

*SEP* D:\TA\trunk_soam\tdd_ev_robotws


C:\TM500_log\170703_174848_session\170703_174939
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.Common
Lib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"

[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"

*SEP* D:\TA\trunk_soam\tdd_ev_robotws


C:\TM500_log\170703_174848_session\170703_174939
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8278 -s True

[telnet_common.py@306] Get Response: "D:\TA\trunk_soam\tdd_ev_robotws\tools\psexec.exe" -i -d python "D:\TA\trunk_soam\tdd_ev_robotws\tools\robotremoteserver.py"  -l tdd_ev_robotws -i 0.0.0.0 -p 8278 -s True


PsExec v1.98 - Execute processes remotely

Copyright (C) 2001-2010 Mark Russinovich

Sysinternals - www.sysinternals.com


python started with process ID 3900.


C:\TM500_log\170703_174848_session\170703_174939
>

[process_control.py@74] Process start successed ! process id: 3900

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[remote_lib_control.py@62] start remote server succeed !

[tm500.py@108] have setup Remotelib instance: RemoteLibInstance: 10.69.71.200:8278

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '14.82' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '14.6' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '14.38' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '14.15' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '13.93' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '13.72' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '13.48' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '13.27' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '13.05' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '12.83' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '12.6' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '12.38' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Sorry '10.56.6.32'. Pls waiting '10.56.78.20' max '12.17' mins. You are No.1 in 1 user queue.

"

[tm500.py@408] Request TM500 Resource:

sent -
>
"request:15:1"

received
<
- "Welcome! Please use it, You are No.1 in 1 user queue.


"

[tm500.py@412] Get TM500 resource success!

[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>
.

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: ls "C:\Program Files\FileZilla Server"

[telnet_common.py@306] Get Response: ls "C:\Program Files\FileZilla Server"

FileZilla Server Interface.exe

FileZilla Server Interface.xml

FileZilla Server.xml

FileZilla server.exe

FzGSS.dll

Uninstall.exe

legal.htm

libeay32.dll

license.txt

readme.htm

ssleay32.dll


C:\TM500_log\170703_174848_session\170703_174939
>

[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>
.

[file_control.py@332] copyfile2local command: 'D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\FileZilla server.xml"'

[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:10 minutes
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>

[telnet_common.py@276] Execute command: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\FileZilla server.xml"

[telnet_common.py@306] Get Response: D:\TA\trunk_soam\tdd_ev_robotws\tools\pscp.exe -r -q -scp -unsafe -pw btstest tdlte-tester@10.69.71.200:"C:/Program\ Files/FileZilla\ Server/FileZilla\ server.xml" "D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\FileZilla server.xml"


C:\Users\tdlte-tester
>

[telnet_common.py@276] Execute command: echo ERRORCODE is: %ERRORLEVEL%

[telnet_common.py@306] Get Response: echo ERRORCODE is: %ERRORLEVEL%

ERRORCODE is: 0


C:\Users\tdlte-tester
>

[file_common.py@168] Copy file "D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\FileZilla server.xml" to "D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\FileZilla server.xml.change_bak" succeeded.

[filezilla_control.py@182] Filezilla configed right, no need to change TM500 version.

[connection_mgr.py@147] Switch to connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>
.

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[tm500.py@1728] TM500 command to be sent: #$$CLOSE

[tm500.py@1736] TM500 command reply: C: CLOSE 0x00 ok.

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: TASKKILL /F /T /IM TmaApplication.exe

[telnet_common.py@306] Get Response: TASKKILL /F /T /IM TmaApplication.exe

ERROR: The process "TmaApplication.exe" not found.


C:\TM500_log\170703_174848_session\170703_174939
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"

[telnet_common.py@306] Get Response: python -c "import tdd_ev_robotws, os;print '*SEP*',os.path.dirname(tdd_ev_robotws.__file__)"

*SEP* D:\TA\trunk_soam\tdd_ev_robotws


C:\TM500_log\170703_174848_session\170703_174939
>

[connection_mgr.py@278] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: "D:\TA\trunk_soam\tdd_ev_robotws\tools\Server_Client\client.exe" localhost "C:\Program Files\Aeroflex\TM500\LTE - K4.6.4.REV55\Test Mobile Application\TMAApplication.exe" /u \"Default User\" /c y /p 5003 /a n

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[telnet_common.py@276] Execute command: Ctrl-C

[telnet_common.py@306] Get Response: Server Keep Alive Message Interval is [12 bytes]: '3'

Keep Alive Message from Server Received [3 bytes]: '(be 0 3)'

^C

C:\TM500_log\170703_174848_session\170703_174939
>

[connection_mgr.py@208] Current connection: 10.69.71.200:23 DeviceType:Windows Timeout:1 minute
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x023BE6C0
>

[tm500.py@591] Prev msg:

[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT

[tm500.py@1736] TM500 command reply: C: DISCONNECT 0x00 OK

[tm500.py@1728] TM500 command to be sent: #$$CONNECT

[tm500.py@1736] TM500 command reply: C: CONNECT 0x00 ok. Waiting for User to Configure Test Mobile

[tm500.py@1728] TM500 command to be sent: GSTS

[tm500.py@1736] TM500 command reply: C: GSTS 0x00 Ok Reset

[tm500.py@1728] TM500 command to be sent: ABOT 0 0 1

[tm500.py@1736] TM500 command reply: C: ABOT 0x00 Ok 0x0000001e

[tm500.py@1728] TM500 command to be sent: SELR 0 0 RC2 COMBINED

[tm500.py@1736] TM500 command reply: C: SELR 0x00 Ok

[tm500.py@1728] TM500 command to be sent: EREF 0 0 0

[tm500.py@1736] TM500 command reply: C: EREF 0x00 Ok

[tm500.py@1728] TM500 command to be sent: GETR

[tm500.py@1736] TM500 command reply: C: GETR 0x00 Ok

Radio cards

==============

Card   : Umbra2 LTE (20MHz)

Slot   : RC1

Chassis: 0

Context: -

RF     : type 7

A:  DL : 2110.0 - 2170.0 MHz

UL : 1920.0 - 1980.0 MHz

B:  DL : 2300.0 - 2400.0 MHz

UL : 2300.0 - 2400.0 MHz

==============

*  Card   : Umbra2 LTE (20MHz)

Slot   : RC2

Chassis: 0

Context: 0

RF     : type 200

A:  DL : 400.0 - 4000.0 MHz

UL : 400.0 - 4000.0 MHz

B:  DL : 0.0 - 0.0 MHz

UL : 0.0 - 0.0 MHz

[tm500.py@1728] TM500 command to be sent: SCFG NAS_MODE

[tm500.py@1736] TM500 command reply: C: SCFG 0x00 Ok NAS_MODE

[tm500.py@1728] TM500 command to be sent: STRT

[tm500.py@1736] TM500 command reply: C: STRT 0x00 Ok

[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_FOLDER 1 "C:\TM500_log\"

[tm500.py@1736] TM500 command reply: C: DATA_LOG_FOLDER 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$DATA_LOG_OPTIONS 0 1 0

[tm500.py@1736] TM500 command reply: C: DATA_LOG_OPTIONS 0x00 ok.




Makes a variable available everywhere within the scope of the current test.


${TM500_Use_Tag}

used


${TM500_Use_Tag} = used




This keyword set attenuation value for one eNB cell.


${CELL${cell_id}_ATT_INFO}


$TA,C,020A*

[attenuator_control.py@445] send-
>
'$TA,C,020A*', Receive
<
-'$TA,C,020A*'

[attenuator_control.py@450] send-
>
'$TA,H,02*', Receive
<
-'$TA,C,020A*'

$TA,C,060A*

[attenuator_control.py@445] send-
>
'$TA,C,060A*', Receive
<
-'$TA,C,060A*'

[attenuator_control.py@450] send-
>
'$TA,H,06*', Receive
<
-'$TA,C,060A*'




This keyword selects TM500's logging items.


${ue_log_types}


[tm500.py@1728] TM500 command to be sent: GVER

[tm500.py@1736] TM500 command reply: C: GVER 0x00 Ok

PPC-0:

BSP: 2.0/n/R13

APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4

DSP-0:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x0062

DSP-1:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-2:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-3:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-4:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x0062

DSP-5:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-6:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-7:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-8:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x101C

DSP-9:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-10:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-11:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-12:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x208A

DSP-13:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-14:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-15:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55

UMBRA-0

API: 13.3.1  Product: 3

APP: 1.0.149  Built: Sep 25 2014 17:17:27

CON: 3.5.0  Build: 0

SIG: 2.1.1  Build: 46

MMC: 1.7

Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568

MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285

MOD RX: 0.0.31  Build: 34  PCB: 3.0

[tm500.py@507] TM500 command line response of "GVER":

C: GVER 0x00 Ok

PPC-0:

BSP: 2.0/n/R13

APP: TM500 LTE VERSION:K4.6.4:REV1:PPC:K4.6.4

DSP-0:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x0062

DSP-1:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-2:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-3:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-4:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x0062

DSP-5:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-6:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-7:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-8:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x101C

DSP-9:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-10:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-11:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-12:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

PCB: 0

VHDL: 0x208A

DSP-13:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-14:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

DSP-15:

APP: TM500 LTE VERSION:K4.6.4:REV1:DSP:K4.6.4

Version Label: LTE-SUE-C0309_TDD_4X2_L1_K_04_06_04_REV55

UMBRA-0

API: 13.3.1  Product: 3

APP: 1.0.149  Built: Sep 25 2014 17:17:27

CON: 3.5.0  Build: 0

SIG: 2.1.1  Build: 46

MMC: 1.7

Carrier:  Loc: 12  PCB: 3.0 (OWI: 3.0)  SN: 0x4A000001D72F0323  BarCode: 20-1442-1360070-2568

MOD TX: 0.0.17  Build: 16  Type: 200  PCB: 3.0 (OWI: 3.0)  SN: 0xD000000167A41623  BarCode: 00000044830737250285

MOD RX: 0.0.31  Build: 34  PCB: 3.0

[tm500.py@1728] TM500 command to be sent: #$$LC_CLEAR_ALL

[tm500.py@1736] TM500 command reply: C: LC_CLEAR_ALL 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 1 1 1 Manual

[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 UEOVERVIEW

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 1 0 0 0 ProtocolLog

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 CQIREPORTING #Subband 0-24 2

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 262 1 0 0 #GRP:CQIREPORTING

[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 263 1 0 0 #GRP:CQIREPORTING

[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_CAT 264 1 0 0 #GRP:CQIREPORTING

[tm500.py@1736] TM500 command reply: C: LC_CAT 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 100 0 0 0 L1RBPOWERS #Component_Carrier 0,1 0

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 200 0 0 0 L1CELLWATCH

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLSCHRX

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLHARQRX

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULHARQTX

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 ULSRS

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 0 1 0 0 0 DLL1L2CONTROL

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_GRP 0 1 1 100 0 0 0 L1DLRSPOWER #Radio_Context_ID 0,1 0

[tm500.py@1736] TM500 command reply: C: LC_GRP 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_ITM 0 0 0 Automatic

[tm500.py@1736] TM500 command reply: C: LC_ITM 0x00 ok.

[tm500.py@1728] TM500 command to be sent: #$$LC_END

[tm500.py@1736] TM500 command reply: C: LC_END 0x00 ok.




This keyword starts TM500's logging.

[tm500.py@1728] TM500 command to be sent: #$$START_LOGGING

[tm500.py@1736] TM500 command reply: C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170703_175409_session/170703_175500'

[tm500.py@1352] TM500 command line response of "START LOGGING":

C: START_LOGGING 0x00 OK. Current logging folder is 'C:\TM500_LOG\/170703_175409_session/170703_175500'

[tm500.py@1363] C:\TM500_LOG\170703_175409_session\170703_175500




Converts the given ``item`` to a Python ``list`` type.


${modify_tm500_script}



${modify_tm500_script}


${modify_tm500_script} = []




Adds ``values`` to the end of ``list``.


${modify_tm500_script}

forw mte RrcAptConfigCellSelection: ${attach_freqency}





This keyword does UE attach operation of TM500.


${attach_scripts}

${modify_tm500_script}



${tm500_attach_result}


[file_common.py@125] Write file "D:\TA\BTS592\modified_attach_MIMO.txt" succeeded

[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTOVERRIDEBANDSUPPORT 2{41 [1 24960 39650 1940 24960 39650 1940] [],43 [1 36000 43590 2000 36000 43590 2000] []}

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTOVERRIDEBANDSUPPORT: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0

[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETRATTYPE 1

[tm500.py@1736] TM500 command reply: I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0


C: FORW 0x00 Ok MTE PHYSETRATTYPE: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE PHYSETTDDCFG 1 7

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYSETTDDCFG: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: SETP RRC_NUM_DL_ANTENNAS 2

[tm500.py@1736] TM500 command reply: C: SETP 0x00 Ok RRC_NUM_DL_ANTENNAS 0x00000002

[tm500.py@1728] TM500 command to be sent: FORW MTE PHYCONFIGSYSCAP 2 4 4

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE PHYCONFIGSYSCAP: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE USIMCONFIG 1([262030020033712 2] [] [] [] []) [] [] [A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5A5] [CDC202D5123E20F62B6D676AC72CB318 00000000000000000000000000000000 00000000000000000000000000000001 00000000000000000000000000000002 00000000000000000000000000000004 00000000000000000000000000000008 64 0 32 64 96 []] [] []

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE USIMCONFIG: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE RRCAPTCONFIGCELLSELECTION 25860

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE RRCAPTCONFIGCELLSELECTION: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGCAPABILITY [] [224] [224]

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGCAPABILITY: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE NASCONFIGEMMREGISTER 0(0 [0] [] [1] [] [] [] [] [])

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASCONFIGEMMREGISTER: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE NASAPTCONFIGPLMNSELECTION 26203

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE NASAPTCONFIGPLMNSELECTION: RETURN CODE:0 SUCCEEDED

[tm500.py@1728] TM500 command to be sent: FORW MTE ACTIVATE -1

[tm500.py@1736] TM500 command reply: C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0

[tm500.py@1632] C: FORW 0x00 Ok MTE ACTIVATE CNF: RETURN CODE:0

[tm500.py@1673] TM500 command line received data:

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI MTE 0 EMM REGISTER IND:UE Id:0:RETURN CODE:6 FAILED

Cause: NAS: Registration failure - NO SERVICE due to no cell


I: CMPI MTE 0 ACTIVATE IND: RETURN CODE:0


I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

TM500 command line does not meet "['L2 RANDOM ACCESS COMPLETE', 'ACCESS POINT NAME']"during 10.0




















Action when case finishs


Switch to the connection identified by 'conn'.


${BTS_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x056B64B8
>
.




This keyword is used to kill the processes related to QTP application.

Start to kill QTP process.

Finshed to kill QTP process.




This keyword stops BTS system(UDP) log catching.




Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${case_execute_log_name}



${return}



Fails unless the given variable exists within the current scope.


${case_execute_log_name}




${return} = ('PASS', None)




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${return[0]}'=='PASS'

Save Infomodel Log

${TEST_LOG_DIR}\\${case_execute_log_name}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Save Infomodel Log

${TEST_LOG_DIR}\\${case_execute_log_name}



Save InfoModel log.


${TEST_LOG_DIR}\\${case_execute_log_name}


[infomodel_control.py@214] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20170703174310\ev_logs\FZHR_Operational_RF_power_off_then_on_20170703174312\FZHR_Operational_RF_power_off_then_on\bts_attach_0' succeed .








Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${return[0]}'=='PASS'

Stop Infomodel



Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Stop Infomodel



Disconnect from InfoModel and teardown InfoModel. Keyword will

[infomodel_control.py@186] stop infomodel logger succeed .

[infomodel_control.py@198] stop infomodel succeed .








Runs the given keyword with the given arguments and ignores possible error.


Release_TM500_And_Colse_PA_Port




Displays the given messages in the log file as keyword arguments.


${return}

Run Keyword And Ignore Error

Variable Should Exist

${TM500_Use_Tag}





Displays the given messages in the log file as keyword arguments.


Run Keyword If

'${return[0]}'=='PASS'

Run Keyword If

'${TM500_Use_Tag}'=='used'

Set Attenuators Off

${ATT_ALL_INFO}








Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${CELL${index}_ATT_INFO}



${ret1}

${ret2}



Fails unless the given variable exists within the current scope.


${CELL${index}_ATT_INFO}




${ret1} = PASS

${ret2} = None




Stops executing the enclosing for loop if the ``condition`` is true.


'${ret1}'=='FAIL'





This keyword set attenuation value for one eNB cell.


${CELL${index}_ATT_INFO}

120

120


[attenuator_control.py@445] send-
>
'$TA,C,02F0*', Receive
<
-'$TA,C,02F0*'

[attenuator_control.py@450] send-
>
'$TA,H,02*', Receive
<
-'$TA,C,02F0*'

$TA,C,06F0*

[attenuator_control.py@445] send-
>
'$TA,C,06F0*', Receive
<
-'$TA,C,06F0*'

[attenuator_control.py@450] send-
>
'$TA,H,06*', Receive
<
-'$TA,C,06F0*'







Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${CELL${index}_ATT_INFO}



${ret1}

${ret2}



Fails unless the given variable exists within the current scope.


${CELL${index}_ATT_INFO}




${ret1} = PASS

${ret2} = None




Stops executing the enclosing for loop if the ``condition`` is true.


'${ret1}'=='FAIL'





This keyword set attenuation value for one eNB cell.


${CELL${index}_ATT_INFO}

120

120


$TA,C,02F0*

[attenuator_control.py@445] send-
>
'$TA,C,02F0*', Receive
<
-'$TA,C,02F0*'

[attenuator_control.py@450] send-
>
'$TA,H,02*', Receive
<
-'$TA,C,02F0*'

$TA,C,06F0*

[attenuator_control.py@445] send-
>
'$TA,C,06F0*', Receive
<
-'$TA,C,06F0*'

[attenuator_control.py@450] send-
>
'$TA,H,06*', Receive
<
-'$TA,C,06F0*'







Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${CELL${index}_ATT_INFO}



${ret1}

${ret2}



Fails unless the given variable exists within the current scope.


${CELL${index}_ATT_INFO}




${ret1} = PASS

${ret2} = None




Stops executing the enclosing for loop if the ``condition`` is true.


'${ret1}'=='FAIL'





This keyword set attenuation value for one eNB cell.


${CELL${index}_ATT_INFO}

120

120


$TA,C,02F0*

[attenuator_control.py@445] send-
>
'$TA,C,02F0*', Receive
<
-'$TA,C,02F0*'

[attenuator_control.py@450] send-
>
'$TA,H,02*', Receive
<
-'$TA,C,02F0*'

$TA,C,06F0*

[attenuator_control.py@445] send-
>
'$TA,C,06F0*', Receive
<
-'$TA,C,06F0*'

[attenuator_control.py@450] send-
>
'$TA,H,06*', Receive
<
-'$TA,C,06F0*'







Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${CELL${index}_ATT_INFO}



${ret1}

${ret2}



Fails unless the given variable exists within the current scope.


${CELL${index}_ATT_INFO}


Variable ${CELL4_ATT_INFO} does not exist.



${ret1} = FAIL

${ret2} = Variable ${CELL4_ATT_INFO} does not exist.




Stops executing the enclosing for loop if the ``condition`` is true.


'${ret1}'=='FAIL'


Exiting for loop altogether.










tm500 teardown.

[tm500.py@591] Prev msg: I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

[tm500.py@1728] TM500 command to be sent: #$$DISCONNECT

[tm500.py@1736] TM500 command reply: I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: TMAE 0x1 Warning - Logging is being stopped automatically. Please wait for logging stopped message.

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

I: CMPI RRC UE Id:0: Cell Search Error: No cell found

I: CMPI RRC UE Id:0: Cell Search Config Error: No more frequencies left to try

[tm500.py@437] Release TM500 Resource:

sent -
>
"release"

received
<
- "Bye!"

Robot Framework remote server at 0.0.0.0:8278 stopping




Displays the given messages in the log file as keyword arguments.


Set Test Variable

${TM500_Use_Tag}

unused









Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${route_add_cpe_pc}



${return}



Fails unless the given variable exists within the current scope.


${route_add_cpe_pc}


Variable ${route_add_cpe_pc} does not exist.



${return} = ('FAIL', u'Variable ${route_add_cpe_pc} does not exist.')




Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Run Keyword If

'${route_add_cpe_pc}'=='true'

Execute Shell Command

route delete ${BTS_PC_INFO.IP} mask 255.255.255.255 ${UE1_INFO.ADDRESS}






${TEST_LOG_DIR}

${OUTPUT_DIR}

alarm_monitor.csv

${TEST_NAME[:50]}


Infomodel not connected.

[infomodel_control.py@82] set up infomodel with following info succeed .

details: address=192.168.255.1, port=12345, definitions_file_path=None

++++++++++++++++++++++++++++++++++++++++++

{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}

++++++++++++++++++++++++++++++++++++++++++

{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}

[infomodel_control.py@100] stop infomodel succeed .





${TEST_LOG_DIR}

${OUTPUT_DIR}

alarm_monitor.csv

${TEST_NAME[:50]}


['fatal'] ['fatal']

['fatal'] ['fatal']




Runs the given keyword with the given arguments and ignores possible error.


Should Contain

${TEST_NAME[:50]}

Fiber



${return1}



Fails if ``container`` does not contain ``item`` one or more times.


${TEST_NAME[:50]}

Fiber


'FZHR_Operational_RF_power_off_then_on' does not contain 'Fiber'



${return1} = ('FAIL', u"'FZHR_Operational_RF_power_off_then_on' does not contain 'Fiber'")




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${return1[0]}'=='PASS'

Get_All_Fiber_Link



${all_fiber_link}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${return1[0]}'=='PASS'

Get_All_Fiber_Link




${all_fiber_link} = ('PASS', None)




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${return1[0]}'=='PASS'

Connect_Fiber_Link

${all_fiber_link[1]}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${return1[0]}'=='PASS'

Connect_Fiber_Link

${all_fiber_link[1]}







Displays the given messages in the log file as keyword arguments.


Run Keyword And Ignore Error

Run Keyword If

'${return1[0]}'=='PASS'

Software Reboot Bts





Displays the given messages in the log file as keyword arguments.


Run Keyword And Ignore Error

Run Keyword If

'${return1[0]}'=='PASS'

Sleep

60





Displays the given messages in the log file as keyword arguments.


Run Keyword And Ignore Error

Run Keyword If

'${return1[0]}'=='PASS'

Wait Until Units Startup

600

192.168.255.1





[Caution] this keyword step:


used to get operation system platform version, can be used to judge if


with_connection=${false}



${platform_version}


${platform_version} = Windows-7-6.1.7601-SP1




Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'

One Key Capture Bts Logs

${SAVE_LOG_DIRECTORY}${/}capture_logs

${one_key_capture_logs_option}



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'

One Key Capture Bts Logs

${SAVE_LOG_DIRECTORY}${/}capture_logs

${one_key_capture_logs_option}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'

One Key Capture Bts Logs

${SAVE_LOG_DIRECTORY}${/}capture_logs

${one_key_capture_logs_option}









Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Login



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Login



Runs the given keyword with the given arguments, if ``condition`` is true.


'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Login









Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Save Snapshot

3



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Save Snapshot

3



Runs the given keyword with the given arguments, if ``condition`` is true.


'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Save Snapshot

3









get active BTS SW Build Version from enb targetBD file..


${version}


[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Mon Jul  3 17:44:05 CST 2017 from 192.168.255.126 on ssh

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0574AC38
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0574AC38
>

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Mon Jul  3 17:55:41 CST 2017 from 192.168.255.126 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_c
ommon.SshCommon instance at 0x05619648
>

[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml

[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml

TargetBD_TL17A_ENB_0000_000106_000000.xml

root@fctj-0a:/ffs/fs2
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05619648
>

${version} = TL17A_ENB_0000_000106_000000




Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"

semcli save snapshot



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"

semcli save snapshot



Runs the given keyword with the given arguments, if ``condition`` is true.


'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"

semcli save snapshot









Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"

_soam_snapshot



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"

_soam_snapshot



Runs the given keyword with the given arguments, if ``condition`` is true.


'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"

_soam_snapshot













owner-shaocheng.chen@nokia.com

QC_773299


TM500 command line does not meet "['L2 RANDOM ACCESS COMPLETE', 'ACCESS POINT NAME']"during 10.0


TD-LTE I
&
V SISO1





Critical Tests

All Tests



owner-shaocheng.chen@nokia.com

QC_773299



FZHR Operational RF power off then on




Loading tdd_config has failed. Please check if:

1. you executed pybot with --variable CONFIGURATION:$your_tl_config

i.e. pybot --variable CONFIGURATION:Wroclaw.test

2. check if there is no problem with your configuration

Error msg: Variable ${CONFIGURATION} does not exist.


Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.

Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.

Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.

Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.

Infomodel not connected.


