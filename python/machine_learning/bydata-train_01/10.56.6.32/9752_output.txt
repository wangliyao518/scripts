


this keyword create suite name directory path as D:\TA\TA_logs\TestLog_20171101112236//logs//


This keyword return the time stamp, default format is: 'yyyymmddhhmmss'


${timestamp}


${timestamp} = 20171101112238




Replaces ``pattern`` in the given ``string`` with ``replace_with``.


${SUITE_NAME[:50]}

\\s+$

${EMPTY}



${FILE_NAME}


${FILE_NAME} = FZHR Addtional RF module alarm without recovery ac




Catenates the given items together and returns the resulted string.


SEPARATOR=${/}

${OUTPUT_DIR}

ev_logs

${FILE_NAME}_${timestamp}



${SUITE_LOG_DIRECTORY}


${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR Addtional RF module alarm without recovery ac_20171101112238




Replaces ``search_for`` in the given ``string`` with ``replace_with``.


${SUITE_LOG_DIRECTORY}

${SPACE}

_



${SUITE_LOG_DIRECTORY}


${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238




Makes a variable available everywhere within the scope of the current suite.


${SUITE_LOG_DIRECTORY}


${SUITE_LOG_DIRECTORY} = D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238




Creates the specified directory.


${SUITE_LOG_DIRECTORY}


Created directory '
<
a href="file://D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238"
>
D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238
<
/a
>
'.




Logs the given message with the given level.


save log dir:${SUITE_LOG_DIRECTORY}


save log dir:D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238




Makes a variable available everywhere within the scope of the current suite.


${snapshot_flag}

0


${snapshot_flag} = 0




This keyword return useable LOG directory.


Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${TEST LOG DIR}



${case_dir_exist}



Fails unless the given variable exists within the current scope.


${TEST LOG DIR}


Variable ${TEST LOG DIR} does not exist.



${case_dir_exist} = ('FAIL', u'Variable ${TEST LOG DIR} does not exist.')




Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${SUITE LOG DIRECTORY}



${suite_dir_exist}



Fails unless the given variable exists within the current scope.


${SUITE LOG DIRECTORY}




${suite_dir_exist} = ('PASS', None)




Sets variable based on the given condition.


'PASS'=='${case_dir_exist[0]}'

${TEST LOG DIR}

'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'

${SUITE LOG DIRECTORY}

'FAIL'=='${suite_dir_exist[0]}'

${OUTPUT_DIR}



${log dir}



Sets variable based on the given condition.


'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'

${SUITE LOG DIRECTORY}

'FAIL'=='${suite_dir_exist[0]}'

${OUTPUT_DIR}




${log dir} = D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238




Makes a variable available everywhere within the scope of the current suite.


${SAVE LOG DIRECTORY}

${log dir}


${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238






Runs the given keyword with the given arguments and ignores possible error.


Make Sure FCT Ping Ok




This function is used for check whether ping host success, if yes, return 1, else return 0


${FCMD_IP}



${status}


[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Reply from 192.168.255.1: bytes=32 time
<
1ms TTL=255


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),

Approximate round trip times in milli-seconds:

Minimum = 0ms, Maximum = 0ms, Average = 0ms

${status} = True




Runs the given keyword with the given arguments, if ``condition`` is false.


${status}

Wait Until Units Startup

300

${FTM_IP}





Runs the given keyword with the given arguments, if ``condition`` is false.


${status}

Btscli Disable Bts Port Security





Runs the given keyword with the given arguments, if ``condition`` is false.


${status}

Wait Until Units Startup

60

${FCMD_IP}





Displays the given messages in the log file as keyword arguments.


Wait Until Keyword Succeeds

5min

5s

_make sure fctb connect ok









Runs the given keyword with the given arguments and ignores possible error.


get_enb_infomation



This keyword will print bts sw version, bbu type and RRU type.

[chan 0] Opened sftp connection (server version 3)

[chan 0] sftp session closed.

[chan 0] Opened sftp connection (server version 3)

[chan 0] sftp session closed.

[chan 0] Opened sftp connection (server version 3)

[chan 0] sftp session closed.

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Reply from 192.168.255.1: bytes=32 time
<
1ms TTL=255


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),

Approximate round trip times in milli-seconds:

Minimum = 0ms, Maximum = 0ms, Average = 0ms

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:02:59 CST 2017 from 10.69.80.114 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05352288
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05352288
>

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:23:17 CST 2017 from 192.168.255.126 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05352B98
>

[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml

[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml

TargetBD_TL17A_ENB_0000_000499_000000.xml

root@fctj-0a:/ffs/fs2
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05352B98
>

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:23:28 CST 2017 from 192.168.255.126 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053F50F8
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053F50F8
>

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:23:40 CST 2017 from 192.168.255.126 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053F5210
>

[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml

[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml

TargetBD_TL17A_ENB_0000_000499_000000.xml

root@fctj-0a:/ffs/fs2
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053F5210
>

[enb_resource.py@1238]

****Current BTS version is 'TL17A_ENB_0000_000499_000000' *****

[enb_resource.py@1268] activeBuildVersion=TL17A_ENB_0000_000499_000000

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:23:50 CST 2017 from 192.168.255.126 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053F55A8
>

[ssh_common.py@258] Execute command: ls /ram/SiteConf.xml

[ssh_common.py@314] Get Response: ls /ram/SiteConf.xml

/ram/SiteConf.xml

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x053F55A8
>

[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok

[sftp_control.py@176] /ram/SiteConf.xml

[sftp_control.py@79] sftp download from '/ram/SiteConf.xml' to 'D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\SiteConf.xml' is ok. local file size is 122k

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:24:11 CST 2017 from 192.168.255.126 on ssh

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0524EAA8
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x0524EAA8
>

[enb_resource.py@500] The real falsh folder is /ffs/fs2

[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok

[sftp_control.py@176] /ffs/fs2/FileDirectory.xml

[sftp_control.py@79] sftp download from '/ffs/fs2/FileDirectory.xml' to 'D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FileDirectory_20171101112333.xml' is ok. local file size is 36k

[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok

[sftp_control.py@176] /ffs/fs2/config/SCFC_161.xml

[sftp_control.py@79] sftp download from '/ffs/fs2/config/SCFC_161.xml' to 'D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\SCFC_161.xml' is ok. local file size is 155k

[enb_resource.py@1238]

****Current bbu type is 'ASIA' *****

[enb_resource.py@1363] HW_BBU_TYPE=ASIA

[enb_resource.py@1238]

****Current rru type is 'FZHR' *****

[enb_resource.py@1366] HW_RRU_TYPE=FZHR

[enb_resource.py@1238]

****Current HW type is '#2720-2CL1-T3-L-14' *****

[enb_resource.py@1369] BTS_HW_TYPE=#2720-2CL1-T3-L-14

[ping_control.py@189]

Pinging 192.168.200.1 with 32 bytes of data:

Request timed out.


Ping statistics for 192.168.200.1:

Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),

[ping_control.py@189]

Pinging 192.168.255.20 with 32 bytes of data:

Reply from 192.168.255.126: Destination host unreachable.


Ping statistics for 192.168.255.20:

Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),






Sets the resolution order to use when a name matches multiple keywords.


tdd_ev_robotws

OperatingSystem






used to get operation system platform version, can be used to judge if


with_connection=${false}



${platform_version}


${platform_version} = Windows-7-6.1.7601-SP1




Sets variable based on the given condition.


"Windows" in "${platform_version}"

${TELNET_PORT}

${SSH_PORT}



${conn_port}


${conn_port} = 23




Sets variable based on the given condition.


"Windows" in "${platform_version}"

TELNET

SSH



${conn_type}


${conn_type} = TELNET




Sets variable based on the given condition.


"Windows" in "${platform_version}"

30

5



${timeout}


${timeout} = 30




Used to connect to host, either TELNET or SSH


${BTS_PC_INFO.IP}

port=${conn_port}

username=${BTS_PC_INFO.USERNAME}

password=${BTS_PC_INFO.PASSWORD}

conn_type=${conn_type}

timeout=${timeout}



${BTS_PC_CONNECTION}


[telnet_common.py@306] Get Response: Welcome to Microsoft Telnet Service



login:

[telnet_common.py@276] Execute command: tdlte-tester

[telnet_common.py@306] Get Response:  tdlte-tester


password:

[telnet_common.py@276] Execute command: btstest

[telnet_common.py@246]


*===============================================================

Microsoft Telnet Server.

*===============================================================

C:\Users\tdlte-tester
>

${BTS_PC_CONNECTION} = 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x0537AF58
>




Makes a variable available everywhere within the scope of the current suite.


${BTS_PC_CONNECTION}


${BTS_PC_CONNECTION} = 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x0537AF58
>




Runs the given keyword with the given arguments, if ``condition`` is true.


"Windows" in "${platform_version}"

Execute Shell Command

tlntadmn config timeoutactive\=no



Execute a command on the remote system.


tlntadmn config timeoutactive\=no


[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x0537AF58
>

[telnet_common.py@276] Execute command: tlntadmn config timeoutactive=no

[telnet_common.py@306] Get Response: tlntadmn config timeoutactive=no

The settings were successfully updated.


C:\Users\tdlte-tester
>








Switch to the connection identified by 'conn'.


${BTS_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x0537AF58
>
.







Runs the given keyword with the given arguments, if ``condition`` is true.


'${REMOVE_LOGS}'=='on'

Run Keyword If All Tests Passed

Remove Directory

${SUITE_LOG_DIRECTORY}

${True}





Closes all existing telnet connections to remote hosts.

[telnet_common.py@188]

[telnet_common.py@189] Disconnect from 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x0537AF58
>




Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${zip_pass_log}



${para_exist}



Fails unless the given variable exists within the current scope.


${zip_pass_log}


Variable ${zip_pass_log} does not exist.



${para_exist} = ('FAIL', u'Variable ${zip_pass_log} does not exist.')




Sets variable based on the given condition.


'PASS' == '${para_exist[0]}'

${zip_pass_log}

${True}



${zip_log}


${zip_log} = True




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If All Tests Passed

Run Keyword If

${zip_log} == ${True}

Zip File

${SUITE_LOG_DIRECTORY}

${SUITE_LOG_DIRECTORY}.zip



${status}

${value}



Runs the given keyword with the given arguments, if all tests passed.


Run Keyword If

${zip_log} == ${True}

Zip File

${SUITE_LOG_DIRECTORY}

${SUITE_LOG_DIRECTORY}.zip




${status} = PASS

${value} = None




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If All Tests Passed

Run Keyword If

'${status}' == 'PASS' and ${zip_log} == ${True}

Remove Directory

${SUITE_LOG_DIRECTORY}

${True}



Runs the given keyword with the given arguments, if all tests passed.


Run Keyword If

'${status}' == 'PASS' and ${zip_log} == ${True}

Remove Directory

${SUITE_LOG_DIRECTORY}

${True}










this keyword create case name directory path as D:\TA\TA_logs\TestLog_20171101112236//ev_logs//D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238//


This keyword return the time stamp, default format is: 'yyyymmddhhmmss'


${timestamp}


${timestamp} = 20171101112416




Catenates the given items together and returns the resulted string.


SEPARATOR=${/}

${SUITE_LOG_DIRECTORY}

${TEST_NAME[:50]}



${TEST_LOG_DIR}


${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927




Replaces ``search_for`` in the given ``string`` with ``replace_with``.


${TEST_LOG_DIR}

${SPACE}

_



${TEST_LOG_DIR}


${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927




Makes a variable available everywhere within the scope of the current suite.


${TEST_LOG_DIR}


${TEST_LOG_DIR} = D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927




Creates the specified directory.


${TEST_LOG_DIR}


Created directory '
<
a href="file://D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927"
>
D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927
<
/a
>
'.




Logs the given message with the given level.


save log dir:${TEST_LOG_DIR}


save log dir:D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927




Runs the given keyword with the given arguments, if ``condition`` is false.


${BTS PC CONNECTION.connected}

Initial Connection With BTS PC





This keyword return useable LOG directory.


Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${TEST LOG DIR}



${case_dir_exist}



Fails unless the given variable exists within the current scope.


${TEST LOG DIR}




${case_dir_exist} = ('PASS', None)




Runs the given keyword with the given arguments and ignores possible error.


variable should exist

${SUITE LOG DIRECTORY}



${suite_dir_exist}



Fails unless the given variable exists within the current scope.


${SUITE LOG DIRECTORY}




${suite_dir_exist} = ('PASS', None)




Sets variable based on the given condition.


'PASS'=='${case_dir_exist[0]}'

${TEST LOG DIR}

'FAIL'=='${case_dir_exist[0]}' and 'PASS'=='${suite_dir_exist[0]}'

${SUITE LOG DIRECTORY}

'FAIL'=='${suite_dir_exist[0]}'

${OUTPUT_DIR}



${log dir}


${log dir} = D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927




Makes a variable available everywhere within the scope of the current suite.


${SAVE LOG DIRECTORY}

${log dir}


${SAVE LOG DIRECTORY} = D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927









${source_scf}

${parameter_list}



Switch to the connection identified by 'conn'.


${BTS_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x0537AF58
>
.




This keyword test the reachability of remote system.


192.168.255.1



${package_summary}

${ping_delay}


[connection_mgr.py@208] Current connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x0537AF58
>

[telnet_common.py@276] Execute command: ping  192.168.255.1

[telnet_common.py@306] Get Response: ping  192.168.255.1


Pinging 192.168.255.1 with 32 bytes of data:

Reply from 192.168.255.1: bytes=32 time
<
1ms TTL=255

Reply from 192.168.255.1: bytes=32 time
<
1ms TTL=255

Reply from 192.168.255.1: bytes=32 time
<
1ms TTL=255

Reply from 192.168.255.1: bytes=32 time
<
1ms TTL=255


Ping statistics for 192.168.255.1:

Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),

Approximate round trip times in milli-seconds:

Minimum = 0ms, Maximum = 0ms, Average = 0ms


C:\Users\tdlte-tester
>

Total ping delay is: [1, 1, 1, 1]

Statistic ping delay is: [1, 1, 1, 1]

Valid ping delay is: [1, 1, 1, 1]

${package_summary} = ('4', '4', '0')

${ping_delay} = [1, 1, 1.0]




Runs the given keyword with the given arguments, if ``condition`` is true.


${package_summary[2]}
>
2

Restart Device With Powerbreaker

${bts_powerbreak}





Runs the given keyword with the given arguments, if ``condition`` is true.


${package_summary[2]}
>
2

Wait Until Units Startup

600

192.168.255.1





modify source_scf according parameter list and then upload to enb.


${source_scf}

${parameters_list}


[chan 0] Opened sftp connection (server version 3)

[chan 0] sftp session closed.

[chan 0] Opened sftp connection (server version 3)

[chan 0] sftp session closed.

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:24:23 CST 2017 from 192.168.255.126 on ssh

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05344FD0
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05344FD0
>

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:24:59 CST 2017 from 192.168.255.126 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04CE63F0
>

[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml

[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml

TargetBD_TL17A_ENB_0000_000499_000000.xml

root@fctj-0a:/ffs/fs2
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x04CE63F0
>

[enb_resource.py@457] enable ssh and rdport failed.

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:25:10 CST 2017 from 192.168.255.126 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x052D1990
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x052D1990
>

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:25:20 CST 2017 from 192.168.255.126 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x052D1CB0
>

[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml

[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml

TargetBD_TL17A_ENB_0000_000499_000000.xml

root@fctj-0a:/ffs/fs2
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x052D1CB0
>

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:25:31 CST 2017 from 192.168.255.126 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x052D1CB0
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x052D1CB0
>

[enb_resource.py@500] The real falsh folder is /ffs/fs2

[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok

[sftp_control.py@176] /ffs/fs2/FileDirectory.xml

[sftp_control.py@79] sftp download from '/ffs/fs2/FileDirectory.xml' to 'D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927\FileDirectory_20171101112503.xml' is ok. local file size is 36k

[enb_command_control.py@33] argument host is: 192.168.255.129

[ssh_common.py@203] Last login: Wed Nov  1 11:25:52 CST 2017 from 192.168.255.126 on ssh

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x046B4490
>

[ssh_common.py@258] Execute command: rm -rf /ffs/fs2/config/hwf.bin.gz

[ssh_common.py@314] Get Response: rm -rf /ffs/fs2/config/hwf.bin.gz

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.129:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x046B4490
>

[sftp_control.py@39] sftp connect to '192.168.255.1', username:'toor4nsn', password:'oZPS0POrRieRtu' is ok

[sftp_control.py@61] sftp upload from 'D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927\scf_modified.xml' to '/ffs/fs2/config/SCFC_161.xml' is ok.

[sftp_control.py@176] /ffs/fs2/config/SCFC_161.xml




restart bts with powerbreaker and then wait until it is onair.


bts_powerbreak_port=${bts_powerbreak}


Exit code: 1

STDOUT


STDERR

Started InfoModel server PYRO:TA_infomodel_server@localhost:36663


[tools_resource.py@34] start power off ..

[facom.py@121] Connect to Facom succeed !

[base.py@48] trial power off for 0 times

[facom.py@60] Power off port 3 succeed!

[facom.py@121] Connect to Facom succeed !

[base.py@48] trial power off for 0 times

[facom.py@60] Power off port 6 succeed!

[tools_resource.py@37] start power on ..

[facom.py@121] Connect to Facom succeed !

[base.py@36] trial power on for 0 times

[facom.py@83] Power on port 3 succeed!

[facom.py@121] Connect to Facom succeed !

[base.py@36] trial power on for 0 times

[facom.py@83] Power on port 6 succeed!

[tools_resource.py@39] restart port '['FACOM:10.56.7.128:3', 'FACOM:10.56.7.128:6']' with powerbreak succeed !

[btslog_control.py@118] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'stop_btslog'

[btslog_control.py@175] use ip is 192.168.255.126

[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927" already exists, no need to create it again.

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Request timed out.


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Request timed out.


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Request timed out.


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Request timed out.


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Request timed out.


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Request timed out.


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Request timed out.


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Request timed out.


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Request timed out.


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 0, Lost = 1 (100% loss),

[ping_control.py@189]

Pinging 192.168.255.1 with 32 bytes of data:

Reply from 192.168.255.1: bytes=32 time
<
1ms TTL=255


Ping statistics for 192.168.255.1:

Packets: Sent = 1, Received = 1, Lost = 0 (0% loss),

Approximate round trip times in milli-seconds:

Minimum = 0ms, Maximum = 0ms, Average = 0ms

[infomodel_control.py@156] set up infomodel with following info succeed .

details: address=192.168.255.129, port=12345, definitions_file_path=None

ftp_username=toor4nsn,ftp_password=oZPS0POrRieRtu

[infomodel_control.py@160] start infomodel succeed .

[infomodel_control.py@162] start infomodel logger succeed .

[enb_resource.py@185] check onair failed 1st way, InfoModel objects not found.

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'commissioned', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'commissioned', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'commissioned', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'commissioned', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'commissioned', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'commissioned', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'commissioned', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'commissioned', u'operationalState': u'Enabled', u'availabilityStatus': u'Degraded'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'commissioned', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'p
lanHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Failed'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will try another way

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@214] check onair failed for 3rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[enb_resource.py@225] check onair failed for 4rd way, Query: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' doesn't pass in timeout=1.0. Object does not match given predicates.

/MRBTS-1/RAT-1/BTS_L-1/LNBTS-1 : {u'actDLCAggr': False, u'restartCause': u'PowerOn', u'btsId': 592L, u'actInterEnbDLCAggr': False, u'planHandlingState': u'Idle', u'stateInfo': {u'blockingState': u'Unblocked', u'testingState': u'Disabled', u'usageState': u'Active', u'administrativeState': u'Unlocked', u'reasoningStatus': [], u'softwareState': u'Deployed', u'proceduralState': u'integrated to RAN', u'operationalState': u'Enabled', u'availabilityStatus': u'Online'}, u'actBbPooling': False}

, it will sleep and try again

[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .

[enb_resource.py@185] check onair failed 1st way, Query: 'every /MRBTS-1/RAT-1//LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.

, it will try another way

[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .

[enb_resource.py@202] check onair failed for 2rd way, Query: 'every /MRBTS-1/RAT-1/BTS_L-*/LNBTS-*/LCELL-* is [stateInfo.proceduralState=onAirDone]' doesn't pass in timeout=1.0. Not found any object matching given dist name.

, it will sleep and try again

[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1//LNBTS-* is [stateInfo.proceduralState=onAir]' succeed .

[infomodel_control.py@326] query infomodel: 'every /MRBTS-1/RAT-1/MCTRL-*/BBTOP_M-1/MRBTS_M-1/LNBTS_M-1/CELL_M-* is [stateInfo.proceduralState=OnAirDone]' succeed .

[enb_resource.py@228] infomodel check every cell onair succeed !

[enb_resource.py@350] bts log check onair msg succeed !

[infomodel_control.py@213] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927\im_20171101113144' succeed .

[infomodel_control.py@185] stop infomodel logger succeed .

[infomodel_control.py@197] stop infomodel succeed .







alarm_start



This keyword starts catching of BTS system(UDP) log.


${TEST_LOG_DIR}\\${case_execute_log_name}.log


[btslog_control.py@118] Warn: BTS log is not started ! details: 'NoneType' object has no attribute 'isAlive'

[file_common.py@209] Directory "D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927" already exists, no need to create it again.




Setup InfoModel library and Connect to InfoModel.


port=${BTS_INFOMODEL_PORT}


[infomodel_control.py@156] set up infomodel with following info succeed .

details: address=192.168.255.129, port=12345, definitions_file_path=None

ftp_username=toor4nsn,ftp_password=oZPS0POrRieRtu

[infomodel_control.py@160] start infomodel succeed .

[infomodel_control.py@162] start infomodel logger succeed .




Makes a variable available everywhere within the scope of the current test.


${case_execute_log_name}


${case_execute_log_name} = alarm_start







${RRU_IP}



Query InfoModel with some `query`. Keyword will wait for successful result some `timeout` time or fail.


query=get list /MRBTS-1/RAT-1/BTS_L-*/EQM_L-1/RMOD_L-* is [serialNumber=${RRU_SERINUM}]



${rmode_info}


InfoModelQueryTimeoutException: Query: 'get list /MRBTS-1/RAT-1/BTS_L-*/EQM_L-1/RMOD_L-* is [serialNumber=6Q163504141]' doesn't pass in timeout=10.0. Matching objects not found.






Action when case finishs


Switch to the connection identified by 'conn'.


${BTS_PC_CONNECTION}


[connection_mgr.py@147] Switch to connection: 10.56.6.32:23 DeviceType:Windows Timeout:30 seconds
<
tdd_ev_robotws.CommonLib.connections.telnet_common.TelnetCommon instance at 0x0537AF58
>
.




This keyword is used to kill the processes related to QTP application.

Start to kill QTP process.

Finshed to kill QTP process.




This keyword stops BTS system(UDP) log catching.




Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${case_execute_log_name}



${return}



Fails unless the given variable exists within the current scope.


${case_execute_log_name}




${return} = ('PASS', None)




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${return[0]}'=='PASS'

Save Infomodel Log

${TEST_LOG_DIR}\\${case_execute_log_name}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Save Infomodel Log

${TEST_LOG_DIR}\\${case_execute_log_name}



Save InfoModel log.


${TEST_LOG_DIR}\\${case_execute_log_name}


[infomodel_control.py@213] save infomodel log to file: 'D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927\alarm_start' succeed .








Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${return[0]}'=='PASS'

Stop Infomodel



Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Stop Infomodel



Disconnect from InfoModel and teardown InfoModel. Keyword will

Exit code: 1

STDOUT


STDERR

Started InfoModel server PYRO:default_infomodel_server@localhost:41991


[infomodel_control.py@185] stop infomodel logger succeed .

[infomodel_control.py@197] stop infomodel succeed .








Runs the given keyword with the given arguments and ignores possible error.


Release_TM500_And_Colse_PA_Port




Displays the given messages in the log file as keyword arguments.


${return}

Run Keyword And Ignore Error

Variable Should Exist

${TM500_Use_Tag}





Displays the given messages in the log file as keyword arguments.


Run Keyword If

'${return[0]}'=='PASS'

Run Keyword If

'${TM500_Use_Tag}'=='used'

Set Attenuators Off

${ATT_ALL_INFO}





Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${TM500_Pppoe_Tag}



${return}



Fails unless the given variable exists within the current scope.


${TM500_Pppoe_Tag}


Variable ${TM500_Pppoe_Tag} does not exist.



${return} = ('FAIL', u'Variable ${TM500_Pppoe_Tag} does not exist.')




Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Run Keyword If

'${TM500_Pppoe_Tag}'=='used'

Switch Host Connection

${TM500_PC_CONNECTION}





Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Run Keyword If

'${TM500_Pppoe_Tag}'=='used'

Tm500 Stop Pppoe Connection





tm500 teardown.

AliasError: Provided alias (default) doesn't exist. Please setup library before any other operation.







Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${CELL${index}_ATT_INFO}



${ret1}

${ret2}



Fails unless the given variable exists within the current scope.


${CELL${index}_ATT_INFO}




${ret1} = PASS

${ret2} = None




Stops executing the enclosing for loop if the ``condition`` is true.


'${ret1}'=='FAIL'





This keyword set attenuation value for one eNB cell.


${CELL${index}_ATT_INFO}

120

120


$TA,C,02F0*

[attenuator_control.py@445] send-
>
'$TA,C,02F0*', Receive
<
-'$TA,C,02F0*'

[attenuator_control.py@450] send-
>
'$TA,H,02*', Receive
<
-'$TA,C,02F0*'

$TA,C,06F0*

[attenuator_control.py@445] send-
>
'$TA,C,06F0*', Receive
<
-'$TA,C,06F0*'

[attenuator_control.py@450] send-
>
'$TA,H,06*', Receive
<
-'$TA,C,06F0*'







Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${CELL${index}_ATT_INFO}



${ret1}

${ret2}



Fails unless the given variable exists within the current scope.


${CELL${index}_ATT_INFO}




${ret1} = PASS

${ret2} = None




Stops executing the enclosing for loop if the ``condition`` is true.


'${ret1}'=='FAIL'





This keyword set attenuation value for one eNB cell.


${CELL${index}_ATT_INFO}

120

120


$TA,C,02F0*

[attenuator_control.py@445] send-
>
'$TA,C,02F0*', Receive
<
-'$TA,C,02F0*'

[attenuator_control.py@450] send-
>
'$TA,H,02*', Receive
<
-'$TA,C,02F0*'

$TA,C,06F0*

[attenuator_control.py@445] send-
>
'$TA,C,06F0*', Receive
<
-'$TA,C,06F0*'

[attenuator_control.py@450] send-
>
'$TA,H,06*', Receive
<
-'$TA,C,06F0*'







Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${CELL${index}_ATT_INFO}



${ret1}

${ret2}



Fails unless the given variable exists within the current scope.


${CELL${index}_ATT_INFO}




${ret1} = PASS

${ret2} = None




Stops executing the enclosing for loop if the ``condition`` is true.


'${ret1}'=='FAIL'





This keyword set attenuation value for one eNB cell.


${CELL${index}_ATT_INFO}

120

120


$TA,C,02F0*

[attenuator_control.py@445] send-
>
'$TA,C,02F0*', Receive
<
-'$TA,C,02F0*'

[attenuator_control.py@450] send-
>
'$TA,H,02*', Receive
<
-'$TA,C,02F0*'

$TA,C,06F0*

[attenuator_control.py@445] send-
>
'$TA,C,06F0*', Receive
<
-'$TA,C,06F0*'

[attenuator_control.py@450] send-
>
'$TA,H,06*', Receive
<
-'$TA,C,06F0*'







Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${CELL${index}_ATT_INFO}



${ret1}

${ret2}



Fails unless the given variable exists within the current scope.


${CELL${index}_ATT_INFO}


Variable ${CELL4_ATT_INFO} does not exist.



${ret1} = FAIL

${ret2} = Variable ${CELL4_ATT_INFO} does not exist.




Stops executing the enclosing for loop if the ``condition`` is true.


'${ret1}'=='FAIL'


Exiting for loop altogether.










Displays the given messages in the log file as keyword arguments.


Set Test Variable

${TM500_Use_Tag}

unused





Makes a variable available everywhere within the scope of the current test.


${TM500_Pppoe_Tag}

unused


${TM500_Pppoe_Tag} = unused








Runs the given keyword with the given arguments and ignores possible error.


Variable Should Exist

${route_add_cpe_pc}



${return}



Fails unless the given variable exists within the current scope.


${route_add_cpe_pc}


Variable ${route_add_cpe_pc} does not exist.



${return} = ('FAIL', u'Variable ${route_add_cpe_pc} does not exist.')




Runs the given keyword with the given arguments, if ``condition`` is true.


'${return[0]}'=='PASS'

Run Keyword If

'${route_add_cpe_pc}'=='true'

Execute Shell Command

route delete ${BTS_PC_INFO.IP} mask 255.255.255.255 ${UE1_INFO.ADDRESS}






${TEST_LOG_DIR}

${
OUTPUT_DIR}

alarm_monitor.csv

${TEST_NAME[:50]}


Exit code: 1

STDOUT


STDERR

Started InfoModel server PYRO:default_infomodel_server@localhost:40525


[infomodel_control.py@82] set up infomodel with following info succeed .

details: address=192.168.255.1, port=12345, definitions_file_path=None

++++++++++++++++++++++++++++++++++++++++++

{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}

++++++++++++++++++++++++++++++++++++++++++

{'alarm2': [], 'alarm1': [], 'data': {'alarm2': [], 'alarm1': []}}

[infomodel_control.py@100] stop infomodel succeed .





${TEST_LOG_DIR}

${OUTPUT_DIR}

alarm_monitor.csv

${TEST_NAME[:50]}


['fatal'] ['fatal']

[file_control.py@109] *HTML*
<
a href = "D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927\udplog_20171101112531.log"
>
fail log
<
/a
>

Find '['fatal']' in 'D:\TA\TA_logs\TestLog_20171101112236\ev_logs\FZHR_Addtional_RF_module_alarm_without_recovery_ac_20171101112238\FZHR_RF_alarm_1927\udplog_20171101112531.log'

write successfully




Runs the given keyword with the given arguments and ignores possible error.


Should Contain

${TEST_NAME[:50]}

Fiber



${return1}



Fails if ``container`` does not contain ``item`` one or more times.


${TEST_NAME[:50]}

Fiber


'FZHR_RF_alarm_1927' does not contain 'Fiber'



${return1} = ('FAIL', u"'FZHR_RF_alarm_1927' does not contain 'Fiber'")




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${return1[0]}'=='PASS'

Get_All_Fiber_Link



${all_fiber_link}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${return1[0]}'=='PASS'

Get_All_Fiber_Link




${all_fiber_link} = ('PASS', None)




Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${return1[0]}'=='PASS'

Connect_Fiber_Link

${all_fiber_link[1]}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${return1[0]}'=='PASS'

Connect_Fiber_Link

${all_fiber_link[1]}







Displays the given messages in the log file as keyword arguments.


Run Keyword And Ignore Error

Run Keyword If

'${return1[0]}'=='PASS'

Software Reboot Bts





Displays the given messages in the log file as keyword arguments.


Run Keyword And Ignore Error

Run Keyword If

'${return1[0]}'=='PASS'

Sleep

60





Displays the given messages in the log file as keyword arguments.


Run Keyword And Ignore Error

Run Keyword If

'${return1[0]}'=='PASS'

Wait Until Units Startup

600

192.168.255.1





[Caution] this keyword step:


used to get operation system platform version, can be used to judge if


with_connection=${false}



${platform_version}


${platform_version} = Windows-7-6.1.7601-SP1




Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'

One Key Capture Bts Logs

${SAVE_LOG_DIRECTORY}${/}capture_logs

${one_key_capture_logs_option}



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'

One Key Capture Bts Logs

${SAVE_LOG_DIRECTORY}${/}capture_logs

${one_key_capture_logs_option}



Runs the given keyword with the given arguments, if ``condition`` is true.


'${ONE_KEY_CAPTURE_LOGS_FLAG}'=='${True}'

One Key Capture Bts Logs

${SAVE_LOG_DIRECTORY}${/}capture_logs

${one_key_capture_logs_option}









Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Login



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Login



Runs the given keyword with the given arguments, if ``condition`` is true.


'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Login









Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Save Snapshot

3



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Save Snapshot

3



Runs the given keyword with the given arguments, if ``condition`` is true.


'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Windows" in "${platform_version}"

GUI SM Save Snapshot

3









get active BTS SW Build Version from enb targetBD file..


${version}


[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:32:57 CST 2017 from 10.69.80.114 on pts/0

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x055E5288
>

[ssh_common.py@258] Execute command: readlink /ffs/run

[ssh_common.py@314] Get Response: readlink /ffs/run

/ffs/fs2

root@fctj-0a:~
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x055E5288
>

[enb_command_control.py@33] argument host is: 192.168.255.1

[ssh_common.py@203] Last login: Wed Nov  1 11:33:13 CST 2017 from 192.168.255.126 on pts/1

root@fctj-0a:~
>

[connection_mgr.py@208] Current connection: 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05410D78
>

[ssh_common.py@258] Execute command: cd /ffs/fs2;ls TargetBD*.xml

[ssh_common.py@314] Get Response: cd /ffs/fs2;ls TargetBD*.xml

TargetBD_TL17A_ENB_0000_000499_000000.xml

root@fctj-0a:/ffs/fs2
>

[ssh_common.py@141] Disconnect from 192.168.255.1:22 DeviceType:Linux Timeout:10 seconds
<
tdd_ev_robotws.CommonLib.connections.ssh_common.SshCommon instance at 0x05410D78
>

${version} = TL17A_ENB_0000_000499_000000




Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"

semcli save snapshot



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"

semcli save snapshot



Runs the given keyword with the given arguments, if ``condition`` is true.


'${AUTO_SNAPSHOT_FLAG}'=='${True}' and "Linux" in "${platform_version}" and 'SBTS' not in "${version}"

semcli save snapshot









Runs the given keyword with the given arguments, if the test failed.


Run Keyword And Ignore Error

Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"

_soam_snapshot



Runs the given keyword with the given arguments and ignores possible error.


Run Keyword If

'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"

_soam_snapshot



Runs the given keyword with the given arguments, if ``condition`` is true.


'${AUTO_SNAPSHOT_FLAG}'=='${True}' and 'SBTS' in "${version}"

_soam_snapshot













owner-shaocheng.chen@nokia.com

QC_773300


InfoModelQueryTimeoutException: Query: 'get list /MRBTS-1/RAT-1/BTS_L-*/EQM_L-1/RMOD_L-* is [serialNumber=6Q163504141]' doesn't pass in timeout=10.0. Matching objects not found.


TD-LTE I
&
V AIR





Critical Tests

All Tests



owner-shaocheng.chen@nokia.com

QC_773300



FZHR Addtional RF module alarm without recovery action 1927




Error in file 'D:\TA\Test_Case_Svn\TL17A\SISO1\CPRI_Single_FZHR\FZHR_Addtional_RF_module_alarm_without_recovery_action_1927\FZHR_Addtional_RF_module_alarm_without_recovery_action_1927.html': Resource file 'RobotWS.html' does not exist.

Loading tdd_config has failed. Please check if:

1. you executed pybot with --variable CONFIGURATION:$your_tl_config

i.e. pybot --variable CONFIGURATION:Wroclaw.test

2. check if there is no problem with your configuration

Error msg: Variable ${CONFIGURATION} does not exist.



